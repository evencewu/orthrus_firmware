ARM GAS  /tmp/ccs70NiP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"sdoserv.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SdoUploadSegmentInd,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SdoUploadSegmentInd:
  26              	.LVL0:
  27              	.LFB124:
  28              		.file 1 "Lib/ssc/src/sdoserv.c"
   1:Lib/ssc/src/sdoserv.c **** /**
   2:Lib/ssc/src/sdoserv.c **** \addtogroup CoE CAN Application Profile over EtherCAT
   3:Lib/ssc/src/sdoserv.c **** @{
   4:Lib/ssc/src/sdoserv.c **** */
   5:Lib/ssc/src/sdoserv.c **** 
   6:Lib/ssc/src/sdoserv.c **** /**
   7:Lib/ssc/src/sdoserv.c **** \file    sdoserv.c
   8:Lib/ssc/src/sdoserv.c **** \author EthercatSSC@beckhoff.com
   9:Lib/ssc/src/sdoserv.c **** \brief Implementation
  10:Lib/ssc/src/sdoserv.c **** The SDO server handles all sdo and sdo information services
  11:Lib/ssc/src/sdoserv.c **** 
  12:Lib/ssc/src/sdoserv.c **** \version 5.11
  13:Lib/ssc/src/sdoserv.c **** 
  14:Lib/ssc/src/sdoserv.c **** <br>Changes to version V5.10:<br>
  15:Lib/ssc/src/sdoserv.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  16:Lib/ssc/src/sdoserv.c **** V5.11 ECAT7: add missing big endian swapping<br>
  17:Lib/ssc/src/sdoserv.c **** V5.11 SDO10: add new SDO abort code 0x6010004 (complete access not supported)<br>
  18:Lib/ssc/src/sdoserv.c **** V5.11 SDO4: "if insufficient memory is available on complete download access return ""unsupported a
  19:Lib/ssc/src/sdoserv.c **** <br>Changes to version V5.01:<br>
  20:Lib/ssc/src/sdoserv.c **** V5.10 ESC5: Add missing swapping<br>
  21:Lib/ssc/src/sdoserv.c **** V5.10 MBX1: Remove multiple swapping of length filed in mailbox header<br>
  22:Lib/ssc/src/sdoserv.c **** V5.10 SDO3: Add new SDO Abort Code (0x06090033)<br>
  23:Lib/ssc/src/sdoserv.c **** V5.10 SDO4: Block SDO Info services for indices less 0x1000<br>
  24:Lib/ssc/src/sdoserv.c **** V5.10 SDO7: Correct mailbox length calculation on segmented or normal SDO upload response<br>
  25:Lib/ssc/src/sdoserv.c **** V5.10 SDO8: Fix invalid fragment calculation on SdoInfo list response<br>
  26:Lib/ssc/src/sdoserv.c **** V5.10 TEST5: test 0x2020.1 change limit from 10 to 16 Byte <br>
  27:Lib/ssc/src/sdoserv.c ****              Add test object 0x3009/0x300A (huge array and record objects)<br>
  28:Lib/ssc/src/sdoserv.c **** <br>Changes to version V5.0:<br>
  29:Lib/ssc/src/sdoserv.c **** V5.01 MBX1: Allocate always complete 16Bit memory areas<br>
  30:Lib/ssc/src/sdoserv.c **** V5.01 SDO2: Prevent invalid memory access in case of 8Bit mailbox memory handling<br>
ARM GAS  /tmp/ccs70NiP.s 			page 2


  31:Lib/ssc/src/sdoserv.c **** V5.01 SDO3: Update mailbox data length calculation<br>
  32:Lib/ssc/src/sdoserv.c **** V5.01 SDO4: Update length calculation in case of an segmented SDO list response<br>
  33:Lib/ssc/src/sdoserv.c **** V5.01 SDO6: Update SDO response interface handling. (used if the object access function returns "AB
  34:Lib/ssc/src/sdoserv.c **** V5.01 TEST2: Change Test 0x2020.1 (force Segmented transfer) to 16Byte<br>
  35:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.40:<br>
  36:Lib/ssc/src/sdoserv.c **** V5.0 TEST1: Add test application. see Application Note ET9300 for more details.<br>
  37:Lib/ssc/src/sdoserv.c **** V5.0 MBX3: Calculate MBX datagram length independent of SM size.<br>
  38:Lib/ssc/src/sdoserv.c **** V5.0 SDO2: SDO toggle bit don not do be cleared for segmented communication.<br>
  39:Lib/ssc/src/sdoserv.c **** V5.0 SDO3: Set SDO OpCode in list response.<br>
  40:Lib/ssc/src/sdoserv.c **** V5.0 SDO4: Update abort code for "BIG_ENDIAN_16BIT" configuration.<br>
  41:Lib/ssc/src/sdoserv.c **** V5.0 SDO5: Object code was calculated wrong for SDO Info service.<br>
  42:Lib/ssc/src/sdoserv.c **** V5.0 SDO6: Handle SDO segmented transfer if only 16Bit MBX memory access is allowed. <br>
  43:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.20:<br>
  44:Lib/ssc/src/sdoserv.c **** V4.40 SDO1: change size calculation for SDO services<br>
  45:Lib/ssc/src/sdoserv.c **** V4.40 MBX1: Prevent accessing odd address<br>
  46:Lib/ssc/src/sdoserv.c **** V4.40 COE1: Abort code is set in OBJ_GetObjectList()<br>
  47:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.11:<br>
  48:Lib/ssc/src/sdoserv.c **** V4.20 PIC24: Add EL9800_4 (PIC24) required source code<br>
  49:Lib/ssc/src/sdoserv.c **** V4.20 SDO 2: SDO mask value bug<br>
  50:Lib/ssc/src/sdoserv.c **** V4.20 SDO 1: check zero size object length<br>
  51:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.10:<br>
  52:Lib/ssc/src/sdoserv.c **** V4.11 SDO 1: fixed calculation of frame fragments during a object dictionary array list request<br>
  53:Lib/ssc/src/sdoserv.c **** V4.11 SDO 2-3: fixed size of entry description<br>
  54:Lib/ssc/src/sdoserv.c **** V4.11 SDO 4-7: add STRUCT_PACKED defines<br>
  55:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.08:\a<br>
  56:Lib/ssc/src/sdoserv.c **** V4.10 SDO 1: fixed zero size SDO comparison<br>
  57:Lib/ssc/src/sdoserv.c **** V4.10 SDO 2: set SdoService_CommandOffset to 0<br>
  58:Lib/ssc/src/sdoserv.c **** V4.10 SDO 3: fixed zero size SDO comparison<br>
  59:Lib/ssc/src/sdoserv.c **** V4.10 SDO 4: fixed struct_packed definition<br>
  60:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.07:<br>
  61:Lib/ssc/src/sdoserv.c **** V4.08 SDO 1: For an upload segment response the toggle bit was overwritten<br>
  62:Lib/ssc/src/sdoserv.c **** V4.08 SDO 2: For a segmented response the command was wrong in the response<br>
  63:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.06:<br>
  64:Lib/ssc/src/sdoserv.c **** V4.07 SDO 1: In SdoRes the command specifier was not set correctly in case of an abort<br>
  65:Lib/ssc/src/sdoserv.c **** V4.07 ECAT 1: The sources for SPI and MCI were merged (in ecat_def.h<br>
  66:Lib/ssc/src/sdoserv.c ****                    set the switch MCI_HW to 1 when using the MCI,<br>
  67:Lib/ssc/src/sdoserv.c ****                    set the switch SPI_HW to 1 when using the SPI<br>
  68:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.05:<br>
  69:Lib/ssc/src/sdoserv.c **** V4.06 SDO 1: The variable dataSize was used wrong in function SdoRes<br>
  70:Lib/ssc/src/sdoserv.c **** <br>Changes to version V4.03:<br>
  71:Lib/ssc/src/sdoserv.c **** V4.04 SDO 1: The SDO interface was changed in that way that a SDO response<br>
  72:Lib/ssc/src/sdoserv.c ****              could be sent by the application to a later time. In that case<br>
  73:Lib/ssc/src/sdoserv.c ****                  the functions OBJ_Read and OBJ_Write shall return the value<br>
  74:Lib/ssc/src/sdoserv.c ****                  ABORTIDX_WORKING. To send the SDO response the new function SDOS_SdoRes<br>
  75:Lib/ssc/src/sdoserv.c ****                  has to be called by the application. While waiting for the call<br>
  76:Lib/ssc/src/sdoserv.c ****                  of SDOS_SdoRes the SDO interface will answer to another SDO request<br>
  77:Lib/ssc/src/sdoserv.c ****                  with the error MBXERR_SERVICEINWORK in the mailbox protocol <br>
  78:Lib/ssc/src/sdoserv.c **** <br>Changes to version V3.20:<br>
  79:Lib/ssc/src/sdoserv.c **** V4.00 SDO 1: The size of the written data in case of a SDO Download will be<br>
  80:Lib/ssc/src/sdoserv.c ****              in the function OBJ_Write to be more flexible<br>
  81:Lib/ssc/src/sdoserv.c **** V4.00 SDO 2: The object lists will be generated in the functions OBJ_GetNoOfObjects<br>
  82:Lib/ssc/src/sdoserv.c ****              and OBJ_GetObjectList in objdef.c to decouple the SDO services from<br>
  83:Lib/ssc/src/sdoserv.c ****              the implementation of the object dictionary<br>
  84:Lib/ssc/src/sdoserv.c **** V4.00 SDO 3: The name of an object or entry description will only be transmitted<br>
  85:Lib/ssc/src/sdoserv.c ****              if it fits in the mailbox because the fragmentation is not supported in the sample cod
  86:Lib/ssc/src/sdoserv.c **** V4.00 SDO 4: SDOs with size greater than 65535 were not handled correctly, that is fixed now
  87:Lib/ssc/src/sdoserv.c **** */
ARM GAS  /tmp/ccs70NiP.s 			page 3


  88:Lib/ssc/src/sdoserv.c **** 
  89:Lib/ssc/src/sdoserv.c **** /*---------------------------------------------------------------------------------------
  90:Lib/ssc/src/sdoserv.c **** ------
  91:Lib/ssc/src/sdoserv.c **** ------    Includes
  92:Lib/ssc/src/sdoserv.c **** ------
  93:Lib/ssc/src/sdoserv.c **** ---------------------------------------------------------------------------------------*/
  94:Lib/ssc/src/sdoserv.c **** 
  95:Lib/ssc/src/sdoserv.c **** #include "ecat_def.h"
  96:Lib/ssc/src/sdoserv.c **** 
  97:Lib/ssc/src/sdoserv.c **** #include "ecatslv.h"
  98:Lib/ssc/src/sdoserv.c **** 
  99:Lib/ssc/src/sdoserv.c **** #define _SDOSERV_ 1
 100:Lib/ssc/src/sdoserv.c **** #include "objdef.h"
 101:Lib/ssc/src/sdoserv.c **** #undef  _SDOSERV_
 102:Lib/ssc/src/sdoserv.c **** /* ECATCHANGE_START(V5.11) ECAT10*/
 103:Lib/ssc/src/sdoserv.c **** /*remove definition of _SDOSERV_ (#ifdef is used in objdef.h)*/
 104:Lib/ssc/src/sdoserv.c **** /* ECATCHANGE_END(V5.11) ECAT10*/
 105:Lib/ssc/src/sdoserv.c **** 
 106:Lib/ssc/src/sdoserv.c **** 
 107:Lib/ssc/src/sdoserv.c **** 
 108:Lib/ssc/src/sdoserv.c **** 
 109:Lib/ssc/src/sdoserv.c **** extern OBJCONST TOBJECT OBJMEM asObjDef[];
 110:Lib/ssc/src/sdoserv.c **** extern UINT16 OBJ_GetDesc( UINT16 index, UINT8 subindex, OBJCONST TOBJECT OBJMEM * pObjEntry, UINT1
 111:Lib/ssc/src/sdoserv.c **** extern OBJCONST TSDOINFOENTRYDESC OBJMEM * OBJ_GetEntryDesc(OBJCONST TOBJECT OBJMEM * pObjEntry, UI
 112:Lib/ssc/src/sdoserv.c **** extern OBJCONST TSDOINFOOBJDESC OBJMEM * OBJ_GetObjDesc(OBJCONST TOBJECT OBJMEM * pObjEntry);
 113:Lib/ssc/src/sdoserv.c **** 
 114:Lib/ssc/src/sdoserv.c **** /*---------------------------------------------------------------------------------------
 115:Lib/ssc/src/sdoserv.c **** ------
 116:Lib/ssc/src/sdoserv.c **** ------    Modulintern variable definitions
 117:Lib/ssc/src/sdoserv.c **** ------
 118:Lib/ssc/src/sdoserv.c **** ---------------------------------------------------------------------------------------*/
 119:Lib/ssc/src/sdoserv.c **** 
 120:Lib/ssc/src/sdoserv.c **** const UINT32 MBXMEM cAbortCode[] =
 121:Lib/ssc/src/sdoserv.c **** {
 122:Lib/ssc/src/sdoserv.c ****     ABORT_NOERROR,
 123:Lib/ssc/src/sdoserv.c ****     ABORT_TOGGLE_BIT_NOT_CHANGED,
 124:Lib/ssc/src/sdoserv.c ****     ABORT_SDO_PROTOCOL_TIMEOUT,
 125:Lib/ssc/src/sdoserv.c ****     ABORT_COMMAND_SPECIFIER_UNKNOWN,
 126:Lib/ssc/src/sdoserv.c ****     ABORT_OUT_OF_MEMORY,
 127:Lib/ssc/src/sdoserv.c ****     ABORT_UNSUPPORTED_ACCESS,
 128:Lib/ssc/src/sdoserv.c ****     ABORT_WRITE_ONLY_ENTRY,
 129:Lib/ssc/src/sdoserv.c ****     ABORT_READ_ONLY_ENTRY,
 130:Lib/ssc/src/sdoserv.c ****     ABORT_OBJECT_NOT_EXISTING,
 131:Lib/ssc/src/sdoserv.c ****     ABORT_OBJECT_CANT_BE_PDOMAPPED,
 132:Lib/ssc/src/sdoserv.c ****     ABORT_MAPPED_OBJECTS_EXCEED_PDO,
 133:Lib/ssc/src/sdoserv.c ****     ABORT_PARAM_IS_INCOMPATIBLE,
 134:Lib/ssc/src/sdoserv.c ****     ABORT_INTERNAL_DEVICE_INCOMPATIBILITY,
 135:Lib/ssc/src/sdoserv.c ****     ABORT_HARDWARE_ERROR,
 136:Lib/ssc/src/sdoserv.c ****     ABORT_PARAM_LENGTH_ERROR,
 137:Lib/ssc/src/sdoserv.c ****     ABORT_PARAM_LENGTH_TOO_LONG,
 138:Lib/ssc/src/sdoserv.c ****     ABORT_PARAM_LENGTH_TOO_SHORT,
 139:Lib/ssc/src/sdoserv.c ****     ABORT_SUBINDEX_NOT_EXISTING,
 140:Lib/ssc/src/sdoserv.c ****     ABORT_VALUE_EXCEEDED,
 141:Lib/ssc/src/sdoserv.c ****     ABORT_VALUE_TOO_GREAT,
 142:Lib/ssc/src/sdoserv.c ****     ABORT_VALUE_TOO_SMALL,
 143:Lib/ssc/src/sdoserv.c ****     ABORT_MODULE_ID_LIST_NOT_MATCH,
 144:Lib/ssc/src/sdoserv.c ****     ABORT_MAX_VALUE_IS_LESS_THAN_MIN_VALUE,
ARM GAS  /tmp/ccs70NiP.s 			page 4


 145:Lib/ssc/src/sdoserv.c ****     ABORT_GENERAL_ERROR,
 146:Lib/ssc/src/sdoserv.c ****     ABORT_DATA_CANNOT_BE_READ_OR_STORED,
 147:Lib/ssc/src/sdoserv.c ****     ABORT_DATA_CANNOT_BE_READ_OR_STORED_BECAUSE_OF_LOCAL_CONTROL,
 148:Lib/ssc/src/sdoserv.c ****     ABORT_DATA_CANNOT_BE_READ_OR_STORED_IN_THIS_STATE,
 149:Lib/ssc/src/sdoserv.c ****     ABORT_NO_OBJECT_DICTIONARY_IS_PRESENT,
 150:Lib/ssc/src/sdoserv.c ****     ABORT_ENTRY_CANT_BE_WRITTEN_SI0_NOT_0,
 151:Lib/ssc/src/sdoserv.c **** /* ECATCHANGE_START(V5.11) SDO10*/
 152:Lib/ssc/src/sdoserv.c ****     ABORT_COMPLETE_ACCESS_NOT_SUPPORTED
 153:Lib/ssc/src/sdoserv.c **** /* ECATCHANGE_END(V5.11) SDO10*/
 154:Lib/ssc/src/sdoserv.c **** };
 155:Lib/ssc/src/sdoserv.c **** 
 156:Lib/ssc/src/sdoserv.c **** UINT16 VARMEM                            nSdoInfoIndex;
 157:Lib/ssc/src/sdoserv.c **** OBJCONST TOBJECT OBJMEM * VARMEM        pSdoInfoObjEntry;
 158:Lib/ssc/src/sdoserv.c **** 
 159:Lib/ssc/src/sdoserv.c **** TINITSDOMBX MBXMEM *    VARMEM            pSdoResStored;
 160:Lib/ssc/src/sdoserv.c **** BOOL    VARMEM                            bSdoInWork = FALSE;
 161:Lib/ssc/src/sdoserv.c **** 
 162:Lib/ssc/src/sdoserv.c **** UINT8    VARMEM                         nSdoSegService;
 163:Lib/ssc/src/sdoserv.c **** UINT8    VARMEM                         bSdoSegFollows;
 164:Lib/ssc/src/sdoserv.c **** UINT8    VARMEM                         bSdoSegAccess;
 165:Lib/ssc/src/sdoserv.c **** UINT16 VARMEM                           nSdoSegIndex;
 166:Lib/ssc/src/sdoserv.c **** UINT8 VARMEM                            nSdoSegSubindex;
 167:Lib/ssc/src/sdoserv.c **** UINT32 VARMEM                           nSdoSegBytesToHandle;
 168:Lib/ssc/src/sdoserv.c **** UINT8 VARMEM                            bSdoSegLastToggle;
 169:Lib/ssc/src/sdoserv.c **** UINT32 VARMEM                           nSdoSegCompleteSize;
 170:Lib/ssc/src/sdoserv.c **** OBJCONST TOBJECT OBJMEM * VARMEM        pSdoSegObjEntry;
 171:Lib/ssc/src/sdoserv.c **** 
 172:Lib/ssc/src/sdoserv.c **** /*---------------------------------------------------------------------------------------
 173:Lib/ssc/src/sdoserv.c **** ------
 174:Lib/ssc/src/sdoserv.c **** ------    module internal function declarations
 175:Lib/ssc/src/sdoserv.c **** ------
 176:Lib/ssc/src/sdoserv.c **** ---------------------------------------------------------------------------------------*/
 177:Lib/ssc/src/sdoserv.c **** static UINT8 SdoDownloadSegmentInd(TDOWNLOADSDOSEGREQMBX MBXMEM * pSdoInd);
 178:Lib/ssc/src/sdoserv.c **** static UINT8 SdoUploadSegmentInd(TUPLOADSDOSEGREQMBX MBXMEM * pSdoInd);
 179:Lib/ssc/src/sdoserv.c **** /*---------------------------------------------------------------------------------------
 180:Lib/ssc/src/sdoserv.c **** ------
 181:Lib/ssc/src/sdoserv.c **** ------    Functions
 182:Lib/ssc/src/sdoserv.c **** ------
 183:Lib/ssc/src/sdoserv.c **** ---------------------------------------------------------------------------------------*/
 184:Lib/ssc/src/sdoserv.c **** 
 185:Lib/ssc/src/sdoserv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 186:Lib/ssc/src/sdoserv.c **** /**
 187:Lib/ssc/src/sdoserv.c ****  \param     pSdoInd    Pointer to the received mailbox data from the master.
 188:Lib/ssc/src/sdoserv.c **** 
 189:Lib/ssc/src/sdoserv.c ****  \return    Indicates if an error occurred while the operation ( good = 0 ).
 190:Lib/ssc/src/sdoserv.c **** 
 191:Lib/ssc/src/sdoserv.c ****  \brief    This function is called when a Download SDO Segment request
 192:Lib/ssc/src/sdoserv.c ****             service is received from the master. If its the last segment
 193:Lib/ssc/src/sdoserv.c ****             the data will be written to the object dictionary. The
 194:Lib/ssc/src/sdoserv.c ****             function sends a response by itself.
 195:Lib/ssc/src/sdoserv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 196:Lib/ssc/src/sdoserv.c **** 
 197:Lib/ssc/src/sdoserv.c **** static UINT8 SdoDownloadSegmentInd( TDOWNLOADSDOSEGREQMBX MBXMEM * pSdoInd )
 198:Lib/ssc/src/sdoserv.c **** {
 199:Lib/ssc/src/sdoserv.c ****     UINT8 abort = 0;
 200:Lib/ssc/src/sdoserv.c ****     UINT32 bytesToSave = 0;
 201:Lib/ssc/src/sdoserv.c **** 
ARM GAS  /tmp/ccs70NiP.s 			page 5


 202:Lib/ssc/src/sdoserv.c ****     if ( (pSdoInd->SdoHeader.SegHeader & SEGHEADER_TOGGLE) == bSdoSegLastToggle )
 203:Lib/ssc/src/sdoserv.c ****     {
 204:Lib/ssc/src/sdoserv.c ****         /* toggle bit has not toggled... */
 205:Lib/ssc/src/sdoserv.c ****         abort = ABORTIDX_TOGGLE_BIT_NOT_CHANGED;
 206:Lib/ssc/src/sdoserv.c ****     }
 207:Lib/ssc/src/sdoserv.c ****     else
 208:Lib/ssc/src/sdoserv.c ****     {
 209:Lib/ssc/src/sdoserv.c ****         /* maxData contains the maximum data to be received with a SDO-DownloadSegment */
 210:Lib/ssc/src/sdoserv.c ****         UINT16 maxData =    u16ReceiveMbxSize - MBX_HEADER_SIZE - SEGMENT_NORM_HEADER_SIZE;
 211:Lib/ssc/src/sdoserv.c ****         /* the new toggle bit is stored in bSdoSegLastToggle */
 212:Lib/ssc/src/sdoserv.c ****         bSdoSegLastToggle = pSdoInd->SdoHeader.SegHeader & SEGHEADER_TOGGLE;
 213:Lib/ssc/src/sdoserv.c **** 
 214:Lib/ssc/src/sdoserv.c ****         /* a SDO-Download Segment is only allowed if a SDO-Download Request was received before,
 215:Lib/ssc/src/sdoserv.c ****            in that case a buffer for the received data was allocated in SDOS_SdoInd before */
 216:Lib/ssc/src/sdoserv.c ****         if ( pSdoSegData )
 217:Lib/ssc/src/sdoserv.c ****         {
 218:Lib/ssc/src/sdoserv.c ****             /* bytesToSave contains the remaining data with this and maybe the following
 219:Lib/ssc/src/sdoserv.c ****                SDO-Download Segment services */
 220:Lib/ssc/src/sdoserv.c ****             bytesToSave = nSdoSegCompleteSize - nSdoSegBytesToHandle;
 221:Lib/ssc/src/sdoserv.c **** 
 222:Lib/ssc/src/sdoserv.c ****             if ( pSdoInd->SdoHeader.SegHeader & SEGHEADER_NOMOREFOLLOWS )
 223:Lib/ssc/src/sdoserv.c ****             {
 224:Lib/ssc/src/sdoserv.c ****                 /* the last segment is received, check if the length of the remaining data is the
 225:Lib/ssc/src/sdoserv.c ****                    same as the length of the received data */
 226:Lib/ssc/src/sdoserv.c ****                 if ( bytesToSave <= maxData )
 227:Lib/ssc/src/sdoserv.c ****                 {
 228:Lib/ssc/src/sdoserv.c **** /* ECATCHANGE_START(V5.11) ECAT7*/
 229:Lib/ssc/src/sdoserv.c ****                     UINT16 mbxSize = SWAPWORD(pSdoInd->MbxHeader.Length);
 230:Lib/ssc/src/sdoserv.c **** 
 231:Lib/ssc/src/sdoserv.c ****                     /* for the check it is distinguished if the remaining bytes are less than 8 (in
 232:Lib/ssc/src/sdoserv.c ****                        case 7 data bytes were sent and the SDO-Download Segment header contains the
 233:Lib/ssc/src/sdoserv.c ****                         how much bytes are valid (CAN-compatibility)), otherwise the length has to 
 234:Lib/ssc/src/sdoserv.c ****                         and the SDO-Download Segment-Headerbyte is ignored */
 235:Lib/ssc/src/sdoserv.c ****                     if (((bytesToSave <= (UINT32)(mbxSize - SEGMENT_NORM_HEADER_SIZE))
 236:Lib/ssc/src/sdoserv.c ****                          &&( bytesToSave == ((UINT16) (MIN_SEGMENTED_DATA - ((pSdoInd->SdoHeader.Se
 237:Lib/ssc/src/sdoserv.c ****                           )
 238:Lib/ssc/src/sdoserv.c ****                         ||( ( bytesToSave > MIN_SEGMENTED_DATA )
 239:Lib/ssc/src/sdoserv.c ****                         && (bytesToSave == (mbxSize - SEGMENT_NORM_HEADER_SIZE))
 240:Lib/ssc/src/sdoserv.c ****                         ) )
 241:Lib/ssc/src/sdoserv.c **** /* ECATCHANGE_END(V5.11) ECAT7*/
 242:Lib/ssc/src/sdoserv.c ****                     {
 243:Lib/ssc/src/sdoserv.c ****                         /* length is correct */
 244:Lib/ssc/src/sdoserv.c ****                         bSdoSegFollows = FALSE;
 245:Lib/ssc/src/sdoserv.c ****                     }
 246:Lib/ssc/src/sdoserv.c ****                     else
 247:Lib/ssc/src/sdoserv.c ****                         abort = ABORTIDX_PARAM_LENGTH_ERROR;
 248:Lib/ssc/src/sdoserv.c ****                 }
 249:Lib/ssc/src/sdoserv.c ****                 else
 250:Lib/ssc/src/sdoserv.c ****                     abort = ABORTIDX_PARAM_LENGTH_ERROR;
 251:Lib/ssc/src/sdoserv.c ****             }
 252:Lib/ssc/src/sdoserv.c ****             else
 253:Lib/ssc/src/sdoserv.c ****             {
 254:Lib/ssc/src/sdoserv.c ****                 /* its not the last segment */
 255:Lib/ssc/src/sdoserv.c ****                 bSdoSegFollows = TRUE;
 256:Lib/ssc/src/sdoserv.c ****                 /* we have to check if we expect less bytes than the maximum size which can be send
 257:Lib/ssc/src/sdoserv.c ****                    SDO Download Segment */
 258:Lib/ssc/src/sdoserv.c ****                 if ( bytesToSave <= maxData )
ARM GAS  /tmp/ccs70NiP.s 			page 6


 259:Lib/ssc/src/sdoserv.c ****                     abort = ABORTIDX_PARAM_LENGTH_ERROR;
 260:Lib/ssc/src/sdoserv.c ****                 else
 261:Lib/ssc/src/sdoserv.c ****                     /* length is okay, bytesToSave contains the data size to be copied */
 262:Lib/ssc/src/sdoserv.c ****                     bytesToSave = maxData;
 263:Lib/ssc/src/sdoserv.c ****             }
 264:Lib/ssc/src/sdoserv.c **** 
 265:Lib/ssc/src/sdoserv.c ****             if ( abort == 0 )
 266:Lib/ssc/src/sdoserv.c ****             {
 267:Lib/ssc/src/sdoserv.c ****                 /* the received data is copied in the buffer */
 268:Lib/ssc/src/sdoserv.c ****                 UINT16 i = 0;
 269:Lib/ssc/src/sdoserv.c **** 
 270:Lib/ssc/src/sdoserv.c ****                 if ((nSdoSegBytesToHandle & 0x1) == 0x01)
 271:Lib/ssc/src/sdoserv.c ****                 {	
 272:Lib/ssc/src/sdoserv.c ****                     // Data0 will be copied to an odd address of pSdoSegData, Data1 to an even addr
 273:Lib/ssc/src/sdoserv.c ****                     // Read Data0
 274:Lib/ssc/src/sdoserv.c ****                     pSdoSegData[(nSdoSegBytesToHandle >> 1)] &= ~SEGHDATA_MASK;
 275:Lib/ssc/src/sdoserv.c ****                     pSdoSegData[(nSdoSegBytesToHandle >> 1)] |= (pSdoInd->SdoHeader.SegHeader & SEG
 276:Lib/ssc/src/sdoserv.c ****                     // Copy Data1 - DataN
 277:Lib/ssc/src/sdoserv.c ****                     MBXMEMCPY(&pSdoSegData[(nSdoSegBytesToHandle >> 1) + 1],pSdoInd->SdoHeader.Data
 278:Lib/ssc/src/sdoserv.c ****                 }
 279:Lib/ssc/src/sdoserv.c ****                 else
 280:Lib/ssc/src/sdoserv.c ****                 {	// Data0 will be copied to an even address of pSdoSegData, Data1 to an odd addres
 281:Lib/ssc/src/sdoserv.c ****                     // Read Data0 and Data1
 282:Lib/ssc/src/sdoserv.c ****                     pSdoSegData[( nSdoSegBytesToHandle >> 1)] = ((pSdoInd->SdoHeader.SegHeader >> S
 283:Lib/ssc/src/sdoserv.c ****                     
 284:Lib/ssc/src/sdoserv.c ****                     // Copy Data2 - DataN
 285:Lib/ssc/src/sdoserv.c ****                     for (i = 1; i <((bytesToSave + 1)  >> 1); i++)
 286:Lib/ssc/src/sdoserv.c ****                     {
 287:Lib/ssc/src/sdoserv.c ****                         pSdoSegData[(nSdoSegBytesToHandle >> 1) + i] = ((pSdoInd->SdoHeader.Data[i 
 288:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 289:Lib/ssc/src/sdoserv.c ****                     }
 290:Lib/ssc/src/sdoserv.c ****                 }
 291:Lib/ssc/src/sdoserv.c **** 
 292:Lib/ssc/src/sdoserv.c ****                 if ( bSdoSegFollows == FALSE    )
 293:Lib/ssc/src/sdoserv.c ****                 {
 294:Lib/ssc/src/sdoserv.c ****                     /* it was the last segment, OBJ_Write will called to make the Write-operation *
 295:Lib/ssc/src/sdoserv.c ****                     abort = OBJ_Write( nSdoSegIndex, nSdoSegSubindex, nSdoSegCompleteSize, pSdoSegO
 296:Lib/ssc/src/sdoserv.c ****                     if ( abort == ABORTIDX_WORKING )
 297:Lib/ssc/src/sdoserv.c ****                     {
 298:Lib/ssc/src/sdoserv.c ****                         /* the application generates the SDO-Response later on by calling SDOS_SdoR
 299:Lib/ssc/src/sdoserv.c ****                         u8PendingSdo = SDO_PENDING_SEG_WRITE;
 300:Lib/ssc/src/sdoserv.c ****                         bStoreCompleteAccess = bSdoSegAccess;
 301:Lib/ssc/src/sdoserv.c ****                         u8StoreSubindex = nSdoSegSubindex;
 302:Lib/ssc/src/sdoserv.c ****                         u16StoreIndex = nSdoSegIndex;
 303:Lib/ssc/src/sdoserv.c ****                         u32StoreDataSize = nSdoSegCompleteSize;
 304:Lib/ssc/src/sdoserv.c ****                         pStoreData = pSdoSegData;
 305:Lib/ssc/src/sdoserv.c **** 
 306:Lib/ssc/src/sdoserv.c ****                         pSdoPendFunc = pSdoSegObjEntry->Write;
 307:Lib/ssc/src/sdoserv.c **** 
 308:Lib/ssc/src/sdoserv.c ****                         bSdoInWork = TRUE;
 309:Lib/ssc/src/sdoserv.c ****                         pSdoResStored = (TINITSDOMBX MBXMEM *) pSdoInd;
 310:Lib/ssc/src/sdoserv.c **** 
 311:Lib/ssc/src/sdoserv.c ****                         bSdoSegFollows = FALSE;
 312:Lib/ssc/src/sdoserv.c ****                         nSdoSegService    = 0;
 313:Lib/ssc/src/sdoserv.c ****                         nSdoSegBytesToHandle = 0;
 314:Lib/ssc/src/sdoserv.c **** 
 315:Lib/ssc/src/sdoserv.c ****                         return ABORTIDX_WORKING;
ARM GAS  /tmp/ccs70NiP.s 			page 7


 316:Lib/ssc/src/sdoserv.c ****                     }
 317:Lib/ssc/src/sdoserv.c ****                     else
 318:Lib/ssc/src/sdoserv.c ****                     {
 319:Lib/ssc/src/sdoserv.c ****                         /* the allocated buffer can be released */
 320:Lib/ssc/src/sdoserv.c ****                         FREEMEM( (UINT16 VARMEM *) pSdoSegData );
 321:Lib/ssc/src/sdoserv.c ****                         pSdoSegData = NULL;
 322:Lib/ssc/src/sdoserv.c ****                     }
 323:Lib/ssc/src/sdoserv.c ****                 }
 324:Lib/ssc/src/sdoserv.c ****             }
 325:Lib/ssc/src/sdoserv.c ****         }
 326:Lib/ssc/src/sdoserv.c ****         else
 327:Lib/ssc/src/sdoserv.c ****         {
 328:Lib/ssc/src/sdoserv.c ****             abort = ABORTIDX_COMMAND_SPECIFIER_UNKNOWN;
 329:Lib/ssc/src/sdoserv.c ****         }
 330:Lib/ssc/src/sdoserv.c ****     }
 331:Lib/ssc/src/sdoserv.c **** 
 332:Lib/ssc/src/sdoserv.c ****     if ( abort == 0)
 333:Lib/ssc/src/sdoserv.c ****     {
 334:Lib/ssc/src/sdoserv.c ****         /* send the SDO Download Segment response */
 335:Lib/ssc/src/sdoserv.c ****         pSdoInd->MbxHeader.Length = SEGMENT_NORM_RES_SIZE;
 336:Lib/ssc/src/sdoserv.c ****         pSdoInd->CoeHeader &= ~COEHEADER_COESERVICEMASK;
 337:Lib/ssc/src/sdoserv.c ****         pSdoInd->CoeHeader |= ((UINT16)COESERVICE_SDORESPONSE) << COEHEADER_COESERVICESHIFT;
 338:Lib/ssc/src/sdoserv.c ****         /* the SDO Download Segment header depends if it was the last segment or not */
 339:Lib/ssc/src/sdoserv.c ****         if ( bSdoSegLastToggle )
 340:Lib/ssc/src/sdoserv.c ****         {
 341:Lib/ssc/src/sdoserv.c ****            pSdoInd->SdoHeader.SegHeader        = SDOSERVICE_DOWNLOADSEGMENTRES|SEGHEADER_TOGGLE;
 342:Lib/ssc/src/sdoserv.c ****         }
 343:Lib/ssc/src/sdoserv.c ****         else
 344:Lib/ssc/src/sdoserv.c ****            pSdoInd->SdoHeader.SegHeader        = SDOSERVICE_DOWNLOADSEGMENTRES;
 345:Lib/ssc/src/sdoserv.c **** 
 346:Lib/ssc/src/sdoserv.c ****         if ( bSdoSegFollows == TRUE )
 347:Lib/ssc/src/sdoserv.c ****         {
 348:Lib/ssc/src/sdoserv.c ****             /* segments are still expected, nSdoSegBytesToHandle contains the number of received da
 349:Lib/ssc/src/sdoserv.c ****             nSdoSegBytesToHandle += bytesToSave;
 350:Lib/ssc/src/sdoserv.c ****         }
 351:Lib/ssc/src/sdoserv.c ****         else
 352:Lib/ssc/src/sdoserv.c ****         {
 353:Lib/ssc/src/sdoserv.c ****             /* the last segment was received, the variables are reset */
 354:Lib/ssc/src/sdoserv.c ****             nSdoSegBytesToHandle = 0;
 355:Lib/ssc/src/sdoserv.c ****             nSdoSegService    = 0;
 356:Lib/ssc/src/sdoserv.c ****         }
 357:Lib/ssc/src/sdoserv.c ****     }
 358:Lib/ssc/src/sdoserv.c ****     else 
 359:Lib/ssc/src/sdoserv.c ****     {
 360:Lib/ssc/src/sdoserv.c ****         /* the Abort-Response will be sent in SDOS_SdoInd*/
 361:Lib/ssc/src/sdoserv.c ****         bSdoSegFollows = FALSE;
 362:Lib/ssc/src/sdoserv.c ****         nSdoSegService    = 0;
 363:Lib/ssc/src/sdoserv.c ****         if (pSdoSegData)
 364:Lib/ssc/src/sdoserv.c ****         {
 365:Lib/ssc/src/sdoserv.c ****             /* the memory has to be released if it is not released before.
 366:Lib/ssc/src/sdoserv.c ****             In case of AbortIdx_Working the buffer will be freed in SDOS_SdoRes*/
 367:Lib/ssc/src/sdoserv.c ****             FREEMEM( (UINT16 VARMEM *) pSdoSegData );
 368:Lib/ssc/src/sdoserv.c ****             pSdoSegData = NULL;
 369:Lib/ssc/src/sdoserv.c ****         }
 370:Lib/ssc/src/sdoserv.c **** 
 371:Lib/ssc/src/sdoserv.c ****         nSdoSegBytesToHandle = 0;
 372:Lib/ssc/src/sdoserv.c ****     }
ARM GAS  /tmp/ccs70NiP.s 			page 8


 373:Lib/ssc/src/sdoserv.c **** 
 374:Lib/ssc/src/sdoserv.c ****     return abort;
 375:Lib/ssc/src/sdoserv.c **** }
 376:Lib/ssc/src/sdoserv.c **** 
 377:Lib/ssc/src/sdoserv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 378:Lib/ssc/src/sdoserv.c **** /**
 379:Lib/ssc/src/sdoserv.c ****  \param     pSdoInd            Pointer to the received mailbox data from the master.
 380:Lib/ssc/src/sdoserv.c **** 
 381:Lib/ssc/src/sdoserv.c ****  \return    Indicates if an error occurred while the operation ( good = 0 ).
 382:Lib/ssc/src/sdoserv.c **** 
 383:Lib/ssc/src/sdoserv.c ****  \brief    This function is called when a Upload SDO Segment request service
 384:Lib/ssc/src/sdoserv.c ****             is received from the master. It prepares and operates the
 385:Lib/ssc/src/sdoserv.c ****             response and sends it by itself.
 386:Lib/ssc/src/sdoserv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 387:Lib/ssc/src/sdoserv.c **** 
 388:Lib/ssc/src/sdoserv.c **** static UINT8 SdoUploadSegmentInd( TUPLOADSDOSEGREQMBX MBXMEM * pSdoInd )
 389:Lib/ssc/src/sdoserv.c **** {
  29              		.loc 1 389 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 389 1 is_stmt 0 view .LVU1
  34 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
 390:Lib/ssc/src/sdoserv.c ****     UINT8 abort = 0;
  42              		.loc 1 390 5 is_stmt 1 view .LVU2
  43              	.LVL1:
 391:Lib/ssc/src/sdoserv.c ****     TUPLOADSDOSEGRESMBX MBXMEM * pSdoSegRes = (TUPLOADSDOSEGRESMBX MBXMEM *)pSdoInd;
  44              		.loc 1 391 5 view .LVU3
 392:Lib/ssc/src/sdoserv.c **** 
 393:Lib/ssc/src/sdoserv.c ****    if ( (pSdoInd->SegHeader & SEGHEADER_TOGGLE) == bSdoSegLastToggle )
  45              		.loc 1 393 4 view .LVU4
  46              		.loc 1 393 17 is_stmt 0 view .LVU5
  47 0002 067A     		ldrb	r6, [r0, #8]	@ zero_extendqisi2
  48 0004 06F01006 		and	r6, r6, #16
  49              		.loc 1 393 49 view .LVU6
  50 0008 454B     		ldr	r3, .L17
  51 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  52              		.loc 1 393 7 view .LVU7
  53 000c B342     		cmp	r3, r6
  54 000e 00F08580 		beq	.L14
  55 0012 0446     		mov	r4, r0
  56              	.LBB2:
 394:Lib/ssc/src/sdoserv.c ****     {
 395:Lib/ssc/src/sdoserv.c ****         /* toggle bit has not toggled... */
 396:Lib/ssc/src/sdoserv.c ****         abort = ABORTIDX_TOGGLE_BIT_NOT_CHANGED;
 397:Lib/ssc/src/sdoserv.c ****     }
 398:Lib/ssc/src/sdoserv.c ****     else
 399:Lib/ssc/src/sdoserv.c ****     {
 400:Lib/ssc/src/sdoserv.c ****         /* maxData contains the maximum data to be sent with a SDO-Upload Segment response */
 401:Lib/ssc/src/sdoserv.c ****          
ARM GAS  /tmp/ccs70NiP.s 			page 9


 402:Lib/ssc/src/sdoserv.c ****         UINT32 size = 0;
  57              		.loc 1 402 9 is_stmt 1 view .LVU8
  58              	.LVL2:
 403:Lib/ssc/src/sdoserv.c ****         UINT16 maxData;
  59              		.loc 1 403 9 view .LVU9
 404:Lib/ssc/src/sdoserv.c ****         {
 405:Lib/ssc/src/sdoserv.c ****             maxData =    u16SendMbxSize - MBX_HEADER_SIZE - SEGMENT_NORM_HEADER_SIZE;
  60              		.loc 1 405 13 view .LVU10
  61              		.loc 1 405 59 is_stmt 0 view .LVU11
  62 0014 434B     		ldr	r3, .L17+4
  63 0016 1B88     		ldrh	r3, [r3]
  64              		.loc 1 405 21 view .LVU12
  65 0018 093B     		subs	r3, r3, #9
  66 001a 9BB2     		uxth	r3, r3
  67              	.LVL3:
 406:Lib/ssc/src/sdoserv.c ****         }
 407:Lib/ssc/src/sdoserv.c **** 
 408:Lib/ssc/src/sdoserv.c ****         /* the new toggle bit is stored in bSdoSegLastToggle */
 409:Lib/ssc/src/sdoserv.c ****         bSdoSegLastToggle = pSdoInd->SegHeader & SEGHEADER_TOGGLE;
  68              		.loc 1 409 9 is_stmt 1 view .LVU13
  69              		.loc 1 409 27 is_stmt 0 view .LVU14
  70 001c 404A     		ldr	r2, .L17
  71 001e 1670     		strb	r6, [r2]
 410:Lib/ssc/src/sdoserv.c **** 
 411:Lib/ssc/src/sdoserv.c ****         if ( nSdoSegCompleteSize < (nSdoSegBytesToHandle + maxData) )
  72              		.loc 1 411 9 is_stmt 1 view .LVU15
  73              		.loc 1 411 58 is_stmt 0 view .LVU16
  74 0020 1D46     		mov	r5, r3
  75 0022 414A     		ldr	r2, .L17+8
  76 0024 1068     		ldr	r0, [r2]
  77              	.LVL4:
  78              		.loc 1 411 58 view .LVU17
  79 0026 0344     		add	r3, r3, r0
  80              	.LVL5:
  81              		.loc 1 411 34 view .LVU18
  82 0028 404A     		ldr	r2, .L17+12
  83 002a 1268     		ldr	r2, [r2]
  84              		.loc 1 411 12 view .LVU19
  85 002c 9342     		cmp	r3, r2
  86 002e 12D9     		bls	.L3
 412:Lib/ssc/src/sdoserv.c ****         {
 413:Lib/ssc/src/sdoserv.c ****             /* the remaining data can be send with one SDO Upload Segment response,
 414:Lib/ssc/src/sdoserv.c ****                size contains the data to be copied */
 415:Lib/ssc/src/sdoserv.c ****             size = nSdoSegCompleteSize - nSdoSegBytesToHandle;
  87              		.loc 1 415 13 is_stmt 1 view .LVU20
  88              		.loc 1 415 18 is_stmt 0 view .LVU21
  89 0030 151A     		subs	r5, r2, r0
  90              	.LVL6:
 416:Lib/ssc/src/sdoserv.c ****             bSdoSegFollows = FALSE;
  91              		.loc 1 416 13 is_stmt 1 view .LVU22
  92              		.loc 1 416 28 is_stmt 0 view .LVU23
  93 0032 3F4B     		ldr	r3, .L17+16
  94 0034 0022     		movs	r2, #0
  95 0036 1A70     		strb	r2, [r3]
  96              	.LVL7:
  97              	.L4:
 417:Lib/ssc/src/sdoserv.c ****         }
ARM GAS  /tmp/ccs70NiP.s 			page 10


 418:Lib/ssc/src/sdoserv.c ****         else
 419:Lib/ssc/src/sdoserv.c ****         {
 420:Lib/ssc/src/sdoserv.c ****             /* more data will follow, size contains the data to be copied */
 421:Lib/ssc/src/sdoserv.c ****             size = maxData;
 422:Lib/ssc/src/sdoserv.c ****             bSdoSegFollows = TRUE;
 423:Lib/ssc/src/sdoserv.c ****         }
 424:Lib/ssc/src/sdoserv.c **** 
 425:Lib/ssc/src/sdoserv.c ****         /* copy the object data in the SDO Upload segment response */
 426:Lib/ssc/src/sdoserv.c ****         // Clear Data0
 427:Lib/ssc/src/sdoserv.c ****         pSdoSegRes->SdoHeader.SegHeader &= ~SEGHDATA_MASK;
  98              		.loc 1 427 9 is_stmt 1 view .LVU24
  99              		.loc 1 427 41 is_stmt 0 view .LVU25
 100 0038 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 101 003a 2381     		strh	r3, [r4, #8]	@ movhi
 428:Lib/ssc/src/sdoserv.c ****         if ((nSdoSegBytesToHandle & 0x1) == 0x01)
 102              		.loc 1 428 9 is_stmt 1 view .LVU26
 103              		.loc 1 428 12 is_stmt 0 view .LVU27
 104 003c 10F0010F 		tst	r0, #1
 105 0040 0DD1     		bne	.L16
 106              	.LBB3:
 429:Lib/ssc/src/sdoserv.c ****         {	// Data starts at odd byte number (Segment 2, 4,...): Data0 is at high byte, Data1 lies a
 430:Lib/ssc/src/sdoserv.c ****             // Write Data0
 431:Lib/ssc/src/sdoserv.c ****             pSdoSegRes->SdoHeader.SegHeader |= (pSdoSegData[(nSdoSegBytesToHandle >> 1)] & SEGHDATA
 432:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 433:Lib/ssc/src/sdoserv.c ****             MBXMEMCPY( pSdoSegRes->SdoHeader.Data, &pSdoSegData[(nSdoSegBytesToHandle >> 1) + 1], s
 434:Lib/ssc/src/sdoserv.c ****         }
 435:Lib/ssc/src/sdoserv.c ****         else
 436:Lib/ssc/src/sdoserv.c ****         {	
 437:Lib/ssc/src/sdoserv.c ****             UINT16 i = 0;
 107              		.loc 1 437 13 is_stmt 1 view .LVU28
 108              	.LVL8:
 438:Lib/ssc/src/sdoserv.c ****             UINT32 nIndexOffset = nSdoSegBytesToHandle >> 1;
 109              		.loc 1 438 13 view .LVU29
 110              		.loc 1 438 20 is_stmt 0 view .LVU30
 111 0042 4008     		lsrs	r0, r0, #1
 112              	.LVL9:
 439:Lib/ssc/src/sdoserv.c ****             // Data starts at even byte number (Segment 1,3, ...): Data0 is at low byte, Data1 lies
 440:Lib/ssc/src/sdoserv.c ****             // Write Data0
 441:Lib/ssc/src/sdoserv.c ****             pSdoSegRes->SdoHeader.SegHeader |= ((pSdoSegData[(nSdoSegBytesToHandle >> 1)] << SEGDAT
 113              		.loc 1 441 13 is_stmt 1 view .LVU31
 114              		.loc 1 441 61 is_stmt 0 view .LVU32
 115 0044 3B4A     		ldr	r2, .L17+20
 116 0046 1768     		ldr	r7, [r2]
 117 0048 37F81020 		ldrh	r2, [r7, r0, lsl #1]
 118              		.loc 1 441 45 view .LVU33
 119 004c 43EA0223 		orr	r3, r3, r2, lsl #8
 120 0050 2381     		strh	r3, [r4, #8]	@ movhi
 442:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 443:Lib/ssc/src/sdoserv.c ****             
 444:Lib/ssc/src/sdoserv.c ****             for (i = 0; i < (size >> 1);i++)
 121              		.loc 1 444 13 is_stmt 1 view .LVU34
 122              		.loc 1 444 20 is_stmt 0 view .LVU35
 123 0052 0022     		movs	r2, #0
 124              		.loc 1 444 13 view .LVU36
 125 0054 25E0     		b	.L7
 126              	.LVL10:
 127              	.L3:
ARM GAS  /tmp/ccs70NiP.s 			page 11


 128              		.loc 1 444 13 view .LVU37
 129              	.LBE3:
 421:Lib/ssc/src/sdoserv.c ****             bSdoSegFollows = TRUE;
 130              		.loc 1 421 13 is_stmt 1 view .LVU38
 422:Lib/ssc/src/sdoserv.c ****         }
 131              		.loc 1 422 13 view .LVU39
 422:Lib/ssc/src/sdoserv.c ****         }
 132              		.loc 1 422 28 is_stmt 0 view .LVU40
 133 0056 364B     		ldr	r3, .L17+16
 134 0058 0122     		movs	r2, #1
 135 005a 1A70     		strb	r2, [r3]
 136 005c ECE7     		b	.L4
 137              	.LVL11:
 138              	.L16:
 431:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 139              		.loc 1 431 13 is_stmt 1 view .LVU41
 431:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 140              		.loc 1 431 60 is_stmt 0 view .LVU42
 141 005e 354A     		ldr	r2, .L17+20
 142 0060 1168     		ldr	r1, [r2]
 431:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 143              		.loc 1 431 83 view .LVU43
 144 0062 4008     		lsrs	r0, r0, #1
 431:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 145              		.loc 1 431 60 view .LVU44
 146 0064 31F91020 		ldrsh	r2, [r1, r0, lsl #1]
 431:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 147              		.loc 1 431 90 view .LVU45
 148 0068 22F0FF02 		bic	r2, r2, #255
 431:Lib/ssc/src/sdoserv.c ****             // Copy Data1 - DataN
 149              		.loc 1 431 45 view .LVU46
 150 006c 1343     		orrs	r3, r3, r2
 151 006e 2381     		strh	r3, [r4, #8]	@ movhi
 433:Lib/ssc/src/sdoserv.c ****         }
 152              		.loc 1 433 13 is_stmt 1 view .LVU47
 433:Lib/ssc/src/sdoserv.c ****         }
 153              		.loc 1 433 64 is_stmt 0 view .LVU48
 154 0070 0130     		adds	r0, r0, #1
 433:Lib/ssc/src/sdoserv.c ****         }
 155              		.loc 1 433 13 view .LVU49
 156 0072 6A1E     		subs	r2, r5, #1
 157 0074 01EB4001 		add	r1, r1, r0, lsl #1
 158 0078 04F10A00 		add	r0, r4, #10
 159 007c FFF7FEFF 		bl	memcpy
 160              	.LVL12:
 433:Lib/ssc/src/sdoserv.c ****         }
 161              		.loc 1 433 13 view .LVU50
 162 0080 12E0     		b	.L6
 163              	.LVL13:
 164              	.L8:
 165              	.LBB4:
 445:Lib/ssc/src/sdoserv.c ****             {
 446:Lib/ssc/src/sdoserv.c ****                 pSdoSegRes->SdoHeader.Data[i] = ((pSdoSegData[i + nIndexOffset] & SEGHDATA_MASK) >>
 166              		.loc 1 446 17 is_stmt 1 discriminator 3 view .LVU51
 167              		.loc 1 446 65 is_stmt 0 discriminator 3 view .LVU52
 168 0082 1118     		adds	r1, r2, r0
 169              		.loc 1 446 62 discriminator 3 view .LVU53
ARM GAS  /tmp/ccs70NiP.s 			page 12


 170 0084 37F811C0 		ldrh	ip, [r7, r1, lsl #1]
 171              		.loc 1 446 119 discriminator 3 view .LVU54
 172 0088 0131     		adds	r1, r1, #1
 173 008a 37F81130 		ldrh	r3, [r7, r1, lsl #1]
 174              		.loc 1 446 160 discriminator 3 view .LVU55
 175 008e 1B02     		lsls	r3, r3, #8
 176 0090 1BB2     		sxth	r3, r3
 177              		.loc 1 446 104 discriminator 3 view .LVU56
 178 0092 43EA1C23 		orr	r3, r3, ip, lsr #8
 179              		.loc 1 446 47 discriminator 3 view .LVU57
 180 0096 111D     		adds	r1, r2, #4
 181 0098 04EB4101 		add	r1, r4, r1, lsl #1
 182 009c 4B80     		strh	r3, [r1, #2]	@ movhi
 444:Lib/ssc/src/sdoserv.c ****             {
 183              		.loc 1 444 41 is_stmt 1 discriminator 3 view .LVU58
 444:Lib/ssc/src/sdoserv.c ****             {
 184              		.loc 1 444 42 is_stmt 0 discriminator 3 view .LVU59
 185 009e 0132     		adds	r2, r2, #1
 186              	.LVL14:
 444:Lib/ssc/src/sdoserv.c ****             {
 187              		.loc 1 444 42 discriminator 3 view .LVU60
 188 00a0 92B2     		uxth	r2, r2
 189              	.LVL15:
 190              	.L7:
 444:Lib/ssc/src/sdoserv.c ****             {
 191              		.loc 1 444 25 is_stmt 1 discriminator 1 view .LVU61
 444:Lib/ssc/src/sdoserv.c ****             {
 192              		.loc 1 444 13 is_stmt 0 discriminator 1 view .LVU62
 193 00a2 B2EB550F 		cmp	r2, r5, lsr #1
 194 00a6 ECD3     		bcc	.L8
 195              	.LVL16:
 196              	.L6:
 444:Lib/ssc/src/sdoserv.c ****             {
 197              		.loc 1 444 13 discriminator 1 view .LVU63
 198              	.LBE4:
 447:Lib/ssc/src/sdoserv.c ****                     // (If size is even, one byte too much is copied. But, that is not a problem.)
 448:Lib/ssc/src/sdoserv.c ****             }
 449:Lib/ssc/src/sdoserv.c ****         }
 450:Lib/ssc/src/sdoserv.c ****         
 451:Lib/ssc/src/sdoserv.c ****         /* the SDO Upload Segment header depends if there is still data to be sent */
 452:Lib/ssc/src/sdoserv.c ****         pSdoSegRes->CoeHeader &= ~COEHEADER_COESERVICEMASK;
 199              		.loc 1 452 9 is_stmt 1 view .LVU64
 200              		.loc 1 452 31 is_stmt 0 view .LVU65
 201 00a8 E388     		ldrh	r3, [r4, #6]
 202 00aa C3F30B03 		ubfx	r3, r3, #0, #12
 203 00ae E380     		strh	r3, [r4, #6]	@ movhi
 453:Lib/ssc/src/sdoserv.c ****         pSdoSegRes->CoeHeader |= ((UINT16)COESERVICE_SDORESPONSE) << COEHEADER_COESERVICESHIFT;
 204              		.loc 1 453 9 is_stmt 1 view .LVU66
 205              		.loc 1 453 31 is_stmt 0 view .LVU67
 206 00b0 43F44053 		orr	r3, r3, #12288
 207 00b4 E380     		strh	r3, [r4, #6]	@ movhi
 454:Lib/ssc/src/sdoserv.c **** 
 455:Lib/ssc/src/sdoserv.c ****         /*Clear SDO header*/
 456:Lib/ssc/src/sdoserv.c ****         pSdoSegRes->SdoHeader.SegHeader &= ~SEGHEADER_MASK;
 208              		.loc 1 456 9 is_stmt 1 view .LVU68
 209              		.loc 1 456 41 is_stmt 0 view .LVU69
 210 00b6 2389     		ldrh	r3, [r4, #8]
ARM GAS  /tmp/ccs70NiP.s 			page 13


 211 00b8 03F47F43 		and	r3, r3, #65280
 212 00bc 2381     		strh	r3, [r4, #8]	@ movhi
 457:Lib/ssc/src/sdoserv.c ****         if (bSdoSegFollows)
 213              		.loc 1 457 9 is_stmt 1 view .LVU70
 214              		.loc 1 457 13 is_stmt 0 view .LVU71
 215 00be 1C4A     		ldr	r2, .L17+16
 216 00c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 217              		.loc 1 457 12 view .LVU72
 218 00c2 BAB1     		cbz	r2, .L9
 458:Lib/ssc/src/sdoserv.c ****             pSdoSegRes->SdoHeader.SegHeader        |= SDOSERVICE_UPLOADSEGMENTRES | bSdoSegLastTogg
 219              		.loc 1 458 13 is_stmt 1 view .LVU73
 220              		.loc 1 458 52 is_stmt 0 view .LVU74
 221 00c4 3343     		orrs	r3, r3, r6
 222 00c6 2381     		strh	r3, [r4, #8]	@ movhi
 223              	.L10:
 459:Lib/ssc/src/sdoserv.c ****         else
 460:Lib/ssc/src/sdoserv.c ****             pSdoSegRes->SdoHeader.SegHeader        |= SDOSERVICE_UPLOADSEGMENTRES | bSdoSegLastTogg
 461:Lib/ssc/src/sdoserv.c **** 
 462:Lib/ssc/src/sdoserv.c ****         // operate CAN specific flag segDataSize:
 463:Lib/ssc/src/sdoserv.c ****         /* HBu 06.02.06: the sizes were wrong */
 464:Lib/ssc/src/sdoserv.c ****         if ( size < MIN_SEGMENTED_DATA )
 224              		.loc 1 464 9 is_stmt 1 view .LVU75
 225              		.loc 1 464 12 is_stmt 0 view .LVU76
 226 00c8 062D     		cmp	r5, #6
 227 00ca 18D8     		bhi	.L11
 465:Lib/ssc/src/sdoserv.c ****         {
 466:Lib/ssc/src/sdoserv.c ****             // at least    MIN_SEGMENTED_DATA bytes have to be send:
 467:Lib/ssc/src/sdoserv.c ****             pSdoSegRes->MbxHeader.Length = SEGMENT_NORM_RES_SIZE;
 228              		.loc 1 467 13 is_stmt 1 view .LVU77
 229              		.loc 1 467 42 is_stmt 0 view .LVU78
 230 00cc 0A23     		movs	r3, #10
 231 00ce 2380     		strh	r3, [r4]	@ movhi
 468:Lib/ssc/src/sdoserv.c ****             pSdoSegRes->SdoHeader.SegHeader    |= (MIN_SEGMENTED_DATA - size) << SEGHEADERSHIFT_SEG
 232              		.loc 1 468 13 is_stmt 1 view .LVU79
 233              		.loc 1 468 71 is_stmt 0 view .LVU80
 234 00d0 C5F10703 		rsb	r3, r5, #7
 235 00d4 9BB2     		uxth	r3, r3
 236              		.loc 1 468 79 view .LVU81
 237 00d6 5B00     		lsls	r3, r3, #1
 238 00d8 9BB2     		uxth	r3, r3
 239              		.loc 1 468 48 view .LVU82
 240 00da 2289     		ldrh	r2, [r4, #8]
 241 00dc 1343     		orrs	r3, r3, r2
 242 00de 2381     		strh	r3, [r4, #8]	@ movhi
 243              	.L12:
 469:Lib/ssc/src/sdoserv.c ****         }
 470:Lib/ssc/src/sdoserv.c ****         else
 471:Lib/ssc/src/sdoserv.c ****         {
 472:Lib/ssc/src/sdoserv.c ****             pSdoSegRes->MbxHeader.Length         = ((UINT16) size) + SEGMENT_NORM_HEADER_SIZE;
 473:Lib/ssc/src/sdoserv.c ****         }
 474:Lib/ssc/src/sdoserv.c **** 
 475:Lib/ssc/src/sdoserv.c ****         if ( bSdoSegFollows == TRUE )
 244              		.loc 1 475 9 is_stmt 1 view .LVU83
 245              		.loc 1 475 29 is_stmt 0 view .LVU84
 246 00e0 134B     		ldr	r3, .L17+16
 247 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 248              		.loc 1 475 12 view .LVU85
ARM GAS  /tmp/ccs70NiP.s 			page 14


 249 00e4 012B     		cmp	r3, #1
 250 00e6 0ED1     		bne	.L13
 476:Lib/ssc/src/sdoserv.c ****             // updating the value of send bytes:
 477:Lib/ssc/src/sdoserv.c ****             nSdoSegBytesToHandle += size;
 251              		.loc 1 477 13 is_stmt 1 view .LVU86
 252              		.loc 1 477 34 is_stmt 0 view .LVU87
 253 00e8 0F4A     		ldr	r2, .L17+8
 254 00ea 1368     		ldr	r3, [r2]
 255 00ec 2B44     		add	r3, r3, r5
 256 00ee 1360     		str	r3, [r2]
 257              	.LBE2:
 390:Lib/ssc/src/sdoserv.c ****     TUPLOADSDOSEGRESMBX MBXMEM * pSdoSegRes = (TUPLOADSDOSEGRESMBX MBXMEM *)pSdoInd;
 258              		.loc 1 390 11 view .LVU88
 259 00f0 0020     		movs	r0, #0
 260              	.LBB5:
 261 00f2 14E0     		b	.L2
 262              	.L9:
 460:Lib/ssc/src/sdoserv.c **** 
 263              		.loc 1 460 13 is_stmt 1 view .LVU89
 460:Lib/ssc/src/sdoserv.c **** 
 264              		.loc 1 460 52 is_stmt 0 view .LVU90
 265 00f4 46F00106 		orr	r6, r6, #1
 266 00f8 3343     		orrs	r3, r3, r6
 267 00fa 2381     		strh	r3, [r4, #8]	@ movhi
 268 00fc E4E7     		b	.L10
 269              	.L11:
 472:Lib/ssc/src/sdoserv.c ****         }
 270              		.loc 1 472 13 is_stmt 1 view .LVU91
 472:Lib/ssc/src/sdoserv.c ****         }
 271              		.loc 1 472 53 is_stmt 0 view .LVU92
 272 00fe ABB2     		uxth	r3, r5
 472:Lib/ssc/src/sdoserv.c ****         }
 273              		.loc 1 472 68 view .LVU93
 274 0100 0333     		adds	r3, r3, #3
 472:Lib/ssc/src/sdoserv.c ****         }
 275              		.loc 1 472 50 view .LVU94
 276 0102 2380     		strh	r3, [r4]	@ movhi
 277 0104 ECE7     		b	.L12
 278              	.L13:
 478:Lib/ssc/src/sdoserv.c ****         else
 479:Lib/ssc/src/sdoserv.c ****         {
 480:Lib/ssc/src/sdoserv.c ****             FREEMEM( (UINT16 VARMEM *) pSdoSegData );
 279              		.loc 1 480 13 is_stmt 1 view .LVU95
 280 0106 0B4C     		ldr	r4, .L17+20
 281              	.LVL17:
 282              		.loc 1 480 13 is_stmt 0 view .LVU96
 283 0108 2068     		ldr	r0, [r4]
 284 010a FFF7FEFF 		bl	free
 285              	.LVL18:
 481:Lib/ssc/src/sdoserv.c ****             pSdoSegData = NULL;
 286              		.loc 1 481 13 is_stmt 1 view .LVU97
 287              		.loc 1 481 25 is_stmt 0 view .LVU98
 288 010e 0020     		movs	r0, #0
 289 0110 2060     		str	r0, [r4]
 482:Lib/ssc/src/sdoserv.c ****             nSdoSegBytesToHandle = 0;
 290              		.loc 1 482 13 is_stmt 1 view .LVU99
 291              		.loc 1 482 34 is_stmt 0 view .LVU100
ARM GAS  /tmp/ccs70NiP.s 			page 15


 292 0112 054B     		ldr	r3, .L17+8
 293 0114 1860     		str	r0, [r3]
 483:Lib/ssc/src/sdoserv.c ****             nSdoSegService    = 0;
 294              		.loc 1 483 13 is_stmt 1 view .LVU101
 295              		.loc 1 483 31 is_stmt 0 view .LVU102
 296 0116 084B     		ldr	r3, .L17+24
 297 0118 1870     		strb	r0, [r3]
 298 011a 00E0     		b	.L2
 299              	.LVL19:
 300              	.L14:
 301              		.loc 1 483 31 view .LVU103
 302              	.LBE5:
 396:Lib/ssc/src/sdoserv.c ****     }
 303              		.loc 1 396 15 view .LVU104
 304 011c 0120     		movs	r0, #1
 305              	.LVL20:
 306              	.L2:
 484:Lib/ssc/src/sdoserv.c ****         }
 485:Lib/ssc/src/sdoserv.c ****     }
 486:Lib/ssc/src/sdoserv.c **** 
 487:Lib/ssc/src/sdoserv.c ****     return abort;
 307              		.loc 1 487 5 is_stmt 1 view .LVU105
 488:Lib/ssc/src/sdoserv.c **** }
 308              		.loc 1 488 1 is_stmt 0 view .LVU106
 309 011e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 310              	.L18:
 311              		.align	2
 312              	.L17:
 313 0120 00000000 		.word	.LANCHOR0
 314 0124 00000000 		.word	u16SendMbxSize
 315 0128 00000000 		.word	.LANCHOR1
 316 012c 00000000 		.word	.LANCHOR2
 317 0130 00000000 		.word	.LANCHOR3
 318 0134 00000000 		.word	.LANCHOR4
 319 0138 00000000 		.word	.LANCHOR5
 320              		.cfi_endproc
 321              	.LFE124:
 323              		.section	.text.SdoDownloadSegmentInd,"ax",%progbits
 324              		.align	1
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	SdoDownloadSegmentInd:
 330              	.LVL21:
 331              	.LFB123:
 198:Lib/ssc/src/sdoserv.c ****     UINT8 abort = 0;
 332              		.loc 1 198 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 198:Lib/ssc/src/sdoserv.c ****     UINT8 abort = 0;
 336              		.loc 1 198 1 is_stmt 0 view .LVU108
 337 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 338              		.cfi_def_cfa_offset 20
 339              		.cfi_offset 4, -20
 340              		.cfi_offset 5, -16
 341              		.cfi_offset 6, -12
ARM GAS  /tmp/ccs70NiP.s 			page 16


 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 83B0     		sub	sp, sp, #12
 345              		.cfi_def_cfa_offset 32
 199:Lib/ssc/src/sdoserv.c ****     UINT32 bytesToSave = 0;
 346              		.loc 1 199 5 is_stmt 1 view .LVU109
 347              	.LVL22:
 200:Lib/ssc/src/sdoserv.c **** 
 348              		.loc 1 200 5 view .LVU110
 202:Lib/ssc/src/sdoserv.c ****     {
 349              		.loc 1 202 5 view .LVU111
 202:Lib/ssc/src/sdoserv.c ****     {
 350              		.loc 1 202 29 is_stmt 0 view .LVU112
 351 0004 0389     		ldrh	r3, [r0, #8]
 202:Lib/ssc/src/sdoserv.c ****     {
 352              		.loc 1 202 8 view .LVU113
 353 0006 03F01001 		and	r1, r3, #16
 354 000a 814A     		ldr	r2, .L48
 355 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 356 000e 9142     		cmp	r1, r2
 357 0010 00F0E880 		beq	.L36
 358 0014 0446     		mov	r4, r0
 359              	.LBB6:
 210:Lib/ssc/src/sdoserv.c ****         /* the new toggle bit is stored in bSdoSegLastToggle */
 360              		.loc 1 210 9 is_stmt 1 view .LVU114
 210:Lib/ssc/src/sdoserv.c ****         /* the new toggle bit is stored in bSdoSegLastToggle */
 361              		.loc 1 210 65 is_stmt 0 view .LVU115
 362 0016 7F4A     		ldr	r2, .L48+4
 363 0018 1288     		ldrh	r2, [r2]
 210:Lib/ssc/src/sdoserv.c ****         /* the new toggle bit is stored in bSdoSegLastToggle */
 364              		.loc 1 210 16 view .LVU116
 365 001a 093A     		subs	r2, r2, #9
 366 001c 91B2     		uxth	r1, r2
 367              	.LVL23:
 212:Lib/ssc/src/sdoserv.c **** 
 368              		.loc 1 212 9 is_stmt 1 view .LVU117
 212:Lib/ssc/src/sdoserv.c **** 
 369              		.loc 1 212 58 is_stmt 0 view .LVU118
 370 001e 03F01002 		and	r2, r3, #16
 212:Lib/ssc/src/sdoserv.c **** 
 371              		.loc 1 212 27 view .LVU119
 372 0022 7B48     		ldr	r0, .L48
 373              	.LVL24:
 212:Lib/ssc/src/sdoserv.c **** 
 374              		.loc 1 212 27 view .LVU120
 375 0024 0270     		strb	r2, [r0]
 216:Lib/ssc/src/sdoserv.c ****         {
 376              		.loc 1 216 9 is_stmt 1 view .LVU121
 216:Lib/ssc/src/sdoserv.c ****         {
 377              		.loc 1 216 14 is_stmt 0 view .LVU122
 378 0026 7C4A     		ldr	r2, .L48+8
 379 0028 1068     		ldr	r0, [r2]
 216:Lib/ssc/src/sdoserv.c ****         {
 380              		.loc 1 216 12 view .LVU123
 381 002a 0028     		cmp	r0, #0
 382 002c 00F0EE80 		beq	.L37
 220:Lib/ssc/src/sdoserv.c **** 
ARM GAS  /tmp/ccs70NiP.s 			page 17


 383              		.loc 1 220 13 is_stmt 1 view .LVU124
 220:Lib/ssc/src/sdoserv.c **** 
 384              		.loc 1 220 47 is_stmt 0 view .LVU125
 385 0030 7A4A     		ldr	r2, .L48+12
 386 0032 1568     		ldr	r5, [r2]
 387 0034 7A4A     		ldr	r2, .L48+16
 388 0036 1268     		ldr	r2, [r2]
 220:Lib/ssc/src/sdoserv.c **** 
 389              		.loc 1 220 25 view .LVU126
 390 0038 AD1A     		subs	r5, r5, r2
 391              	.LVL25:
 222:Lib/ssc/src/sdoserv.c ****             {
 392              		.loc 1 222 13 is_stmt 1 view .LVU127
 222:Lib/ssc/src/sdoserv.c ****             {
 393              		.loc 1 222 16 is_stmt 0 view .LVU128
 394 003a 13F0010F 		tst	r3, #1
 395 003e 17D0     		beq	.L21
 226:Lib/ssc/src/sdoserv.c ****                 {
 396              		.loc 1 226 17 is_stmt 1 view .LVU129
 226:Lib/ssc/src/sdoserv.c ****                 {
 397              		.loc 1 226 20 is_stmt 0 view .LVU130
 398 0040 A942     		cmp	r1, r5
 399 0042 C0F0A980 		bcc	.L38
 400              	.LBB7:
 229:Lib/ssc/src/sdoserv.c **** 
 401              		.loc 1 229 21 is_stmt 1 view .LVU131
 229:Lib/ssc/src/sdoserv.c **** 
 402              		.loc 1 229 28 is_stmt 0 view .LVU132
 403 0046 2188     		ldrh	r1, [r4]
 404              	.LVL26:
 235:Lib/ssc/src/sdoserv.c ****                          &&( bytesToSave == ((UINT16) (MIN_SEGMENTED_DATA - ((pSdoInd->SdoHeader.Se
 405              		.loc 1 235 21 is_stmt 1 view .LVU133
 235:Lib/ssc/src/sdoserv.c ****                          &&( bytesToSave == ((UINT16) (MIN_SEGMENTED_DATA - ((pSdoInd->SdoHeader.Se
 406              		.loc 1 235 59 is_stmt 0 view .LVU134
 407 0048 0339     		subs	r1, r1, #3
 408              	.LVL27:
 235:Lib/ssc/src/sdoserv.c ****                          &&( bytesToSave == ((UINT16) (MIN_SEGMENTED_DATA - ((pSdoInd->SdoHeader.Se
 409              		.loc 1 235 24 view .LVU135
 410 004a A942     		cmp	r1, r5
 411 004c 05D3     		bcc	.L23
 236:Lib/ssc/src/sdoserv.c ****                           )
 412              		.loc 1 236 46 view .LVU136
 413 004e 6FEA6306 		mvn	r6, r3, asr #1
 414 0052 06F00706 		and	r6, r6, #7
 236:Lib/ssc/src/sdoserv.c ****                           )
 415              		.loc 1 236 26 view .LVU137
 416 0056 AE42     		cmp	r6, r5
 417 0058 06D0     		beq	.L24
 418              	.L23:
 238:Lib/ssc/src/sdoserv.c ****                         && (bytesToSave == (mbxSize - SEGMENT_NORM_HEADER_SIZE))
 419              		.loc 1 238 25 view .LVU138
 420 005a 072D     		cmp	r5, #7
 421 005c 40F2B680 		bls	.L39
 239:Lib/ssc/src/sdoserv.c ****                         ) )
 422              		.loc 1 239 25 view .LVU139
 423 0060 A942     		cmp	r1, r5
 424 0062 01D0     		beq	.L24
ARM GAS  /tmp/ccs70NiP.s 			page 18


 247:Lib/ssc/src/sdoserv.c ****                 }
 425              		.loc 1 247 31 view .LVU140
 426 0064 0E26     		movs	r6, #14
 427 0066 98E0     		b	.L22
 428              	.L24:
 244:Lib/ssc/src/sdoserv.c ****                     }
 429              		.loc 1 244 25 is_stmt 1 view .LVU141
 244:Lib/ssc/src/sdoserv.c ****                     }
 430              		.loc 1 244 40 is_stmt 0 view .LVU142
 431 0068 6E49     		ldr	r1, .L48+20
 432              	.LVL28:
 244:Lib/ssc/src/sdoserv.c ****                     }
 433              		.loc 1 244 40 view .LVU143
 434 006a 0026     		movs	r6, #0
 435 006c 0E70     		strb	r6, [r1]
 436              	.LVL29:
 244:Lib/ssc/src/sdoserv.c ****                     }
 437              		.loc 1 244 40 view .LVU144
 438              	.LBE7:
 265:Lib/ssc/src/sdoserv.c ****             {
 439              		.loc 1 265 13 is_stmt 1 view .LVU145
 440 006e 08E0     		b	.L25
 441              	.LVL30:
 442              	.L21:
 255:Lib/ssc/src/sdoserv.c ****                 /* we have to check if we expect less bytes than the maximum size which can be send
 443              		.loc 1 255 17 view .LVU146
 255:Lib/ssc/src/sdoserv.c ****                 /* we have to check if we expect less bytes than the maximum size which can be send
 444              		.loc 1 255 32 is_stmt 0 view .LVU147
 445 0070 6C4E     		ldr	r6, .L48+20
 446 0072 4FF0010C 		mov	ip, #1
 447 0076 86F800C0 		strb	ip, [r6]
 258:Lib/ssc/src/sdoserv.c ****                     abort = ABORTIDX_PARAM_LENGTH_ERROR;
 448              		.loc 1 258 17 is_stmt 1 view .LVU148
 258:Lib/ssc/src/sdoserv.c ****                     abort = ABORTIDX_PARAM_LENGTH_ERROR;
 449              		.loc 1 258 20 is_stmt 0 view .LVU149
 450 007a A942     		cmp	r1, r5
 451 007c 80F0A880 		bcs	.L41
 262:Lib/ssc/src/sdoserv.c ****             }
 452              		.loc 1 262 33 view .LVU150
 453 0080 0D46     		mov	r5, r1
 454              	.LVL31:
 455              	.L25:
 456              	.LBB8:
 268:Lib/ssc/src/sdoserv.c **** 
 457              		.loc 1 268 17 is_stmt 1 view .LVU151
 270:Lib/ssc/src/sdoserv.c ****                 {	
 458              		.loc 1 270 17 view .LVU152
 270:Lib/ssc/src/sdoserv.c ****                 {	
 459              		.loc 1 270 20 is_stmt 0 view .LVU153
 460 0082 12F0010F 		tst	r2, #1
 461 0086 21D1     		bne	.L44
 282:Lib/ssc/src/sdoserv.c ****                     
 462              		.loc 1 282 21 is_stmt 1 view .LVU154
 282:Lib/ssc/src/sdoserv.c ****                     
 463              		.loc 1 282 157 is_stmt 0 view .LVU155
 464 0088 6189     		ldrh	r1, [r4, #10]
 282:Lib/ssc/src/sdoserv.c ****                     
ARM GAS  /tmp/ccs70NiP.s 			page 19


 465              		.loc 1 282 56 view .LVU156
 466 008a 5208     		lsrs	r2, r2, #1
 282:Lib/ssc/src/sdoserv.c ****                     
 467              		.loc 1 282 130 view .LVU157
 468 008c 1B0A     		lsrs	r3, r3, #8
 469 008e 43EA0123 		orr	r3, r3, r1, lsl #8
 282:Lib/ssc/src/sdoserv.c ****                     
 470              		.loc 1 282 63 view .LVU158
 471 0092 20F81230 		strh	r3, [r0, r2, lsl #1]	@ movhi
 472              	.LVL32:
 285:Lib/ssc/src/sdoserv.c ****                     {
 473              		.loc 1 285 21 is_stmt 1 view .LVU159
 285:Lib/ssc/src/sdoserv.c ****                     {
 474              		.loc 1 285 28 is_stmt 0 view .LVU160
 475 0096 0123     		movs	r3, #1
 476              	.LVL33:
 477              	.L28:
 285:Lib/ssc/src/sdoserv.c ****                     {
 478              		.loc 1 285 33 is_stmt 1 discriminator 1 view .LVU161
 285:Lib/ssc/src/sdoserv.c ****                     {
 479              		.loc 1 285 50 is_stmt 0 discriminator 1 view .LVU162
 480 0098 6A1C     		adds	r2, r5, #1
 285:Lib/ssc/src/sdoserv.c ****                     {
 481              		.loc 1 285 21 discriminator 1 view .LVU163
 482 009a B3EB520F 		cmp	r3, r2, lsr #1
 483 009e 33D2     		bcs	.L27
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 484              		.loc 1 287 25 is_stmt 1 discriminator 3 view .LVU164
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 485              		.loc 1 287 97 is_stmt 0 discriminator 3 view .LVU165
 486 00a0 DA1C     		adds	r2, r3, #3
 487 00a2 04EB4202 		add	r2, r4, r2, lsl #1
 488 00a6 5288     		ldrh	r2, [r2, #2]
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 489              		.loc 1 287 167 discriminator 3 view .LVU166
 490 00a8 191D     		adds	r1, r3, #4
 491 00aa 04EB4101 		add	r1, r4, r1, lsl #1
 492 00ae 4E88     		ldrh	r6, [r1, #2]
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 493              		.loc 1 287 59 discriminator 3 view .LVU167
 494 00b0 5B49     		ldr	r1, .L48+16
 495 00b2 0968     		ldr	r1, [r1]
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 496              		.loc 1 287 65 discriminator 3 view .LVU168
 497 00b4 03EB5101 		add	r1, r3, r1, lsr #1
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 498              		.loc 1 287 36 discriminator 3 view .LVU169
 499 00b8 5748     		ldr	r0, .L48+8
 500 00ba 0068     		ldr	r0, [r0]
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 501              		.loc 1 287 140 discriminator 3 view .LVU170
 502 00bc 120A     		lsrs	r2, r2, #8
 503 00be 42EA0622 		orr	r2, r2, r6, lsl #8
 287:Lib/ssc/src/sdoserv.c ****                             // (If bytesToSave is odd, one byte too much is copied. But, that is no
 504              		.loc 1 287 70 discriminator 3 view .LVU171
 505 00c2 20F81120 		strh	r2, [r0, r1, lsl #1]	@ movhi
 285:Lib/ssc/src/sdoserv.c ****                     {
ARM GAS  /tmp/ccs70NiP.s 			page 20


 506              		.loc 1 285 63 is_stmt 1 discriminator 3 view .LVU172
 285:Lib/ssc/src/sdoserv.c ****                     {
 507              		.loc 1 285 64 is_stmt 0 discriminator 3 view .LVU173
 508 00c6 0133     		adds	r3, r3, #1
 509              	.LVL34:
 285:Lib/ssc/src/sdoserv.c ****                     {
 510              		.loc 1 285 64 discriminator 3 view .LVU174
 511 00c8 9BB2     		uxth	r3, r3
 512              	.LVL35:
 285:Lib/ssc/src/sdoserv.c ****                     {
 513              		.loc 1 285 64 discriminator 3 view .LVU175
 514 00ca E5E7     		b	.L28
 515              	.LVL36:
 516              	.L44:
 274:Lib/ssc/src/sdoserv.c ****                     pSdoSegData[(nSdoSegBytesToHandle >> 1)] |= (pSdoInd->SdoHeader.SegHeader & SEG
 517              		.loc 1 274 21 is_stmt 1 view .LVU176
 274:Lib/ssc/src/sdoserv.c ****                     pSdoSegData[(nSdoSegBytesToHandle >> 1)] |= (pSdoInd->SdoHeader.SegHeader & SEG
 518              		.loc 1 274 62 is_stmt 0 view .LVU177
 519 00cc 5208     		lsrs	r2, r2, #1
 520 00ce 10F81230 		ldrb	r3, [r0, r2, lsl #1]	@ zero_extendqisi2
 521 00d2 20F81230 		strh	r3, [r0, r2, lsl #1]	@ movhi
 522              	.LVL37:
 275:Lib/ssc/src/sdoserv.c ****                     // Copy Data1 - DataN
 523              		.loc 1 275 21 is_stmt 1 view .LVU178
 275:Lib/ssc/src/sdoserv.c ****                     // Copy Data1 - DataN
 524              		.loc 1 275 62 is_stmt 0 view .LVU179
 525 00d6 5048     		ldr	r0, .L48+8
 526 00d8 5149     		ldr	r1, .L48+16
 527 00da 0A68     		ldr	r2, [r1]
 528 00dc 5208     		lsrs	r2, r2, #1
 529 00de 0668     		ldr	r6, [r0]
 275:Lib/ssc/src/sdoserv.c ****                     // Copy Data1 - DataN
 530              		.loc 1 275 84 view .LVU180
 531 00e0 B4F90830 		ldrsh	r3, [r4, #8]
 275:Lib/ssc/src/sdoserv.c ****                     // Copy Data1 - DataN
 532              		.loc 1 275 95 view .LVU181
 533 00e4 23F0FF03 		bic	r3, r3, #255
 275:Lib/ssc/src/sdoserv.c ****                     // Copy Data1 - DataN
 534              		.loc 1 275 62 view .LVU182
 535 00e8 36F81270 		ldrh	r7, [r6, r2, lsl #1]
 536 00ec 3B43     		orrs	r3, r3, r7
 537 00ee 26F81230 		strh	r3, [r6, r2, lsl #1]	@ movhi
 277:Lib/ssc/src/sdoserv.c ****                 }
 538              		.loc 1 277 21 is_stmt 1 view .LVU183
 539 00f2 0068     		ldr	r0, [r0]
 277:Lib/ssc/src/sdoserv.c ****                 }
 540              		.loc 1 277 43 is_stmt 0 view .LVU184
 541 00f4 0B68     		ldr	r3, [r1]
 277:Lib/ssc/src/sdoserv.c ****                 }
 542              		.loc 1 277 66 view .LVU185
 543 00f6 5B08     		lsrs	r3, r3, #1
 277:Lib/ssc/src/sdoserv.c ****                 }
 544              		.loc 1 277 43 view .LVU186
 545 00f8 0133     		adds	r3, r3, #1
 277:Lib/ssc/src/sdoserv.c ****                 }
 546              		.loc 1 277 21 view .LVU187
 547 00fa 6A1E     		subs	r2, r5, #1
ARM GAS  /tmp/ccs70NiP.s 			page 21


 548 00fc 04F10A01 		add	r1, r4, #10
 549 0100 00EB4300 		add	r0, r0, r3, lsl #1
 550 0104 FFF7FEFF 		bl	memcpy
 551              	.LVL38:
 552              	.L27:
 292:Lib/ssc/src/sdoserv.c ****                 {
 553              		.loc 1 292 17 is_stmt 1 view .LVU188
 292:Lib/ssc/src/sdoserv.c ****                 {
 554              		.loc 1 292 37 is_stmt 0 view .LVU189
 555 0108 464B     		ldr	r3, .L48+20
 556 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292:Lib/ssc/src/sdoserv.c ****                 {
 557              		.loc 1 292 20 view .LVU190
 558 010c 0BB1     		cbz	r3, .L45
 559 010e 0026     		movs	r6, #0
 560 0110 43E0     		b	.L22
 561              	.L45:
 295:Lib/ssc/src/sdoserv.c ****                     if ( abort == ABORTIDX_WORKING )
 562              		.loc 1 295 21 is_stmt 1 view .LVU191
 295:Lib/ssc/src/sdoserv.c ****                     if ( abort == ABORTIDX_WORKING )
 563              		.loc 1 295 29 is_stmt 0 view .LVU192
 564 0112 454B     		ldr	r3, .L48+24
 565 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566 0116 0193     		str	r3, [sp, #4]
 567 0118 3F4B     		ldr	r3, .L48+8
 568 011a 1B68     		ldr	r3, [r3]
 569 011c 0093     		str	r3, [sp]
 570 011e 434B     		ldr	r3, .L48+28
 571 0120 1B68     		ldr	r3, [r3]
 572 0122 3E4A     		ldr	r2, .L48+12
 573 0124 1268     		ldr	r2, [r2]
 574 0126 4249     		ldr	r1, .L48+32
 575 0128 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 576 012a 4248     		ldr	r0, .L48+36
 577 012c 0088     		ldrh	r0, [r0]
 578 012e FFF7FEFF 		bl	OBJ_Write
 579              	.LVL39:
 580 0132 0646     		mov	r6, r0
 581              	.LVL40:
 296:Lib/ssc/src/sdoserv.c ****                     {
 582              		.loc 1 296 21 is_stmt 1 view .LVU193
 296:Lib/ssc/src/sdoserv.c ****                     {
 583              		.loc 1 296 24 is_stmt 0 view .LVU194
 584 0134 FF28     		cmp	r0, #255
 585 0136 06D0     		beq	.L46
 320:Lib/ssc/src/sdoserv.c ****                         pSdoSegData = NULL;
 586              		.loc 1 320 25 is_stmt 1 view .LVU195
 587 0138 374F     		ldr	r7, .L48+8
 588 013a 3868     		ldr	r0, [r7]
 589              	.LVL41:
 320:Lib/ssc/src/sdoserv.c ****                         pSdoSegData = NULL;
 590              		.loc 1 320 25 is_stmt 0 view .LVU196
 591 013c FFF7FEFF 		bl	free
 592              	.LVL42:
 321:Lib/ssc/src/sdoserv.c ****                     }
 593              		.loc 1 321 25 is_stmt 1 view .LVU197
 321:Lib/ssc/src/sdoserv.c ****                     }
ARM GAS  /tmp/ccs70NiP.s 			page 22


 594              		.loc 1 321 37 is_stmt 0 view .LVU198
 595 0140 0023     		movs	r3, #0
 596 0142 3B60     		str	r3, [r7]
 597 0144 29E0     		b	.L22
 598              	.LVL43:
 599              	.L46:
 299:Lib/ssc/src/sdoserv.c ****                         bStoreCompleteAccess = bSdoSegAccess;
 600              		.loc 1 299 25 is_stmt 1 view .LVU199
 299:Lib/ssc/src/sdoserv.c ****                         bStoreCompleteAccess = bSdoSegAccess;
 601              		.loc 1 299 38 is_stmt 0 view .LVU200
 602 0146 3C4B     		ldr	r3, .L48+40
 603 0148 0222     		movs	r2, #2
 604 014a 1A70     		strb	r2, [r3]
 300:Lib/ssc/src/sdoserv.c ****                         u8StoreSubindex = nSdoSegSubindex;
 605              		.loc 1 300 25 is_stmt 1 view .LVU201
 300:Lib/ssc/src/sdoserv.c ****                         u8StoreSubindex = nSdoSegSubindex;
 606              		.loc 1 300 46 is_stmt 0 view .LVU202
 607 014c 364B     		ldr	r3, .L48+24
 608 014e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 609 0150 3A4B     		ldr	r3, .L48+44
 610 0152 1A70     		strb	r2, [r3]
 301:Lib/ssc/src/sdoserv.c ****                         u16StoreIndex = nSdoSegIndex;
 611              		.loc 1 301 25 is_stmt 1 view .LVU203
 301:Lib/ssc/src/sdoserv.c ****                         u16StoreIndex = nSdoSegIndex;
 612              		.loc 1 301 41 is_stmt 0 view .LVU204
 613 0154 364B     		ldr	r3, .L48+32
 614 0156 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 615 0158 394B     		ldr	r3, .L48+48
 616 015a 1A70     		strb	r2, [r3]
 302:Lib/ssc/src/sdoserv.c ****                         u32StoreDataSize = nSdoSegCompleteSize;
 617              		.loc 1 302 25 is_stmt 1 view .LVU205
 302:Lib/ssc/src/sdoserv.c ****                         u32StoreDataSize = nSdoSegCompleteSize;
 618              		.loc 1 302 39 is_stmt 0 view .LVU206
 619 015c 354B     		ldr	r3, .L48+36
 620 015e 1A88     		ldrh	r2, [r3]
 621 0160 384B     		ldr	r3, .L48+52
 622 0162 1A80     		strh	r2, [r3]	@ movhi
 303:Lib/ssc/src/sdoserv.c ****                         pStoreData = pSdoSegData;
 623              		.loc 1 303 25 is_stmt 1 view .LVU207
 303:Lib/ssc/src/sdoserv.c ****                         pStoreData = pSdoSegData;
 624              		.loc 1 303 42 is_stmt 0 view .LVU208
 625 0164 2D4B     		ldr	r3, .L48+12
 626 0166 1A68     		ldr	r2, [r3]
 627 0168 374B     		ldr	r3, .L48+56
 628 016a 1A60     		str	r2, [r3]
 304:Lib/ssc/src/sdoserv.c **** 
 629              		.loc 1 304 25 is_stmt 1 view .LVU209
 304:Lib/ssc/src/sdoserv.c **** 
 630              		.loc 1 304 36 is_stmt 0 view .LVU210
 631 016c 2A4B     		ldr	r3, .L48+8
 632 016e 1A68     		ldr	r2, [r3]
 633 0170 364B     		ldr	r3, .L48+60
 634 0172 1A60     		str	r2, [r3]
 306:Lib/ssc/src/sdoserv.c **** 
 635              		.loc 1 306 25 is_stmt 1 view .LVU211
 306:Lib/ssc/src/sdoserv.c **** 
 636              		.loc 1 306 55 is_stmt 0 view .LVU212
ARM GAS  /tmp/ccs70NiP.s 			page 23


 637 0174 2D4B     		ldr	r3, .L48+28
 638 0176 1B68     		ldr	r3, [r3]
 639 0178 1A6A     		ldr	r2, [r3, #32]
 306:Lib/ssc/src/sdoserv.c **** 
 640              		.loc 1 306 38 view .LVU213
 641 017a 354B     		ldr	r3, .L48+64
 642 017c 1A60     		str	r2, [r3]
 308:Lib/ssc/src/sdoserv.c ****                         pSdoResStored = (TINITSDOMBX MBXMEM *) pSdoInd;
 643              		.loc 1 308 25 is_stmt 1 view .LVU214
 308:Lib/ssc/src/sdoserv.c ****                         pSdoResStored = (TINITSDOMBX MBXMEM *) pSdoInd;
 644              		.loc 1 308 36 is_stmt 0 view .LVU215
 645 017e 354B     		ldr	r3, .L48+68
 646 0180 0122     		movs	r2, #1
 647 0182 1A70     		strb	r2, [r3]
 309:Lib/ssc/src/sdoserv.c **** 
 648              		.loc 1 309 25 is_stmt 1 view .LVU216
 309:Lib/ssc/src/sdoserv.c **** 
 649              		.loc 1 309 39 is_stmt 0 view .LVU217
 650 0184 344B     		ldr	r3, .L48+72
 651 0186 1C60     		str	r4, [r3]
 311:Lib/ssc/src/sdoserv.c ****                         nSdoSegService    = 0;
 652              		.loc 1 311 25 is_stmt 1 view .LVU218
 311:Lib/ssc/src/sdoserv.c ****                         nSdoSegService    = 0;
 653              		.loc 1 311 40 is_stmt 0 view .LVU219
 654 0188 0023     		movs	r3, #0
 655 018a 264A     		ldr	r2, .L48+20
 656 018c 1370     		strb	r3, [r2]
 312:Lib/ssc/src/sdoserv.c ****                         nSdoSegBytesToHandle = 0;
 657              		.loc 1 312 25 is_stmt 1 view .LVU220
 312:Lib/ssc/src/sdoserv.c ****                         nSdoSegBytesToHandle = 0;
 658              		.loc 1 312 43 is_stmt 0 view .LVU221
 659 018e 334A     		ldr	r2, .L48+76
 660 0190 1370     		strb	r3, [r2]
 313:Lib/ssc/src/sdoserv.c **** 
 661              		.loc 1 313 25 is_stmt 1 view .LVU222
 313:Lib/ssc/src/sdoserv.c **** 
 662              		.loc 1 313 46 is_stmt 0 view .LVU223
 663 0192 234A     		ldr	r2, .L48+16
 664 0194 1360     		str	r3, [r2]
 315:Lib/ssc/src/sdoserv.c ****                     }
 665              		.loc 1 315 25 is_stmt 1 view .LVU224
 315:Lib/ssc/src/sdoserv.c ****                     }
 666              		.loc 1 315 32 is_stmt 0 view .LVU225
 667 0196 36E0     		b	.L31
 668              	.LVL44:
 669              	.L38:
 315:Lib/ssc/src/sdoserv.c ****                     }
 670              		.loc 1 315 32 view .LVU226
 671              	.LBE8:
 250:Lib/ssc/src/sdoserv.c ****             }
 672              		.loc 1 250 27 view .LVU227
 673 0198 0E26     		movs	r6, #14
 674              	.LVL45:
 675              	.L22:
 250:Lib/ssc/src/sdoserv.c ****             }
 676              		.loc 1 250 27 view .LVU228
 677              	.LBE6:
ARM GAS  /tmp/ccs70NiP.s 			page 24


 332:Lib/ssc/src/sdoserv.c ****     {
 678              		.loc 1 332 5 is_stmt 1 view .LVU229
 332:Lib/ssc/src/sdoserv.c ****     {
 679              		.loc 1 332 8 is_stmt 0 view .LVU230
 680 019a 26BB     		cbnz	r6, .L20
 335:Lib/ssc/src/sdoserv.c ****         pSdoInd->CoeHeader &= ~COEHEADER_COESERVICEMASK;
 681              		.loc 1 335 9 is_stmt 1 view .LVU231
 335:Lib/ssc/src/sdoserv.c ****         pSdoInd->CoeHeader &= ~COEHEADER_COESERVICEMASK;
 682              		.loc 1 335 35 is_stmt 0 view .LVU232
 683 019c 0A23     		movs	r3, #10
 684 019e 2380     		strh	r3, [r4]	@ movhi
 336:Lib/ssc/src/sdoserv.c ****         pSdoInd->CoeHeader |= ((UINT16)COESERVICE_SDORESPONSE) << COEHEADER_COESERVICESHIFT;
 685              		.loc 1 336 9 is_stmt 1 view .LVU233
 336:Lib/ssc/src/sdoserv.c ****         pSdoInd->CoeHeader |= ((UINT16)COESERVICE_SDORESPONSE) << COEHEADER_COESERVICESHIFT;
 686              		.loc 1 336 28 is_stmt 0 view .LVU234
 687 01a0 E388     		ldrh	r3, [r4, #6]
 688 01a2 C3F30B03 		ubfx	r3, r3, #0, #12
 689 01a6 E380     		strh	r3, [r4, #6]	@ movhi
 337:Lib/ssc/src/sdoserv.c ****         /* the SDO Download Segment header depends if it was the last segment or not */
 690              		.loc 1 337 9 is_stmt 1 view .LVU235
 337:Lib/ssc/src/sdoserv.c ****         /* the SDO Download Segment header depends if it was the last segment or not */
 691              		.loc 1 337 28 is_stmt 0 view .LVU236
 692 01a8 43F44053 		orr	r3, r3, #12288
 693 01ac E380     		strh	r3, [r4, #6]	@ movhi
 339:Lib/ssc/src/sdoserv.c ****         {
 694              		.loc 1 339 9 is_stmt 1 view .LVU237
 339:Lib/ssc/src/sdoserv.c ****         {
 695              		.loc 1 339 14 is_stmt 0 view .LVU238
 696 01ae 184B     		ldr	r3, .L48
 697 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 339:Lib/ssc/src/sdoserv.c ****         {
 698              		.loc 1 339 12 view .LVU239
 699 01b2 7BB1     		cbz	r3, .L32
 341:Lib/ssc/src/sdoserv.c ****         }
 700              		.loc 1 341 12 is_stmt 1 view .LVU240
 341:Lib/ssc/src/sdoserv.c ****         }
 701              		.loc 1 341 48 is_stmt 0 view .LVU241
 702 01b4 3023     		movs	r3, #48
 703 01b6 2381     		strh	r3, [r4, #8]	@ movhi
 704              	.L33:
 346:Lib/ssc/src/sdoserv.c ****         {
 705              		.loc 1 346 9 is_stmt 1 view .LVU242
 346:Lib/ssc/src/sdoserv.c ****         {
 706              		.loc 1 346 29 is_stmt 0 view .LVU243
 707 01b8 1A4B     		ldr	r3, .L48+20
 708 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346:Lib/ssc/src/sdoserv.c ****         {
 709              		.loc 1 346 12 view .LVU244
 710 01bc 012B     		cmp	r3, #1
 711 01be 0CD0     		beq	.L47
 354:Lib/ssc/src/sdoserv.c ****             nSdoSegService    = 0;
 712              		.loc 1 354 13 is_stmt 1 view .LVU245
 354:Lib/ssc/src/sdoserv.c ****             nSdoSegService    = 0;
 713              		.loc 1 354 34 is_stmt 0 view .LVU246
 714 01c0 0023     		movs	r3, #0
 715 01c2 174A     		ldr	r2, .L48+16
 716 01c4 1360     		str	r3, [r2]
ARM GAS  /tmp/ccs70NiP.s 			page 25


 355:Lib/ssc/src/sdoserv.c ****         }
 717              		.loc 1 355 13 is_stmt 1 view .LVU247
 355:Lib/ssc/src/sdoserv.c ****         }
 718              		.loc 1 355 31 is_stmt 0 view .LVU248
 719 01c6 254A     		ldr	r2, .L48+76
 720 01c8 1370     		strb	r3, [r2]
 721 01ca 1CE0     		b	.L31
 722              	.LVL46:
 723              	.L39:
 724              	.LBB10:
 725              	.LBB9:
 247:Lib/ssc/src/sdoserv.c ****                 }
 726              		.loc 1 247 31 view .LVU249
 727 01cc 0E26     		movs	r6, #14
 728 01ce E4E7     		b	.L22
 729              	.LVL47:
 730              	.L41:
 247:Lib/ssc/src/sdoserv.c ****                 }
 731              		.loc 1 247 31 view .LVU250
 732              	.LBE9:
 259:Lib/ssc/src/sdoserv.c ****                 else
 733              		.loc 1 259 27 view .LVU251
 734 01d0 0E26     		movs	r6, #14
 735 01d2 E2E7     		b	.L22
 736              	.LVL48:
 737              	.L32:
 259:Lib/ssc/src/sdoserv.c ****                 else
 738              		.loc 1 259 27 view .LVU252
 739              	.LBE10:
 344:Lib/ssc/src/sdoserv.c **** 
 740              		.loc 1 344 12 is_stmt 1 view .LVU253
 344:Lib/ssc/src/sdoserv.c **** 
 741              		.loc 1 344 48 is_stmt 0 view .LVU254
 742 01d4 2023     		movs	r3, #32
 743 01d6 2381     		strh	r3, [r4, #8]	@ movhi
 744 01d8 EEE7     		b	.L33
 745              	.L47:
 349:Lib/ssc/src/sdoserv.c ****         }
 746              		.loc 1 349 13 is_stmt 1 view .LVU255
 349:Lib/ssc/src/sdoserv.c ****         }
 747              		.loc 1 349 34 is_stmt 0 view .LVU256
 748 01da 114A     		ldr	r2, .L48+16
 749 01dc 1368     		ldr	r3, [r2]
 750 01de 2B44     		add	r3, r3, r5
 751 01e0 1360     		str	r3, [r2]
 752 01e2 10E0     		b	.L31
 753              	.LVL49:
 754              	.L36:
 205:Lib/ssc/src/sdoserv.c ****     }
 755              		.loc 1 205 15 view .LVU257
 756 01e4 0126     		movs	r6, #1
 757              	.LVL50:
 758              	.L20:
 361:Lib/ssc/src/sdoserv.c ****         nSdoSegService    = 0;
 759              		.loc 1 361 9 is_stmt 1 view .LVU258
 361:Lib/ssc/src/sdoserv.c ****         nSdoSegService    = 0;
 760              		.loc 1 361 24 is_stmt 0 view .LVU259
ARM GAS  /tmp/ccs70NiP.s 			page 26


 761 01e6 0023     		movs	r3, #0
 762 01e8 0E4A     		ldr	r2, .L48+20
 763 01ea 1370     		strb	r3, [r2]
 362:Lib/ssc/src/sdoserv.c ****         if (pSdoSegData)
 764              		.loc 1 362 9 is_stmt 1 view .LVU260
 362:Lib/ssc/src/sdoserv.c ****         if (pSdoSegData)
 765              		.loc 1 362 27 is_stmt 0 view .LVU261
 766 01ec 1B4A     		ldr	r2, .L48+76
 767 01ee 1370     		strb	r3, [r2]
 363:Lib/ssc/src/sdoserv.c ****         {
 768              		.loc 1 363 9 is_stmt 1 view .LVU262
 363:Lib/ssc/src/sdoserv.c ****         {
 769              		.loc 1 363 13 is_stmt 0 view .LVU263
 770 01f0 094B     		ldr	r3, .L48+8
 771 01f2 1868     		ldr	r0, [r3]
 363:Lib/ssc/src/sdoserv.c ****         {
 772              		.loc 1 363 12 view .LVU264
 773 01f4 20B1     		cbz	r0, .L35
 367:Lib/ssc/src/sdoserv.c ****             pSdoSegData = NULL;
 774              		.loc 1 367 13 is_stmt 1 view .LVU265
 775 01f6 FFF7FEFF 		bl	free
 776              	.LVL51:
 368:Lib/ssc/src/sdoserv.c ****         }
 777              		.loc 1 368 13 view .LVU266
 368:Lib/ssc/src/sdoserv.c ****         }
 778              		.loc 1 368 25 is_stmt 0 view .LVU267
 779 01fa 074B     		ldr	r3, .L48+8
 780 01fc 0022     		movs	r2, #0
 781 01fe 1A60     		str	r2, [r3]
 782              	.L35:
 371:Lib/ssc/src/sdoserv.c ****     }
 783              		.loc 1 371 9 is_stmt 1 view .LVU268
 371:Lib/ssc/src/sdoserv.c ****     }
 784              		.loc 1 371 30 is_stmt 0 view .LVU269
 785 0200 074B     		ldr	r3, .L48+16
 786 0202 0022     		movs	r2, #0
 787 0204 1A60     		str	r2, [r3]
 788              	.L31:
 375:Lib/ssc/src/sdoserv.c **** 
 789              		.loc 1 375 1 view .LVU270
 790 0206 3046     		mov	r0, r6
 791 0208 03B0     		add	sp, sp, #12
 792              		.cfi_remember_state
 793              		.cfi_def_cfa_offset 20
 794              		@ sp needed
 795 020a F0BD     		pop	{r4, r5, r6, r7, pc}
 796              	.LVL52:
 797              	.L37:
 798              		.cfi_restore_state
 799              	.LBB11:
 328:Lib/ssc/src/sdoserv.c ****         }
 800              		.loc 1 328 19 view .LVU271
 801 020c 0326     		movs	r6, #3
 802 020e EAE7     		b	.L20
 803              	.L49:
 804              		.align	2
 805              	.L48:
ARM GAS  /tmp/ccs70NiP.s 			page 27


 806 0210 00000000 		.word	.LANCHOR0
 807 0214 00000000 		.word	u16ReceiveMbxSize
 808 0218 00000000 		.word	.LANCHOR4
 809 021c 00000000 		.word	.LANCHOR2
 810 0220 00000000 		.word	.LANCHOR1
 811 0224 00000000 		.word	.LANCHOR3
 812 0228 00000000 		.word	.LANCHOR9
 813 022c 00000000 		.word	.LANCHOR6
 814 0230 00000000 		.word	.LANCHOR7
 815 0234 00000000 		.word	.LANCHOR8
 816 0238 00000000 		.word	.LANCHOR10
 817 023c 00000000 		.word	.LANCHOR11
 818 0240 00000000 		.word	.LANCHOR12
 819 0244 00000000 		.word	.LANCHOR13
 820 0248 00000000 		.word	.LANCHOR14
 821 024c 00000000 		.word	.LANCHOR15
 822 0250 00000000 		.word	.LANCHOR16
 823 0254 00000000 		.word	.LANCHOR17
 824 0258 00000000 		.word	.LANCHOR18
 825 025c 00000000 		.word	.LANCHOR5
 826              	.LBE11:
 827              		.cfi_endproc
 828              	.LFE123:
 830              		.section	.text.SdoRes,"ax",%progbits
 831              		.align	1
 832              		.global	SdoRes
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	SdoRes:
 838              	.LVL53:
 839              	.LFB125:
 489:Lib/ssc/src/sdoserv.c **** 
 490:Lib/ssc/src/sdoserv.c **** 
 491:Lib/ssc/src/sdoserv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 492:Lib/ssc/src/sdoserv.c **** /**
 493:Lib/ssc/src/sdoserv.c ****  \param    abort                 Result of the SDO access
 494:Lib/ssc/src/sdoserv.c ****  \param    command		         SDO command index 
 495:Lib/ssc/src/sdoserv.c ****  \param    completeAccess        Indicates if complete access was requested
 496:Lib/ssc/src/sdoserv.c ****  \param    dataSize              Available data buffer in the response
 497:Lib/ssc/src/sdoserv.c ****  \param    objLength             Complete size of the object
 498:Lib/ssc/src/sdoserv.c ****  \param     pSdoRes                Pointer to the mailbox buffer
 499:Lib/ssc/src/sdoserv.c **** 
 500:Lib/ssc/src/sdoserv.c ****  \brief    This function is called when a SDO response shall be sent
 501:Lib/ssc/src/sdoserv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 502:Lib/ssc/src/sdoserv.c **** 
 503:Lib/ssc/src/sdoserv.c **** void SdoRes(UINT8 abort, UINT8 command, UINT8 completeAccess, UINT16 dataSize, UINT32 objLength, TI
 504:Lib/ssc/src/sdoserv.c **** {
 840              		.loc 1 504 1 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 8, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		.loc 1 504 1 is_stmt 0 view .LVU273
 845 0000 10B5     		push	{r4, lr}
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 4, -8
 848              		.cfi_offset 14, -4
ARM GAS  /tmp/ccs70NiP.s 			page 28


 849 0002 039C     		ldr	r4, [sp, #12]
 505:Lib/ssc/src/sdoserv.c ****     /* for an upload segment response the toggle bit was overwritten */
 506:Lib/ssc/src/sdoserv.c ****     if ((command != SDOSERVICE_UPLOADSEGMENTREQ) && (command != SDOSERVICE_DOWNLOADSEGMENTREQ))
 850              		.loc 1 506 5 is_stmt 1 view .LVU274
 851              		.loc 1 506 8 is_stmt 0 view .LVU275
 852 0004 6029     		cmp	r1, #96
 853 0006 06D0     		beq	.L51
 854              		.loc 1 506 50 discriminator 1 view .LVU276
 855 0008 29B1     		cbz	r1, .L51
 507:Lib/ssc/src/sdoserv.c ****     {
 508:Lib/ssc/src/sdoserv.c ****         pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET] &= 0xFF00;
 856              		.loc 1 508 9 is_stmt 1 view .LVU277
 857              		.loc 1 508 57 is_stmt 0 view .LVU278
 858 000a B4F808C0 		ldrh	ip, [r4, #8]
 859 000e 2CF0FF0C 		bic	ip, ip, #255
 860 0012 A4F808C0 		strh	ip, [r4, #8]	@ movhi
 861              	.L51:
 509:Lib/ssc/src/sdoserv.c ****     }
 510:Lib/ssc/src/sdoserv.c ****     if ( abort == 0 )
 862              		.loc 1 510 5 is_stmt 1 view .LVU279
 863              		.loc 1 510 8 is_stmt 0 view .LVU280
 864 0016 0028     		cmp	r0, #0
 865 0018 42D1     		bne	.L52
 511:Lib/ssc/src/sdoserv.c ****     {
 512:Lib/ssc/src/sdoserv.c ****         /* SDO-Download or SDO-Upload was successful, generate the SDO- and CoE-Header */
 513:Lib/ssc/src/sdoserv.c ****         pSdoRes->CoeHeader &= ~COEHEADER_COESERVICEMASK;
 866              		.loc 1 513 9 is_stmt 1 view .LVU281
 867              		.loc 1 513 28 is_stmt 0 view .LVU282
 868 001a E088     		ldrh	r0, [r4, #6]
 869              	.LVL54:
 870              		.loc 1 513 28 view .LVU283
 871 001c C0F30B00 		ubfx	r0, r0, #0, #12
 872 0020 E080     		strh	r0, [r4, #6]	@ movhi
 514:Lib/ssc/src/sdoserv.c ****         pSdoRes->CoeHeader |= ((UINT16)COESERVICE_SDORESPONSE) << COEHEADER_COESERVICESHIFT;
 873              		.loc 1 514 9 is_stmt 1 view .LVU284
 874              		.loc 1 514 28 is_stmt 0 view .LVU285
 875 0022 40F44050 		orr	r0, r0, #12288
 876 0026 E080     		strh	r0, [r4, #6]	@ movhi
 515:Lib/ssc/src/sdoserv.c ****         if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 877              		.loc 1 515 9 is_stmt 1 view .LVU286
 878              		.loc 1 515 12 is_stmt 0 view .LVU287
 879 0028 4029     		cmp	r1, #64
 880 002a 08D0     		beq	.L61
 516:Lib/ssc/src/sdoserv.c ****         {
 517:Lib/ssc/src/sdoserv.c ****             // HBu 06.02.06: Complete Access Bit in the SDO-Upload-Response too */
 518:Lib/ssc/src/sdoserv.c ****             if ( (objLength <= 4) && (objLength > 0) )
 519:Lib/ssc/src/sdoserv.c ****             {
 520:Lib/ssc/src/sdoserv.c ****                 /* Expedited Upload Response */
 521:Lib/ssc/src/sdoserv.c ****                 pSdoRes->MbxHeader.Length             =         EXPEDITED_FRAME_SIZE;
 522:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 523:Lib/ssc/src/sdoserv.c ****                                                                                         SDOHEADER_T
 524:Lib/ssc/src/sdoserv.c ****                                                                                         completeAcc
 525:Lib/ssc/src/sdoserv.c ****                                                                                         ((MAX_EXPED
 526:Lib/ssc/src/sdoserv.c ****                                                                                         SDOSERVICE_
 527:Lib/ssc/src/sdoserv.c ****             }
 528:Lib/ssc/src/sdoserv.c ****             else
 529:Lib/ssc/src/sdoserv.c ****             {
ARM GAS  /tmp/ccs70NiP.s 			page 29


 530:Lib/ssc/src/sdoserv.c ****                 /* Normal or Segmented Upload Response */
 531:Lib/ssc/src/sdoserv.c ****                 if (dataSize <  objLength)
 532:Lib/ssc/src/sdoserv.c ****                 {
 533:Lib/ssc/src/sdoserv.c ****                     pSdoRes->MbxHeader.Length         =         UPLOAD_NORM_RES_SIZE+dataSize;
 534:Lib/ssc/src/sdoserv.c ****                 }
 535:Lib/ssc/src/sdoserv.c ****                 else
 536:Lib/ssc/src/sdoserv.c ****                 {
 537:Lib/ssc/src/sdoserv.c ****                     pSdoRes->MbxHeader.Length         =         UPLOAD_NORM_RES_SIZE+((UINT16)objLe
 538:Lib/ssc/src/sdoserv.c ****                 }
 539:Lib/ssc/src/sdoserv.c ****                    ((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoRes)->CompleteSize[0] = SWAPWORD((UINT1
 540:Lib/ssc/src/sdoserv.c ****                    ((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoRes)->CompleteSize[1] = SWAPWORD((UINT1
 541:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 542:Lib/ssc/src/sdoserv.c ****                                                                                         completeAcc
 543:Lib/ssc/src/sdoserv.c ****                                                                                         SDOSERVICE_
 544:Lib/ssc/src/sdoserv.c ****             }
 545:Lib/ssc/src/sdoserv.c ****         }
 546:Lib/ssc/src/sdoserv.c ****         /* for a segmented response the command was wrong in the response */
 547:Lib/ssc/src/sdoserv.c ****         else if ( command == SDOSERVICE_DOWNLOADSEGMENTREQ )
 881              		.loc 1 547 14 is_stmt 1 view .LVU288
 882              		.loc 1 547 17 is_stmt 0 view .LVU289
 883 002c 0029     		cmp	r1, #0
 884 002e 2ED1     		bne	.L58
 548:Lib/ssc/src/sdoserv.c ****         {
 549:Lib/ssc/src/sdoserv.c ****             /* Download segmented response */
 550:Lib/ssc/src/sdoserv.c ****             pSdoRes->MbxHeader.Length         = DOWNLOAD_NORM_RES_SIZE;
 885              		.loc 1 550 13 is_stmt 1 view .LVU290
 886              		.loc 1 550 47 is_stmt 0 view .LVU291
 887 0030 0A23     		movs	r3, #10
 888              	.LVL55:
 889              		.loc 1 550 47 view .LVU292
 890 0032 2380     		strh	r3, [r4]	@ movhi
 551:Lib/ssc/src/sdoserv.c ****             pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= SDOSERVICE_DOWNLOADSEGMENTRES;
 891              		.loc 1 551 13 is_stmt 1 view .LVU293
 892              		.loc 1 551 64 is_stmt 0 view .LVU294
 893 0034 2389     		ldrh	r3, [r4, #8]
 894 0036 43F02003 		orr	r3, r3, #32
 895 003a 2381     		strh	r3, [r4, #8]	@ movhi
 896 003c 3FE0     		b	.L55
 897              	.LVL56:
 898              	.L61:
 518:Lib/ssc/src/sdoserv.c ****             {
 899              		.loc 1 518 13 is_stmt 1 view .LVU295
 518:Lib/ssc/src/sdoserv.c ****             {
 900              		.loc 1 518 35 is_stmt 0 view .LVU296
 901 003e 0299     		ldr	r1, [sp, #8]
 902              	.LVL57:
 518:Lib/ssc/src/sdoserv.c ****             {
 903              		.loc 1 518 35 view .LVU297
 904 0040 0139     		subs	r1, r1, #1
 518:Lib/ssc/src/sdoserv.c ****             {
 905              		.loc 1 518 16 view .LVU298
 906 0042 0329     		cmp	r1, #3
 907 0044 0FD8     		bhi	.L54
 521:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 908              		.loc 1 521 17 is_stmt 1 view .LVU299
 521:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 909              		.loc 1 521 55 is_stmt 0 view .LVU300
ARM GAS  /tmp/ccs70NiP.s 			page 30


 910 0046 0A23     		movs	r3, #10
 911              	.LVL58:
 521:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 912              		.loc 1 521 55 view .LVU301
 913 0048 2380     		strh	r3, [r4]	@ movhi
 522:Lib/ssc/src/sdoserv.c ****                                                                                         SDOHEADER_T
 914              		.loc 1 522 17 is_stmt 1 view .LVU302
 525:Lib/ssc/src/sdoserv.c ****                                                                                         SDOSERVICE_
 915              		.loc 1 525 113 is_stmt 0 view .LVU303
 916 004a 029B     		ldr	r3, [sp, #8]
 917 004c DBB2     		uxtb	r3, r3
 525:Lib/ssc/src/sdoserv.c ****                                                                                         SDOSERVICE_
 918              		.loc 1 525 110 view .LVU304
 919 004e C3F10403 		rsb	r3, r3, #4
 524:Lib/ssc/src/sdoserv.c ****                                                                                         ((MAX_EXPED
 920              		.loc 1 524 104 view .LVU305
 921 0052 42F00302 		orr	r2, r2, #3
 922              	.LVL59:
 524:Lib/ssc/src/sdoserv.c ****                                                                                         ((MAX_EXPED
 923              		.loc 1 524 104 view .LVU306
 924 0056 42EA8303 		orr	r3, r2, r3, lsl #2
 522:Lib/ssc/src/sdoserv.c ****                                                                                         SDOHEADER_T
 925              		.loc 1 522 68 view .LVU307
 926 005a 2289     		ldrh	r2, [r4, #8]
 927 005c 1343     		orrs	r3, r3, r2
 928 005e 43F04003 		orr	r3, r3, #64
 929 0062 2381     		strh	r3, [r4, #8]	@ movhi
 930 0064 2BE0     		b	.L55
 931              	.LVL60:
 932              	.L54:
 531:Lib/ssc/src/sdoserv.c ****                 {
 933              		.loc 1 531 17 is_stmt 1 view .LVU308
 531:Lib/ssc/src/sdoserv.c ****                 {
 934              		.loc 1 531 20 is_stmt 0 view .LVU309
 935 0066 0299     		ldr	r1, [sp, #8]
 936 0068 8B42     		cmp	r3, r1
 937 006a 0BD2     		bcs	.L56
 533:Lib/ssc/src/sdoserv.c ****                 }
 938              		.loc 1 533 21 is_stmt 1 view .LVU310
 533:Lib/ssc/src/sdoserv.c ****                 }
 939              		.loc 1 533 85 is_stmt 0 view .LVU311
 940 006c 0A33     		adds	r3, r3, #10
 941              	.LVL61:
 533:Lib/ssc/src/sdoserv.c ****                 }
 942              		.loc 1 533 55 view .LVU312
 943 006e 2380     		strh	r3, [r4]	@ movhi
 944              	.L57:
 539:Lib/ssc/src/sdoserv.c ****                    ((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoRes)->CompleteSize[1] = SWAPWORD((UINT1
 945              		.loc 1 539 20 is_stmt 1 view .LVU313
 539:Lib/ssc/src/sdoserv.c ****                    ((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoRes)->CompleteSize[1] = SWAPWORD((UINT1
 946              		.loc 1 539 83 is_stmt 0 view .LVU314
 947 0070 029B     		ldr	r3, [sp, #8]
 948 0072 A381     		strh	r3, [r4, #12]	@ movhi
 540:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 949              		.loc 1 540 20 is_stmt 1 view .LVU315
 540:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 950              		.loc 1 540 85 is_stmt 0 view .LVU316
ARM GAS  /tmp/ccs70NiP.s 			page 31


 951 0074 1B0C     		lsrs	r3, r3, #16
 540:Lib/ssc/src/sdoserv.c ****                 pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |=     SDOHEADER_SIZEINDICATOR  
 952              		.loc 1 540 83 view .LVU317
 953 0076 E381     		strh	r3, [r4, #14]	@ movhi
 541:Lib/ssc/src/sdoserv.c ****                                                                                         completeAcc
 954              		.loc 1 541 17 is_stmt 1 view .LVU318
 541:Lib/ssc/src/sdoserv.c ****                                                                                         completeAcc
 955              		.loc 1 541 68 is_stmt 0 view .LVU319
 956 0078 42F04102 		orr	r2, r2, #65
 957              	.LVL62:
 541:Lib/ssc/src/sdoserv.c ****                                                                                         completeAcc
 958              		.loc 1 541 68 view .LVU320
 959 007c 2389     		ldrh	r3, [r4, #8]
 960 007e 1A43     		orrs	r2, r2, r3
 961 0080 2281     		strh	r2, [r4, #8]	@ movhi
 962 0082 1CE0     		b	.L55
 963              	.LVL63:
 964              	.L56:
 537:Lib/ssc/src/sdoserv.c ****                 }
 965              		.loc 1 537 21 is_stmt 1 view .LVU321
 537:Lib/ssc/src/sdoserv.c ****                 }
 966              		.loc 1 537 87 is_stmt 0 view .LVU322
 967 0084 029B     		ldr	r3, [sp, #8]
 968              	.LVL64:
 537:Lib/ssc/src/sdoserv.c ****                 }
 969              		.loc 1 537 87 view .LVU323
 970 0086 9BB2     		uxth	r3, r3
 537:Lib/ssc/src/sdoserv.c ****                 }
 971              		.loc 1 537 85 view .LVU324
 972 0088 0A33     		adds	r3, r3, #10
 537:Lib/ssc/src/sdoserv.c ****                 }
 973              		.loc 1 537 55 view .LVU325
 974 008a 2380     		strh	r3, [r4]	@ movhi
 975 008c F0E7     		b	.L57
 976              	.LVL65:
 977              	.L58:
 552:Lib/ssc/src/sdoserv.c ****       }
 553:Lib/ssc/src/sdoserv.c ****         else if ( command != SDOSERVICE_UPLOADSEGMENTREQ )
 978              		.loc 1 553 14 is_stmt 1 view .LVU326
 979              		.loc 1 553 17 is_stmt 0 view .LVU327
 980 008e 6029     		cmp	r1, #96
 981 0090 15D0     		beq	.L55
 554:Lib/ssc/src/sdoserv.c ****         {
 555:Lib/ssc/src/sdoserv.c ****             /* Download response */
 556:Lib/ssc/src/sdoserv.c ****             pSdoRes->MbxHeader.Length         = DOWNLOAD_NORM_RES_SIZE;
 982              		.loc 1 556 13 is_stmt 1 view .LVU328
 983              		.loc 1 556 47 is_stmt 0 view .LVU329
 984 0092 0A23     		movs	r3, #10
 985              	.LVL66:
 986              		.loc 1 556 47 view .LVU330
 987 0094 2380     		strh	r3, [r4]	@ movhi
 557:Lib/ssc/src/sdoserv.c ****             pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= SDOSERVICE_INITIATEDOWNLOADRES;
 988              		.loc 1 557 13 is_stmt 1 view .LVU331
 989              		.loc 1 557 64 is_stmt 0 view .LVU332
 990 0096 2389     		ldrh	r3, [r4, #8]
 991 0098 43F06003 		orr	r3, r3, #96
 992 009c 2381     		strh	r3, [r4, #8]	@ movhi
ARM GAS  /tmp/ccs70NiP.s 			page 32


 993 009e 0EE0     		b	.L55
 994              	.LVL67:
 995              	.L52:
 558:Lib/ssc/src/sdoserv.c ****         }
 559:Lib/ssc/src/sdoserv.c ****     }
 560:Lib/ssc/src/sdoserv.c ****     else
 561:Lib/ssc/src/sdoserv.c ****     {
 562:Lib/ssc/src/sdoserv.c ****         /* generate a SDO-Abort-Request */
 563:Lib/ssc/src/sdoserv.c ****         pSdoRes->MbxHeader.Length         = ABORT_NORM_RES_SIZE;
 996              		.loc 1 563 9 is_stmt 1 view .LVU333
 997              		.loc 1 563 43 is_stmt 0 view .LVU334
 998 00a0 0A23     		movs	r3, #10
 999              	.LVL68:
 1000              		.loc 1 563 43 view .LVU335
 1001 00a2 2380     		strh	r3, [r4]	@ movhi
 564:Lib/ssc/src/sdoserv.c ****         pSdoRes->CoeHeader &= ~COEHEADER_COESERVICEMASK;
 1002              		.loc 1 564 9 is_stmt 1 view .LVU336
 1003              		.loc 1 564 28 is_stmt 0 view .LVU337
 1004 00a4 E388     		ldrh	r3, [r4, #6]
 1005 00a6 C3F30B03 		ubfx	r3, r3, #0, #12
 1006 00aa E380     		strh	r3, [r4, #6]	@ movhi
 565:Lib/ssc/src/sdoserv.c ****         pSdoRes->CoeHeader |= ((UINT16)COESERVICE_SDOREQUEST) << COEHEADER_COESERVICESHIFT;
 1007              		.loc 1 565 9 is_stmt 1 view .LVU338
 1008              		.loc 1 565 28 is_stmt 0 view .LVU339
 1009 00ac 43F40053 		orr	r3, r3, #8192
 1010 00b0 E380     		strh	r3, [r4, #6]	@ movhi
 566:Lib/ssc/src/sdoserv.c ****         pSdoRes->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    = SDOSERVICE_ABORTTRANSFER;
 1011              		.loc 1 566 9 is_stmt 1 view .LVU340
 1012              		.loc 1 566 60 is_stmt 0 view .LVU341
 1013 00b2 8023     		movs	r3, #128
 1014 00b4 2381     		strh	r3, [r4, #8]	@ movhi
 567:Lib/ssc/src/sdoserv.c ****         ((TABORTSDOTRANSFERREQMBX MBXMEM *) pSdoRes)->AbortCode = SWAPDWORD(cAbortCode[abort]);
 1015              		.loc 1 567 9 is_stmt 1 view .LVU342
 1016              		.loc 1 567 67 is_stmt 0 view .LVU343
 1017 00b6 064B     		ldr	r3, .L62
 1018 00b8 53F82030 		ldr	r3, [r3, r0, lsl #2]
 1019              		.loc 1 567 65 view .LVU344
 1020 00bc E360     		str	r3, [r4, #12]
 1021              	.LVL69:
 1022              	.L55:
 568:Lib/ssc/src/sdoserv.c ****     }
 569:Lib/ssc/src/sdoserv.c **** 
 570:Lib/ssc/src/sdoserv.c ****     // HBu 02.05.06: if the CoE-response could not be sent because the
 571:Lib/ssc/src/sdoserv.c ****     //               send mailbox is full it should be stored
 572:Lib/ssc/src/sdoserv.c ****     if (MBX_MailboxSendReq((TMBX MBXMEM *) pSdoRes, COE_SERVICE) != 0)
 1023              		.loc 1 572 5 is_stmt 1 view .LVU345
 1024              		.loc 1 572 9 is_stmt 0 view .LVU346
 1025 00be 0221     		movs	r1, #2
 1026 00c0 2046     		mov	r0, r4
 1027 00c2 FFF7FEFF 		bl	MBX_MailboxSendReq
 1028              	.LVL70:
 1029              		.loc 1 572 8 view .LVU347
 1030 00c6 08B1     		cbz	r0, .L50
 573:Lib/ssc/src/sdoserv.c ****     {
 574:Lib/ssc/src/sdoserv.c ****         /* we store the CoE mailbox service to send it later (in COE_ContinueInd) when the mailbox 
 575:Lib/ssc/src/sdoserv.c ****         pCoeSendStored = (TMBX MBXMEM *) pSdoRes;
 1031              		.loc 1 575 9 is_stmt 1 view .LVU348
ARM GAS  /tmp/ccs70NiP.s 			page 33


 1032              		.loc 1 575 24 is_stmt 0 view .LVU349
 1033 00c8 024B     		ldr	r3, .L62+4
 1034 00ca 1C60     		str	r4, [r3]
 1035              	.L50:
 576:Lib/ssc/src/sdoserv.c ****     }
 577:Lib/ssc/src/sdoserv.c **** }
 1036              		.loc 1 577 1 view .LVU350
 1037 00cc 10BD     		pop	{r4, pc}
 1038              	.LVL71:
 1039              	.L63:
 1040              		.loc 1 577 1 view .LVU351
 1041 00ce 00BF     		.align	2
 1042              	.L62:
 1043 00d0 00000000 		.word	.LANCHOR19
 1044 00d4 00000000 		.word	pCoeSendStored
 1045              		.cfi_endproc
 1046              	.LFE125:
 1048              		.section	.text.SDOS_SdoInd,"ax",%progbits
 1049              		.align	1
 1050              		.global	SDOS_SdoInd
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1055              	SDOS_SdoInd:
 1056              	.LVL72:
 1057              	.LFB126:
 578:Lib/ssc/src/sdoserv.c **** 
 579:Lib/ssc/src/sdoserv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 580:Lib/ssc/src/sdoserv.c **** /**
 581:Lib/ssc/src/sdoserv.c ****  \param     pSdoInd    Pointer to the received mailbox data from the master.
 582:Lib/ssc/src/sdoserv.c **** 
 583:Lib/ssc/src/sdoserv.c ****  \return    Indicates if an error occurred while the operation ( good = 0 ).
 584:Lib/ssc/src/sdoserv.c **** 
 585:Lib/ssc/src/sdoserv.c ****  \brief    This function is called when a SDO request service
 586:Lib/ssc/src/sdoserv.c ****             is received from the master and calls depending from
 587:Lib/ssc/src/sdoserv.c ****             the command the concerning function.
 588:Lib/ssc/src/sdoserv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 589:Lib/ssc/src/sdoserv.c **** 
 590:Lib/ssc/src/sdoserv.c **** UINT8 SDOS_SdoInd(TINITSDOMBX MBXMEM *pSdoInd)
 591:Lib/ssc/src/sdoserv.c **** {
 1058              		.loc 1 591 1 is_stmt 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 24
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              		.loc 1 591 1 is_stmt 0 view .LVU353
 1063 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1064              		.cfi_def_cfa_offset 36
 1065              		.cfi_offset 4, -36
 1066              		.cfi_offset 5, -32
 1067              		.cfi_offset 6, -28
 1068              		.cfi_offset 7, -24
 1069              		.cfi_offset 8, -20
 1070              		.cfi_offset 9, -16
 1071              		.cfi_offset 10, -12
 1072              		.cfi_offset 11, -8
 1073              		.cfi_offset 14, -4
 1074 0004 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/ccs70NiP.s 			page 34


 1075              		.cfi_def_cfa_offset 72
 592:Lib/ssc/src/sdoserv.c ****     UINT8 abort = 0;
 1076              		.loc 1 592 5 is_stmt 1 view .LVU354
 1077              	.LVL73:
 593:Lib/ssc/src/sdoserv.c ****     UINT8 sdoHeader = pSdoInd->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET] & SDOHEADER_COMMANDMASK;
 1078              		.loc 1 593 5 view .LVU355
 1079              		.loc 1 593 45 is_stmt 0 view .LVU356
 1080 0006 0789     		ldrh	r7, [r0, #8]
 1081              	.LVL74:
 594:Lib/ssc/src/sdoserv.c ****     /* the SDO-command is in bit 5-7 of the first SDO-Byte */
 595:Lib/ssc/src/sdoserv.c ****     UINT8 command = (sdoHeader & SDOHEADER_COMMAND);
 1082              		.loc 1 595 5 is_stmt 1 view .LVU357
 596:Lib/ssc/src/sdoserv.c ****     /* mbxSize contains the size of the mailbox (CoE-Header (2 Bytes) + SDO-Header (8 Bytes) + SDO-
 597:Lib/ssc/src/sdoserv.c ****     UINT16 mbxSize = SWAPWORD(pSdoInd->MbxHeader.Length);
 1083              		.loc 1 597 5 view .LVU358
 1084              		.loc 1 597 12 is_stmt 0 view .LVU359
 1085 0008 B0F80090 		ldrh	r9, [r0]
 1086              	.LVL75:
 598:Lib/ssc/src/sdoserv.c ****     UINT16 index;
 1087              		.loc 1 598 5 is_stmt 1 view .LVU360
 599:Lib/ssc/src/sdoserv.c ****     UINT8 subindex;
 1088              		.loc 1 599 5 view .LVU361
 600:Lib/ssc/src/sdoserv.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry;
 1089              		.loc 1 600 5 view .LVU362
 601:Lib/ssc/src/sdoserv.c ****     /* this variable contains the information, if all entries of an object will be read (bCompleteA
 602:Lib/ssc/src/sdoserv.c ****     UINT8 bCompleteAccess = 0;
 1090              		.loc 1 602 5 view .LVU363
 603:Lib/ssc/src/sdoserv.c ****     UINT32 objLength = 0;
 1091              		.loc 1 603 5 view .LVU364
 604:Lib/ssc/src/sdoserv.c ****     UINT32 dataSize = 0;
 1092              		.loc 1 604 5 view .LVU365
 605:Lib/ssc/src/sdoserv.c **** 
 606:Lib/ssc/src/sdoserv.c ****     if ( bSdoInWork )
 1093              		.loc 1 606 5 view .LVU366
 1094              		.loc 1 606 10 is_stmt 0 view .LVU367
 1095 000c 994B     		ldr	r3, .L113
 1096 000e 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1097              		.loc 1 606 8 view .LVU368
 1098 0010 002E     		cmp	r6, #0
 1099 0012 40F0FF81 		bne	.L89
 1100 0016 0546     		mov	r5, r0
 1101 0018 5FFA87FB 		uxtb	fp, r7
 1102 001c 07F0E004 		and	r4, r7, #224
 607:Lib/ssc/src/sdoserv.c ****     {
 608:Lib/ssc/src/sdoserv.c ****         /* the last SDO is still in work */
 609:Lib/ssc/src/sdoserv.c ****         return MBXERR_SERVICEINWORK;
 610:Lib/ssc/src/sdoserv.c ****     }
 611:Lib/ssc/src/sdoserv.c **** 
 612:Lib/ssc/src/sdoserv.c **** 
 613:Lib/ssc/src/sdoserv.c ****     switch (command)
 1103              		.loc 1 613 5 is_stmt 1 view .LVU369
 1104 0020 402C     		cmp	r4, #64
 1105 0022 05D0     		beq	.L66
 1106 0024 39D8     		bhi	.L67
 1107 0026 002C     		cmp	r4, #0
 1108 0028 00F0C081 		beq	.L68
 1109 002c 202C     		cmp	r4, #32
ARM GAS  /tmp/ccs70NiP.s 			page 35


 1110 002e 2DD1     		bne	.L101
 1111              	.L66:
 614:Lib/ssc/src/sdoserv.c ****     {
 615:Lib/ssc/src/sdoserv.c ****     case SDOSERVICE_INITIATEDOWNLOADREQ:
 616:Lib/ssc/src/sdoserv.c ****     case SDOSERVICE_INITIATEUPLOADREQ:
 617:Lib/ssc/src/sdoserv.c ****         /* the variable index contains the requested index of the SDO service */
 618:Lib/ssc/src/sdoserv.c ****         index = pSdoInd->SdoHeader.Sdo[SDOHEADER_INDEXHIOFFSET] & SDOHEADER_INDEXHIMASK;
 1112              		.loc 1 618 9 view .LVU370
 1113              		.loc 1 618 39 is_stmt 0 view .LVU371
 1114 0030 6B89     		ldrh	r3, [r5, #10]
 1115              	.LVL76:
 619:Lib/ssc/src/sdoserv.c ****         index <<= 8;
 1116              		.loc 1 619 9 is_stmt 1 view .LVU372
 620:Lib/ssc/src/sdoserv.c ****         index += pSdoInd->SdoHeader.Sdo[SDOHEADER_INDEXLOOFFSET] >> SDOHEADER_INDEXLOSHIFT;
 1117              		.loc 1 620 9 view .LVU373
 1118              		.loc 1 620 15 is_stmt 0 view .LVU374
 1119 0032 4FEA032A 		lsl	r10, r3, #8
 1120 0036 0AEB172A 		add	r10, r10, r7, lsr #8
 1121 003a 1FFA8AFA 		uxth	r10, r10
 1122              	.LVL77:
 621:Lib/ssc/src/sdoserv.c ****         /* the variable subindex contains the requested subindex of the SDO service */
 622:Lib/ssc/src/sdoserv.c ****         subindex    = pSdoInd->SdoHeader.Sdo[SDOHEADER_SUBINDEXOFFSET] >> SDOHEADER_SUBINDEXSHIFT;
 1123              		.loc 1 622 9 is_stmt 1 view .LVU375
 1124              		.loc 1 622 21 is_stmt 0 view .LVU376
 1125 003e 1B0A     		lsrs	r3, r3, #8
 1126 0040 0393     		str	r3, [sp, #12]
 1127              	.LVL78:
 623:Lib/ssc/src/sdoserv.c **** 
 624:Lib/ssc/src/sdoserv.c ****         /* OBJ_GetObjectHandle checks if the requested index is defined in the object dictionary */
 625:Lib/ssc/src/sdoserv.c ****         pObjEntry = OBJ_GetObjectHandle( index );
 1128              		.loc 1 625 9 is_stmt 1 view .LVU377
 1129              		.loc 1 625 21 is_stmt 0 view .LVU378
 1130 0042 5046     		mov	r0, r10
 1131              	.LVL79:
 1132              		.loc 1 625 21 view .LVU379
 1133 0044 FFF7FEFF 		bl	OBJ_GetObjectHandle
 1134              	.LVL80:
 626:Lib/ssc/src/sdoserv.c **** 
 627:Lib/ssc/src/sdoserv.c ****         if ( pObjEntry )
 1135              		.loc 1 627 9 is_stmt 1 view .LVU380
 1136              		.loc 1 627 12 is_stmt 0 view .LVU381
 1137 0048 0490     		str	r0, [sp, #16]
 1138 004a 0028     		cmp	r0, #0
 1139 004c 00F0CC81 		beq	.L90
 1140              	.LBB12:
 628:Lib/ssc/src/sdoserv.c ****         {
 629:Lib/ssc/src/sdoserv.c ****             /* transferType contains the information if the SDO Download Request or the SDO Upload 
 630:Lib/ssc/src/sdoserv.c ****                can be an expedited service (SDO data length <= 4, that means the data is stored in 
 631:Lib/ssc/src/sdoserv.c ****                 SDO-Header completely */
 632:Lib/ssc/src/sdoserv.c ****             UINT8 bTransferType = 0;
 1141              		.loc 1 632 13 is_stmt 1 view .LVU382
 1142              	.LVL81:
 633:Lib/ssc/src/sdoserv.c ****             /* pData is the pointer to the received (SDO-Download) or sent (SDO-Upload) SDO data in
 634:Lib/ssc/src/sdoserv.c ****             UINT16 MBXMEM * pData = NULL;
 1143              		.loc 1 634 13 view .LVU383
 635:Lib/ssc/src/sdoserv.c ****             UINT8 segTransfer = 0;
 1144              		.loc 1 635 13 view .LVU384
ARM GAS  /tmp/ccs70NiP.s 			page 36


 636:Lib/ssc/src/sdoserv.c **** 
 637:Lib/ssc/src/sdoserv.c ****             {
 638:Lib/ssc/src/sdoserv.c ****                 dataSize = objLength = OBJ_GetObjectLength( index, subindex, pObjEntry, (UINT8) (sd
 1145              		.loc 1 638 17 view .LVU385
 1146              		.loc 1 638 40 is_stmt 0 view .LVU386
 1147 0050 0BF01002 		and	r2, fp, #16
 1148 0054 0592     		str	r2, [sp, #20]
 1149 0056 1346     		mov	r3, r2
 1150 0058 0246     		mov	r2, r0
 1151 005a 0399     		ldr	r1, [sp, #12]
 1152 005c 5046     		mov	r0, r10
 1153              	.LVL82:
 1154              		.loc 1 638 40 view .LVU387
 1155 005e FFF7FEFF 		bl	OBJ_GetObjectLength
 1156              	.LVL83:
 1157              		.loc 1 638 40 view .LVU388
 1158 0062 0290     		str	r0, [sp, #8]
 1159              	.LVL84:
 639:Lib/ssc/src/sdoserv.c **** 
 640:Lib/ssc/src/sdoserv.c ****                 if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 1160              		.loc 1 640 17 is_stmt 1 view .LVU389
 1161              		.loc 1 640 20 is_stmt 0 view .LVU390
 1162 0064 402C     		cmp	r4, #64
 1163 0066 29D0     		beq	.L102
 641:Lib/ssc/src/sdoserv.c ****                 {
 642:Lib/ssc/src/sdoserv.c ****                     /* SDO Upload */
 643:Lib/ssc/src/sdoserv.c ****                     if ( mbxSize != EXPEDITED_FRAME_SIZE )
 644:Lib/ssc/src/sdoserv.c ****                         /* a SDO Upload request has always a fixed size (2 Byte CoE-Header plus 8 B
 645:Lib/ssc/src/sdoserv.c ****                         return MBXERR_INVALIDSIZE;
 646:Lib/ssc/src/sdoserv.c ****                     /* distinguish between expedited and normal upload response within the length o
 647:Lib/ssc/src/sdoserv.c ****                     if ( (objLength <= MAX_EXPEDITED_DATA) && objLength != 0 )
 648:Lib/ssc/src/sdoserv.c ****                     {
 649:Lib/ssc/src/sdoserv.c ****                         /* Expedited Upload */
 650:Lib/ssc/src/sdoserv.c ****                         bTransferType = 1;
 651:Lib/ssc/src/sdoserv.c ****                         /* pData is the pointer where the object data has to be copied for the resp
 652:Lib/ssc/src/sdoserv.c ****                         pData = ((TINITSDOUPLOADEXPRESMBX MBXMEM *) pSdoInd)->Data;
 653:Lib/ssc/src/sdoserv.c ****                         /* initialize the 4 data bytes of the SDO upload response because the reque
 654:Lib/ssc/src/sdoserv.c ****                            could be less than 4 */
 655:Lib/ssc/src/sdoserv.c ****                         pData[0] = 0;
 656:Lib/ssc/src/sdoserv.c ****                         pData[1] = 0;
 657:Lib/ssc/src/sdoserv.c ****                     }
 658:Lib/ssc/src/sdoserv.c ****                     else
 659:Lib/ssc/src/sdoserv.c ****                     {
 660:Lib/ssc/src/sdoserv.c ****                         /* HBu 06.02.06: the variable dataSize has to be set to the available size 
 661:Lib/ssc/src/sdoserv.c ****                     dataSize = u16SendMbxSize - MBX_HEADER_SIZE - UPLOAD_NORM_RES_SIZE;
 662:Lib/ssc/src/sdoserv.c ****                         if ( dataSize < objLength )
 663:Lib/ssc/src/sdoserv.c ****                             /* Segmented Upload */
 664:Lib/ssc/src/sdoserv.c ****                             segTransfer = 1;
 665:Lib/ssc/src/sdoserv.c ****                         else
 666:Lib/ssc/src/sdoserv.c ****                             /* Normal Upload */
 667:Lib/ssc/src/sdoserv.c ****                             pData = ((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoInd)->Data;
 668:Lib/ssc/src/sdoserv.c ****                     }
 669:Lib/ssc/src/sdoserv.c ****                 }
 670:Lib/ssc/src/sdoserv.c ****                 else
 671:Lib/ssc/src/sdoserv.c ****                 {
 672:Lib/ssc/src/sdoserv.c ****                     /* SDO-Download: store if the request is a expedited or normal request  */
 673:Lib/ssc/src/sdoserv.c ****                     bTransferType = sdoHeader & SDOHEADER_TRANSFERTYPE;
ARM GAS  /tmp/ccs70NiP.s 			page 37


 1164              		.loc 1 673 21 is_stmt 1 view .LVU391
 1165              		.loc 1 673 35 is_stmt 0 view .LVU392
 1166 0068 0BF00203 		and	r3, fp, #2
 1167              	.LVL85:
 635:Lib/ssc/src/sdoserv.c **** 
 1168              		.loc 1 635 19 view .LVU393
 1169 006c 0696     		str	r6, [sp, #24]
 638:Lib/ssc/src/sdoserv.c **** 
 1170              		.loc 1 638 26 view .LVU394
 1171 006e DDF80880 		ldr	r8, [sp, #8]
 634:Lib/ssc/src/sdoserv.c ****             UINT8 segTransfer = 0;
 1172              		.loc 1 634 29 view .LVU395
 1173 0072 0022     		movs	r2, #0
 1174 0074 0792     		str	r2, [sp, #28]
 1175              	.LVL86:
 1176              	.L72:
 674:Lib/ssc/src/sdoserv.c ****                 }
 675:Lib/ssc/src/sdoserv.c ****             }
 676:Lib/ssc/src/sdoserv.c **** 
 677:Lib/ssc/src/sdoserv.c ****             if ( command == SDOSERVICE_INITIATEDOWNLOADREQ )
 1177              		.loc 1 677 13 is_stmt 1 view .LVU396
 1178              		.loc 1 677 16 is_stmt 0 view .LVU397
 1179 0076 202C     		cmp	r4, #32
 1180 0078 45D0     		beq	.L103
 1181              	.LVL87:
 1182              	.L73:
 678:Lib/ssc/src/sdoserv.c ****             {
 679:Lib/ssc/src/sdoserv.c ****                 /* SDO Download */
 680:Lib/ssc/src/sdoserv.c ****                 if ( bTransferType )
 681:Lib/ssc/src/sdoserv.c ****                 {
 682:Lib/ssc/src/sdoserv.c ****                     /* Expedited Download */
 683:Lib/ssc/src/sdoserv.c ****                     if ( mbxSize != EXPEDITED_FRAME_SIZE )
 684:Lib/ssc/src/sdoserv.c ****                         /* an Expedited SDO Download request has always a fixed size (2 Byte CoE-He
 685:Lib/ssc/src/sdoserv.c ****                         return MBXERR_INVALIDSIZE;
 686:Lib/ssc/src/sdoserv.c ****                     /* dataSize gets the real size of the downloaded object data (1,2,3 or 4) */
 687:Lib/ssc/src/sdoserv.c ****                     dataSize = MAX_EXPEDITED_DATA - ((sdoHeader & SDOHEADER_DATASETSIZE) >> SDOHEAD
 688:Lib/ssc/src/sdoserv.c ****                     /* pData is the pointer to the downloaded object data */
 689:Lib/ssc/src/sdoserv.c ****                     pData = (UINT16 MBXMEM *) &pSdoInd[1];
 690:Lib/ssc/src/sdoserv.c ****                 }
 691:Lib/ssc/src/sdoserv.c ****                 else
 692:Lib/ssc/src/sdoserv.c ****                 {
 693:Lib/ssc/src/sdoserv.c ****                     /* Normal Download */
 694:Lib/ssc/src/sdoserv.c ****                     /* downloadSize gets the real size of the downloaded data */
 695:Lib/ssc/src/sdoserv.c ****                     /* '&' operator was too much */
 696:Lib/ssc/src/sdoserv.c **** 
 697:Lib/ssc/src/sdoserv.c ****                     UINT32 downloadSize = ((UINT32)(SWAPWORD(((TINITSDODOWNLOADNORMREQMBX MBXMEM *)
 698:Lib/ssc/src/sdoserv.c **** 
 699:Lib/ssc/src/sdoserv.c ****                     /* HBu 29.03.06: if it is a segmented download the mbxSize has to be the comple
 700:Lib/ssc/src/sdoserv.c ****                     if ( (MBX_HEADER_SIZE+EXPEDITED_FRAME_SIZE+downloadSize) > u16ReceiveMbxSize )
 701:Lib/ssc/src/sdoserv.c ****                     {
 702:Lib/ssc/src/sdoserv.c ****                         if ( mbxSize != (u16ReceiveMbxSize-MBX_HEADER_SIZE) )
 703:Lib/ssc/src/sdoserv.c ****                             return MBXERR_INVALIDSIZE;
 704:Lib/ssc/src/sdoserv.c ****                     }
 705:Lib/ssc/src/sdoserv.c ****                     else
 706:Lib/ssc/src/sdoserv.c ****                     {
 707:Lib/ssc/src/sdoserv.c ****                         if ( mbxSize != (EXPEDITED_FRAME_SIZE+downloadSize) )
 708:Lib/ssc/src/sdoserv.c ****                             /* the mbxSize and the downloadSize are not consistent (mbxSize = downl
ARM GAS  /tmp/ccs70NiP.s 			page 38


 709:Lib/ssc/src/sdoserv.c ****                             return MBXERR_INVALIDSIZE;
 710:Lib/ssc/src/sdoserv.c ****                     }
 711:Lib/ssc/src/sdoserv.c **** 
 712:Lib/ssc/src/sdoserv.c ****                     /* pData is the pointer to the downloaded object data */
 713:Lib/ssc/src/sdoserv.c ****                     pData = (UINT16 MBXMEM *) ((TINITSDODOWNLOADNORMREQMBX MBXMEM *) pSdoInd)->Data
 714:Lib/ssc/src/sdoserv.c ****                     /* the received dataSize will be checked in the object specific functions calle
 715:Lib/ssc/src/sdoserv.c ****                        OBJ_Write (in objdef.c) */
 716:Lib/ssc/src/sdoserv.c ****                     dataSize = downloadSize;
 717:Lib/ssc/src/sdoserv.c ****                     if ( dataSize > (UINT32)(mbxSize - DOWNLOAD_NORM_REQ_SIZE) )
 718:Lib/ssc/src/sdoserv.c ****                         /* Segmented Download */
 719:Lib/ssc/src/sdoserv.c ****                         segTransfer = 1;
 720:Lib/ssc/src/sdoserv.c ****                 }
 721:Lib/ssc/src/sdoserv.c ****             }
 722:Lib/ssc/src/sdoserv.c **** 
 723:Lib/ssc/src/sdoserv.c ****             if ( sdoHeader & SDOHEADER_COMPLETEACCESS )
 1183              		.loc 1 723 13 is_stmt 1 view .LVU398
 1184              		.loc 1 723 16 is_stmt 0 view .LVU399
 1185 007a 059B     		ldr	r3, [sp, #20]
 1186 007c 002B     		cmp	r3, #0
 1187 007e 70D0     		beq	.L77
 724:Lib/ssc/src/sdoserv.c ****             {
 725:Lib/ssc/src/sdoserv.c ****                 bCompleteAccess = 1;
 1188              		.loc 1 725 17 is_stmt 1 view .LVU400
 1189              	.LVL88:
 726:Lib/ssc/src/sdoserv.c ****                 // HBu 02.05.06: Complete Access is only supported with subindex 0 and 1
 727:Lib/ssc/src/sdoserv.c ****                 if (subindex > 1)
 1190              		.loc 1 727 17 view .LVU401
 1191              		.loc 1 727 20 is_stmt 0 view .LVU402
 1192 0080 039B     		ldr	r3, [sp, #12]
 1193 0082 012B     		cmp	r3, #1
 1194 0084 6BD9     		bls	.L104
 728:Lib/ssc/src/sdoserv.c ****                     abort = ABORTIDX_UNSUPPORTED_ACCESS;
 1195              		.loc 1 728 27 view .LVU403
 1196 0086 4FF00509 		mov	r9, #5
 1197              	.LVL89:
 1198              		.loc 1 728 27 view .LVU404
 1199 008a 0FE0     		b	.L69
 1200              	.LVL90:
 1201              	.L101:
 1202              		.loc 1 728 27 view .LVU405
 1203              	.LBE12:
 613:Lib/ssc/src/sdoserv.c ****     {
 1204              		.loc 1 613 5 view .LVU406
 1205 008c 4FF00008 		mov	r8, #0
 1206 0090 CDF80880 		str	r8, [sp, #8]
 1207 0094 4FF00309 		mov	r9, #3
 1208              	.LVL91:
 613:Lib/ssc/src/sdoserv.c ****     {
 1209              		.loc 1 613 5 view .LVU407
 1210 0098 08E0     		b	.L69
 1211              	.LVL92:
 1212              	.L67:
 613:Lib/ssc/src/sdoserv.c ****     {
 1213              		.loc 1 613 5 view .LVU408
 1214 009a 602C     		cmp	r4, #96
 1215 009c 00F08681 		beq	.L68
 1216 00a0 4FF00008 		mov	r8, #0
ARM GAS  /tmp/ccs70NiP.s 			page 39


 1217 00a4 CDF80880 		str	r8, [sp, #8]
 1218 00a8 4FF00309 		mov	r9, #3
 1219              	.LVL93:
 1220              	.L69:
 729:Lib/ssc/src/sdoserv.c ****             }
 730:Lib/ssc/src/sdoserv.c **** 
 731:Lib/ssc/src/sdoserv.c ****             if ( abort == 0 )
 732:Lib/ssc/src/sdoserv.c ****             {
 733:Lib/ssc/src/sdoserv.c ****                 if ( segTransfer )
 734:Lib/ssc/src/sdoserv.c ****                 {
 735:Lib/ssc/src/sdoserv.c ****                     bSdoSegFollows         = TRUE;
 736:Lib/ssc/src/sdoserv.c ****                     bSdoSegLastToggle     = 1;
 737:Lib/ssc/src/sdoserv.c ****                     bSdoSegAccess             = bCompleteAccess;
 738:Lib/ssc/src/sdoserv.c ****                     nSdoSegIndex             = index;
 739:Lib/ssc/src/sdoserv.c ****                     nSdoSegSubindex         = subindex;
 740:Lib/ssc/src/sdoserv.c ****                     pSdoSegObjEntry        = pObjEntry;
 741:Lib/ssc/src/sdoserv.c ****                     if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 742:Lib/ssc/src/sdoserv.c ****                         nSdoSegCompleteSize    = objLength;
 743:Lib/ssc/src/sdoserv.c ****                     else
 744:Lib/ssc/src/sdoserv.c ****                         nSdoSegCompleteSize    = dataSize;
 745:Lib/ssc/src/sdoserv.c **** 
 746:Lib/ssc/src/sdoserv.c ****                     if (pSdoSegData != NULL)
 747:Lib/ssc/src/sdoserv.c ****                     {
 748:Lib/ssc/src/sdoserv.c ****                         FREEMEM( (UINT16 VARMEM *) pSdoSegData);
 749:Lib/ssc/src/sdoserv.c ****                         pSdoSegData = NULL;
 750:Lib/ssc/src/sdoserv.c ****                     }
 751:Lib/ssc/src/sdoserv.c ****                     pSdoSegData = (UINT16 VARMEM *) ALLOCMEM( ROUNDUPBYTE2WORD(nSdoSegCompleteSize)
 752:Lib/ssc/src/sdoserv.c **** 
 753:Lib/ssc/src/sdoserv.c ****                     if ( pSdoSegData == NULL )
 754:Lib/ssc/src/sdoserv.c ****                     {
 755:Lib/ssc/src/sdoserv.c **** /*ECATCHANGE_START(V5.11) SDO4*/
 756:Lib/ssc/src/sdoserv.c ****                         if(bCompleteAccess)
 757:Lib/ssc/src/sdoserv.c ****                             abort = ABORTIDX_UNSUPPORTED_ACCESS;
 758:Lib/ssc/src/sdoserv.c ****                         else
 759:Lib/ssc/src/sdoserv.c **** /*ECATCHANGE_END(V5.11) SDO4*/
 760:Lib/ssc/src/sdoserv.c ****                             abort = ABORTIDX_OUT_OF_MEMORY;
 761:Lib/ssc/src/sdoserv.c ****                     }
 762:Lib/ssc/src/sdoserv.c ****                     else
 763:Lib/ssc/src/sdoserv.c ****                     {
 764:Lib/ssc/src/sdoserv.c ****                         if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 765:Lib/ssc/src/sdoserv.c ****                         {
 766:Lib/ssc/src/sdoserv.c ****                             /* Segmented Upload */
 767:Lib/ssc/src/sdoserv.c ****                             abort = OBJ_Read( index, subindex, objLength, pObjEntry, (UINT16 MBXMEM
 768:Lib/ssc/src/sdoserv.c ****                             if ( abort == 0 )
 769:Lib/ssc/src/sdoserv.c ****                             {
 770:Lib/ssc/src/sdoserv.c ****                                 MBXMEMCPY( ((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoInd)->Data, pSd
 771:Lib/ssc/src/sdoserv.c ****                                 nSdoSegService    = SDOSERVICE_UPLOADSEGMENTREQ;
 772:Lib/ssc/src/sdoserv.c ****                             }
 773:Lib/ssc/src/sdoserv.c ****                             else if ( abort == ABORTIDX_WORKING )
 774:Lib/ssc/src/sdoserv.c ****                             {
 775:Lib/ssc/src/sdoserv.c ****                                 /* the application generates the SDO-Response later on by calling S
 776:Lib/ssc/src/sdoserv.c ****                                 u8PendingSdo = SDO_PENDING_SEG_READ;
 777:Lib/ssc/src/sdoserv.c ****                                 bStoreCompleteAccess = bCompleteAccess;
 778:Lib/ssc/src/sdoserv.c ****                                 u8StoreSubindex = subindex;
 779:Lib/ssc/src/sdoserv.c ****                                 u16StoreIndex = index;
 780:Lib/ssc/src/sdoserv.c ****                                 u32StoreDataSize = objLength;
 781:Lib/ssc/src/sdoserv.c ****                                 pStoreData = pSdoSegData;
ARM GAS  /tmp/ccs70NiP.s 			page 40


 782:Lib/ssc/src/sdoserv.c ****                                 pSdoPendFunc = pObjEntry->Read;
 783:Lib/ssc/src/sdoserv.c **** 
 784:Lib/ssc/src/sdoserv.c ****                                 bSdoInWork = TRUE;
 785:Lib/ssc/src/sdoserv.c ****                                 /* we have to store the buffer and the response header */
 786:Lib/ssc/src/sdoserv.c ****                                 pSdoResStored = pSdoInd;
 787:Lib/ssc/src/sdoserv.c **** 
 788:Lib/ssc/src/sdoserv.c ****                                 /*update command field*/
 789:Lib/ssc/src/sdoserv.c ****                                 pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]   &= ~SDOHEAD
 790:Lib/ssc/src/sdoserv.c ****                                 pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]   |= (sdoHead
 791:Lib/ssc/src/sdoserv.c ****                                 nSdoSegService    = SDOSERVICE_UPLOADSEGMENTREQ;
 792:Lib/ssc/src/sdoserv.c ****                                 return 0;
 793:Lib/ssc/src/sdoserv.c ****                             }
 794:Lib/ssc/src/sdoserv.c ****                         }
 795:Lib/ssc/src/sdoserv.c ****                         else
 796:Lib/ssc/src/sdoserv.c ****                         {
 797:Lib/ssc/src/sdoserv.c ****                             /* Segmented Download */
 798:Lib/ssc/src/sdoserv.c ****                             MBXMEMCPY( pSdoSegData, ((TINITSDODOWNLOADNORMREQMBX MBXMEM *) pSdoInd)
 799:Lib/ssc/src/sdoserv.c ****                             nSdoSegService    = SDOSERVICE_DOWNLOADSEGMENTREQ;
 800:Lib/ssc/src/sdoserv.c ****                             dataSize = (mbxSize-DOWNLOAD_NORM_REQ_SIZE);
 801:Lib/ssc/src/sdoserv.c ****                         }
 802:Lib/ssc/src/sdoserv.c **** 
 803:Lib/ssc/src/sdoserv.c ****                         nSdoSegBytesToHandle = dataSize;
 804:Lib/ssc/src/sdoserv.c ****                     }
 805:Lib/ssc/src/sdoserv.c ****                 }
 806:Lib/ssc/src/sdoserv.c ****                 else
 807:Lib/ssc/src/sdoserv.c ****                 {
 808:Lib/ssc/src/sdoserv.c ****                     if ( objLength == 0 )
 809:Lib/ssc/src/sdoserv.c ****                     {
 810:Lib/ssc/src/sdoserv.c ****                         /* the objLength is not known, therefore the variables for a possible segme
 811:Lib/ssc/src/sdoserv.c ****                             should be initialized */
 812:Lib/ssc/src/sdoserv.c ****                         nSdoSegIndex             = index;
 813:Lib/ssc/src/sdoserv.c ****                         nSdoSegSubindex         = subindex;
 814:Lib/ssc/src/sdoserv.c ****                         pSdoSegObjEntry        = pObjEntry;
 815:Lib/ssc/src/sdoserv.c ****                     }
 816:Lib/ssc/src/sdoserv.c ****                     if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 817:Lib/ssc/src/sdoserv.c ****                     {
 818:Lib/ssc/src/sdoserv.c ****                         /* Expedited or Normal Upload */
 819:Lib/ssc/src/sdoserv.c ****                         abort = OBJ_Read( index, subindex, objLength, pObjEntry, pData, bCompleteAc
 820:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 821:Lib/ssc/src/sdoserv.c ****                         {
 822:Lib/ssc/src/sdoserv.c ****                             /* the application generates the SDO-Response later on by calling SDOS_
 823:Lib/ssc/src/sdoserv.c ****                             u8PendingSdo = SDO_PENDING_READ;
 824:Lib/ssc/src/sdoserv.c ****                             bStoreCompleteAccess = bCompleteAccess;
 825:Lib/ssc/src/sdoserv.c ****                             u8StoreSubindex = subindex;
 826:Lib/ssc/src/sdoserv.c ****                             u16StoreIndex = index;
 827:Lib/ssc/src/sdoserv.c ****                             u32StoreDataSize = objLength;
 828:Lib/ssc/src/sdoserv.c ****                             pStoreData = pData;
 829:Lib/ssc/src/sdoserv.c ****                             pSdoPendFunc = pObjEntry->Read;
 830:Lib/ssc/src/sdoserv.c **** 
 831:Lib/ssc/src/sdoserv.c ****                             bSdoInWork = TRUE;
 832:Lib/ssc/src/sdoserv.c ****                             /* we have to store the buffer and the response header */
 833:Lib/ssc/src/sdoserv.c ****                             pSdoResStored = pSdoInd;
 834:Lib/ssc/src/sdoserv.c ****                             
 835:Lib/ssc/src/sdoserv.c ****                             /*update command field*/
 836:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET] &= ~SDOHEADER_COM
 837:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= (sdoHeader 
 838:Lib/ssc/src/sdoserv.c ****                             return 0;
ARM GAS  /tmp/ccs70NiP.s 			page 41


 839:Lib/ssc/src/sdoserv.c ****                         }
 840:Lib/ssc/src/sdoserv.c ****                     }
 841:Lib/ssc/src/sdoserv.c ****                     else
 842:Lib/ssc/src/sdoserv.c ****                     {
 843:Lib/ssc/src/sdoserv.c ****                         /* Expedited or Normal Download */
 844:Lib/ssc/src/sdoserv.c ****                         abort = OBJ_Write( index, subindex, dataSize, pObjEntry, pData, bCompleteAc
 845:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 846:Lib/ssc/src/sdoserv.c ****                         {
 847:Lib/ssc/src/sdoserv.c ****                             /* the application generates the SDO-Response later on by calling SDOS_
 848:Lib/ssc/src/sdoserv.c ****                             u8PendingSdo = SDO_PENDING_WRITE;
 849:Lib/ssc/src/sdoserv.c ****                             bStoreCompleteAccess = bCompleteAccess;
 850:Lib/ssc/src/sdoserv.c ****                             u8StoreSubindex = subindex;
 851:Lib/ssc/src/sdoserv.c ****                             u16StoreIndex = index;
 852:Lib/ssc/src/sdoserv.c ****                             u32StoreDataSize = dataSize;
 853:Lib/ssc/src/sdoserv.c ****                             pStoreData = pData;
 854:Lib/ssc/src/sdoserv.c ****                             pSdoPendFunc = pObjEntry->Write;
 855:Lib/ssc/src/sdoserv.c **** 
 856:Lib/ssc/src/sdoserv.c ****                             bSdoInWork = TRUE;
 857:Lib/ssc/src/sdoserv.c ****                             /* we have to store the buffer and the response header */
 858:Lib/ssc/src/sdoserv.c ****                             pSdoResStored = pSdoInd;
 859:Lib/ssc/src/sdoserv.c **** 
 860:Lib/ssc/src/sdoserv.c ****                             /*update command field*/
 861:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET] &= ~SDOHEADER_COM
 862:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= (sdoHeader 
 863:Lib/ssc/src/sdoserv.c ****                             return 0;
 864:Lib/ssc/src/sdoserv.c ****                         }
 865:Lib/ssc/src/sdoserv.c ****                     }
 866:Lib/ssc/src/sdoserv.c ****                 } /* else if ( objLength == 0 ) */
 867:Lib/ssc/src/sdoserv.c ****             } /* if ( abort == 0 ) */
 868:Lib/ssc/src/sdoserv.c **** 
 869:Lib/ssc/src/sdoserv.c ****         } //if(pEntry) (Object handle found)
 870:Lib/ssc/src/sdoserv.c ****         else
 871:Lib/ssc/src/sdoserv.c ****         {
 872:Lib/ssc/src/sdoserv.c ****             abort = ABORTIDX_OBJECT_NOT_EXISTING;
 873:Lib/ssc/src/sdoserv.c ****         }
 874:Lib/ssc/src/sdoserv.c ****         break;
 875:Lib/ssc/src/sdoserv.c **** 
 876:Lib/ssc/src/sdoserv.c ****     case SDOSERVICE_DOWNLOADSEGMENTREQ:
 877:Lib/ssc/src/sdoserv.c ****     case SDOSERVICE_UPLOADSEGMENTREQ:
 878:Lib/ssc/src/sdoserv.c ****         if ( command == nSdoSegService )
 879:Lib/ssc/src/sdoserv.c ****         {
 880:Lib/ssc/src/sdoserv.c ****             if ( command == SDOSERVICE_DOWNLOADSEGMENTREQ )
 881:Lib/ssc/src/sdoserv.c ****                 abort = SdoDownloadSegmentInd( (TDOWNLOADSDOSEGREQMBX MBXMEM *) pSdoInd );
 882:Lib/ssc/src/sdoserv.c ****             else
 883:Lib/ssc/src/sdoserv.c ****                 abort = SdoUploadSegmentInd( (TUPLOADSDOSEGREQMBX MBXMEM *) pSdoInd );
 884:Lib/ssc/src/sdoserv.c ****         }
 885:Lib/ssc/src/sdoserv.c ****         else
 886:Lib/ssc/src/sdoserv.c ****             abort = ABORTIDX_COMMAND_SPECIFIER_UNKNOWN;
 887:Lib/ssc/src/sdoserv.c ****         break;
 888:Lib/ssc/src/sdoserv.c **** 
 889:Lib/ssc/src/sdoserv.c ****     default:
 890:Lib/ssc/src/sdoserv.c ****         abort = ABORTIDX_COMMAND_SPECIFIER_UNKNOWN;
 891:Lib/ssc/src/sdoserv.c ****         break;
 892:Lib/ssc/src/sdoserv.c ****     }
 893:Lib/ssc/src/sdoserv.c **** 
 894:Lib/ssc/src/sdoserv.c ****     if(abort != ABORTIDX_WORKING)
 1221              		.loc 1 894 5 is_stmt 1 view .LVU409
ARM GAS  /tmp/ccs70NiP.s 			page 42


 1222              		.loc 1 894 7 is_stmt 0 view .LVU410
 1223 00ac B9F1FF0F 		cmp	r9, #255
 1224 00b0 40F0A481 		bne	.L105
 1225              	.LVL94:
 1226              	.L65:
 895:Lib/ssc/src/sdoserv.c ****     {
 896:Lib/ssc/src/sdoserv.c ****         /*  type cast was added because of warning */
 897:Lib/ssc/src/sdoserv.c ****         SdoRes(abort, command, (UINT8) (sdoHeader & SDOHEADER_COMPLETEACCESS), (UINT16) dataSize, o
 898:Lib/ssc/src/sdoserv.c ****     }
 899:Lib/ssc/src/sdoserv.c **** 
 900:Lib/ssc/src/sdoserv.c ****     return 0;
 901:Lib/ssc/src/sdoserv.c **** }
 1227              		.loc 1 901 1 view .LVU411
 1228 00b4 3046     		mov	r0, r6
 1229 00b6 09B0     		add	sp, sp, #36
 1230              		.cfi_remember_state
 1231              		.cfi_def_cfa_offset 36
 1232              		@ sp needed
 1233 00b8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1234              	.LVL95:
 1235              	.L102:
 1236              		.cfi_restore_state
 1237              	.LBB15:
 643:Lib/ssc/src/sdoserv.c ****                         /* a SDO Upload request has always a fixed size (2 Byte CoE-Header plus 8 B
 1238              		.loc 1 643 21 is_stmt 1 view .LVU412
 643:Lib/ssc/src/sdoserv.c ****                         /* a SDO Upload request has always a fixed size (2 Byte CoE-Header plus 8 B
 1239              		.loc 1 643 24 is_stmt 0 view .LVU413
 1240 00bc B9F10A0F 		cmp	r9, #10
 1241 00c0 40F0AA81 		bne	.L91
 647:Lib/ssc/src/sdoserv.c ****                     {
 1242              		.loc 1 647 21 is_stmt 1 view .LVU414
 647:Lib/ssc/src/sdoserv.c ****                     {
 1243              		.loc 1 647 60 is_stmt 0 view .LVU415
 1244 00c4 431E     		subs	r3, r0, #1
 647:Lib/ssc/src/sdoserv.c ****                     {
 1245              		.loc 1 647 24 view .LVU416
 1246 00c6 032B     		cmp	r3, #3
 1247 00c8 09D8     		bhi	.L71
 650:Lib/ssc/src/sdoserv.c ****                         /* pData is the pointer where the object data has to be copied for the resp
 1248              		.loc 1 650 25 is_stmt 1 view .LVU417
 1249              	.LVL96:
 652:Lib/ssc/src/sdoserv.c ****                         /* initialize the 4 data bytes of the SDO upload response because the reque
 1250              		.loc 1 652 25 view .LVU418
 652:Lib/ssc/src/sdoserv.c ****                         /* initialize the 4 data bytes of the SDO upload response because the reque
 1251              		.loc 1 652 31 is_stmt 0 view .LVU419
 1252 00ca 05F10C03 		add	r3, r5, #12
 1253 00ce 0793     		str	r3, [sp, #28]
 1254              	.LVL97:
 655:Lib/ssc/src/sdoserv.c ****                         pData[1] = 0;
 1255              		.loc 1 655 25 is_stmt 1 view .LVU420
 655:Lib/ssc/src/sdoserv.c ****                         pData[1] = 0;
 1256              		.loc 1 655 34 is_stmt 0 view .LVU421
 1257 00d0 0023     		movs	r3, #0
 1258              	.LVL98:
 655:Lib/ssc/src/sdoserv.c ****                         pData[1] = 0;
 1259              		.loc 1 655 34 view .LVU422
 1260 00d2 AB81     		strh	r3, [r5, #12]	@ movhi
ARM GAS  /tmp/ccs70NiP.s 			page 43


 656:Lib/ssc/src/sdoserv.c ****                     }
 1261              		.loc 1 656 25 is_stmt 1 view .LVU423
 656:Lib/ssc/src/sdoserv.c ****                     }
 1262              		.loc 1 656 34 is_stmt 0 view .LVU424
 1263 00d4 EB81     		strh	r3, [r5, #14]	@ movhi
 635:Lib/ssc/src/sdoserv.c **** 
 1264              		.loc 1 635 19 view .LVU425
 1265 00d6 0696     		str	r6, [sp, #24]
 638:Lib/ssc/src/sdoserv.c **** 
 1266              		.loc 1 638 26 view .LVU426
 1267 00d8 8046     		mov	r8, r0
 650:Lib/ssc/src/sdoserv.c ****                         /* pData is the pointer where the object data has to be copied for the resp
 1268              		.loc 1 650 39 view .LVU427
 1269 00da 0123     		movs	r3, #1
 1270 00dc CBE7     		b	.L72
 1271              	.LVL99:
 1272              	.L71:
 661:Lib/ssc/src/sdoserv.c ****                         if ( dataSize < objLength )
 1273              		.loc 1 661 21 is_stmt 1 view .LVU428
 661:Lib/ssc/src/sdoserv.c ****                         if ( dataSize < objLength )
 1274              		.loc 1 661 65 is_stmt 0 view .LVU429
 1275 00de 664B     		ldr	r3, .L113+4
 1276 00e0 B3F80080 		ldrh	r8, [r3]
 661:Lib/ssc/src/sdoserv.c ****                         if ( dataSize < objLength )
 1277              		.loc 1 661 30 view .LVU430
 1278 00e4 A8F11008 		sub	r8, r8, #16
 1279              	.LVL100:
 662:Lib/ssc/src/sdoserv.c ****                             /* Segmented Upload */
 1280              		.loc 1 662 25 is_stmt 1 view .LVU431
 662:Lib/ssc/src/sdoserv.c ****                             /* Segmented Upload */
 1281              		.loc 1 662 28 is_stmt 0 view .LVU432
 1282 00e8 029B     		ldr	r3, [sp, #8]
 1283 00ea 4345     		cmp	r3, r8
 1284 00ec 05D8     		bhi	.L92
 667:Lib/ssc/src/sdoserv.c ****                     }
 1285              		.loc 1 667 29 is_stmt 1 view .LVU433
 667:Lib/ssc/src/sdoserv.c ****                     }
 1286              		.loc 1 667 35 is_stmt 0 view .LVU434
 1287 00ee 05F11003 		add	r3, r5, #16
 1288 00f2 0793     		str	r3, [sp, #28]
 1289              	.LVL101:
 635:Lib/ssc/src/sdoserv.c **** 
 1290              		.loc 1 635 19 view .LVU435
 1291 00f4 0696     		str	r6, [sp, #24]
 632:Lib/ssc/src/sdoserv.c ****             /* pData is the pointer to the received (SDO-Download) or sent (SDO-Upload) SDO data in
 1292              		.loc 1 632 19 view .LVU436
 1293 00f6 3346     		mov	r3, r6
 1294              	.LVL102:
 632:Lib/ssc/src/sdoserv.c ****             /* pData is the pointer to the received (SDO-Download) or sent (SDO-Upload) SDO data in
 1295              		.loc 1 632 19 view .LVU437
 1296 00f8 BDE7     		b	.L72
 1297              	.LVL103:
 1298              	.L92:
 632:Lib/ssc/src/sdoserv.c ****             /* pData is the pointer to the received (SDO-Download) or sent (SDO-Upload) SDO data in
 1299              		.loc 1 632 19 view .LVU438
 1300 00fa 3346     		mov	r3, r6
 664:Lib/ssc/src/sdoserv.c ****                         else
ARM GAS  /tmp/ccs70NiP.s 			page 44


 1301              		.loc 1 664 41 view .LVU439
 1302 00fc 0122     		movs	r2, #1
 1303 00fe 0692     		str	r2, [sp, #24]
 634:Lib/ssc/src/sdoserv.c ****             UINT8 segTransfer = 0;
 1304              		.loc 1 634 29 view .LVU440
 1305 0100 0022     		movs	r2, #0
 1306 0102 0792     		str	r2, [sp, #28]
 1307 0104 B7E7     		b	.L72
 1308              	.LVL104:
 1309              	.L103:
 680:Lib/ssc/src/sdoserv.c ****                 {
 1310              		.loc 1 680 17 is_stmt 1 view .LVU441
 680:Lib/ssc/src/sdoserv.c ****                 {
 1311              		.loc 1 680 20 is_stmt 0 view .LVU442
 1312 0106 5BB1     		cbz	r3, .L74
 683:Lib/ssc/src/sdoserv.c ****                         /* an Expedited SDO Download request has always a fixed size (2 Byte CoE-He
 1313              		.loc 1 683 21 is_stmt 1 view .LVU443
 683:Lib/ssc/src/sdoserv.c ****                         /* an Expedited SDO Download request has always a fixed size (2 Byte CoE-He
 1314              		.loc 1 683 24 is_stmt 0 view .LVU444
 1315 0108 B9F10A0F 		cmp	r9, #10
 1316 010c 40F08681 		bne	.L93
 687:Lib/ssc/src/sdoserv.c ****                     /* pData is the pointer to the downloaded object data */
 1317              		.loc 1 687 21 is_stmt 1 view .LVU445
 687:Lib/ssc/src/sdoserv.c ****                     /* pData is the pointer to the downloaded object data */
 1318              		.loc 1 687 90 is_stmt 0 view .LVU446
 1319 0110 CBF38108 		ubfx	r8, fp, #2, #2
 1320              	.LVL105:
 687:Lib/ssc/src/sdoserv.c ****                     /* pData is the pointer to the downloaded object data */
 1321              		.loc 1 687 51 view .LVU447
 1322 0114 C8F10408 		rsb	r8, r8, #4
 1323              	.LVL106:
 689:Lib/ssc/src/sdoserv.c ****                 }
 1324              		.loc 1 689 21 is_stmt 1 view .LVU448
 689:Lib/ssc/src/sdoserv.c ****                 }
 1325              		.loc 1 689 27 is_stmt 0 view .LVU449
 1326 0118 05F10C03 		add	r3, r5, #12
 1327              	.LVL107:
 689:Lib/ssc/src/sdoserv.c ****                 }
 1328              		.loc 1 689 27 view .LVU450
 1329 011c 0793     		str	r3, [sp, #28]
 1330              	.LVL108:
 689:Lib/ssc/src/sdoserv.c ****                 }
 1331              		.loc 1 689 27 view .LVU451
 1332 011e ACE7     		b	.L73
 1333              	.LVL109:
 1334              	.L74:
 1335              	.LBB13:
 697:Lib/ssc/src/sdoserv.c **** 
 1336              		.loc 1 697 21 is_stmt 1 view .LVU452
 697:Lib/ssc/src/sdoserv.c **** 
 1337              		.loc 1 697 53 is_stmt 0 view .LVU453
 1338 0120 EB89     		ldrh	r3, [r5, #14]
 1339              	.LVL110:
 697:Lib/ssc/src/sdoserv.c **** 
 1340              		.loc 1 697 137 view .LVU454
 1341 0122 B5F80C80 		ldrh	r8, [r5, #12]
 1342              	.LVL111:
ARM GAS  /tmp/ccs70NiP.s 			page 45


 697:Lib/ssc/src/sdoserv.c **** 
 1343              		.loc 1 697 28 view .LVU455
 1344 0126 08EB0348 		add	r8, r8, r3, lsl #16
 1345              	.LVL112:
 700:Lib/ssc/src/sdoserv.c ****                     {
 1346              		.loc 1 700 21 is_stmt 1 view .LVU456
 700:Lib/ssc/src/sdoserv.c ****                     {
 1347              		.loc 1 700 63 is_stmt 0 view .LVU457
 1348 012a 08F11002 		add	r2, r8, #16
 700:Lib/ssc/src/sdoserv.c ****                     {
 1349              		.loc 1 700 78 view .LVU458
 1350 012e 534B     		ldr	r3, .L113+8
 1351 0130 1B88     		ldrh	r3, [r3]
 700:Lib/ssc/src/sdoserv.c ****                     {
 1352              		.loc 1 700 24 view .LVU459
 1353 0132 9A42     		cmp	r2, r3
 1354 0134 0DD9     		bls	.L75
 702:Lib/ssc/src/sdoserv.c ****                             return MBXERR_INVALIDSIZE;
 1355              		.loc 1 702 25 is_stmt 1 view .LVU460
 702:Lib/ssc/src/sdoserv.c ****                             return MBXERR_INVALIDSIZE;
 1356              		.loc 1 702 59 is_stmt 0 view .LVU461
 1357 0136 063B     		subs	r3, r3, #6
 702:Lib/ssc/src/sdoserv.c ****                             return MBXERR_INVALIDSIZE;
 1358              		.loc 1 702 28 view .LVU462
 1359 0138 9945     		cmp	r9, r3
 1360 013a 40F07181 		bne	.L106
 1361              	.L76:
 713:Lib/ssc/src/sdoserv.c ****                     /* the received dataSize will be checked in the object specific functions calle
 1362              		.loc 1 713 21 is_stmt 1 view .LVU463
 713:Lib/ssc/src/sdoserv.c ****                     /* the received dataSize will be checked in the object specific functions calle
 1363              		.loc 1 713 27 is_stmt 0 view .LVU464
 1364 013e 05F11003 		add	r3, r5, #16
 1365 0142 0793     		str	r3, [sp, #28]
 1366              	.LVL113:
 716:Lib/ssc/src/sdoserv.c ****                     if ( dataSize > (UINT32)(mbxSize - DOWNLOAD_NORM_REQ_SIZE) )
 1367              		.loc 1 716 21 is_stmt 1 view .LVU465
 717:Lib/ssc/src/sdoserv.c ****                         /* Segmented Download */
 1368              		.loc 1 717 21 view .LVU466
 717:Lib/ssc/src/sdoserv.c ****                         /* Segmented Download */
 1369              		.loc 1 717 54 is_stmt 0 view .LVU467
 1370 0144 A9F10A03 		sub	r3, r9, #10
 1371              	.LVL114:
 717:Lib/ssc/src/sdoserv.c ****                         /* Segmented Download */
 1372              		.loc 1 717 24 view .LVU468
 1373 0148 4345     		cmp	r3, r8
 1374 014a 96D2     		bcs	.L73
 719:Lib/ssc/src/sdoserv.c ****                 }
 1375              		.loc 1 719 37 view .LVU469
 1376 014c 0123     		movs	r3, #1
 1377 014e 0693     		str	r3, [sp, #24]
 1378              	.LVL115:
 719:Lib/ssc/src/sdoserv.c ****                 }
 1379              		.loc 1 719 37 view .LVU470
 1380 0150 93E7     		b	.L73
 1381              	.LVL116:
 1382              	.L75:
 707:Lib/ssc/src/sdoserv.c ****                             /* the mbxSize and the downloadSize are not consistent (mbxSize = downl
ARM GAS  /tmp/ccs70NiP.s 			page 46


 1383              		.loc 1 707 25 is_stmt 1 view .LVU471
 707:Lib/ssc/src/sdoserv.c ****                             /* the mbxSize and the downloadSize are not consistent (mbxSize = downl
 1384              		.loc 1 707 62 is_stmt 0 view .LVU472
 1385 0152 08F10A03 		add	r3, r8, #10
 707:Lib/ssc/src/sdoserv.c ****                             /* the mbxSize and the downloadSize are not consistent (mbxSize = downl
 1386              		.loc 1 707 28 view .LVU473
 1387 0156 9945     		cmp	r9, r3
 1388 0158 F1D0     		beq	.L76
 709:Lib/ssc/src/sdoserv.c ****                     }
 1389              		.loc 1 709 36 view .LVU474
 1390 015a 0826     		movs	r6, #8
 1391 015c AAE7     		b	.L65
 1392              	.LVL117:
 1393              	.L104:
 709:Lib/ssc/src/sdoserv.c ****                     }
 1394              		.loc 1 709 36 view .LVU475
 1395              	.LBE13:
 725:Lib/ssc/src/sdoserv.c ****                 // HBu 02.05.06: Complete Access is only supported with subindex 0 and 1
 1396              		.loc 1 725 33 view .LVU476
 1397 015e 0123     		movs	r3, #1
 1398 0160 0593     		str	r3, [sp, #20]
 1399              	.LVL118:
 1400              	.L77:
 733:Lib/ssc/src/sdoserv.c ****                 {
 1401              		.loc 1 733 17 is_stmt 1 view .LVU477
 733:Lib/ssc/src/sdoserv.c ****                 {
 1402              		.loc 1 733 20 is_stmt 0 view .LVU478
 1403 0162 069B     		ldr	r3, [sp, #24]
 1404 0164 002B     		cmp	r3, #0
 1405 0166 00F0AF80 		beq	.L78
 735:Lib/ssc/src/sdoserv.c ****                     bSdoSegLastToggle     = 1;
 1406              		.loc 1 735 21 is_stmt 1 view .LVU479
 735:Lib/ssc/src/sdoserv.c ****                     bSdoSegLastToggle     = 1;
 1407              		.loc 1 735 44 is_stmt 0 view .LVU480
 1408 016a 0123     		movs	r3, #1
 1409 016c 444A     		ldr	r2, .L113+12
 1410 016e 1370     		strb	r3, [r2]
 736:Lib/ssc/src/sdoserv.c ****                     bSdoSegAccess             = bCompleteAccess;
 1411              		.loc 1 736 21 is_stmt 1 view .LVU481
 736:Lib/ssc/src/sdoserv.c ****                     bSdoSegAccess             = bCompleteAccess;
 1412              		.loc 1 736 43 is_stmt 0 view .LVU482
 1413 0170 444A     		ldr	r2, .L113+16
 1414 0172 1370     		strb	r3, [r2]
 737:Lib/ssc/src/sdoserv.c ****                     nSdoSegIndex             = index;
 1415              		.loc 1 737 21 is_stmt 1 view .LVU483
 737:Lib/ssc/src/sdoserv.c ****                     nSdoSegIndex             = index;
 1416              		.loc 1 737 47 is_stmt 0 view .LVU484
 1417 0174 444B     		ldr	r3, .L113+20
 1418 0176 059A     		ldr	r2, [sp, #20]
 1419 0178 1A70     		strb	r2, [r3]
 738:Lib/ssc/src/sdoserv.c ****                     nSdoSegSubindex         = subindex;
 1420              		.loc 1 738 21 is_stmt 1 view .LVU485
 738:Lib/ssc/src/sdoserv.c ****                     nSdoSegSubindex         = subindex;
 1421              		.loc 1 738 46 is_stmt 0 view .LVU486
 1422 017a 444B     		ldr	r3, .L113+24
 1423 017c A3F800A0 		strh	r10, [r3]	@ movhi
 739:Lib/ssc/src/sdoserv.c ****                     pSdoSegObjEntry        = pObjEntry;
ARM GAS  /tmp/ccs70NiP.s 			page 47


 1424              		.loc 1 739 21 is_stmt 1 view .LVU487
 739:Lib/ssc/src/sdoserv.c ****                     pSdoSegObjEntry        = pObjEntry;
 1425              		.loc 1 739 45 is_stmt 0 view .LVU488
 1426 0180 434B     		ldr	r3, .L113+28
 1427 0182 039A     		ldr	r2, [sp, #12]
 1428 0184 1A70     		strb	r2, [r3]
 740:Lib/ssc/src/sdoserv.c ****                     if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 1429              		.loc 1 740 21 is_stmt 1 view .LVU489
 740:Lib/ssc/src/sdoserv.c ****                     if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 1430              		.loc 1 740 44 is_stmt 0 view .LVU490
 1431 0186 434B     		ldr	r3, .L113+32
 1432 0188 049A     		ldr	r2, [sp, #16]
 1433 018a 1A60     		str	r2, [r3]
 741:Lib/ssc/src/sdoserv.c ****                         nSdoSegCompleteSize    = objLength;
 1434              		.loc 1 741 21 is_stmt 1 view .LVU491
 741:Lib/ssc/src/sdoserv.c ****                         nSdoSegCompleteSize    = objLength;
 1435              		.loc 1 741 24 is_stmt 0 view .LVU492
 1436 018c 402C     		cmp	r4, #64
 1437 018e 25D0     		beq	.L107
 744:Lib/ssc/src/sdoserv.c **** 
 1438              		.loc 1 744 25 is_stmt 1 view .LVU493
 744:Lib/ssc/src/sdoserv.c **** 
 1439              		.loc 1 744 48 is_stmt 0 view .LVU494
 1440 0190 414B     		ldr	r3, .L113+36
 1441 0192 C3F80080 		str	r8, [r3]
 1442              	.L80:
 746:Lib/ssc/src/sdoserv.c ****                     {
 1443              		.loc 1 746 21 is_stmt 1 view .LVU495
 746:Lib/ssc/src/sdoserv.c ****                     {
 1444              		.loc 1 746 37 is_stmt 0 view .LVU496
 1445 0196 414B     		ldr	r3, .L113+40
 1446 0198 1868     		ldr	r0, [r3]
 1447              	.LVL119:
 746:Lib/ssc/src/sdoserv.c ****                     {
 1448              		.loc 1 746 24 view .LVU497
 1449 019a 20B1     		cbz	r0, .L81
 748:Lib/ssc/src/sdoserv.c ****                         pSdoSegData = NULL;
 1450              		.loc 1 748 25 is_stmt 1 view .LVU498
 1451 019c FFF7FEFF 		bl	free
 1452              	.LVL120:
 749:Lib/ssc/src/sdoserv.c ****                     }
 1453              		.loc 1 749 25 view .LVU499
 749:Lib/ssc/src/sdoserv.c ****                     }
 1454              		.loc 1 749 37 is_stmt 0 view .LVU500
 1455 01a0 3E4B     		ldr	r3, .L113+40
 1456 01a2 0022     		movs	r2, #0
 1457 01a4 1A60     		str	r2, [r3]
 1458              	.L81:
 751:Lib/ssc/src/sdoserv.c **** 
 1459              		.loc 1 751 21 is_stmt 1 view .LVU501
 751:Lib/ssc/src/sdoserv.c **** 
 1460              		.loc 1 751 53 is_stmt 0 view .LVU502
 1461 01a6 3C4B     		ldr	r3, .L113+36
 1462 01a8 1868     		ldr	r0, [r3]
 1463 01aa 0130     		adds	r0, r0, #1
 1464 01ac 20F00100 		bic	r0, r0, #1
 1465 01b0 FFF7FEFF 		bl	malloc
ARM GAS  /tmp/ccs70NiP.s 			page 48


 1466              	.LVL121:
 751:Lib/ssc/src/sdoserv.c **** 
 1467              		.loc 1 751 33 view .LVU503
 1468 01b4 394B     		ldr	r3, .L113+40
 1469 01b6 1860     		str	r0, [r3]
 753:Lib/ssc/src/sdoserv.c ****                     {
 1470              		.loc 1 753 21 is_stmt 1 view .LVU504
 753:Lib/ssc/src/sdoserv.c ****                     {
 1471              		.loc 1 753 24 is_stmt 0 view .LVU505
 1472 01b8 A0B1     		cbz	r0, .L108
 764:Lib/ssc/src/sdoserv.c ****                         {
 1473              		.loc 1 764 25 is_stmt 1 view .LVU506
 764:Lib/ssc/src/sdoserv.c ****                         {
 1474              		.loc 1 764 28 is_stmt 0 view .LVU507
 1475 01ba 402C     		cmp	r4, #64
 1476 01bc 19D0     		beq	.L109
 798:Lib/ssc/src/sdoserv.c ****                             nSdoSegService    = SDOSERVICE_DOWNLOADSEGMENTREQ;
 1477              		.loc 1 798 29 is_stmt 1 view .LVU508
 1478 01be A9F10A08 		sub	r8, r9, #10
 1479              	.LVL122:
 798:Lib/ssc/src/sdoserv.c ****                             nSdoSegService    = SDOSERVICE_DOWNLOADSEGMENTREQ;
 1480              		.loc 1 798 29 is_stmt 0 view .LVU509
 1481 01c2 4246     		mov	r2, r8
 1482 01c4 05F11001 		add	r1, r5, #16
 1483 01c8 FFF7FEFF 		bl	memcpy
 1484              	.LVL123:
 799:Lib/ssc/src/sdoserv.c ****                             dataSize = (mbxSize-DOWNLOAD_NORM_REQ_SIZE);
 1485              		.loc 1 799 29 is_stmt 1 view .LVU510
 799:Lib/ssc/src/sdoserv.c ****                             dataSize = (mbxSize-DOWNLOAD_NORM_REQ_SIZE);
 1486              		.loc 1 799 47 is_stmt 0 view .LVU511
 1487 01cc 344B     		ldr	r3, .L113+44
 1488 01ce 0022     		movs	r2, #0
 1489 01d0 1A70     		strb	r2, [r3]
 800:Lib/ssc/src/sdoserv.c ****                         }
 1490              		.loc 1 800 29 is_stmt 1 view .LVU512
 1491              	.LVL124:
 799:Lib/ssc/src/sdoserv.c ****                             dataSize = (mbxSize-DOWNLOAD_NORM_REQ_SIZE);
 1492              		.loc 1 799 47 is_stmt 0 view .LVU513
 1493 01d2 B146     		mov	r9, r6
 1494              	.LVL125:
 1495              	.L85:
 803:Lib/ssc/src/sdoserv.c ****                     }
 1496              		.loc 1 803 25 is_stmt 1 view .LVU514
 803:Lib/ssc/src/sdoserv.c ****                     }
 1497              		.loc 1 803 46 is_stmt 0 view .LVU515
 1498 01d4 334B     		ldr	r3, .L113+48
 1499 01d6 C3F80080 		str	r8, [r3]
 1500 01da 67E7     		b	.L69
 1501              	.LVL126:
 1502              	.L107:
 742:Lib/ssc/src/sdoserv.c ****                     else
 1503              		.loc 1 742 25 is_stmt 1 view .LVU516
 742:Lib/ssc/src/sdoserv.c ****                     else
 1504              		.loc 1 742 48 is_stmt 0 view .LVU517
 1505 01dc 2E4B     		ldr	r3, .L113+36
 1506 01de 029A     		ldr	r2, [sp, #8]
 1507 01e0 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccs70NiP.s 			page 49


 1508 01e2 D8E7     		b	.L80
 1509              	.LVL127:
 1510              	.L108:
 756:Lib/ssc/src/sdoserv.c ****                             abort = ABORTIDX_UNSUPPORTED_ACCESS;
 1511              		.loc 1 756 25 is_stmt 1 view .LVU518
 756:Lib/ssc/src/sdoserv.c ****                             abort = ABORTIDX_UNSUPPORTED_ACCESS;
 1512              		.loc 1 756 27 is_stmt 0 view .LVU519
 1513 01e4 059B     		ldr	r3, [sp, #20]
 1514 01e6 002B     		cmp	r3, #0
 1515 01e8 00F00581 		beq	.L98
 757:Lib/ssc/src/sdoserv.c ****                         else
 1516              		.loc 1 757 35 view .LVU520
 1517 01ec 4FF00509 		mov	r9, #5
 1518              	.LVL128:
 757:Lib/ssc/src/sdoserv.c ****                         else
 1519              		.loc 1 757 35 view .LVU521
 1520 01f0 5CE7     		b	.L69
 1521              	.LVL129:
 1522              	.L109:
 767:Lib/ssc/src/sdoserv.c ****                             if ( abort == 0 )
 1523              		.loc 1 767 29 is_stmt 1 view .LVU522
 767:Lib/ssc/src/sdoserv.c ****                             if ( abort == 0 )
 1524              		.loc 1 767 37 is_stmt 0 view .LVU523
 1525 01f2 059B     		ldr	r3, [sp, #20]
 1526 01f4 0193     		str	r3, [sp, #4]
 1527 01f6 0090     		str	r0, [sp]
 1528 01f8 049B     		ldr	r3, [sp, #16]
 1529 01fa 029A     		ldr	r2, [sp, #8]
 1530 01fc 0399     		ldr	r1, [sp, #12]
 1531 01fe 5046     		mov	r0, r10
 1532 0200 FFF7FEFF 		bl	OBJ_Read
 1533              	.LVL130:
 768:Lib/ssc/src/sdoserv.c ****                             {
 1534              		.loc 1 768 29 is_stmt 1 view .LVU524
 768:Lib/ssc/src/sdoserv.c ****                             {
 1535              		.loc 1 768 32 is_stmt 0 view .LVU525
 1536 0204 8146     		mov	r9, r0
 1537              	.LVL131:
 768:Lib/ssc/src/sdoserv.c ****                             {
 1538              		.loc 1 768 32 view .LVU526
 1539 0206 0028     		cmp	r0, #0
 1540 0208 29D0     		beq	.L110
 773:Lib/ssc/src/sdoserv.c ****                             {
 1541              		.loc 1 773 34 is_stmt 1 view .LVU527
 773:Lib/ssc/src/sdoserv.c ****                             {
 1542              		.loc 1 773 37 is_stmt 0 view .LVU528
 1543 020a FF28     		cmp	r0, #255
 1544 020c E2D1     		bne	.L85
 776:Lib/ssc/src/sdoserv.c ****                                 bStoreCompleteAccess = bCompleteAccess;
 1545              		.loc 1 776 33 is_stmt 1 view .LVU529
 776:Lib/ssc/src/sdoserv.c ****                                 bStoreCompleteAccess = bCompleteAccess;
 1546              		.loc 1 776 46 is_stmt 0 view .LVU530
 1547 020e 264B     		ldr	r3, .L113+52
 1548 0210 0422     		movs	r2, #4
 1549 0212 1A70     		strb	r2, [r3]
 777:Lib/ssc/src/sdoserv.c ****                                 u8StoreSubindex = subindex;
 1550              		.loc 1 777 33 is_stmt 1 view .LVU531
ARM GAS  /tmp/ccs70NiP.s 			page 50


 777:Lib/ssc/src/sdoserv.c ****                                 u8StoreSubindex = subindex;
 1551              		.loc 1 777 54 is_stmt 0 view .LVU532
 1552 0214 254B     		ldr	r3, .L113+56
 1553 0216 059A     		ldr	r2, [sp, #20]
 1554 0218 1A70     		strb	r2, [r3]
 778:Lib/ssc/src/sdoserv.c ****                                 u16StoreIndex = index;
 1555              		.loc 1 778 33 is_stmt 1 view .LVU533
 778:Lib/ssc/src/sdoserv.c ****                                 u16StoreIndex = index;
 1556              		.loc 1 778 49 is_stmt 0 view .LVU534
 1557 021a 254B     		ldr	r3, .L113+60
 1558 021c 039A     		ldr	r2, [sp, #12]
 1559 021e 1A70     		strb	r2, [r3]
 779:Lib/ssc/src/sdoserv.c ****                                 u32StoreDataSize = objLength;
 1560              		.loc 1 779 33 is_stmt 1 view .LVU535
 779:Lib/ssc/src/sdoserv.c ****                                 u32StoreDataSize = objLength;
 1561              		.loc 1 779 47 is_stmt 0 view .LVU536
 1562 0220 244B     		ldr	r3, .L113+64
 1563 0222 A3F800A0 		strh	r10, [r3]	@ movhi
 780:Lib/ssc/src/sdoserv.c ****                                 pStoreData = pSdoSegData;
 1564              		.loc 1 780 33 is_stmt 1 view .LVU537
 780:Lib/ssc/src/sdoserv.c ****                                 pStoreData = pSdoSegData;
 1565              		.loc 1 780 50 is_stmt 0 view .LVU538
 1566 0226 244B     		ldr	r3, .L113+68
 1567 0228 029A     		ldr	r2, [sp, #8]
 1568 022a 1A60     		str	r2, [r3]
 781:Lib/ssc/src/sdoserv.c ****                                 pSdoPendFunc = pObjEntry->Read;
 1569              		.loc 1 781 33 is_stmt 1 view .LVU539
 781:Lib/ssc/src/sdoserv.c ****                                 pSdoPendFunc = pObjEntry->Read;
 1570              		.loc 1 781 44 is_stmt 0 view .LVU540
 1571 022c 1B4B     		ldr	r3, .L113+40
 1572 022e 1A68     		ldr	r2, [r3]
 1573 0230 224B     		ldr	r3, .L113+72
 1574 0232 1A60     		str	r2, [r3]
 782:Lib/ssc/src/sdoserv.c **** 
 1575              		.loc 1 782 33 is_stmt 1 view .LVU541
 782:Lib/ssc/src/sdoserv.c **** 
 1576              		.loc 1 782 57 is_stmt 0 view .LVU542
 1577 0234 049B     		ldr	r3, [sp, #16]
 1578 0236 DA69     		ldr	r2, [r3, #28]
 782:Lib/ssc/src/sdoserv.c **** 
 1579              		.loc 1 782 46 view .LVU543
 1580 0238 214B     		ldr	r3, .L113+76
 1581 023a 1A60     		str	r2, [r3]
 784:Lib/ssc/src/sdoserv.c ****                                 /* we have to store the buffer and the response header */
 1582              		.loc 1 784 33 is_stmt 1 view .LVU544
 784:Lib/ssc/src/sdoserv.c ****                                 /* we have to store the buffer and the response header */
 1583              		.loc 1 784 44 is_stmt 0 view .LVU545
 1584 023c 0D4B     		ldr	r3, .L113
 1585 023e 0122     		movs	r2, #1
 1586 0240 1A70     		strb	r2, [r3]
 786:Lib/ssc/src/sdoserv.c **** 
 1587              		.loc 1 786 33 is_stmt 1 view .LVU546
 786:Lib/ssc/src/sdoserv.c **** 
 1588              		.loc 1 786 47 is_stmt 0 view .LVU547
 1589 0242 204B     		ldr	r3, .L113+80
 1590 0244 1D60     		str	r5, [r3]
 789:Lib/ssc/src/sdoserv.c ****                                 pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]   |= (sdoHead
ARM GAS  /tmp/ccs70NiP.s 			page 51


 1591              		.loc 1 789 33 is_stmt 1 view .LVU548
 789:Lib/ssc/src/sdoserv.c ****                                 pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]   |= (sdoHead
 1592              		.loc 1 789 89 is_stmt 0 view .LVU549
 1593 0246 2B89     		ldrh	r3, [r5, #8]
 1594 0248 03F47F43 		and	r3, r3, #65280
 1595 024c 2B81     		strh	r3, [r5, #8]	@ movhi
 790:Lib/ssc/src/sdoserv.c ****                                 nSdoSegService    = SDOSERVICE_UPLOADSEGMENTREQ;
 1596              		.loc 1 790 33 is_stmt 1 view .LVU550
 790:Lib/ssc/src/sdoserv.c ****                                 nSdoSegService    = SDOSERVICE_UPLOADSEGMENTREQ;
 1597              		.loc 1 790 103 is_stmt 0 view .LVU551
 1598 024e 07F0F007 		and	r7, r7, #240
 1599              	.LVL132:
 790:Lib/ssc/src/sdoserv.c ****                                 nSdoSegService    = SDOSERVICE_UPLOADSEGMENTREQ;
 1600              		.loc 1 790 89 view .LVU552
 1601 0252 3B43     		orrs	r3, r3, r7
 1602 0254 2B81     		strh	r3, [r5, #8]	@ movhi
 791:Lib/ssc/src/sdoserv.c ****                                 return 0;
 1603              		.loc 1 791 33 is_stmt 1 view .LVU553
 791:Lib/ssc/src/sdoserv.c ****                                 return 0;
 1604              		.loc 1 791 51 is_stmt 0 view .LVU554
 1605 0256 124B     		ldr	r3, .L113+44
 1606 0258 6022     		movs	r2, #96
 1607 025a 1A70     		strb	r2, [r3]
 792:Lib/ssc/src/sdoserv.c ****                             }
 1608              		.loc 1 792 33 is_stmt 1 view .LVU555
 792:Lib/ssc/src/sdoserv.c ****                             }
 1609              		.loc 1 792 40 is_stmt 0 view .LVU556
 1610 025c 2AE7     		b	.L65
 1611              	.LVL133:
 1612              	.L110:
 770:Lib/ssc/src/sdoserv.c ****                                 nSdoSegService    = SDOSERVICE_UPLOADSEGMENTREQ;
 1613              		.loc 1 770 33 is_stmt 1 view .LVU557
 1614 025e 4246     		mov	r2, r8
 1615 0260 0E4B     		ldr	r3, .L113+40
 1616 0262 1968     		ldr	r1, [r3]
 1617 0264 05F11000 		add	r0, r5, #16
 1618              	.LVL134:
 770:Lib/ssc/src/sdoserv.c ****                                 nSdoSegService    = SDOSERVICE_UPLOADSEGMENTREQ;
 1619              		.loc 1 770 33 is_stmt 0 view .LVU558
 1620 0268 FFF7FEFF 		bl	memcpy
 1621              	.LVL135:
 771:Lib/ssc/src/sdoserv.c ****                             }
 1622              		.loc 1 771 33 is_stmt 1 view .LVU559
 771:Lib/ssc/src/sdoserv.c ****                             }
 1623              		.loc 1 771 51 is_stmt 0 view .LVU560
 1624 026c 0C4B     		ldr	r3, .L113+44
 1625 026e 6022     		movs	r2, #96
 1626 0270 1A70     		strb	r2, [r3]
 1627 0272 AFE7     		b	.L85
 1628              	.L114:
 1629              		.align	2
 1630              	.L113:
 1631 0274 00000000 		.word	.LANCHOR17
 1632 0278 00000000 		.word	u16SendMbxSize
 1633 027c 00000000 		.word	u16ReceiveMbxSize
 1634 0280 00000000 		.word	.LANCHOR3
 1635 0284 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccs70NiP.s 			page 52


 1636 0288 00000000 		.word	.LANCHOR9
 1637 028c 00000000 		.word	.LANCHOR8
 1638 0290 00000000 		.word	.LANCHOR7
 1639 0294 00000000 		.word	.LANCHOR6
 1640 0298 00000000 		.word	.LANCHOR2
 1641 029c 00000000 		.word	.LANCHOR4
 1642 02a0 00000000 		.word	.LANCHOR5
 1643 02a4 00000000 		.word	.LANCHOR1
 1644 02a8 00000000 		.word	.LANCHOR10
 1645 02ac 00000000 		.word	.LANCHOR11
 1646 02b0 00000000 		.word	.LANCHOR12
 1647 02b4 00000000 		.word	.LANCHOR13
 1648 02b8 00000000 		.word	.LANCHOR14
 1649 02bc 00000000 		.word	.LANCHOR15
 1650 02c0 00000000 		.word	.LANCHOR16
 1651 02c4 00000000 		.word	.LANCHOR18
 1652              	.LVL136:
 1653              	.L78:
 808:Lib/ssc/src/sdoserv.c ****                     {
 1654              		.loc 1 808 21 is_stmt 1 view .LVU561
 808:Lib/ssc/src/sdoserv.c ****                     {
 1655              		.loc 1 808 24 is_stmt 0 view .LVU562
 1656 02c8 029B     		ldr	r3, [sp, #8]
 1657 02ca 43B9     		cbnz	r3, .L86
 812:Lib/ssc/src/sdoserv.c ****                         nSdoSegSubindex         = subindex;
 1658              		.loc 1 812 25 is_stmt 1 view .LVU563
 812:Lib/ssc/src/sdoserv.c ****                         nSdoSegSubindex         = subindex;
 1659              		.loc 1 812 50 is_stmt 0 view .LVU564
 1660 02cc 554B     		ldr	r3, .L115
 1661 02ce A3F800A0 		strh	r10, [r3]	@ movhi
 813:Lib/ssc/src/sdoserv.c ****                         pSdoSegObjEntry        = pObjEntry;
 1662              		.loc 1 813 25 is_stmt 1 view .LVU565
 813:Lib/ssc/src/sdoserv.c ****                         pSdoSegObjEntry        = pObjEntry;
 1663              		.loc 1 813 49 is_stmt 0 view .LVU566
 1664 02d2 554B     		ldr	r3, .L115+4
 1665 02d4 039A     		ldr	r2, [sp, #12]
 1666 02d6 1A70     		strb	r2, [r3]
 814:Lib/ssc/src/sdoserv.c ****                     }
 1667              		.loc 1 814 25 is_stmt 1 view .LVU567
 814:Lib/ssc/src/sdoserv.c ****                     }
 1668              		.loc 1 814 48 is_stmt 0 view .LVU568
 1669 02d8 544B     		ldr	r3, .L115+8
 1670 02da 049A     		ldr	r2, [sp, #16]
 1671 02dc 1A60     		str	r2, [r3]
 1672              	.L86:
 816:Lib/ssc/src/sdoserv.c ****                     {
 1673              		.loc 1 816 21 is_stmt 1 view .LVU569
 816:Lib/ssc/src/sdoserv.c ****                     {
 1674              		.loc 1 816 24 is_stmt 0 view .LVU570
 1675 02de 402C     		cmp	r4, #64
 1676 02e0 31D0     		beq	.L111
 844:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 1677              		.loc 1 844 25 is_stmt 1 view .LVU571
 844:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 1678              		.loc 1 844 33 is_stmt 0 view .LVU572
 1679 02e2 059B     		ldr	r3, [sp, #20]
 1680 02e4 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccs70NiP.s 			page 53


 1681 02e6 079B     		ldr	r3, [sp, #28]
 1682 02e8 0093     		str	r3, [sp]
 1683 02ea 049B     		ldr	r3, [sp, #16]
 1684 02ec 4246     		mov	r2, r8
 1685 02ee 0399     		ldr	r1, [sp, #12]
 1686 02f0 5046     		mov	r0, r10
 1687              	.LVL137:
 844:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 1688              		.loc 1 844 33 view .LVU573
 1689 02f2 FFF7FEFF 		bl	OBJ_Write
 1690              	.LVL138:
 1691 02f6 8146     		mov	r9, r0
 1692              	.LVL139:
 845:Lib/ssc/src/sdoserv.c ****                         {
 1693              		.loc 1 845 25 is_stmt 1 view .LVU574
 845:Lib/ssc/src/sdoserv.c ****                         {
 1694              		.loc 1 845 28 is_stmt 0 view .LVU575
 1695 02f8 FF28     		cmp	r0, #255
 1696 02fa 7FF4D7AE 		bne	.L69
 848:Lib/ssc/src/sdoserv.c ****                             bStoreCompleteAccess = bCompleteAccess;
 1697              		.loc 1 848 29 is_stmt 1 view .LVU576
 848:Lib/ssc/src/sdoserv.c ****                             bStoreCompleteAccess = bCompleteAccess;
 1698              		.loc 1 848 42 is_stmt 0 view .LVU577
 1699 02fe 0123     		movs	r3, #1
 1700 0300 4B4A     		ldr	r2, .L115+12
 1701 0302 1370     		strb	r3, [r2]
 849:Lib/ssc/src/sdoserv.c ****                             u8StoreSubindex = subindex;
 1702              		.loc 1 849 29 is_stmt 1 view .LVU578
 849:Lib/ssc/src/sdoserv.c ****                             u8StoreSubindex = subindex;
 1703              		.loc 1 849 50 is_stmt 0 view .LVU579
 1704 0304 4B4A     		ldr	r2, .L115+16
 1705 0306 0599     		ldr	r1, [sp, #20]
 1706 0308 1170     		strb	r1, [r2]
 850:Lib/ssc/src/sdoserv.c ****                             u16StoreIndex = index;
 1707              		.loc 1 850 29 is_stmt 1 view .LVU580
 850:Lib/ssc/src/sdoserv.c ****                             u16StoreIndex = index;
 1708              		.loc 1 850 45 is_stmt 0 view .LVU581
 1709 030a 4B4A     		ldr	r2, .L115+20
 1710 030c 0399     		ldr	r1, [sp, #12]
 1711 030e 1170     		strb	r1, [r2]
 851:Lib/ssc/src/sdoserv.c ****                             u32StoreDataSize = dataSize;
 1712              		.loc 1 851 29 is_stmt 1 view .LVU582
 851:Lib/ssc/src/sdoserv.c ****                             u32StoreDataSize = dataSize;
 1713              		.loc 1 851 43 is_stmt 0 view .LVU583
 1714 0310 4A4A     		ldr	r2, .L115+24
 1715 0312 A2F800A0 		strh	r10, [r2]	@ movhi
 852:Lib/ssc/src/sdoserv.c ****                             pStoreData = pData;
 1716              		.loc 1 852 29 is_stmt 1 view .LVU584
 852:Lib/ssc/src/sdoserv.c ****                             pStoreData = pData;
 1717              		.loc 1 852 46 is_stmt 0 view .LVU585
 1718 0316 4A4A     		ldr	r2, .L115+28
 1719 0318 C2F80080 		str	r8, [r2]
 853:Lib/ssc/src/sdoserv.c ****                             pSdoPendFunc = pObjEntry->Write;
 1720              		.loc 1 853 29 is_stmt 1 view .LVU586
 853:Lib/ssc/src/sdoserv.c ****                             pSdoPendFunc = pObjEntry->Write;
 1721              		.loc 1 853 40 is_stmt 0 view .LVU587
 1722 031c 494A     		ldr	r2, .L115+32
ARM GAS  /tmp/ccs70NiP.s 			page 54


 1723 031e 0799     		ldr	r1, [sp, #28]
 1724 0320 1160     		str	r1, [r2]
 854:Lib/ssc/src/sdoserv.c **** 
 1725              		.loc 1 854 29 is_stmt 1 view .LVU588
 854:Lib/ssc/src/sdoserv.c **** 
 1726              		.loc 1 854 53 is_stmt 0 view .LVU589
 1727 0322 049A     		ldr	r2, [sp, #16]
 1728 0324 116A     		ldr	r1, [r2, #32]
 854:Lib/ssc/src/sdoserv.c **** 
 1729              		.loc 1 854 42 view .LVU590
 1730 0326 484A     		ldr	r2, .L115+36
 1731 0328 1160     		str	r1, [r2]
 856:Lib/ssc/src/sdoserv.c ****                             /* we have to store the buffer and the response header */
 1732              		.loc 1 856 29 is_stmt 1 view .LVU591
 856:Lib/ssc/src/sdoserv.c ****                             /* we have to store the buffer and the response header */
 1733              		.loc 1 856 40 is_stmt 0 view .LVU592
 1734 032a 484A     		ldr	r2, .L115+40
 1735 032c 1370     		strb	r3, [r2]
 858:Lib/ssc/src/sdoserv.c **** 
 1736              		.loc 1 858 29 is_stmt 1 view .LVU593
 858:Lib/ssc/src/sdoserv.c **** 
 1737              		.loc 1 858 43 is_stmt 0 view .LVU594
 1738 032e 484B     		ldr	r3, .L115+44
 1739 0330 1D60     		str	r5, [r3]
 861:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= (sdoHeader 
 1740              		.loc 1 861 29 is_stmt 1 view .LVU595
 861:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= (sdoHeader 
 1741              		.loc 1 861 83 is_stmt 0 view .LVU596
 1742 0332 2B89     		ldrh	r3, [r5, #8]
 1743 0334 03F47F42 		and	r2, r3, #65280
 1744 0338 2A81     		strh	r2, [r5, #8]	@ movhi
 862:Lib/ssc/src/sdoserv.c ****                             return 0;
 1745              		.loc 1 862 29 is_stmt 1 view .LVU597
 862:Lib/ssc/src/sdoserv.c ****                             return 0;
 1746              		.loc 1 862 100 is_stmt 0 view .LVU598
 1747 033a 07F0F003 		and	r3, r7, #240
 862:Lib/ssc/src/sdoserv.c ****                             return 0;
 1748              		.loc 1 862 86 view .LVU599
 1749 033e 1343     		orrs	r3, r3, r2
 1750 0340 2B81     		strh	r3, [r5, #8]	@ movhi
 863:Lib/ssc/src/sdoserv.c ****                         }
 1751              		.loc 1 863 29 is_stmt 1 view .LVU600
 863:Lib/ssc/src/sdoserv.c ****                         }
 1752              		.loc 1 863 36 is_stmt 0 view .LVU601
 1753 0342 069E     		ldr	r6, [sp, #24]
 1754 0344 B6E6     		b	.L65
 1755              	.LVL140:
 1756              	.L111:
 819:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 1757              		.loc 1 819 25 is_stmt 1 view .LVU602
 819:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 1758              		.loc 1 819 33 is_stmt 0 view .LVU603
 1759 0346 059B     		ldr	r3, [sp, #20]
 1760 0348 0193     		str	r3, [sp, #4]
 1761 034a 079B     		ldr	r3, [sp, #28]
 1762 034c 0093     		str	r3, [sp]
 1763 034e 049B     		ldr	r3, [sp, #16]
ARM GAS  /tmp/ccs70NiP.s 			page 55


 1764 0350 029A     		ldr	r2, [sp, #8]
 1765 0352 0399     		ldr	r1, [sp, #12]
 1766 0354 5046     		mov	r0, r10
 1767              	.LVL141:
 819:Lib/ssc/src/sdoserv.c ****                         if ( abort == ABORTIDX_WORKING )
 1768              		.loc 1 819 33 view .LVU604
 1769 0356 FFF7FEFF 		bl	OBJ_Read
 1770              	.LVL142:
 1771 035a 8146     		mov	r9, r0
 1772              	.LVL143:
 820:Lib/ssc/src/sdoserv.c ****                         {
 1773              		.loc 1 820 25 is_stmt 1 view .LVU605
 820:Lib/ssc/src/sdoserv.c ****                         {
 1774              		.loc 1 820 28 is_stmt 0 view .LVU606
 1775 035c FF28     		cmp	r0, #255
 1776 035e 7FF4A5AE 		bne	.L69
 823:Lib/ssc/src/sdoserv.c ****                             bStoreCompleteAccess = bCompleteAccess;
 1777              		.loc 1 823 29 is_stmt 1 view .LVU607
 823:Lib/ssc/src/sdoserv.c ****                             bStoreCompleteAccess = bCompleteAccess;
 1778              		.loc 1 823 42 is_stmt 0 view .LVU608
 1779 0362 334B     		ldr	r3, .L115+12
 1780 0364 0322     		movs	r2, #3
 1781 0366 1A70     		strb	r2, [r3]
 824:Lib/ssc/src/sdoserv.c ****                             u8StoreSubindex = subindex;
 1782              		.loc 1 824 29 is_stmt 1 view .LVU609
 824:Lib/ssc/src/sdoserv.c ****                             u8StoreSubindex = subindex;
 1783              		.loc 1 824 50 is_stmt 0 view .LVU610
 1784 0368 324B     		ldr	r3, .L115+16
 1785 036a 059A     		ldr	r2, [sp, #20]
 1786 036c 1A70     		strb	r2, [r3]
 825:Lib/ssc/src/sdoserv.c ****                             u16StoreIndex = index;
 1787              		.loc 1 825 29 is_stmt 1 view .LVU611
 825:Lib/ssc/src/sdoserv.c ****                             u16StoreIndex = index;
 1788              		.loc 1 825 45 is_stmt 0 view .LVU612
 1789 036e 324B     		ldr	r3, .L115+20
 1790 0370 039A     		ldr	r2, [sp, #12]
 1791 0372 1A70     		strb	r2, [r3]
 826:Lib/ssc/src/sdoserv.c ****                             u32StoreDataSize = objLength;
 1792              		.loc 1 826 29 is_stmt 1 view .LVU613
 826:Lib/ssc/src/sdoserv.c ****                             u32StoreDataSize = objLength;
 1793              		.loc 1 826 43 is_stmt 0 view .LVU614
 1794 0374 314B     		ldr	r3, .L115+24
 1795 0376 A3F800A0 		strh	r10, [r3]	@ movhi
 827:Lib/ssc/src/sdoserv.c ****                             pStoreData = pData;
 1796              		.loc 1 827 29 is_stmt 1 view .LVU615
 827:Lib/ssc/src/sdoserv.c ****                             pStoreData = pData;
 1797              		.loc 1 827 46 is_stmt 0 view .LVU616
 1798 037a 314B     		ldr	r3, .L115+28
 1799 037c 029A     		ldr	r2, [sp, #8]
 1800 037e 1A60     		str	r2, [r3]
 828:Lib/ssc/src/sdoserv.c ****                             pSdoPendFunc = pObjEntry->Read;
 1801              		.loc 1 828 29 is_stmt 1 view .LVU617
 828:Lib/ssc/src/sdoserv.c ****                             pSdoPendFunc = pObjEntry->Read;
 1802              		.loc 1 828 40 is_stmt 0 view .LVU618
 1803 0380 304B     		ldr	r3, .L115+32
 1804 0382 079A     		ldr	r2, [sp, #28]
 1805 0384 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccs70NiP.s 			page 56


 829:Lib/ssc/src/sdoserv.c **** 
 1806              		.loc 1 829 29 is_stmt 1 view .LVU619
 829:Lib/ssc/src/sdoserv.c **** 
 1807              		.loc 1 829 53 is_stmt 0 view .LVU620
 1808 0386 049B     		ldr	r3, [sp, #16]
 1809 0388 DA69     		ldr	r2, [r3, #28]
 829:Lib/ssc/src/sdoserv.c **** 
 1810              		.loc 1 829 42 view .LVU621
 1811 038a 2F4B     		ldr	r3, .L115+36
 1812 038c 1A60     		str	r2, [r3]
 831:Lib/ssc/src/sdoserv.c ****                             /* we have to store the buffer and the response header */
 1813              		.loc 1 831 29 is_stmt 1 view .LVU622
 831:Lib/ssc/src/sdoserv.c ****                             /* we have to store the buffer and the response header */
 1814              		.loc 1 831 40 is_stmt 0 view .LVU623
 1815 038e 2F4B     		ldr	r3, .L115+40
 1816 0390 0122     		movs	r2, #1
 1817 0392 1A70     		strb	r2, [r3]
 833:Lib/ssc/src/sdoserv.c ****                             
 1818              		.loc 1 833 29 is_stmt 1 view .LVU624
 833:Lib/ssc/src/sdoserv.c ****                             
 1819              		.loc 1 833 43 is_stmt 0 view .LVU625
 1820 0394 2E4B     		ldr	r3, .L115+44
 1821 0396 1D60     		str	r5, [r3]
 836:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= (sdoHeader 
 1822              		.loc 1 836 29 is_stmt 1 view .LVU626
 836:Lib/ssc/src/sdoserv.c ****                             pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET]    |= (sdoHeader 
 1823              		.loc 1 836 83 is_stmt 0 view .LVU627
 1824 0398 2B89     		ldrh	r3, [r5, #8]
 1825 039a 03F47F43 		and	r3, r3, #65280
 1826 039e 2B81     		strh	r3, [r5, #8]	@ movhi
 837:Lib/ssc/src/sdoserv.c ****                             return 0;
 1827              		.loc 1 837 29 is_stmt 1 view .LVU628
 837:Lib/ssc/src/sdoserv.c ****                             return 0;
 1828              		.loc 1 837 100 is_stmt 0 view .LVU629
 1829 03a0 07F0F007 		and	r7, r7, #240
 1830              	.LVL144:
 837:Lib/ssc/src/sdoserv.c ****                             return 0;
 1831              		.loc 1 837 86 view .LVU630
 1832 03a4 3B43     		orrs	r3, r3, r7
 1833 03a6 2B81     		strh	r3, [r5, #8]	@ movhi
 838:Lib/ssc/src/sdoserv.c ****                         }
 1834              		.loc 1 838 29 is_stmt 1 view .LVU631
 838:Lib/ssc/src/sdoserv.c ****                         }
 1835              		.loc 1 838 36 is_stmt 0 view .LVU632
 1836 03a8 069E     		ldr	r6, [sp, #24]
 1837 03aa 83E6     		b	.L65
 1838              	.LVL145:
 1839              	.L68:
 838:Lib/ssc/src/sdoserv.c ****                         }
 1840              		.loc 1 838 36 view .LVU633
 1841              	.LBE15:
 878:Lib/ssc/src/sdoserv.c ****         {
 1842              		.loc 1 878 9 is_stmt 1 view .LVU634
 878:Lib/ssc/src/sdoserv.c ****         {
 1843              		.loc 1 878 22 is_stmt 0 view .LVU635
 1844 03ac 294B     		ldr	r3, .L115+48
 1845 03ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccs70NiP.s 			page 57


 878:Lib/ssc/src/sdoserv.c ****         {
 1846              		.loc 1 878 12 view .LVU636
 1847 03b0 A342     		cmp	r3, r4
 1848 03b2 06D0     		beq	.L112
 604:Lib/ssc/src/sdoserv.c **** 
 1849              		.loc 1 604 12 view .LVU637
 1850 03b4 4FF00008 		mov	r8, #0
 603:Lib/ssc/src/sdoserv.c ****     UINT32 dataSize = 0;
 1851              		.loc 1 603 12 view .LVU638
 1852 03b8 CDF80880 		str	r8, [sp, #8]
 886:Lib/ssc/src/sdoserv.c ****         break;
 1853              		.loc 1 886 19 view .LVU639
 1854 03bc 4FF00309 		mov	r9, #3
 1855              	.LVL146:
 886:Lib/ssc/src/sdoserv.c ****         break;
 1856              		.loc 1 886 19 view .LVU640
 1857 03c0 74E6     		b	.L69
 1858              	.LVL147:
 1859              	.L112:
 880:Lib/ssc/src/sdoserv.c ****                 abort = SdoDownloadSegmentInd( (TDOWNLOADSDOSEGREQMBX MBXMEM *) pSdoInd );
 1860              		.loc 1 880 13 is_stmt 1 view .LVU641
 880:Lib/ssc/src/sdoserv.c ****                 abort = SdoDownloadSegmentInd( (TDOWNLOADSDOSEGREQMBX MBXMEM *) pSdoInd );
 1861              		.loc 1 880 16 is_stmt 0 view .LVU642
 1862 03c2 44B9     		cbnz	r4, .L88
 881:Lib/ssc/src/sdoserv.c ****             else
 1863              		.loc 1 881 17 is_stmt 1 view .LVU643
 881:Lib/ssc/src/sdoserv.c ****             else
 1864              		.loc 1 881 25 is_stmt 0 view .LVU644
 1865 03c4 2846     		mov	r0, r5
 1866              	.LVL148:
 881:Lib/ssc/src/sdoserv.c ****             else
 1867              		.loc 1 881 25 view .LVU645
 1868 03c6 FFF7FEFF 		bl	SdoDownloadSegmentInd
 1869              	.LVL149:
 1870 03ca 8146     		mov	r9, r0
 1871              	.LVL150:
 604:Lib/ssc/src/sdoserv.c **** 
 1872              		.loc 1 604 12 view .LVU646
 1873 03cc 4FF00008 		mov	r8, #0
 603:Lib/ssc/src/sdoserv.c ****     UINT32 dataSize = 0;
 1874              		.loc 1 603 12 view .LVU647
 1875 03d0 CDF80880 		str	r8, [sp, #8]
 1876 03d4 6AE6     		b	.L69
 1877              	.LVL151:
 1878              	.L88:
 883:Lib/ssc/src/sdoserv.c ****         }
 1879              		.loc 1 883 17 is_stmt 1 view .LVU648
 883:Lib/ssc/src/sdoserv.c ****         }
 1880              		.loc 1 883 25 is_stmt 0 view .LVU649
 1881 03d6 2846     		mov	r0, r5
 1882              	.LVL152:
 883:Lib/ssc/src/sdoserv.c ****         }
 1883              		.loc 1 883 25 view .LVU650
 1884 03d8 FFF7FEFF 		bl	SdoUploadSegmentInd
 1885              	.LVL153:
 1886 03dc 8146     		mov	r9, r0
 1887              	.LVL154:
ARM GAS  /tmp/ccs70NiP.s 			page 58


 604:Lib/ssc/src/sdoserv.c **** 
 1888              		.loc 1 604 12 view .LVU651
 1889 03de 4FF00008 		mov	r8, #0
 603:Lib/ssc/src/sdoserv.c ****     UINT32 dataSize = 0;
 1890              		.loc 1 603 12 view .LVU652
 1891 03e2 CDF80880 		str	r8, [sp, #8]
 1892 03e6 61E6     		b	.L69
 1893              	.LVL155:
 1894              	.L90:
 604:Lib/ssc/src/sdoserv.c **** 
 1895              		.loc 1 604 12 view .LVU653
 1896 03e8 4FF00008 		mov	r8, #0
 603:Lib/ssc/src/sdoserv.c ****     UINT32 dataSize = 0;
 1897              		.loc 1 603 12 view .LVU654
 1898 03ec CDF80880 		str	r8, [sp, #8]
 872:Lib/ssc/src/sdoserv.c ****         }
 1899              		.loc 1 872 19 view .LVU655
 1900 03f0 4FF00809 		mov	r9, #8
 1901              	.LVL156:
 872:Lib/ssc/src/sdoserv.c ****         }
 1902              		.loc 1 872 19 view .LVU656
 1903 03f4 5AE6     		b	.L69
 1904              	.LVL157:
 1905              	.L98:
 1906              	.LBB16:
 760:Lib/ssc/src/sdoserv.c ****                     }
 1907              		.loc 1 760 35 view .LVU657
 1908 03f6 4FF00409 		mov	r9, #4
 1909              	.LVL158:
 760:Lib/ssc/src/sdoserv.c ****                     }
 1910              		.loc 1 760 35 view .LVU658
 1911 03fa 57E6     		b	.L69
 1912              	.LVL159:
 1913              	.L105:
 760:Lib/ssc/src/sdoserv.c ****                     }
 1914              		.loc 1 760 35 view .LVU659
 1915              	.LBE16:
 897:Lib/ssc/src/sdoserv.c ****     }
 1916              		.loc 1 897 9 is_stmt 1 view .LVU660
 1917 03fc 0195     		str	r5, [sp, #4]
 1918 03fe 029B     		ldr	r3, [sp, #8]
 1919 0400 0093     		str	r3, [sp]
 1920 0402 1FFA88F3 		uxth	r3, r8
 1921 0406 0BF01002 		and	r2, fp, #16
 1922 040a 2146     		mov	r1, r4
 1923 040c 4846     		mov	r0, r9
 1924 040e FFF7FEFF 		bl	SdoRes
 1925              	.LVL160:
 1926 0412 4FE6     		b	.L65
 1927              	.LVL161:
 1928              	.L89:
 609:Lib/ssc/src/sdoserv.c ****     }
 1929              		.loc 1 609 16 is_stmt 0 view .LVU661
 1930 0414 0926     		movs	r6, #9
 1931 0416 4DE6     		b	.L65
 1932              	.LVL162:
 1933              	.L91:
ARM GAS  /tmp/ccs70NiP.s 			page 59


 1934              	.LBB17:
 645:Lib/ssc/src/sdoserv.c ****                     /* distinguish between expedited and normal upload response within the length o
 1935              		.loc 1 645 32 view .LVU662
 1936 0418 0826     		movs	r6, #8
 1937 041a 4BE6     		b	.L65
 1938              	.LVL163:
 1939              	.L93:
 685:Lib/ssc/src/sdoserv.c ****                     /* dataSize gets the real size of the downloaded object data (1,2,3 or 4) */
 1940              		.loc 1 685 32 view .LVU663
 1941 041c 0826     		movs	r6, #8
 1942 041e 49E6     		b	.L65
 1943              	.LVL164:
 1944              	.L106:
 1945              	.LBB14:
 703:Lib/ssc/src/sdoserv.c ****                     }
 1946              		.loc 1 703 36 view .LVU664
 1947 0420 0826     		movs	r6, #8
 1948 0422 47E6     		b	.L65
 1949              	.L116:
 1950              		.align	2
 1951              	.L115:
 1952 0424 00000000 		.word	.LANCHOR8
 1953 0428 00000000 		.word	.LANCHOR7
 1954 042c 00000000 		.word	.LANCHOR6
 1955 0430 00000000 		.word	.LANCHOR10
 1956 0434 00000000 		.word	.LANCHOR11
 1957 0438 00000000 		.word	.LANCHOR12
 1958 043c 00000000 		.word	.LANCHOR13
 1959 0440 00000000 		.word	.LANCHOR14
 1960 0444 00000000 		.word	.LANCHOR15
 1961 0448 00000000 		.word	.LANCHOR16
 1962 044c 00000000 		.word	.LANCHOR17
 1963 0450 00000000 		.word	.LANCHOR18
 1964 0454 00000000 		.word	.LANCHOR5
 1965              	.LBE14:
 1966              	.LBE17:
 1967              		.cfi_endproc
 1968              	.LFE126:
 1970              		.section	.text.SDOS_SdoRes,"ax",%progbits
 1971              		.align	1
 1972              		.global	SDOS_SdoRes
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1977              	SDOS_SdoRes:
 1978              	.LVL165:
 1979              	.LFB127:
 902:Lib/ssc/src/sdoserv.c **** 
 903:Lib/ssc/src/sdoserv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 904:Lib/ssc/src/sdoserv.c **** /**
 905:Lib/ssc/src/sdoserv.c ****  \param    abort                Result of the SDO access
 906:Lib/ssc/src/sdoserv.c ****  \param    objLength            Complete size of the object
 907:Lib/ssc/src/sdoserv.c ****  \param    pData                Pointer to the mailbox buffer
 908:Lib/ssc/src/sdoserv.c **** 
 909:Lib/ssc/src/sdoserv.c ****  \brief    This function is called when a SDO response shall be sent
 910:Lib/ssc/src/sdoserv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 911:Lib/ssc/src/sdoserv.c **** 
ARM GAS  /tmp/ccs70NiP.s 			page 60


 912:Lib/ssc/src/sdoserv.c **** void SDOS_SdoRes(UINT8 abort, UINT32 objLength, UINT16 MBXMEM *pData)
 913:Lib/ssc/src/sdoserv.c **** {
 1980              		.loc 1 913 1 is_stmt 1 view -0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 914:Lib/ssc/src/sdoserv.c ****     UINT16 dataSize = 0;
 1984              		.loc 1 914 5 view .LVU666
 915:Lib/ssc/src/sdoserv.c **** 
 916:Lib/ssc/src/sdoserv.c ****     if (bSdoInWork)
 1985              		.loc 1 916 5 view .LVU667
 1986              		.loc 1 916 9 is_stmt 0 view .LVU668
 1987 0000 2A4B     		ldr	r3, .L129
 1988 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1989              		.loc 1 916 8 view .LVU669
 1990 0004 002B     		cmp	r3, #0
 1991 0006 50D0     		beq	.L124
 913:Lib/ssc/src/sdoserv.c ****     UINT16 dataSize = 0;
 1992              		.loc 1 913 1 view .LVU670
 1993 0008 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1994              		.cfi_def_cfa_offset 28
 1995              		.cfi_offset 4, -28
 1996              		.cfi_offset 5, -24
 1997              		.cfi_offset 6, -20
 1998              		.cfi_offset 7, -16
 1999              		.cfi_offset 8, -12
 2000              		.cfi_offset 9, -8
 2001              		.cfi_offset 14, -4
 2002 000c 83B0     		sub	sp, sp, #12
 2003              		.cfi_def_cfa_offset 40
 2004 000e 0546     		mov	r5, r0
 2005 0010 0C46     		mov	r4, r1
 2006 0012 1146     		mov	r1, r2
 2007              	.LVL166:
 2008              	.LBB18:
 917:Lib/ssc/src/sdoserv.c ****     {
 918:Lib/ssc/src/sdoserv.c ****         /* SDO-Response is expected */
 919:Lib/ssc/src/sdoserv.c ****         UINT8 command = pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET] & SDOHEADER_COMMAND;
 2009              		.loc 1 919 9 is_stmt 1 view .LVU671
 2010              		.loc 1 919 38 is_stmt 0 view .LVU672
 2011 0014 264B     		ldr	r3, .L129+4
 2012 0016 D3F80080 		ldr	r8, [r3]
 2013              		.loc 1 919 79 view .LVU673
 2014 001a 98F80820 		ldrb	r2, [r8, #8]	@ zero_extendqisi2
 2015              	.LVL167:
 2016              		.loc 1 919 15 view .LVU674
 2017 001e 02F0E009 		and	r9, r2, #224
 2018              	.LVL168:
 920:Lib/ssc/src/sdoserv.c ****         UINT8 completeAccess = pSdoResStored->SdoHeader.Sdo[SDOHEADER_COMMANDOFFSET] & SDOHEADER_CO
 2019              		.loc 1 920 9 is_stmt 1 view .LVU675
 2020              		.loc 1 920 15 is_stmt 0 view .LVU676
 2021 0022 02F01007 		and	r7, r2, #16
 2022              	.LVL169:
 921:Lib/ssc/src/sdoserv.c **** 
 922:Lib/ssc/src/sdoserv.c ****         if ( command == SDOSERVICE_INITIATEUPLOADREQ )
 2023              		.loc 1 922 9 is_stmt 1 view .LVU677
 2024              		.loc 1 922 12 is_stmt 0 view .LVU678
ARM GAS  /tmp/ccs70NiP.s 			page 61


 2025 0026 B9F1400F 		cmp	r9, #64
 2026 002a 0FD0     		beq	.L127
 2027              	.LBE18:
 914:Lib/ssc/src/sdoserv.c **** 
 2028              		.loc 1 914 12 view .LVU679
 2029 002c 0026     		movs	r6, #0
 2030              	.LVL170:
 2031              	.L119:
 2032              	.LBB19:
 923:Lib/ssc/src/sdoserv.c ****         {
 924:Lib/ssc/src/sdoserv.c ****             /* dataSize contains the available size in one mailbox */
 925:Lib/ssc/src/sdoserv.c ****             dataSize = u16SendMbxSize - MBX_HEADER_SIZE - UPLOAD_NORM_RES_SIZE;
 926:Lib/ssc/src/sdoserv.c ****             if ( dataSize < objLength )
 927:Lib/ssc/src/sdoserv.c ****             {
 928:Lib/ssc/src/sdoserv.c ****                 /* Segmented Upload, the variables for the segmented transfer should be initialized
 929:Lib/ssc/src/sdoserv.c ****                 bSdoSegFollows         = TRUE;
 930:Lib/ssc/src/sdoserv.c ****                 bSdoSegLastToggle     = 1;
 931:Lib/ssc/src/sdoserv.c ****                 bSdoSegAccess             = completeAccess;
 932:Lib/ssc/src/sdoserv.c ****                 nSdoSegCompleteSize    = objLength;
 933:Lib/ssc/src/sdoserv.c ****                 nSdoSegService            = SDOSERVICE_UPLOADSEGMENTREQ;
 934:Lib/ssc/src/sdoserv.c ****                 pSdoSegData                = (UINT16 VARMEM *) pData;
 935:Lib/ssc/src/sdoserv.c ****                 /* the first segment shall be copied */
 936:Lib/ssc/src/sdoserv.c ****                 MBXMEMCPY(((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoResStored)->Data, pData, dataSiz
 937:Lib/ssc/src/sdoserv.c ****                 nSdoSegBytesToHandle = dataSize;
 938:Lib/ssc/src/sdoserv.c ****             }
 939:Lib/ssc/src/sdoserv.c ****             else
 940:Lib/ssc/src/sdoserv.c ****             if ( (objLength <= 4) && (objLength > 0) )
 941:Lib/ssc/src/sdoserv.c ****             {
 942:Lib/ssc/src/sdoserv.c ****                 /* Expedited response */
 943:Lib/ssc/src/sdoserv.c ****                 if ( pData != ((TINITSDOUPLOADEXPRESMBX MBXMEM *) pSdoResStored)->Data )
 944:Lib/ssc/src/sdoserv.c ****                 {
 945:Lib/ssc/src/sdoserv.c ****                     /* the data is not in the response buffer yet, it shall be copied */
 946:Lib/ssc/src/sdoserv.c ****                     MBXMEMCPY(((TINITSDOUPLOADEXPRESMBX MBXMEM *) pSdoResStored)->Data, pData, objL
 947:Lib/ssc/src/sdoserv.c ****                 }
 948:Lib/ssc/src/sdoserv.c ****             }
 949:Lib/ssc/src/sdoserv.c ****             else
 950:Lib/ssc/src/sdoserv.c ****             {
 951:Lib/ssc/src/sdoserv.c ****                 /* Normal response */
 952:Lib/ssc/src/sdoserv.c ****                 if ( pData != ((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoResStored)->Data )
 953:Lib/ssc/src/sdoserv.c ****                 {
 954:Lib/ssc/src/sdoserv.c ****                     /* the data is not in the response buffer yet, it shall be copied */
 955:Lib/ssc/src/sdoserv.c ****                     MBXMEMCPY(((TINITSDOUPLOADNORMRESMBX MBXMEM *) pSdoResStored)->Data, pData, obj
 956:Lib/ssc/src/sdoserv.c ****                 }
 957:Lib/ssc/src/sdoserv.c ****             }
 958:Lib/ssc/src/sdoserv.c ****         }
 959:Lib/ssc/src/sdoserv.c **** 
 960:Lib/ssc/src/sdoserv.c ****         /* SDO access is finished, send the response */
 961:Lib/ssc/src/sdoserv.c ****         bSdoInWork = FALSE;
 2033              		.loc 1 961 9 is_stmt 1 view .LVU680
 2034              		.loc 1 961 20 is_stmt 0 view .LVU681
 2035 002e 1F4B     		ldr	r3, .L129
 2036 0030 0022     		movs	r2, #0
 2037 0032 1A70     		strb	r2, [r3]
 962:Lib/ssc/src/sdoserv.c ****         SdoRes(abort, command, completeAccess, dataSize, objLength, pSdoResStored);
 2038              		.loc 1 962 9 is_stmt 1 view .LVU682
 2039 0034 CDF80480 		str	r8, [sp, #4]
 2040 0038 0094     		str	r4, [sp]
ARM GAS  /tmp/ccs70NiP.s 			page 62


 2041 003a 3346     		mov	r3, r6
 2042 003c 3A46     		mov	r2, r7
 2043 003e 4946     		mov	r1, r9
 2044 0040 2846     		mov	r0, r5
 2045 0042 FFF7FEFF 		bl	SdoRes
 2046              	.LVL171:
 2047              	.LBE19:
 963:Lib/ssc/src/sdoserv.c ****     }
 964:Lib/ssc/src/sdoserv.c **** }
 2048              		.loc 1 964 1 is_stmt 0 view .LVU683
 2049 0046 03B0     		add	sp, sp, #12
 2050              		.cfi_remember_state
 2051              		.cfi_def_cfa_offset 28
 2052              		@ sp needed
 2053 0048 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2054              	.LVL172:
 2055              	.L127:
 2056              		.cfi_restore_state
 2057              	.LBB20:
 925:Lib/ssc/src/sdoserv.c ****             if ( dataSize < objLength )
 2058              		.loc 1 925 13 is_stmt 1 view .LVU684
 925:Lib/ssc/src/sdoserv.c ****             if ( dataSize < objLength )
 2059              		.loc 1 925 57 is_stmt 0 view .LVU685
 2060 004c 194B     		ldr	r3, .L129+8
 2061 004e 1E88     		ldrh	r6, [r3]
 925:Lib/ssc/src/sdoserv.c ****             if ( dataSize < objLength )
 2062              		.loc 1 925 22 view .LVU686
 2063 0050 103E     		subs	r6, r6, #16
 2064 0052 B6B2     		uxth	r6, r6
 2065              	.LVL173:
 926:Lib/ssc/src/sdoserv.c ****             {
 2066              		.loc 1 926 13 is_stmt 1 view .LVU687
 926:Lib/ssc/src/sdoserv.c ****             {
 2067              		.loc 1 926 16 is_stmt 0 view .LVU688
 2068 0054 A642     		cmp	r6, r4
 2069 0056 0AD3     		bcc	.L128
 940:Lib/ssc/src/sdoserv.c ****             {
 2070              		.loc 1 940 13 is_stmt 1 view .LVU689
 940:Lib/ssc/src/sdoserv.c ****             {
 2071              		.loc 1 940 35 is_stmt 0 view .LVU690
 2072 0058 631E     		subs	r3, r4, #1
 940:Lib/ssc/src/sdoserv.c ****             {
 2073              		.loc 1 940 16 view .LVU691
 2074 005a 032B     		cmp	r3, #3
 2075 005c 1DD8     		bhi	.L121
 943:Lib/ssc/src/sdoserv.c ****                 {
 2076              		.loc 1 943 17 is_stmt 1 view .LVU692
 943:Lib/ssc/src/sdoserv.c ****                 {
 2077              		.loc 1 943 28 is_stmt 0 view .LVU693
 2078 005e 08F10C00 		add	r0, r8, #12
 2079              	.LVL174:
 943:Lib/ssc/src/sdoserv.c ****                 {
 2080              		.loc 1 943 20 view .LVU694
 2081 0062 8842     		cmp	r0, r1
 2082 0064 E3D0     		beq	.L119
 946:Lib/ssc/src/sdoserv.c ****                 }
 2083              		.loc 1 946 21 is_stmt 1 view .LVU695
ARM GAS  /tmp/ccs70NiP.s 			page 63


 2084 0066 2246     		mov	r2, r4
 2085 0068 FFF7FEFF 		bl	memcpy
 2086              	.LVL175:
 946:Lib/ssc/src/sdoserv.c ****                 }
 2087              		.loc 1 946 21 is_stmt 0 view .LVU696
 2088 006c DFE7     		b	.L119
 2089              	.LVL176:
 2090              	.L128:
 929:Lib/ssc/src/sdoserv.c ****                 bSdoSegLastToggle     = 1;
 2091              		.loc 1 929 17 is_stmt 1 view .LVU697
 929:Lib/ssc/src/sdoserv.c ****                 bSdoSegLastToggle     = 1;
 2092              		.loc 1 929 40 is_stmt 0 view .LVU698
 2093 006e 0123     		movs	r3, #1
 2094 0070 114A     		ldr	r2, .L129+12
 2095 0072 1370     		strb	r3, [r2]
 930:Lib/ssc/src/sdoserv.c ****                 bSdoSegAccess             = completeAccess;
 2096              		.loc 1 930 17 is_stmt 1 view .LVU699
 930:Lib/ssc/src/sdoserv.c ****                 bSdoSegAccess             = completeAccess;
 2097              		.loc 1 930 39 is_stmt 0 view .LVU700
 2098 0074 114A     		ldr	r2, .L129+16
 2099 0076 1370     		strb	r3, [r2]
 931:Lib/ssc/src/sdoserv.c ****                 nSdoSegCompleteSize    = objLength;
 2100              		.loc 1 931 17 is_stmt 1 view .LVU701
 931:Lib/ssc/src/sdoserv.c ****                 nSdoSegCompleteSize    = objLength;
 2101              		.loc 1 931 43 is_stmt 0 view .LVU702
 2102 0078 114B     		ldr	r3, .L129+20
 2103 007a 1F70     		strb	r7, [r3]
 932:Lib/ssc/src/sdoserv.c ****                 nSdoSegService            = SDOSERVICE_UPLOADSEGMENTREQ;
 2104              		.loc 1 932 17 is_stmt 1 view .LVU703
 932:Lib/ssc/src/sdoserv.c ****                 nSdoSegService            = SDOSERVICE_UPLOADSEGMENTREQ;
 2105              		.loc 1 932 40 is_stmt 0 view .LVU704
 2106 007c 114B     		ldr	r3, .L129+24
 2107 007e 1C60     		str	r4, [r3]
 933:Lib/ssc/src/sdoserv.c ****                 pSdoSegData                = (UINT16 VARMEM *) pData;
 2108              		.loc 1 933 17 is_stmt 1 view .LVU705
 933:Lib/ssc/src/sdoserv.c ****                 pSdoSegData                = (UINT16 VARMEM *) pData;
 2109              		.loc 1 933 43 is_stmt 0 view .LVU706
 2110 0080 114B     		ldr	r3, .L129+28
 2111 0082 6022     		movs	r2, #96
 2112 0084 1A70     		strb	r2, [r3]
 934:Lib/ssc/src/sdoserv.c ****                 /* the first segment shall be copied */
 2113              		.loc 1 934 17 is_stmt 1 view .LVU707
 934:Lib/ssc/src/sdoserv.c ****                 /* the first segment shall be copied */
 2114              		.loc 1 934 44 is_stmt 0 view .LVU708
 2115 0086 114B     		ldr	r3, .L129+32
 2116 0088 1960     		str	r1, [r3]
 936:Lib/ssc/src/sdoserv.c ****                 nSdoSegBytesToHandle = dataSize;
 2117              		.loc 1 936 17 is_stmt 1 view .LVU709
 2118 008a 3246     		mov	r2, r6
 2119 008c 08F11000 		add	r0, r8, #16
 2120              	.LVL177:
 936:Lib/ssc/src/sdoserv.c ****                 nSdoSegBytesToHandle = dataSize;
 2121              		.loc 1 936 17 is_stmt 0 view .LVU710
 2122 0090 FFF7FEFF 		bl	memcpy
 2123              	.LVL178:
 937:Lib/ssc/src/sdoserv.c ****             }
 2124              		.loc 1 937 17 is_stmt 1 view .LVU711
ARM GAS  /tmp/ccs70NiP.s 			page 64


 937:Lib/ssc/src/sdoserv.c ****             }
 2125              		.loc 1 937 38 is_stmt 0 view .LVU712
 2126 0094 0E4B     		ldr	r3, .L129+36
 2127 0096 1E60     		str	r6, [r3]
 2128 0098 C9E7     		b	.L119
 2129              	.LVL179:
 2130              	.L121:
 952:Lib/ssc/src/sdoserv.c ****                 {
 2131              		.loc 1 952 17 is_stmt 1 view .LVU713
 952:Lib/ssc/src/sdoserv.c ****                 {
 2132              		.loc 1 952 28 is_stmt 0 view .LVU714
 2133 009a 08F11000 		add	r0, r8, #16
 2134              	.LVL180:
 952:Lib/ssc/src/sdoserv.c ****                 {
 2135              		.loc 1 952 20 view .LVU715
 2136 009e 8842     		cmp	r0, r1
 2137 00a0 C5D0     		beq	.L119
 955:Lib/ssc/src/sdoserv.c ****                 }
 2138              		.loc 1 955 21 is_stmt 1 view .LVU716
 2139 00a2 2246     		mov	r2, r4
 2140 00a4 FFF7FEFF 		bl	memcpy
 2141              	.LVL181:
 955:Lib/ssc/src/sdoserv.c ****                 }
 2142              		.loc 1 955 21 is_stmt 0 view .LVU717
 2143 00a8 C1E7     		b	.L119
 2144              	.LVL182:
 2145              	.L124:
 2146              		.cfi_def_cfa_offset 0
 2147              		.cfi_restore 4
 2148              		.cfi_restore 5
 2149              		.cfi_restore 6
 2150              		.cfi_restore 7
 2151              		.cfi_restore 8
 2152              		.cfi_restore 9
 2153              		.cfi_restore 14
 955:Lib/ssc/src/sdoserv.c ****                 }
 2154              		.loc 1 955 21 view .LVU718
 2155 00aa 7047     		bx	lr
 2156              	.L130:
 2157              		.align	2
 2158              	.L129:
 2159 00ac 00000000 		.word	.LANCHOR17
 2160 00b0 00000000 		.word	.LANCHOR18
 2161 00b4 00000000 		.word	u16SendMbxSize
 2162 00b8 00000000 		.word	.LANCHOR3
 2163 00bc 00000000 		.word	.LANCHOR0
 2164 00c0 00000000 		.word	.LANCHOR9
 2165 00c4 00000000 		.word	.LANCHOR2
 2166 00c8 00000000 		.word	.LANCHOR5
 2167 00cc 00000000 		.word	.LANCHOR4
 2168 00d0 00000000 		.word	.LANCHOR1
 2169              	.LBE20:
 2170              		.cfi_endproc
 2171              	.LFE127:
 2173              		.section	.text.SDOS_SdoInfoInd,"ax",%progbits
 2174              		.align	1
 2175              		.global	SDOS_SdoInfoInd
ARM GAS  /tmp/ccs70NiP.s 			page 65


 2176              		.syntax unified
 2177              		.thumb
 2178              		.thumb_func
 2180              	SDOS_SdoInfoInd:
 2181              	.LVL183:
 2182              	.LFB128:
 965:Lib/ssc/src/sdoserv.c **** 
 966:Lib/ssc/src/sdoserv.c **** 
 967:Lib/ssc/src/sdoserv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 968:Lib/ssc/src/sdoserv.c **** /**
 969:Lib/ssc/src/sdoserv.c ****  \param    pSdoInfoInd      Pointer to the received mailbox data from the master.
 970:Lib/ssc/src/sdoserv.c **** 
 971:Lib/ssc/src/sdoserv.c ****  \return    Indicates if an error occurred while the operation ( good = 0 ).
 972:Lib/ssc/src/sdoserv.c **** 
 973:Lib/ssc/src/sdoserv.c ****  \brief    This function is called when a SDO-Info request service
 974:Lib/ssc/src/sdoserv.c ****             is received from the master and calls depending from
 975:Lib/ssc/src/sdoserv.c ****             the opcode the concerning function.
 976:Lib/ssc/src/sdoserv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 977:Lib/ssc/src/sdoserv.c **** 
 978:Lib/ssc/src/sdoserv.c **** UINT8 SDOS_SdoInfoInd( TSDOINFORMATION MBXMEM *pSdoInfoInd )
 979:Lib/ssc/src/sdoserv.c **** {
 2183              		.loc 1 979 1 is_stmt 1 view -0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 8
 2186              		@ frame_needed = 0, uses_anonymous_args = 0
 2187              		.loc 1 979 1 is_stmt 0 view .LVU720
 2188 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2189              		.cfi_def_cfa_offset 24
 2190              		.cfi_offset 4, -24
 2191              		.cfi_offset 5, -20
 2192              		.cfi_offset 6, -16
 2193              		.cfi_offset 7, -12
 2194              		.cfi_offset 8, -8
 2195              		.cfi_offset 14, -4
 2196 0004 84B0     		sub	sp, sp, #16
 2197              		.cfi_def_cfa_offset 40
 2198 0006 0446     		mov	r4, r0
 980:Lib/ssc/src/sdoserv.c ****     UINT8 abort = 0;
 2199              		.loc 1 980 5 is_stmt 1 view .LVU721
 2200              		.loc 1 980 11 is_stmt 0 view .LVU722
 2201 0008 0023     		movs	r3, #0
 2202 000a 8DF80F30 		strb	r3, [sp, #15]
 981:Lib/ssc/src/sdoserv.c ****     /* the variable opCode contains the requested SDO Information type */
 982:Lib/ssc/src/sdoserv.c ****     UINT8 opCode = (UINT8) ((pSdoInfoInd->SdoHeader.InfoHead & INFOHEAD_OPCODE_MASK) >> INFOHEAD_OP
 2203              		.loc 1 982 5 is_stmt 1 view .LVU723
 2204              		.loc 1 982 62 is_stmt 0 view .LVU724
 2205 000e 057A     		ldrb	r5, [r0, #8]	@ zero_extendqisi2
 2206              		.loc 1 982 11 view .LVU725
 2207 0010 05F07F05 		and	r5, r5, #127
 2208              	.LVL184:
 983:Lib/ssc/src/sdoserv.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry;
 2209              		.loc 1 983 5 is_stmt 1 view .LVU726
 984:Lib/ssc/src/sdoserv.c ****     UINT16 index;
 2210              		.loc 1 984 5 view .LVU727
 985:Lib/ssc/src/sdoserv.c ****     UINT8 flags = COE_SERVICE;
 2211              		.loc 1 985 5 view .LVU728
 986:Lib/ssc/src/sdoserv.c **** 
ARM GAS  /tmp/ccs70NiP.s 			page 66


 987:Lib/ssc/src/sdoserv.c ****     /* it has to be checked if the mailbox protocol is correct, the sent mailbox data length has to
 988:Lib/ssc/src/sdoserv.c ****        great enough for the service header of the requested SDO Information type */
 989:Lib/ssc/src/sdoserv.c ****     if ( opCode == SDOINFOSERVICE_ENTRYDESCRIPTION_Q )
 2212              		.loc 1 989 5 view .LVU729
 2213              		.loc 1 989 8 is_stmt 0 view .LVU730
 2214 0014 052D     		cmp	r5, #5
 2215 0016 30D0     		beq	.L161
 990:Lib/ssc/src/sdoserv.c ****     {
 991:Lib/ssc/src/sdoserv.c ****         if ( pSdoInfoInd->MbxHeader.Length < SIZEOF_SDOINFOENTRYREQSTRUCT )
 992:Lib/ssc/src/sdoserv.c ****             return MBXERR_SIZETOOSHORT;
 993:Lib/ssc/src/sdoserv.c ****     }
 994:Lib/ssc/src/sdoserv.c ****     else
 995:Lib/ssc/src/sdoserv.c ****     {
 996:Lib/ssc/src/sdoserv.c ****         if ( pSdoInfoInd->MbxHeader.Length < SIZEOF_SDOINFOLISTSTRUCT )
 2216              		.loc 1 996 9 is_stmt 1 view .LVU731
 2217              		.loc 1 996 36 is_stmt 0 view .LVU732
 2218 0018 0388     		ldrh	r3, [r0]
 2219              		.loc 1 996 12 view .LVU733
 2220 001a 072B     		cmp	r3, #7
 2221 001c 40F24B81 		bls	.L153
 2222              	.L134:
 997:Lib/ssc/src/sdoserv.c ****             return MBXERR_SIZETOOSHORT;
 998:Lib/ssc/src/sdoserv.c ****     }
 999:Lib/ssc/src/sdoserv.c **** 
1000:Lib/ssc/src/sdoserv.c ****     switch ( opCode )
 2223              		.loc 1 1000 5 is_stmt 1 view .LVU734
 2224 0020 032D     		cmp	r5, #3
 2225 0022 00F0AE80 		beq	.L135
 2226 0026 052D     		cmp	r5, #5
 2227 0028 00F0AB80 		beq	.L135
 2228 002c 012D     		cmp	r5, #1
 2229 002e 29D0     		beq	.L162
1001:Lib/ssc/src/sdoserv.c ****     {
1002:Lib/ssc/src/sdoserv.c ****     case SDOINFOSERVICE_OBJDICTIONARYLIST_Q:
1003:Lib/ssc/src/sdoserv.c ****         /* an object list is requested, check if the list type is supported */
1004:Lib/ssc/src/sdoserv.c ****         if ( SWAPWORD(pSdoInfoInd->SdoHeader.Data.List.ListType) <= INFO_LIST_TYPE_MAX )
1005:Lib/ssc/src/sdoserv.c ****         {
1006:Lib/ssc/src/sdoserv.c ****             UINT16 size = 0;
1007:Lib/ssc/src/sdoserv.c ****             /* the variable listType contains the requested listType */
1008:Lib/ssc/src/sdoserv.c ****             UINT8 listType = (UINT8) SWAPWORD(pSdoInfoInd->SdoHeader.Data.List.ListType);
1009:Lib/ssc/src/sdoserv.c **** 
1010:Lib/ssc/src/sdoserv.c ****             /* the SDO Information Header has to be stored because this function will be
1011:Lib/ssc/src/sdoserv.c ****                called again if the response could not be sent with one mailbox service, the
1012:Lib/ssc/src/sdoserv.c ****                variable nSdoInfoFragmentsLeft is 0 zero for the first call and unequal 0
1013:Lib/ssc/src/sdoserv.c ****                for the following calls */
1014:Lib/ssc/src/sdoserv.c ****             MBXMEMCPY(aSdoInfoHeader, pSdoInfoInd, SDO_INFO_HEADER_BYTE_SIZE);
1015:Lib/ssc/src/sdoserv.c ****             if ( listType-- == 0 )
1016:Lib/ssc/src/sdoserv.c ****             {
1017:Lib/ssc/src/sdoserv.c ****                 /* List-Type 0: length of the lists */
1018:Lib/ssc/src/sdoserv.c ****                 UINT8 i;
1019:Lib/ssc/src/sdoserv.c **** 
1020:Lib/ssc/src/sdoserv.c ****                 /* the needed mailbox size for List-Type 0 response is just 24 bytes, the mailbox h
1021:Lib/ssc/src/sdoserv.c ****                    to be at least 24 bytes to support the SDO Information service */
1022:Lib/ssc/src/sdoserv.c ****                 nSdoInfoFragmentsLeft = 0;
1023:Lib/ssc/src/sdoserv.c ****                 for (i = 0; i < INFO_LIST_TYPE_MAX; i++)
1024:Lib/ssc/src/sdoserv.c ****                 {
1025:Lib/ssc/src/sdoserv.c ****                     UINT16 n = OBJ_GetNoOfObjects(i);
ARM GAS  /tmp/ccs70NiP.s 			page 67


1026:Lib/ssc/src/sdoserv.c **** 
1027:Lib/ssc/src/sdoserv.c ****                     /* copy the number of objects of the list type in the SDO Information response 
1028:Lib/ssc/src/sdoserv.c ****                     ((UINT16 MBXMEM *) &pSdoInfoInd->CoeHeader)[(SIZEOF_SDOINFOLISTSTRUCT>>1)+i] = 
1029:Lib/ssc/src/sdoserv.c ****                 }
1030:Lib/ssc/src/sdoserv.c **** 
1031:Lib/ssc/src/sdoserv.c ****                 /* size of the mailbox service response */
1032:Lib/ssc/src/sdoserv.c ****                 size = (INFO_LIST_TYPE_MAX << 1) + SIZEOF_SDOINFOLISTSTRUCT;
1033:Lib/ssc/src/sdoserv.c ****             }
1034:Lib/ssc/src/sdoserv.c ****             else
1035:Lib/ssc/src/sdoserv.c ****             {
1036:Lib/ssc/src/sdoserv.c ****                 /* object list with indexes is requested */
1037:Lib/ssc/src/sdoserv.c ****                 UINT16 MBXMEM * pData;
1038:Lib/ssc/src/sdoserv.c ****                 UINT16 n = 0;
1039:Lib/ssc/src/sdoserv.c **** 
1040:Lib/ssc/src/sdoserv.c ****                 if ( nSdoInfoFragmentsLeft )
1041:Lib/ssc/src/sdoserv.c ****                 {
1042:Lib/ssc/src/sdoserv.c ****                     /* the next fragment of the SDO Information response shall be sent */
1043:Lib/ssc/src/sdoserv.c ****                     /* initialize size with the maximum size fits into one mailbox service */
1044:Lib/ssc/src/sdoserv.c ****                     {
1045:Lib/ssc/src/sdoserv.c ****                         size = u16SendMbxSize - SIZEOF_SDOINFO - MBX_HEADER_SIZE;
1046:Lib/ssc/src/sdoserv.c ****                     }
1047:Lib/ssc/src/sdoserv.c ****                     /* initialize pData with the pointer where the fragment has to be copied */
1048:Lib/ssc/src/sdoserv.c ****                     pData = &((UINT16 MBXMEM *) &pSdoInfoInd->CoeHeader)[SIZEOF_SDOINFO>>1];
1049:Lib/ssc/src/sdoserv.c ****                     /* initialize index with the next index to be sent */
1050:Lib/ssc/src/sdoserv.c ****                     index = nSdoInfoIndex;
1051:Lib/ssc/src/sdoserv.c ****                     /* decrement the number of fragments to be sent */
1052:Lib/ssc/src/sdoserv.c ****                     nSdoInfoFragmentsLeft--;
1053:Lib/ssc/src/sdoserv.c ****                 }
1054:Lib/ssc/src/sdoserv.c ****                 else
1055:Lib/ssc/src/sdoserv.c ****                 {
1056:Lib/ssc/src/sdoserv.c ****                     /* the first fragment of the SDO Information response has to be sent */
1057:Lib/ssc/src/sdoserv.c ****                     /* get the number of objects of the requested object list */
1058:Lib/ssc/src/sdoserv.c ****                     n = OBJ_GetNoOfObjects(listType);
1059:Lib/ssc/src/sdoserv.c ****                     /* we start with index 0x1000 */
1060:Lib/ssc/src/sdoserv.c ****                     index = 0x1000;
1061:Lib/ssc/src/sdoserv.c ****                     /* initialize size with the maximum size fits into one mailbox service */
1062:Lib/ssc/src/sdoserv.c ****                     {
1063:Lib/ssc/src/sdoserv.c ****                         size = u16SendMbxSize - SIZEOF_SDOINFOLISTSTRUCT - MBX_HEADER_SIZE;
1064:Lib/ssc/src/sdoserv.c ****                     }
1065:Lib/ssc/src/sdoserv.c ****                     /* initialize pData with the pointer where the fragment has to be copied */
1066:Lib/ssc/src/sdoserv.c ****                     pData = &((UINT16 MBXMEM *) &pSdoInfoInd->CoeHeader)[SIZEOF_SDOINFOLISTSTRUCT>>
1067:Lib/ssc/src/sdoserv.c ****                     /*Check if List need to be send in fragments*/
1068:Lib/ssc/src/sdoserv.c ****                     if( (n<<1) > size)
1069:Lib/ssc/src/sdoserv.c ****                     {
1070:Lib/ssc/src/sdoserv.c ****                         /*number of Bytes to transmit don't fit into one mailbox datagram*/
1071:Lib/ssc/src/sdoserv.c **** 
1072:Lib/ssc/src/sdoserv.c ****                         /*calculate number of fragments which need to be send
1073:Lib/ssc/src/sdoserv.c ****                         total number of bytes - bytes which will be transmitted with the current re
1074:Lib/ssc/src/sdoserv.c ****                         */
1075:Lib/ssc/src/sdoserv.c ****                         UINT16 Fragsize = size + 2;
1076:Lib/ssc/src/sdoserv.c ****                         nSdoInfoFragmentsLeft = (((n<<1)-size + (Fragsize-1)) /Fragsize);
1077:Lib/ssc/src/sdoserv.c ****                     }
1078:Lib/ssc/src/sdoserv.c ****                     else
1079:Lib/ssc/src/sdoserv.c ****                     {
1080:Lib/ssc/src/sdoserv.c ****                         nSdoInfoFragmentsLeft = 0;
1081:Lib/ssc/src/sdoserv.c ****                     }
1082:Lib/ssc/src/sdoserv.c ****                 }
ARM GAS  /tmp/ccs70NiP.s 			page 68


1083:Lib/ssc/src/sdoserv.c **** 
1084:Lib/ssc/src/sdoserv.c ****                 /* get the next part of the requested object list */
1085:Lib/ssc/src/sdoserv.c ****                 size = OBJ_GetObjectList(listType, &index, size, pData,&abort);
1086:Lib/ssc/src/sdoserv.c **** 
1087:Lib/ssc/src/sdoserv.c ****                 /* store index for next fragment */
1088:Lib/ssc/src/sdoserv.c ****                 nSdoInfoIndex = index;
1089:Lib/ssc/src/sdoserv.c ****                 /* size contains before the instruction the size still available in the mailbox buf
1090:Lib/ssc/src/sdoserv.c ****                     and shall contain the size of the mailbox response data after the next instruct
1091:Lib/ssc/src/sdoserv.c ****                 {
1092:Lib/ssc/src/sdoserv.c ****                     size = u16SendMbxSize - size - MBX_HEADER_SIZE;
1093:Lib/ssc/src/sdoserv.c ****                 }
1094:Lib/ssc/src/sdoserv.c ****             }
1095:Lib/ssc/src/sdoserv.c **** 
1096:Lib/ssc/src/sdoserv.c ****             /* size of the mailbox response data */
1097:Lib/ssc/src/sdoserv.c ****             pSdoInfoInd->MbxHeader.Length    = size;
1098:Lib/ssc/src/sdoserv.c **** 
1099:Lib/ssc/src/sdoserv.c ****             if(abort == 0)
1100:Lib/ssc/src/sdoserv.c ****             {
1101:Lib/ssc/src/sdoserv.c ****              pSdoInfoInd->SdoHeader.InfoHead &= ~INFOHEAD_OPCODE_MASK;
1102:Lib/ssc/src/sdoserv.c ****              pSdoInfoInd->SdoHeader.InfoHead |= (UINT16) (SDOINFOSERVICE_OBJDICTIONARYLIST_S << INF
1103:Lib/ssc/src/sdoserv.c ****                 /* number of fragments still has to be sent */
1104:Lib/ssc/src/sdoserv.c ****                 pSdoInfoInd->SdoHeader.FragmentsLeft             = SWAPWORD(nSdoInfoFragmentsLeft);
1105:Lib/ssc/src/sdoserv.c **** 
1106:Lib/ssc/src/sdoserv.c ****                 if (nSdoInfoFragmentsLeft)
1107:Lib/ssc/src/sdoserv.c ****                 {
1108:Lib/ssc/src/sdoserv.c ****                     /* there still are fragments to be sent,
1109:Lib/ssc/src/sdoserv.c ****                        the InComplete flag in the SDO Information response has to be sent */
1110:Lib/ssc/src/sdoserv.c ****                     pSdoInfoInd->SdoHeader.InfoHead &= ~ INFOHEADER_INCOMPLETE_MASK;
1111:Lib/ssc/src/sdoserv.c ****                     pSdoInfoInd->SdoHeader.InfoHead |= (UINT16) (SDOINFOSERVICE_INCOMPLETE << INFOH
1112:Lib/ssc/src/sdoserv.c ****                     /* the FRAGMENTS_FOLLOW flag has to be set for the function MBX_MailboxSendReq 
1113:Lib/ssc/src/sdoserv.c ****                        indicate the mailbox handler that still fragments has to be sent so that thi
1114:Lib/ssc/src/sdoserv.c ****                         function shall be called again from COE_ContinueInd when the actual mailbox
1115:Lib/ssc/src/sdoserv.c ****                         was sent */
1116:Lib/ssc/src/sdoserv.c ****                     flags = FRAGMENTS_FOLLOW | COE_SERVICE;
1117:Lib/ssc/src/sdoserv.c ****                 }
1118:Lib/ssc/src/sdoserv.c ****             }
1119:Lib/ssc/src/sdoserv.c ****         }
1120:Lib/ssc/src/sdoserv.c ****         break;
1121:Lib/ssc/src/sdoserv.c **** 
1122:Lib/ssc/src/sdoserv.c ****     case SDOINFOSERVICE_OBJDESCRIPTION_Q:
1123:Lib/ssc/src/sdoserv.c ****     case SDOINFOSERVICE_ENTRYDESCRIPTION_Q:
1124:Lib/ssc/src/sdoserv.c ****         /* get the requested index */
1125:Lib/ssc/src/sdoserv.c ****         index = SWAPWORD(pSdoInfoInd->SdoHeader.Data.Obj.Index);
1126:Lib/ssc/src/sdoserv.c ****         if(index < 0x1000)
1127:Lib/ssc/src/sdoserv.c ****         {
1128:Lib/ssc/src/sdoserv.c ****             /*SDO Info access is only allowed for objects >= 0x1000*/
1129:Lib/ssc/src/sdoserv.c ****             abort = ABORTIDX_UNSUPPORTED_ACCESS;
1130:Lib/ssc/src/sdoserv.c ****         }
1131:Lib/ssc/src/sdoserv.c ****         else
1132:Lib/ssc/src/sdoserv.c ****         {
1133:Lib/ssc/src/sdoserv.c ****             /* get the object handle of the requested index */
1134:Lib/ssc/src/sdoserv.c ****             pObjEntry = OBJ_GetObjectHandle( index );
1135:Lib/ssc/src/sdoserv.c **** 
1136:Lib/ssc/src/sdoserv.c ****             if ( pObjEntry )
1137:Lib/ssc/src/sdoserv.c ****             {
1138:Lib/ssc/src/sdoserv.c ****                 /* object exists */
1139:Lib/ssc/src/sdoserv.c ****                 UINT16 size = 0;
ARM GAS  /tmp/ccs70NiP.s 			page 69


1140:Lib/ssc/src/sdoserv.c ****                 if ( opCode == SDOINFOSERVICE_OBJDESCRIPTION_Q )
1141:Lib/ssc/src/sdoserv.c ****                 {
1142:Lib/ssc/src/sdoserv.c ****                     /* object description is requested */
1143:Lib/ssc/src/sdoserv.c ****                     OBJTOMBXMEMCPY(&pSdoInfoInd->SdoHeader.Data.Obj.Res, OBJ_GetObjDesc(pObjEntry),
1144:Lib/ssc/src/sdoserv.c **** 
1145:Lib/ssc/src/sdoserv.c ****                     /* the mailbox should be big enough that the maximum object description
1146:Lib/ssc/src/sdoserv.c ****                     fits in the mailbox (the fragmentation is not done in the sample code),
1147:Lib/ssc/src/sdoserv.c ****                     so it will be checked only if the object description fits */
1148:Lib/ssc/src/sdoserv.c ****                     size = OBJ_GetDesc(index, 0, pObjEntry, NULL) + SIZEOF_SDOINFOOBJSTRUCT;
1149:Lib/ssc/src/sdoserv.c **** 
1150:Lib/ssc/src/sdoserv.c ****                     if ( size > (u16SendMbxSize - MBX_HEADER_SIZE) )
1151:Lib/ssc/src/sdoserv.c ****                     {
1152:Lib/ssc/src/sdoserv.c ****                         /* size of the object description does not fit in the mailbox,
1153:Lib/ssc/src/sdoserv.c ****                         the object description will be sent without the name */
1154:Lib/ssc/src/sdoserv.c ****                         size = SIZEOF_SDOINFOOBJSTRUCT;
1155:Lib/ssc/src/sdoserv.c ****                     }
1156:Lib/ssc/src/sdoserv.c ****                     else
1157:Lib/ssc/src/sdoserv.c ****                     {
1158:Lib/ssc/src/sdoserv.c ****                         /* object description fits in the mailbox, get the name of the object */
1159:Lib/ssc/src/sdoserv.c ****                         size = OBJ_GetDesc(index, 0, pObjEntry, ((UINT16 MBXMEM *) &(&pSdoInfoInd->
1160:Lib/ssc/src/sdoserv.c ****                     }
1161:Lib/ssc/src/sdoserv.c ****                 }
1162:Lib/ssc/src/sdoserv.c ****                 else
1163:Lib/ssc/src/sdoserv.c ****                 {
1164:Lib/ssc/src/sdoserv.c ****                     /* entry description is requested,
1165:Lib/ssc/src/sdoserv.c ****                     get the requested subindex */
1166:Lib/ssc/src/sdoserv.c ****                     UINT8 subindex = (UINT8) ((pSdoInfoInd->SdoHeader.Data.Entry.Info & ENTRY_MASK_
1167:Lib/ssc/src/sdoserv.c **** 
1168:Lib/ssc/src/sdoserv.c ****                     /* get the maximum subindex */
1169:Lib/ssc/src/sdoserv.c ****                     UINT8 maxSubindex = (OBJ_GetObjDesc(pObjEntry)->ObjFlags & OBJFLAGS_MAXSUBINDEX
1170:Lib/ssc/src/sdoserv.c **** 
1171:Lib/ssc/src/sdoserv.c ****                     if ( subindex <= maxSubindex )
1172:Lib/ssc/src/sdoserv.c ****                     {
1173:Lib/ssc/src/sdoserv.c ****                         UINT16 ObjectFlags;
1174:Lib/ssc/src/sdoserv.c ****                         /* requested subindex is not too great */
1175:Lib/ssc/src/sdoserv.c ****                         /* get the entry description of the requested entry */
1176:Lib/ssc/src/sdoserv.c ****                         OBJTOMBXMEMCPY(&pSdoInfoInd->SdoHeader.Data.Entry.Res, OBJ_GetEntryDesc(pOb
1177:Lib/ssc/src/sdoserv.c **** 
1178:Lib/ssc/src/sdoserv.c ****                         /* the transmission of the value info is not supported yet of the sample co
1179:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->SdoHeader.Data.Entry.Info &= ~ENTRY_MASK_VALUEINFO;
1180:Lib/ssc/src/sdoserv.c ****                         ObjectFlags = OBJ_GetObjDesc(pObjEntry)->ObjFlags;
1181:Lib/ssc/src/sdoserv.c ****                         ObjectFlags = (ObjectFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT
1182:Lib/ssc/src/sdoserv.c **** 
1183:Lib/ssc/src/sdoserv.c ****                         if(((ObjectFlags == OBJCODE_ARR) || (ObjectFlags == OBJCODE_REC)) && (subin
1184:Lib/ssc/src/sdoserv.c ****                         {
1185:Lib/ssc/src/sdoserv.c ****                             OBJTOMBXSTRCPY( ((UINT16 MBXMEM *) &(&pSdoInfoInd->SdoHeader.Data.Entry
1186:Lib/ssc/src/sdoserv.c ****                             size = 12 + SIZEOF_SDOINFO + SIZEOF(TSDOINFOENTRY); // 12: Length of "S
1187:Lib/ssc/src/sdoserv.c ****                         }
1188:Lib/ssc/src/sdoserv.c ****                         else
1189:Lib/ssc/src/sdoserv.c ****                         {
1190:Lib/ssc/src/sdoserv.c ****                             /* the mailbox should be big enough that the maximum entry description
1191:Lib/ssc/src/sdoserv.c ****                             fits in the mailbox (the fragmentation is not done in the sample code),
1192:Lib/ssc/src/sdoserv.c ****                             so it will be checked only if the entry description fits */
1193:Lib/ssc/src/sdoserv.c ****                             size = OBJ_GetDesc(index, subindex, pObjEntry, NULL) + SIZEOF_SDOINFO +
1194:Lib/ssc/src/sdoserv.c ****                             if ( size > (u16SendMbxSize - MBX_HEADER_SIZE) )
1195:Lib/ssc/src/sdoserv.c ****                             {
1196:Lib/ssc/src/sdoserv.c ****                                 /* size of the object description does not fit in the mailbox,
ARM GAS  /tmp/ccs70NiP.s 			page 70


1197:Lib/ssc/src/sdoserv.c ****                                 the object description will be sent without the name */
1198:Lib/ssc/src/sdoserv.c ****                                 size =  SIZEOF_SDOINFO + SIZEOF(TSDOINFOENTRY);
1199:Lib/ssc/src/sdoserv.c ****                             }
1200:Lib/ssc/src/sdoserv.c ****                             else
1201:Lib/ssc/src/sdoserv.c ****                             {
1202:Lib/ssc/src/sdoserv.c ****                                 /* object description fits in the mailbox, get the name of the entr
1203:Lib/ssc/src/sdoserv.c ****                                 size = OBJ_GetDesc(index, subindex, pObjEntry, ((UINT16 MBXMEM *) &
1204:Lib/ssc/src/sdoserv.c ****                             }
1205:Lib/ssc/src/sdoserv.c ****                         }
1206:Lib/ssc/src/sdoserv.c ****                     }
1207:Lib/ssc/src/sdoserv.c ****                     else
1208:Lib/ssc/src/sdoserv.c ****                         abort = ABORTIDX_SUBINDEX_NOT_EXISTING;
1209:Lib/ssc/src/sdoserv.c ****                 }
1210:Lib/ssc/src/sdoserv.c **** 
1211:Lib/ssc/src/sdoserv.c ****                 if ( abort == 0 )
1212:Lib/ssc/src/sdoserv.c ****                 {
1213:Lib/ssc/src/sdoserv.c ****                     {
1214:Lib/ssc/src/sdoserv.c ****                         /* for the object and entry description the sample code does not support th
1215:Lib/ssc/src/sdoserv.c ****                         the mailbox has to be big enough */
1216:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->SdoHeader.FragmentsLeft = 0;
1217:Lib/ssc/src/sdoserv.c ****                         /* store the size of the mailbox data in the mailbox buffer */
1218:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->MbxHeader.Length = size;
1219:Lib/ssc/src/sdoserv.c ****                         /* set the opCode of the SDO Information response */
1220:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->SdoHeader.InfoHead &= ~INFOHEAD_OPCODE_MASK;
1221:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->SdoHeader.InfoHead |= (UINT16)((opCode + 1) << INFOHEAD_OPCODE
1222:Lib/ssc/src/sdoserv.c ****                     }
1223:Lib/ssc/src/sdoserv.c ****                 }
1224:Lib/ssc/src/sdoserv.c ****             }
1225:Lib/ssc/src/sdoserv.c ****             else
1226:Lib/ssc/src/sdoserv.c ****                 abort = ABORTIDX_OBJECT_NOT_EXISTING;
1227:Lib/ssc/src/sdoserv.c ****         }
1228:Lib/ssc/src/sdoserv.c ****         break;
1229:Lib/ssc/src/sdoserv.c ****     default:
1230:Lib/ssc/src/sdoserv.c ****         abort = ABORTIDX_COMMAND_SPECIFIER_UNKNOWN;
 2230              		.loc 1 1230 9 view .LVU735
 2231              		.loc 1 1230 15 is_stmt 0 view .LVU736
 2232 0030 0323     		movs	r3, #3
 2233 0032 8DF80F30 		strb	r3, [sp, #15]
 985:Lib/ssc/src/sdoserv.c **** 
 2234              		.loc 1 985 11 view .LVU737
 2235 0036 0221     		movs	r1, #2
 2236              	.LVL185:
 2237              	.L137:
1231:Lib/ssc/src/sdoserv.c ****     }
1232:Lib/ssc/src/sdoserv.c **** 
1233:Lib/ssc/src/sdoserv.c ****     if ( abort )
 2238              		.loc 1 1233 5 is_stmt 1 view .LVU738
 2239              		.loc 1 1233 10 is_stmt 0 view .LVU739
 2240 0038 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 2241              		.loc 1 1233 8 view .LVU740
 2242 003c 9BB1     		cbz	r3, .L151
1234:Lib/ssc/src/sdoserv.c ****     {
1235:Lib/ssc/src/sdoserv.c ****         /* send a SDO Information Error response */
1236:Lib/ssc/src/sdoserv.c ****         pSdoInfoInd->MbxHeader.Length = SIZEOF_SDOINFOERRORSTRUCT;
 2243              		.loc 1 1236 9 is_stmt 1 view .LVU741
 2244              		.loc 1 1236 39 is_stmt 0 view .LVU742
 2245 003e 0A23     		movs	r3, #10
ARM GAS  /tmp/ccs70NiP.s 			page 71


 2246 0040 2380     		strh	r3, [r4]	@ movhi
1237:Lib/ssc/src/sdoserv.c **** 
1238:Lib/ssc/src/sdoserv.c ****         pSdoInfoInd->SdoHeader.InfoHead &= ~INFOHEAD_OPCODE_MASK;
 2247              		.loc 1 1238 9 is_stmt 1 view .LVU743
 2248              		.loc 1 1238 41 is_stmt 0 view .LVU744
 2249 0042 2389     		ldrh	r3, [r4, #8]
 2250 0044 23F07F03 		bic	r3, r3, #127
 2251 0048 9BB2     		uxth	r3, r3
 2252 004a 2381     		strh	r3, [r4, #8]	@ movhi
1239:Lib/ssc/src/sdoserv.c ****         pSdoInfoInd->SdoHeader.InfoHead |= (UINT16) ((SDOINFOSERVICE_ERROR_Q) << INFOHEAD_OPCODE_SH
 2253              		.loc 1 1239 9 is_stmt 1 view .LVU745
 2254              		.loc 1 1239 41 is_stmt 0 view .LVU746
 2255 004c 43F00703 		orr	r3, r3, #7
 2256 0050 2381     		strh	r3, [r4, #8]	@ movhi
1240:Lib/ssc/src/sdoserv.c **** 
1241:Lib/ssc/src/sdoserv.c ****         pSdoInfoInd->SdoHeader.FragmentsLeft = 0;
 2257              		.loc 1 1241 9 is_stmt 1 view .LVU747
 2258              		.loc 1 1241 46 is_stmt 0 view .LVU748
 2259 0052 0023     		movs	r3, #0
 2260 0054 6381     		strh	r3, [r4, #10]	@ movhi
1242:Lib/ssc/src/sdoserv.c ****         pSdoInfoInd->SdoHeader.Data.Error.ErrorCode = SWAPDWORD(cAbortCode[abort]);
 2261              		.loc 1 1242 9 is_stmt 1 view .LVU749
 2262              		.loc 1 1242 55 is_stmt 0 view .LVU750
 2263 0056 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 2264 005a 984A     		ldr	r2, .L168
 2265 005c 52F82020 		ldr	r2, [r2, r0, lsl #2]
 2266              		.loc 1 1242 53 view .LVU751
 2267 0060 E260     		str	r2, [r4, #12]
1243:Lib/ssc/src/sdoserv.c **** 
1244:Lib/ssc/src/sdoserv.c ****         nSdoInfoFragmentsLeft = 0;
 2268              		.loc 1 1244 9 is_stmt 1 view .LVU752
 2269              		.loc 1 1244 31 is_stmt 0 view .LVU753
 2270 0062 974A     		ldr	r2, .L168+4
 2271 0064 1380     		strh	r3, [r2]	@ movhi
 2272              	.L151:
1245:Lib/ssc/src/sdoserv.c ****     }
1246:Lib/ssc/src/sdoserv.c **** 
1247:Lib/ssc/src/sdoserv.c ****     if (MBX_MailboxSendReq((TMBX MBXMEM *) pSdoInfoInd, flags) != 0)
 2273              		.loc 1 1247 5 is_stmt 1 view .LVU754
 2274              		.loc 1 1247 9 is_stmt 0 view .LVU755
 2275 0066 2046     		mov	r0, r4
 2276 0068 FFF7FEFF 		bl	MBX_MailboxSendReq
 2277              	.LVL186:
 2278              		.loc 1 1247 8 view .LVU756
 2279 006c 10B1     		cbz	r0, .L133
1248:Lib/ssc/src/sdoserv.c ****     {
1249:Lib/ssc/src/sdoserv.c ****         /* if the mailbox response could not be sent (or stored), the response will be
1250:Lib/ssc/src/sdoserv.c ****            stored in the variable pCoeSendStored and will be sent automatically
1251:Lib/ssc/src/sdoserv.c ****             from the mailbox handler (COE_ContinueInd) when the send mailbox will be read
1252:Lib/ssc/src/sdoserv.c ****             the next time from the master */
1253:Lib/ssc/src/sdoserv.c ****         pCoeSendStored = (TMBX MBXMEM *) pSdoInfoInd;
 2280              		.loc 1 1253 9 is_stmt 1 view .LVU757
 2281              		.loc 1 1253 24 is_stmt 0 view .LVU758
 2282 006e 954B     		ldr	r3, .L168+8
 2283 0070 1C60     		str	r4, [r3]
1254:Lib/ssc/src/sdoserv.c ****     }
1255:Lib/ssc/src/sdoserv.c **** 
ARM GAS  /tmp/ccs70NiP.s 			page 72


1256:Lib/ssc/src/sdoserv.c ****     return 0;
 2284              		.loc 1 1256 12 view .LVU759
 2285 0072 0020     		movs	r0, #0
 2286              	.L133:
1257:Lib/ssc/src/sdoserv.c **** }
 2287              		.loc 1 1257 1 view .LVU760
 2288 0074 04B0     		add	sp, sp, #16
 2289              		.cfi_remember_state
 2290              		.cfi_def_cfa_offset 24
 2291              		@ sp needed
 2292 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2293              	.LVL187:
 2294              	.L161:
 2295              		.cfi_restore_state
 991:Lib/ssc/src/sdoserv.c ****             return MBXERR_SIZETOOSHORT;
 2296              		.loc 1 991 9 is_stmt 1 view .LVU761
 991:Lib/ssc/src/sdoserv.c ****             return MBXERR_SIZETOOSHORT;
 2297              		.loc 1 991 36 is_stmt 0 view .LVU762
 2298 007a 0388     		ldrh	r3, [r0]
 991:Lib/ssc/src/sdoserv.c ****             return MBXERR_SIZETOOSHORT;
 2299              		.loc 1 991 12 view .LVU763
 2300 007c 092B     		cmp	r3, #9
 2301 007e CFD8     		bhi	.L134
 992:Lib/ssc/src/sdoserv.c ****     }
 2302              		.loc 1 992 20 view .LVU764
 2303 0080 0620     		movs	r0, #6
 2304              	.LVL188:
 992:Lib/ssc/src/sdoserv.c ****     }
 2305              		.loc 1 992 20 view .LVU765
 2306 0082 F7E7     		b	.L133
 2307              	.LVL189:
 2308              	.L162:
1004:Lib/ssc/src/sdoserv.c ****         {
 2309              		.loc 1 1004 9 is_stmt 1 view .LVU766
1004:Lib/ssc/src/sdoserv.c ****         {
 2310              		.loc 1 1004 14 is_stmt 0 view .LVU767
 2311 0084 A589     		ldrh	r5, [r4, #12]
 2312              	.LVL190:
1004:Lib/ssc/src/sdoserv.c ****         {
 2313              		.loc 1 1004 12 view .LVU768
 2314 0086 052D     		cmp	r5, #5
 2315 0088 01D9     		bls	.L163
 985:Lib/ssc/src/sdoserv.c **** 
 2316              		.loc 1 985 11 view .LVU769
 2317 008a 0221     		movs	r1, #2
 2318 008c D4E7     		b	.L137
 2319              	.L163:
 2320              	.LBB21:
1006:Lib/ssc/src/sdoserv.c ****             /* the variable listType contains the requested listType */
 2321              		.loc 1 1006 13 is_stmt 1 view .LVU770
 2322              	.LVL191:
1008:Lib/ssc/src/sdoserv.c **** 
 2323              		.loc 1 1008 13 view .LVU771
1008:Lib/ssc/src/sdoserv.c **** 
 2324              		.loc 1 1008 19 is_stmt 0 view .LVU772
 2325 008e EDB2     		uxtb	r5, r5
 2326              	.LVL192:
ARM GAS  /tmp/ccs70NiP.s 			page 73


1014:Lib/ssc/src/sdoserv.c ****             if ( listType-- == 0 )
 2327              		.loc 1 1014 13 is_stmt 1 view .LVU773
 2328 0090 8D4B     		ldr	r3, .L168+12
 2329 0092 2068     		ldr	r0, [r4]	@ unaligned
 2330              	.LVL193:
1014:Lib/ssc/src/sdoserv.c ****             if ( listType-- == 0 )
 2331              		.loc 1 1014 13 is_stmt 0 view .LVU774
 2332 0094 6168     		ldr	r1, [r4, #4]	@ unaligned
 2333 0096 A268     		ldr	r2, [r4, #8]	@ unaligned
 2334 0098 07C3     		stmia	r3!, {r0, r1, r2}
 2335              	.LVL194:
1014:Lib/ssc/src/sdoserv.c ****             if ( listType-- == 0 )
 2336              		.loc 1 1014 13 view .LVU775
 2337 009a A289     		ldrh	r2, [r4, #12]	@ unaligned
 2338 009c 1A80     		strh	r2, [r3]	@ unaligned
1015:Lib/ssc/src/sdoserv.c ****             {
 2339              		.loc 1 1015 13 is_stmt 1 view .LVU776
1015:Lib/ssc/src/sdoserv.c ****             {
 2340              		.loc 1 1015 26 is_stmt 0 view .LVU777
 2341 009e 681E     		subs	r0, r5, #1
 2342 00a0 C6B2     		uxtb	r6, r0
 2343              	.LVL195:
1015:Lib/ssc/src/sdoserv.c ****             {
 2344              		.loc 1 1015 16 view .LVU778
 2345 00a2 65BB     		cbnz	r5, .L138
 2346              	.LBB22:
1018:Lib/ssc/src/sdoserv.c **** 
 2347              		.loc 1 1018 17 is_stmt 1 view .LVU779
1022:Lib/ssc/src/sdoserv.c ****                 for (i = 0; i < INFO_LIST_TYPE_MAX; i++)
 2348              		.loc 1 1022 17 view .LVU780
1022:Lib/ssc/src/sdoserv.c ****                 for (i = 0; i < INFO_LIST_TYPE_MAX; i++)
 2349              		.loc 1 1022 39 is_stmt 0 view .LVU781
 2350 00a4 864B     		ldr	r3, .L168+4
 2351 00a6 0022     		movs	r2, #0
 2352 00a8 1A80     		strh	r2, [r3]	@ movhi
1023:Lib/ssc/src/sdoserv.c ****                 {
 2353              		.loc 1 1023 17 is_stmt 1 view .LVU782
 2354              	.LVL196:
1023:Lib/ssc/src/sdoserv.c ****                 {
 2355              		.loc 1 1023 17 is_stmt 0 view .LVU783
 2356 00aa 08E0     		b	.L139
 2357              	.LVL197:
 2358              	.L140:
 2359              	.LBB23:
1025:Lib/ssc/src/sdoserv.c **** 
 2360              		.loc 1 1025 21 is_stmt 1 discriminator 3 view .LVU784
1025:Lib/ssc/src/sdoserv.c **** 
 2361              		.loc 1 1025 32 is_stmt 0 discriminator 3 view .LVU785
 2362 00ac 2846     		mov	r0, r5
 2363 00ae FFF7FEFF 		bl	OBJ_GetNoOfObjects
 2364              	.LVL198:
1028:Lib/ssc/src/sdoserv.c ****                 }
 2365              		.loc 1 1028 21 is_stmt 1 discriminator 3 view .LVU786
1028:Lib/ssc/src/sdoserv.c ****                 }
 2366              		.loc 1 1028 40 is_stmt 0 discriminator 3 view .LVU787
 2367 00b2 A31D     		adds	r3, r4, #6
1028:Lib/ssc/src/sdoserv.c ****                 }
ARM GAS  /tmp/ccs70NiP.s 			page 74


 2368              		.loc 1 1028 94 discriminator 3 view .LVU788
 2369 00b4 2A1D     		adds	r2, r5, #4
1028:Lib/ssc/src/sdoserv.c ****                 }
 2370              		.loc 1 1028 98 discriminator 3 view .LVU789
 2371 00b6 23F81200 		strh	r0, [r3, r2, lsl #1]	@ movhi
 2372              	.LBE23:
1023:Lib/ssc/src/sdoserv.c ****                 {
 2373              		.loc 1 1023 53 is_stmt 1 discriminator 3 view .LVU790
1023:Lib/ssc/src/sdoserv.c ****                 {
 2374              		.loc 1 1023 54 is_stmt 0 discriminator 3 view .LVU791
 2375 00ba 0135     		adds	r5, r5, #1
 2376              	.LVL199:
1023:Lib/ssc/src/sdoserv.c ****                 {
 2377              		.loc 1 1023 54 discriminator 3 view .LVU792
 2378 00bc EDB2     		uxtb	r5, r5
 2379              	.LVL200:
 2380              	.L139:
1023:Lib/ssc/src/sdoserv.c ****                 {
 2381              		.loc 1 1023 29 is_stmt 1 discriminator 1 view .LVU793
1023:Lib/ssc/src/sdoserv.c ****                 {
 2382              		.loc 1 1023 17 is_stmt 0 discriminator 1 view .LVU794
 2383 00be 042D     		cmp	r5, #4
 2384 00c0 F4D9     		bls	.L140
1032:Lib/ssc/src/sdoserv.c ****             }
 2385              		.loc 1 1032 22 view .LVU795
 2386 00c2 1223     		movs	r3, #18
 2387              	.LVL201:
 2388              	.L141:
1032:Lib/ssc/src/sdoserv.c ****             }
 2389              		.loc 1 1032 22 view .LVU796
 2390              	.LBE22:
1097:Lib/ssc/src/sdoserv.c **** 
 2391              		.loc 1 1097 13 is_stmt 1 view .LVU797
1097:Lib/ssc/src/sdoserv.c **** 
 2392              		.loc 1 1097 46 is_stmt 0 view .LVU798
 2393 00c4 2380     		strh	r3, [r4]	@ movhi
1099:Lib/ssc/src/sdoserv.c ****             {
 2394              		.loc 1 1099 13 is_stmt 1 view .LVU799
1099:Lib/ssc/src/sdoserv.c ****             {
 2395              		.loc 1 1099 22 is_stmt 0 view .LVU800
 2396 00c6 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 2397              	.LVL202:
1099:Lib/ssc/src/sdoserv.c ****             {
 2398              		.loc 1 1099 15 view .LVU801
 2399 00ca 002B     		cmp	r3, #0
 2400 00cc 40F0ED80 		bne	.L155
1101:Lib/ssc/src/sdoserv.c ****              pSdoInfoInd->SdoHeader.InfoHead |= (UINT16) (SDOINFOSERVICE_OBJDICTIONARYLIST_S << INF
 2401              		.loc 1 1101 14 is_stmt 1 view .LVU802
1101:Lib/ssc/src/sdoserv.c ****              pSdoInfoInd->SdoHeader.InfoHead |= (UINT16) (SDOINFOSERVICE_OBJDICTIONARYLIST_S << INF
 2402              		.loc 1 1101 46 is_stmt 0 view .LVU803
 2403 00d0 2389     		ldrh	r3, [r4, #8]
 2404 00d2 23F07F03 		bic	r3, r3, #127
 2405 00d6 9BB2     		uxth	r3, r3
 2406 00d8 2381     		strh	r3, [r4, #8]	@ movhi
1102:Lib/ssc/src/sdoserv.c ****                 /* number of fragments still has to be sent */
 2407              		.loc 1 1102 14 is_stmt 1 view .LVU804
1102:Lib/ssc/src/sdoserv.c ****                 /* number of fragments still has to be sent */
ARM GAS  /tmp/ccs70NiP.s 			page 75


 2408              		.loc 1 1102 46 is_stmt 0 view .LVU805
 2409 00da 43F00203 		orr	r3, r3, #2
 2410 00de 2381     		strh	r3, [r4, #8]	@ movhi
1104:Lib/ssc/src/sdoserv.c **** 
 2411              		.loc 1 1104 17 is_stmt 1 view .LVU806
1104:Lib/ssc/src/sdoserv.c **** 
 2412              		.loc 1 1104 66 is_stmt 0 view .LVU807
 2413 00e0 774A     		ldr	r2, .L168+4
 2414 00e2 1288     		ldrh	r2, [r2]
 2415 00e4 6281     		strh	r2, [r4, #10]	@ movhi
1106:Lib/ssc/src/sdoserv.c ****                 {
 2416              		.loc 1 1106 17 is_stmt 1 view .LVU808
1106:Lib/ssc/src/sdoserv.c ****                 {
 2417              		.loc 1 1106 20 is_stmt 0 view .LVU809
 2418 00e6 002A     		cmp	r2, #0
 2419 00e8 00F0E180 		beq	.L156
1110:Lib/ssc/src/sdoserv.c ****                     pSdoInfoInd->SdoHeader.InfoHead |= (UINT16) (SDOINFOSERVICE_INCOMPLETE << INFOH
 2420              		.loc 1 1110 21 is_stmt 1 view .LVU810
1110:Lib/ssc/src/sdoserv.c ****                     pSdoInfoInd->SdoHeader.InfoHead |= (UINT16) (SDOINFOSERVICE_INCOMPLETE << INFOH
 2421              		.loc 1 1110 53 is_stmt 0 view .LVU811
 2422 00ec 23F08003 		bic	r3, r3, #128
 2423 00f0 9BB2     		uxth	r3, r3
 2424 00f2 2381     		strh	r3, [r4, #8]	@ movhi
1111:Lib/ssc/src/sdoserv.c ****                     /* the FRAGMENTS_FOLLOW flag has to be set for the function MBX_MailboxSendReq 
 2425              		.loc 1 1111 21 is_stmt 1 view .LVU812
1111:Lib/ssc/src/sdoserv.c ****                     /* the FRAGMENTS_FOLLOW flag has to be set for the function MBX_MailboxSendReq 
 2426              		.loc 1 1111 53 is_stmt 0 view .LVU813
 2427 00f4 43F08003 		orr	r3, r3, #128
 2428 00f8 2381     		strh	r3, [r4, #8]	@ movhi
1116:Lib/ssc/src/sdoserv.c ****                 }
 2429              		.loc 1 1116 21 is_stmt 1 view .LVU814
 2430              	.LVL203:
1116:Lib/ssc/src/sdoserv.c ****                 }
 2431              		.loc 1 1116 27 is_stmt 0 view .LVU815
 2432 00fa 8221     		movs	r1, #130
 2433 00fc 9CE7     		b	.L137
 2434              	.LVL204:
 2435              	.L138:
 2436              	.LBB24:
1037:Lib/ssc/src/sdoserv.c ****                 UINT16 n = 0;
 2437              		.loc 1 1037 17 is_stmt 1 view .LVU816
1038:Lib/ssc/src/sdoserv.c **** 
 2438              		.loc 1 1038 17 view .LVU817
1040:Lib/ssc/src/sdoserv.c ****                 {
 2439              		.loc 1 1040 17 view .LVU818
1040:Lib/ssc/src/sdoserv.c ****                 {
 2440              		.loc 1 1040 22 is_stmt 0 view .LVU819
 2441 00fe 704B     		ldr	r3, .L168+4
 2442 0100 1988     		ldrh	r1, [r3]
1040:Lib/ssc/src/sdoserv.c ****                 {
 2443              		.loc 1 1040 20 view .LVU820
 2444 0102 F1B1     		cbz	r1, .L142
1045:Lib/ssc/src/sdoserv.c ****                     }
 2445              		.loc 1 1045 25 is_stmt 1 view .LVU821
1045:Lib/ssc/src/sdoserv.c ****                     }
 2446              		.loc 1 1045 64 is_stmt 0 view .LVU822
 2447 0104 714B     		ldr	r3, .L168+16
ARM GAS  /tmp/ccs70NiP.s 			page 76


 2448 0106 1A88     		ldrh	r2, [r3]
1045:Lib/ssc/src/sdoserv.c ****                     }
 2449              		.loc 1 1045 30 view .LVU823
 2450 0108 0C3A     		subs	r2, r2, #12
 2451 010a 92B2     		uxth	r2, r2
 2452              	.LVL205:
1048:Lib/ssc/src/sdoserv.c ****                     /* initialize index with the next index to be sent */
 2453              		.loc 1 1048 21 is_stmt 1 view .LVU824
1048:Lib/ssc/src/sdoserv.c ****                     /* initialize index with the next index to be sent */
 2454              		.loc 1 1048 27 is_stmt 0 view .LVU825
 2455 010c 04F10C03 		add	r3, r4, #12
 2456              	.LVL206:
1050:Lib/ssc/src/sdoserv.c ****                     /* decrement the number of fragments to be sent */
 2457              		.loc 1 1050 21 is_stmt 1 view .LVU826
1050:Lib/ssc/src/sdoserv.c ****                     /* decrement the number of fragments to be sent */
 2458              		.loc 1 1050 27 is_stmt 0 view .LVU827
 2459 0110 6F48     		ldr	r0, .L168+20
 2460 0112 0088     		ldrh	r0, [r0]
 2461 0114 ADF80C00 		strh	r0, [sp, #12]	@ movhi
1052:Lib/ssc/src/sdoserv.c ****                 }
 2462              		.loc 1 1052 21 is_stmt 1 view .LVU828
1052:Lib/ssc/src/sdoserv.c ****                 }
 2463              		.loc 1 1052 42 is_stmt 0 view .LVU829
 2464 0118 0139     		subs	r1, r1, #1
 2465 011a 6948     		ldr	r0, .L168+4
 2466 011c 0180     		strh	r1, [r0]	@ movhi
 2467              	.LVL207:
 2468              	.L143:
1085:Lib/ssc/src/sdoserv.c **** 
 2469              		.loc 1 1085 17 is_stmt 1 view .LVU830
1085:Lib/ssc/src/sdoserv.c **** 
 2470              		.loc 1 1085 24 is_stmt 0 view .LVU831
 2471 011e 0DF10F01 		add	r1, sp, #15
 2472 0122 0091     		str	r1, [sp]
 2473 0124 03A9     		add	r1, sp, #12
 2474 0126 3046     		mov	r0, r6
 2475 0128 FFF7FEFF 		bl	OBJ_GetObjectList
 2476              	.LVL208:
1088:Lib/ssc/src/sdoserv.c ****                 /* size contains before the instruction the size still available in the mailbox buf
 2477              		.loc 1 1088 17 is_stmt 1 view .LVU832
1088:Lib/ssc/src/sdoserv.c ****                 /* size contains before the instruction the size still available in the mailbox buf
 2478              		.loc 1 1088 31 is_stmt 0 view .LVU833
 2479 012c 684B     		ldr	r3, .L168+20
 2480 012e BDF80C20 		ldrh	r2, [sp, #12]
 2481 0132 1A80     		strh	r2, [r3]	@ movhi
1092:Lib/ssc/src/sdoserv.c ****                 }
 2482              		.loc 1 1092 21 is_stmt 1 view .LVU834
1092:Lib/ssc/src/sdoserv.c ****                 }
 2483              		.loc 1 1092 43 is_stmt 0 view .LVU835
 2484 0134 654B     		ldr	r3, .L168+16
 2485 0136 1B88     		ldrh	r3, [r3]
 2486 0138 1B1A     		subs	r3, r3, r0
 2487 013a 9BB2     		uxth	r3, r3
1092:Lib/ssc/src/sdoserv.c ****                 }
 2488              		.loc 1 1092 26 view .LVU836
 2489 013c 063B     		subs	r3, r3, #6
 2490 013e 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccs70NiP.s 			page 77


 2491              	.LVL209:
1092:Lib/ssc/src/sdoserv.c ****                 }
 2492              		.loc 1 1092 26 view .LVU837
 2493 0140 C0E7     		b	.L141
 2494              	.LVL210:
 2495              	.L142:
1058:Lib/ssc/src/sdoserv.c ****                     /* we start with index 0x1000 */
 2496              		.loc 1 1058 21 is_stmt 1 view .LVU838
1058:Lib/ssc/src/sdoserv.c ****                     /* we start with index 0x1000 */
 2497              		.loc 1 1058 25 is_stmt 0 view .LVU839
 2498 0142 3046     		mov	r0, r6
 2499 0144 FFF7FEFF 		bl	OBJ_GetNoOfObjects
 2500              	.LVL211:
1060:Lib/ssc/src/sdoserv.c ****                     /* initialize size with the maximum size fits into one mailbox service */
 2501              		.loc 1 1060 21 is_stmt 1 view .LVU840
1060:Lib/ssc/src/sdoserv.c ****                     /* initialize size with the maximum size fits into one mailbox service */
 2502              		.loc 1 1060 27 is_stmt 0 view .LVU841
 2503 0148 4FF48053 		mov	r3, #4096
 2504 014c ADF80C30 		strh	r3, [sp, #12]	@ movhi
1063:Lib/ssc/src/sdoserv.c ****                     }
 2505              		.loc 1 1063 25 is_stmt 1 view .LVU842
1063:Lib/ssc/src/sdoserv.c ****                     }
 2506              		.loc 1 1063 74 is_stmt 0 view .LVU843
 2507 0150 5E4B     		ldr	r3, .L168+16
 2508 0152 1988     		ldrh	r1, [r3]
1063:Lib/ssc/src/sdoserv.c ****                     }
 2509              		.loc 1 1063 30 view .LVU844
 2510 0154 A1F10E02 		sub	r2, r1, #14
 2511 0158 92B2     		uxth	r2, r2
 2512              	.LVL212:
1066:Lib/ssc/src/sdoserv.c ****                     /*Check if List need to be send in fragments*/
 2513              		.loc 1 1066 21 is_stmt 1 view .LVU845
1066:Lib/ssc/src/sdoserv.c ****                     /*Check if List need to be send in fragments*/
 2514              		.loc 1 1066 27 is_stmt 0 view .LVU846
 2515 015a 04F10E03 		add	r3, r4, #14
 2516              	.LVL213:
1068:Lib/ssc/src/sdoserv.c ****                     {
 2517              		.loc 1 1068 21 is_stmt 1 view .LVU847
1068:Lib/ssc/src/sdoserv.c ****                     {
 2518              		.loc 1 1068 27 is_stmt 0 view .LVU848
 2519 015e 4500     		lsls	r5, r0, #1
1068:Lib/ssc/src/sdoserv.c ****                     {
 2520              		.loc 1 1068 23 view .LVU849
 2521 0160 B2EB400F 		cmp	r2, r0, lsl #1
 2522 0164 09DA     		bge	.L144
 2523              	.LBB25:
1075:Lib/ssc/src/sdoserv.c ****                         nSdoInfoFragmentsLeft = (((n<<1)-size + (Fragsize-1)) /Fragsize);
 2524              		.loc 1 1075 25 is_stmt 1 view .LVU850
1075:Lib/ssc/src/sdoserv.c ****                         nSdoInfoFragmentsLeft = (((n<<1)-size + (Fragsize-1)) /Fragsize);
 2525              		.loc 1 1075 32 is_stmt 0 view .LVU851
 2526 0166 0C39     		subs	r1, r1, #12
 2527 0168 89B2     		uxth	r1, r1
 2528              	.LVL214:
1076:Lib/ssc/src/sdoserv.c ****                     }
 2529              		.loc 1 1076 25 is_stmt 1 view .LVU852
1076:Lib/ssc/src/sdoserv.c ****                     }
 2530              		.loc 1 1076 57 is_stmt 0 view .LVU853
ARM GAS  /tmp/ccs70NiP.s 			page 78


 2531 016a A81A     		subs	r0, r5, r2
 2532              	.LVL215:
1076:Lib/ssc/src/sdoserv.c ****                     }
 2533              		.loc 1 1076 74 view .LVU854
 2534 016c 4D1E     		subs	r5, r1, #1
1076:Lib/ssc/src/sdoserv.c ****                     }
 2535              		.loc 1 1076 63 view .LVU855
 2536 016e 2844     		add	r0, r0, r5
1076:Lib/ssc/src/sdoserv.c ****                     }
 2537              		.loc 1 1076 79 view .LVU856
 2538 0170 90FBF1F1 		sdiv	r1, r0, r1
 2539              	.LVL216:
1076:Lib/ssc/src/sdoserv.c ****                     }
 2540              		.loc 1 1076 47 view .LVU857
 2541 0174 5248     		ldr	r0, .L168+4
 2542 0176 0180     		strh	r1, [r0]	@ movhi
 2543              	.LBE25:
 2544 0178 D1E7     		b	.L143
 2545              	.LVL217:
 2546              	.L144:
1080:Lib/ssc/src/sdoserv.c ****                     }
 2547              		.loc 1 1080 25 is_stmt 1 view .LVU858
1080:Lib/ssc/src/sdoserv.c ****                     }
 2548              		.loc 1 1080 47 is_stmt 0 view .LVU859
 2549 017a 5149     		ldr	r1, .L168+4
 2550 017c 0020     		movs	r0, #0
 2551              	.LVL218:
1080:Lib/ssc/src/sdoserv.c ****                     }
 2552              		.loc 1 1080 47 view .LVU860
 2553 017e 0880     		strh	r0, [r1]	@ movhi
 2554 0180 CDE7     		b	.L143
 2555              	.LVL219:
 2556              	.L135:
1080:Lib/ssc/src/sdoserv.c ****                     }
 2557              		.loc 1 1080 47 view .LVU861
 2558              	.LBE24:
 2559              	.LBE21:
1125:Lib/ssc/src/sdoserv.c ****         if(index < 0x1000)
 2560              		.loc 1 1125 9 is_stmt 1 view .LVU862
1125:Lib/ssc/src/sdoserv.c ****         if(index < 0x1000)
 2561              		.loc 1 1125 17 is_stmt 0 view .LVU863
 2562 0182 A089     		ldrh	r0, [r4, #12]
 2563              	.LVL220:
1125:Lib/ssc/src/sdoserv.c ****         if(index < 0x1000)
 2564              		.loc 1 1125 15 view .LVU864
 2565 0184 ADF80C00 		strh	r0, [sp, #12]	@ movhi
1126:Lib/ssc/src/sdoserv.c ****         {
 2566              		.loc 1 1126 9 is_stmt 1 view .LVU865
1126:Lib/ssc/src/sdoserv.c ****         {
 2567              		.loc 1 1126 11 is_stmt 0 view .LVU866
 2568 0188 B0F5805F 		cmp	r0, #4096
 2569 018c 04D2     		bcs	.L145
1129:Lib/ssc/src/sdoserv.c ****         }
 2570              		.loc 1 1129 13 is_stmt 1 view .LVU867
1129:Lib/ssc/src/sdoserv.c ****         }
 2571              		.loc 1 1129 19 is_stmt 0 view .LVU868
 2572 018e 0523     		movs	r3, #5
ARM GAS  /tmp/ccs70NiP.s 			page 79


 2573 0190 8DF80F30 		strb	r3, [sp, #15]
 985:Lib/ssc/src/sdoserv.c **** 
 2574              		.loc 1 985 11 view .LVU869
 2575 0194 0221     		movs	r1, #2
 2576 0196 4FE7     		b	.L137
 2577              	.L145:
1134:Lib/ssc/src/sdoserv.c **** 
 2578              		.loc 1 1134 13 is_stmt 1 view .LVU870
1134:Lib/ssc/src/sdoserv.c **** 
 2579              		.loc 1 1134 25 is_stmt 0 view .LVU871
 2580 0198 FFF7FEFF 		bl	OBJ_GetObjectHandle
 2581              	.LVL221:
1136:Lib/ssc/src/sdoserv.c ****             {
 2582              		.loc 1 1136 13 is_stmt 1 view .LVU872
1136:Lib/ssc/src/sdoserv.c ****             {
 2583              		.loc 1 1136 16 is_stmt 0 view .LVU873
 2584 019c 0646     		mov	r6, r0
 2585 019e 0028     		cmp	r0, #0
 2586 01a0 7ED0     		beq	.L146
 2587              	.LBB26:
1139:Lib/ssc/src/sdoserv.c ****                 if ( opCode == SDOINFOSERVICE_OBJDESCRIPTION_Q )
 2588              		.loc 1 1139 17 is_stmt 1 view .LVU874
 2589              	.LVL222:
1140:Lib/ssc/src/sdoserv.c ****                 {
 2590              		.loc 1 1140 17 view .LVU875
1140:Lib/ssc/src/sdoserv.c ****                 {
 2591              		.loc 1 1140 20 is_stmt 0 view .LVU876
 2592 01a2 032D     		cmp	r5, #3
 2593 01a4 19D0     		beq	.L164
 2594              	.LBB27:
1166:Lib/ssc/src/sdoserv.c **** 
 2595              		.loc 1 1166 21 is_stmt 1 view .LVU877
1166:Lib/ssc/src/sdoserv.c **** 
 2596              		.loc 1 1166 27 is_stmt 0 view .LVU878
 2597 01a6 A77B     		ldrb	r7, [r4, #14]	@ zero_extendqisi2
 2598              	.LVL223:
1169:Lib/ssc/src/sdoserv.c **** 
 2599              		.loc 1 1169 21 is_stmt 1 view .LVU879
1169:Lib/ssc/src/sdoserv.c **** 
 2600              		.loc 1 1169 42 is_stmt 0 view .LVU880
 2601 01a8 FFF7FEFF 		bl	OBJ_GetObjDesc
 2602              	.LVL224:
1169:Lib/ssc/src/sdoserv.c **** 
 2603              		.loc 1 1169 27 view .LVU881
 2604 01ac 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2605              	.LVL225:
1171:Lib/ssc/src/sdoserv.c ****                     {
 2606              		.loc 1 1171 21 is_stmt 1 view .LVU882
1171:Lib/ssc/src/sdoserv.c ****                     {
 2607              		.loc 1 1171 24 is_stmt 0 view .LVU883
 2608 01ae 9F42     		cmp	r7, r3
 2609 01b0 35D9     		bls	.L165
1208:Lib/ssc/src/sdoserv.c ****                 }
 2610              		.loc 1 1208 25 is_stmt 1 view .LVU884
1208:Lib/ssc/src/sdoserv.c ****                 }
 2611              		.loc 1 1208 31 is_stmt 0 view .LVU885
 2612 01b2 1123     		movs	r3, #17
ARM GAS  /tmp/ccs70NiP.s 			page 80


 2613              	.LVL226:
1208:Lib/ssc/src/sdoserv.c ****                 }
 2614              		.loc 1 1208 31 view .LVU886
 2615 01b4 8DF80F30 		strb	r3, [sp, #15]
 2616              	.LBE27:
1139:Lib/ssc/src/sdoserv.c ****                 if ( opCode == SDOINFOSERVICE_OBJDESCRIPTION_Q )
 2617              		.loc 1 1139 24 view .LVU887
 2618 01b8 0023     		movs	r3, #0
 2619              	.LVL227:
 2620              	.L148:
1211:Lib/ssc/src/sdoserv.c ****                 {
 2621              		.loc 1 1211 17 is_stmt 1 view .LVU888
1211:Lib/ssc/src/sdoserv.c ****                 {
 2622              		.loc 1 1211 28 is_stmt 0 view .LVU889
 2623 01ba 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
1211:Lib/ssc/src/sdoserv.c ****                 {
 2624              		.loc 1 1211 20 view .LVU890
 2625 01be 002A     		cmp	r2, #0
 2626 01c0 77D1     		bne	.L159
1216:Lib/ssc/src/sdoserv.c ****                         /* store the size of the mailbox data in the mailbox buffer */
 2627              		.loc 1 1216 25 is_stmt 1 view .LVU891
1216:Lib/ssc/src/sdoserv.c ****                         /* store the size of the mailbox data in the mailbox buffer */
 2628              		.loc 1 1216 62 is_stmt 0 view .LVU892
 2629 01c2 6281     		strh	r2, [r4, #10]	@ movhi
1218:Lib/ssc/src/sdoserv.c ****                         /* set the opCode of the SDO Information response */
 2630              		.loc 1 1218 25 is_stmt 1 view .LVU893
1218:Lib/ssc/src/sdoserv.c ****                         /* set the opCode of the SDO Information response */
 2631              		.loc 1 1218 55 is_stmt 0 view .LVU894
 2632 01c4 2380     		strh	r3, [r4]	@ movhi
1220:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->SdoHeader.InfoHead |= (UINT16)((opCode + 1) << INFOHEAD_OPCODE
 2633              		.loc 1 1220 25 is_stmt 1 view .LVU895
1220:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->SdoHeader.InfoHead |= (UINT16)((opCode + 1) << INFOHEAD_OPCODE
 2634              		.loc 1 1220 57 is_stmt 0 view .LVU896
 2635 01c6 2389     		ldrh	r3, [r4, #8]
 2636              	.LVL228:
1220:Lib/ssc/src/sdoserv.c ****                         pSdoInfoInd->SdoHeader.InfoHead |= (UINT16)((opCode + 1) << INFOHEAD_OPCODE
 2637              		.loc 1 1220 57 view .LVU897
 2638 01c8 23F07F03 		bic	r3, r3, #127
 2639 01cc 9BB2     		uxth	r3, r3
 2640 01ce 2381     		strh	r3, [r4, #8]	@ movhi
1221:Lib/ssc/src/sdoserv.c ****                     }
 2641              		.loc 1 1221 25 is_stmt 1 view .LVU898
1221:Lib/ssc/src/sdoserv.c ****                     }
 2642              		.loc 1 1221 60 is_stmt 0 view .LVU899
 2643 01d0 0135     		adds	r5, r5, #1
 2644              	.LVL229:
1221:Lib/ssc/src/sdoserv.c ****                     }
 2645              		.loc 1 1221 57 view .LVU900
 2646 01d2 1D43     		orrs	r5, r5, r3
 2647              	.LVL230:
1221:Lib/ssc/src/sdoserv.c ****                     }
 2648              		.loc 1 1221 57 view .LVU901
 2649 01d4 2581     		strh	r5, [r4, #8]	@ movhi
 2650              	.LBE26:
 985:Lib/ssc/src/sdoserv.c **** 
 2651              		.loc 1 985 11 view .LVU902
 2652 01d6 0221     		movs	r1, #2
ARM GAS  /tmp/ccs70NiP.s 			page 81


 2653 01d8 2EE7     		b	.L137
 2654              	.LVL231:
 2655              	.L164:
 2656              	.LBB30:
1143:Lib/ssc/src/sdoserv.c **** 
 2657              		.loc 1 1143 21 is_stmt 1 view .LVU903
1143:Lib/ssc/src/sdoserv.c **** 
 2658              		.loc 1 1143 74 is_stmt 0 view .LVU904
 2659 01da FFF7FEFF 		bl	OBJ_GetObjDesc
 2660              	.LVL232:
1143:Lib/ssc/src/sdoserv.c **** 
 2661              		.loc 1 1143 74 view .LVU905
 2662 01de 0368     		ldr	r3, [r0]	@ unaligned
1143:Lib/ssc/src/sdoserv.c **** 
 2663              		.loc 1 1143 21 view .LVU906
 2664 01e0 C4F80E30 		str	r3, [r4, #14]	@ unaligned
1148:Lib/ssc/src/sdoserv.c **** 
 2665              		.loc 1 1148 21 is_stmt 1 view .LVU907
1148:Lib/ssc/src/sdoserv.c **** 
 2666              		.loc 1 1148 28 is_stmt 0 view .LVU908
 2667 01e4 0023     		movs	r3, #0
 2668 01e6 3246     		mov	r2, r6
 2669 01e8 1946     		mov	r1, r3
 2670 01ea BDF80C00 		ldrh	r0, [sp, #12]
 2671 01ee FFF7FEFF 		bl	OBJ_GetDesc
 2672              	.LVL233:
1148:Lib/ssc/src/sdoserv.c **** 
 2673              		.loc 1 1148 26 view .LVU909
 2674 01f2 00F10C03 		add	r3, r0, #12
 2675 01f6 9BB2     		uxth	r3, r3
 2676              	.LVL234:
1150:Lib/ssc/src/sdoserv.c ****                     {
 2677              		.loc 1 1150 21 is_stmt 1 view .LVU910
1150:Lib/ssc/src/sdoserv.c ****                     {
 2678              		.loc 1 1150 49 is_stmt 0 view .LVU911
 2679 01f8 344A     		ldr	r2, .L168+16
 2680 01fa 1288     		ldrh	r2, [r2]
 2681 01fc 063A     		subs	r2, r2, #6
1150:Lib/ssc/src/sdoserv.c ****                     {
 2682              		.loc 1 1150 24 view .LVU912
 2683 01fe 9342     		cmp	r3, r2
 2684 0200 01D9     		bls	.L166
1154:Lib/ssc/src/sdoserv.c ****                     }
 2685              		.loc 1 1154 30 view .LVU913
 2686 0202 0C23     		movs	r3, #12
 2687              	.LVL235:
1154:Lib/ssc/src/sdoserv.c ****                     }
 2688              		.loc 1 1154 30 view .LVU914
 2689 0204 D9E7     		b	.L148
 2690              	.LVL236:
 2691              	.L166:
1159:Lib/ssc/src/sdoserv.c ****                     }
 2692              		.loc 1 1159 25 is_stmt 1 view .LVU915
1159:Lib/ssc/src/sdoserv.c ****                     }
 2693              		.loc 1 1159 32 is_stmt 0 view .LVU916
 2694 0206 04F11203 		add	r3, r4, #18
 2695              	.LVL237:
ARM GAS  /tmp/ccs70NiP.s 			page 82


1159:Lib/ssc/src/sdoserv.c ****                     }
 2696              		.loc 1 1159 32 view .LVU917
 2697 020a 3246     		mov	r2, r6
 2698 020c 0021     		movs	r1, #0
 2699 020e BDF80C00 		ldrh	r0, [sp, #12]
 2700              	.LVL238:
1159:Lib/ssc/src/sdoserv.c ****                     }
 2701              		.loc 1 1159 32 view .LVU918
 2702 0212 FFF7FEFF 		bl	OBJ_GetDesc
 2703              	.LVL239:
1159:Lib/ssc/src/sdoserv.c ****                     }
 2704              		.loc 1 1159 30 view .LVU919
 2705 0216 00F10C03 		add	r3, r0, #12
 2706 021a 9BB2     		uxth	r3, r3
 2707              	.LVL240:
1159:Lib/ssc/src/sdoserv.c ****                     }
 2708              		.loc 1 1159 30 view .LVU920
 2709 021c CDE7     		b	.L148
 2710              	.LVL241:
 2711              	.L165:
 2712              	.LBB29:
 2713              	.LBB28:
1173:Lib/ssc/src/sdoserv.c ****                         /* requested subindex is not too great */
 2714              		.loc 1 1173 25 is_stmt 1 view .LVU921
1176:Lib/ssc/src/sdoserv.c **** 
 2715              		.loc 1 1176 25 view .LVU922
1176:Lib/ssc/src/sdoserv.c **** 
 2716              		.loc 1 1176 80 is_stmt 0 view .LVU923
 2717 021e 3946     		mov	r1, r7
 2718 0220 3046     		mov	r0, r6
 2719 0222 FFF7FEFF 		bl	OBJ_GetEntryDesc
 2720              	.LVL242:
1176:Lib/ssc/src/sdoserv.c **** 
 2721              		.loc 1 1176 25 view .LVU924
 2722 0226 0368     		ldr	r3, [r0]	@ unaligned
 2723 0228 2361     		str	r3, [r4, #16]	@ unaligned
 2724 022a 8388     		ldrh	r3, [r0, #4]	@ unaligned
 2725 022c A382     		strh	r3, [r4, #20]	@ unaligned
1179:Lib/ssc/src/sdoserv.c ****                         ObjectFlags = OBJ_GetObjDesc(pObjEntry)->ObjFlags;
 2726              		.loc 1 1179 25 is_stmt 1 view .LVU925
1179:Lib/ssc/src/sdoserv.c ****                         ObjectFlags = OBJ_GetObjDesc(pObjEntry)->ObjFlags;
 2727              		.loc 1 1179 64 is_stmt 0 view .LVU926
 2728 022e A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 2729 0230 E381     		strh	r3, [r4, #14]	@ movhi
1180:Lib/ssc/src/sdoserv.c ****                         ObjectFlags = (ObjectFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT
 2730              		.loc 1 1180 25 is_stmt 1 view .LVU927
1180:Lib/ssc/src/sdoserv.c ****                         ObjectFlags = (ObjectFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT
 2731              		.loc 1 1180 39 is_stmt 0 view .LVU928
 2732 0232 3046     		mov	r0, r6
 2733 0234 FFF7FEFF 		bl	OBJ_GetObjDesc
 2734              	.LVL243:
1180:Lib/ssc/src/sdoserv.c ****                         ObjectFlags = (ObjectFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT
 2735              		.loc 1 1180 37 view .LVU929
 2736 0238 4388     		ldrh	r3, [r0, #2]
 2737              	.LVL244:
1181:Lib/ssc/src/sdoserv.c **** 
 2738              		.loc 1 1181 25 is_stmt 1 view .LVU930
ARM GAS  /tmp/ccs70NiP.s 			page 83


1181:Lib/ssc/src/sdoserv.c **** 
 2739              		.loc 1 1181 37 is_stmt 0 view .LVU931
 2740 023a C3F30323 		ubfx	r3, r3, #8, #4
 2741              	.LVL245:
1183:Lib/ssc/src/sdoserv.c ****                         {
 2742              		.loc 1 1183 25 is_stmt 1 view .LVU932
1183:Lib/ssc/src/sdoserv.c ****                         {
 2743              		.loc 1 1183 58 is_stmt 0 view .LVU933
 2744 023e 083B     		subs	r3, r3, #8
 2745              	.LVL246:
1183:Lib/ssc/src/sdoserv.c ****                         {
 2746              		.loc 1 1183 58 view .LVU934
 2747 0240 9BB2     		uxth	r3, r3
 2748              	.LVL247:
1183:Lib/ssc/src/sdoserv.c ****                         {
 2749              		.loc 1 1183 27 view .LVU935
 2750 0242 012B     		cmp	r3, #1
 2751 0244 0FD8     		bhi	.L150
1183:Lib/ssc/src/sdoserv.c ****                         {
 2752              		.loc 1 1183 91 discriminator 1 view .LVU936
 2753 0246 77B9     		cbnz	r7, .L150
1185:Lib/ssc/src/sdoserv.c ****                             size = 12 + SIZEOF_SDOINFO + SIZEOF(TSDOINFOENTRY); // 12: Length of "S
 2754              		.loc 1 1185 29 is_stmt 1 view .LVU937
 2755 0248 224B     		ldr	r3, .L168+24
 2756 024a 1868     		ldr	r0, [r3]	@ unaligned
 2757              	.LVL248:
1185:Lib/ssc/src/sdoserv.c ****                             size = 12 + SIZEOF_SDOINFO + SIZEOF(TSDOINFOENTRY); // 12: Length of "S
 2758              		.loc 1 1185 29 is_stmt 0 view .LVU938
 2759 024c 5968     		ldr	r1, [r3, #4]	@ unaligned
 2760 024e 9A68     		ldr	r2, [r3, #8]	@ unaligned
 2761 0250 C4F81600 		str	r0, [r4, #22]	@ unaligned
1185:Lib/ssc/src/sdoserv.c ****                             size = 12 + SIZEOF_SDOINFO + SIZEOF(TSDOINFOENTRY); // 12: Length of "S
 2762              		.loc 1 1185 29 view .LVU939
 2763 0254 C4F81A10 		str	r1, [r4, #26]	@ unaligned
 2764 0258 C4F81E20 		str	r2, [r4, #30]	@ unaligned
 2765 025c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2766 025e 84F82230 		strb	r3, [r4, #34]
1186:Lib/ssc/src/sdoserv.c ****                         }
 2767              		.loc 1 1186 29 is_stmt 1 view .LVU940
 2768              	.LVL249:
1186:Lib/ssc/src/sdoserv.c ****                         }
 2769              		.loc 1 1186 34 is_stmt 0 view .LVU941
 2770 0262 1C23     		movs	r3, #28
 2771 0264 A9E7     		b	.L148
 2772              	.LVL250:
 2773              	.L150:
1193:Lib/ssc/src/sdoserv.c ****                             if ( size > (u16SendMbxSize - MBX_HEADER_SIZE) )
 2774              		.loc 1 1193 29 is_stmt 1 view .LVU942
1193:Lib/ssc/src/sdoserv.c ****                             if ( size > (u16SendMbxSize - MBX_HEADER_SIZE) )
 2775              		.loc 1 1193 36 is_stmt 0 view .LVU943
 2776 0266 0023     		movs	r3, #0
 2777 0268 3246     		mov	r2, r6
 2778 026a 3946     		mov	r1, r7
 2779 026c BDF80C00 		ldrh	r0, [sp, #12]
 2780              	.LVL251:
1193:Lib/ssc/src/sdoserv.c ****                             if ( size > (u16SendMbxSize - MBX_HEADER_SIZE) )
 2781              		.loc 1 1193 36 view .LVU944
ARM GAS  /tmp/ccs70NiP.s 			page 84


 2782 0270 FFF7FEFF 		bl	OBJ_GetDesc
 2783              	.LVL252:
1193:Lib/ssc/src/sdoserv.c ****                             if ( size > (u16SendMbxSize - MBX_HEADER_SIZE) )
 2784              		.loc 1 1193 34 view .LVU945
 2785 0274 00F11003 		add	r3, r0, #16
 2786 0278 9BB2     		uxth	r3, r3
 2787              	.LVL253:
1194:Lib/ssc/src/sdoserv.c ****                             {
 2788              		.loc 1 1194 29 is_stmt 1 view .LVU946
1194:Lib/ssc/src/sdoserv.c ****                             {
 2789              		.loc 1 1194 57 is_stmt 0 view .LVU947
 2790 027a 144A     		ldr	r2, .L168+16
 2791 027c 1288     		ldrh	r2, [r2]
 2792 027e 063A     		subs	r2, r2, #6
1194:Lib/ssc/src/sdoserv.c ****                             {
 2793              		.loc 1 1194 32 view .LVU948
 2794 0280 9342     		cmp	r3, r2
 2795 0282 01D9     		bls	.L167
1198:Lib/ssc/src/sdoserv.c ****                             }
 2796              		.loc 1 1198 38 view .LVU949
 2797 0284 1023     		movs	r3, #16
 2798              	.LVL254:
1198:Lib/ssc/src/sdoserv.c ****                             }
 2799              		.loc 1 1198 38 view .LVU950
 2800 0286 98E7     		b	.L148
 2801              	.LVL255:
 2802              	.L167:
1203:Lib/ssc/src/sdoserv.c ****                             }
 2803              		.loc 1 1203 33 is_stmt 1 view .LVU951
1203:Lib/ssc/src/sdoserv.c ****                             }
 2804              		.loc 1 1203 40 is_stmt 0 view .LVU952
 2805 0288 04F11603 		add	r3, r4, #22
 2806              	.LVL256:
1203:Lib/ssc/src/sdoserv.c ****                             }
 2807              		.loc 1 1203 40 view .LVU953
 2808 028c 3246     		mov	r2, r6
 2809 028e 3946     		mov	r1, r7
 2810 0290 BDF80C00 		ldrh	r0, [sp, #12]
 2811              	.LVL257:
1203:Lib/ssc/src/sdoserv.c ****                             }
 2812              		.loc 1 1203 40 view .LVU954
 2813 0294 FFF7FEFF 		bl	OBJ_GetDesc
 2814              	.LVL258:
1203:Lib/ssc/src/sdoserv.c ****                             }
 2815              		.loc 1 1203 38 view .LVU955
 2816 0298 00F11003 		add	r3, r0, #16
 2817 029c 9BB2     		uxth	r3, r3
 2818              	.LVL259:
1203:Lib/ssc/src/sdoserv.c ****                             }
 2819              		.loc 1 1203 38 view .LVU956
 2820 029e 8CE7     		b	.L148
 2821              	.LVL260:
 2822              	.L146:
1203:Lib/ssc/src/sdoserv.c ****                             }
 2823              		.loc 1 1203 38 view .LVU957
 2824              	.LBE28:
 2825              	.LBE29:
ARM GAS  /tmp/ccs70NiP.s 			page 85


 2826              	.LBE30:
1226:Lib/ssc/src/sdoserv.c ****         }
 2827              		.loc 1 1226 17 is_stmt 1 view .LVU958
1226:Lib/ssc/src/sdoserv.c ****         }
 2828              		.loc 1 1226 23 is_stmt 0 view .LVU959
 2829 02a0 0823     		movs	r3, #8
 2830 02a2 8DF80F30 		strb	r3, [sp, #15]
 985:Lib/ssc/src/sdoserv.c **** 
 2831              		.loc 1 985 11 view .LVU960
 2832 02a6 0221     		movs	r1, #2
 2833 02a8 C6E6     		b	.L137
 2834              	.LVL261:
 2835              	.L155:
 985:Lib/ssc/src/sdoserv.c **** 
 2836              		.loc 1 985 11 view .LVU961
 2837 02aa 0221     		movs	r1, #2
 2838 02ac C4E6     		b	.L137
 2839              	.L156:
 2840 02ae 0221     		movs	r1, #2
 2841 02b0 C2E6     		b	.L137
 2842              	.LVL262:
 2843              	.L159:
 985:Lib/ssc/src/sdoserv.c **** 
 2844              		.loc 1 985 11 view .LVU962
 2845 02b2 0221     		movs	r1, #2
 2846 02b4 C0E6     		b	.L137
 2847              	.LVL263:
 2848              	.L153:
 997:Lib/ssc/src/sdoserv.c ****     }
 2849              		.loc 1 997 20 view .LVU963
 2850 02b6 0620     		movs	r0, #6
 2851              	.LVL264:
 997:Lib/ssc/src/sdoserv.c ****     }
 2852              		.loc 1 997 20 view .LVU964
 2853 02b8 DCE6     		b	.L133
 2854              	.L169:
 2855 02ba 00BF     		.align	2
 2856              	.L168:
 2857 02bc 00000000 		.word	.LANCHOR19
 2858 02c0 00000000 		.word	.LANCHOR21
 2859 02c4 00000000 		.word	pCoeSendStored
 2860 02c8 00000000 		.word	.LANCHOR20
 2861 02cc 00000000 		.word	u16SendMbxSize
 2862 02d0 00000000 		.word	.LANCHOR22
 2863 02d4 00000000 		.word	aSubindexDesc
 2864              		.cfi_endproc
 2865              	.LFE128:
 2867              		.global	pSdoSegObjEntry
 2868              		.global	nSdoSegCompleteSize
 2869              		.global	bSdoSegLastToggle
 2870              		.global	nSdoSegBytesToHandle
 2871              		.global	nSdoSegSubindex
 2872              		.global	nSdoSegIndex
 2873              		.global	bSdoSegAccess
 2874              		.global	bSdoSegFollows
 2875              		.global	nSdoSegService
 2876              		.global	bSdoInWork
ARM GAS  /tmp/ccs70NiP.s 			page 86


 2877              		.global	pSdoResStored
 2878              		.global	pSdoInfoObjEntry
 2879              		.global	nSdoInfoIndex
 2880              		.global	cAbortCode
 2881              		.global	nSdoInfoFragmentsLeft
 2882              		.global	pSdoSegData
 2883              		.global	aSdoInfoHeader
 2884              		.global	pSdoPendFunc
 2885              		.global	pStoreData
 2886              		.global	u32StoreDataSize
 2887              		.global	u16StoreIndex
 2888              		.global	u8StoreSubindex
 2889              		.global	bStoreCompleteAccess
 2890              		.global	u8PendingSdo
 2891              		.section	.bss.aSdoInfoHeader,"aw",%nobits
 2892              		.align	2
 2893              		.set	.LANCHOR20,. + 0
 2896              	aSdoInfoHeader:
 2897 0000 00000000 		.space	14
 2897      00000000 
 2897      00000000 
 2897      0000
 2898              		.section	.bss.bSdoInWork,"aw",%nobits
 2899              		.set	.LANCHOR17,. + 0
 2902              	bSdoInWork:
 2903 0000 00       		.space	1
 2904              		.section	.bss.bSdoSegAccess,"aw",%nobits
 2905              		.set	.LANCHOR9,. + 0
 2908              	bSdoSegAccess:
 2909 0000 00       		.space	1
 2910              		.section	.bss.bSdoSegFollows,"aw",%nobits
 2911              		.set	.LANCHOR3,. + 0
 2914              	bSdoSegFollows:
 2915 0000 00       		.space	1
 2916              		.section	.bss.bSdoSegLastToggle,"aw",%nobits
 2917              		.set	.LANCHOR0,. + 0
 2920              	bSdoSegLastToggle:
 2921 0000 00       		.space	1
 2922              		.section	.bss.bStoreCompleteAccess,"aw",%nobits
 2923              		.set	.LANCHOR11,. + 0
 2926              	bStoreCompleteAccess:
 2927 0000 00       		.space	1
 2928              		.section	.bss.nSdoInfoFragmentsLeft,"aw",%nobits
 2929              		.align	1
 2930              		.set	.LANCHOR21,. + 0
 2933              	nSdoInfoFragmentsLeft:
 2934 0000 0000     		.space	2
 2935              		.section	.bss.nSdoInfoIndex,"aw",%nobits
 2936              		.align	1
 2937              		.set	.LANCHOR22,. + 0
 2940              	nSdoInfoIndex:
 2941 0000 0000     		.space	2
 2942              		.section	.bss.nSdoSegBytesToHandle,"aw",%nobits
 2943              		.align	2
 2944              		.set	.LANCHOR1,. + 0
 2947              	nSdoSegBytesToHandle:
 2948 0000 00000000 		.space	4
ARM GAS  /tmp/ccs70NiP.s 			page 87


 2949              		.section	.bss.nSdoSegCompleteSize,"aw",%nobits
 2950              		.align	2
 2951              		.set	.LANCHOR2,. + 0
 2954              	nSdoSegCompleteSize:
 2955 0000 00000000 		.space	4
 2956              		.section	.bss.nSdoSegIndex,"aw",%nobits
 2957              		.align	1
 2958              		.set	.LANCHOR8,. + 0
 2961              	nSdoSegIndex:
 2962 0000 0000     		.space	2
 2963              		.section	.bss.nSdoSegService,"aw",%nobits
 2964              		.set	.LANCHOR5,. + 0
 2967              	nSdoSegService:
 2968 0000 00       		.space	1
 2969              		.section	.bss.nSdoSegSubindex,"aw",%nobits
 2970              		.set	.LANCHOR7,. + 0
 2973              	nSdoSegSubindex:
 2974 0000 00       		.space	1
 2975              		.section	.bss.pSdoInfoObjEntry,"aw",%nobits
 2976              		.align	2
 2979              	pSdoInfoObjEntry:
 2980 0000 00000000 		.space	4
 2981              		.section	.bss.pSdoPendFunc,"aw",%nobits
 2982              		.align	2
 2983              		.set	.LANCHOR16,. + 0
 2986              	pSdoPendFunc:
 2987 0000 00000000 		.space	4
 2988              		.section	.bss.pSdoResStored,"aw",%nobits
 2989              		.align	2
 2990              		.set	.LANCHOR18,. + 0
 2993              	pSdoResStored:
 2994 0000 00000000 		.space	4
 2995              		.section	.bss.pSdoSegData,"aw",%nobits
 2996              		.align	2
 2997              		.set	.LANCHOR4,. + 0
 3000              	pSdoSegData:
 3001 0000 00000000 		.space	4
 3002              		.section	.bss.pSdoSegObjEntry,"aw",%nobits
 3003              		.align	2
 3004              		.set	.LANCHOR6,. + 0
 3007              	pSdoSegObjEntry:
 3008 0000 00000000 		.space	4
 3009              		.section	.bss.pStoreData,"aw",%nobits
 3010              		.align	2
 3011              		.set	.LANCHOR15,. + 0
 3014              	pStoreData:
 3015 0000 00000000 		.space	4
 3016              		.section	.bss.u16StoreIndex,"aw",%nobits
 3017              		.align	1
 3018              		.set	.LANCHOR13,. + 0
 3021              	u16StoreIndex:
 3022 0000 0000     		.space	2
 3023              		.section	.bss.u32StoreDataSize,"aw",%nobits
 3024              		.align	2
 3025              		.set	.LANCHOR14,. + 0
 3028              	u32StoreDataSize:
 3029 0000 00000000 		.space	4
ARM GAS  /tmp/ccs70NiP.s 			page 88


 3030              		.section	.bss.u8PendingSdo,"aw",%nobits
 3031              		.set	.LANCHOR10,. + 0
 3034              	u8PendingSdo:
 3035 0000 00       		.space	1
 3036              		.section	.bss.u8StoreSubindex,"aw",%nobits
 3037              		.set	.LANCHOR12,. + 0
 3040              	u8StoreSubindex:
 3041 0000 00       		.space	1
 3042              		.section	.rodata.cAbortCode,"a"
 3043              		.align	2
 3044              		.set	.LANCHOR19,. + 0
 3047              	cAbortCode:
 3048 0000 00000000 		.word	0
 3049 0004 00000305 		.word	84082688
 3050 0008 00000405 		.word	84148224
 3051 000c 01000405 		.word	84148225
 3052 0010 05000405 		.word	84148229
 3053 0014 00000106 		.word	100728832
 3054 0018 01000106 		.word	100728833
 3055 001c 02000106 		.word	100728834
 3056 0020 00000206 		.word	100794368
 3057 0024 41000406 		.word	100925505
 3058 0028 42000406 		.word	100925506
 3059 002c 43000406 		.word	100925507
 3060 0030 47000406 		.word	100925511
 3061 0034 00000606 		.word	101056512
 3062 0038 10000706 		.word	101122064
 3063 003c 12000706 		.word	101122066
 3064 0040 13000706 		.word	101122067
 3065 0044 11000906 		.word	101253137
 3066 0048 30000906 		.word	101253168
 3067 004c 31000906 		.word	101253169
 3068 0050 32000906 		.word	101253170
 3069 0054 33000906 		.word	101253171
 3070 0058 36000906 		.word	101253174
 3071 005c 00000008 		.word	134217728
 3072 0060 20000008 		.word	134217760
 3073 0064 21000008 		.word	134217761
 3074 0068 22000008 		.word	134217762
 3075 006c 23000008 		.word	134217763
 3076 0070 03000106 		.word	100728835
 3077 0074 04000106 		.word	100728836
 3078              		.text
 3079              	.Letext0:
 3080              		.file 2 "Lib/ssc/include/mailbox.h"
 3081              		.file 3 "Lib/ssc/include/ecatcoe.h"
 3082              		.file 4 "Lib/ssc/include/sdoserv.h"
 3083              		.file 5 "Lib/ssc/include/objdef.h"
 3084              		.file 6 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdlib.h"
 3085              		.file 7 "<built-in>"
ARM GAS  /tmp/ccs70NiP.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sdoserv.c
     /tmp/ccs70NiP.s:20     .text.SdoUploadSegmentInd:0000000000000000 $t
     /tmp/ccs70NiP.s:25     .text.SdoUploadSegmentInd:0000000000000000 SdoUploadSegmentInd
     /tmp/ccs70NiP.s:313    .text.SdoUploadSegmentInd:0000000000000120 $d
     /tmp/ccs70NiP.s:324    .text.SdoDownloadSegmentInd:0000000000000000 $t
     /tmp/ccs70NiP.s:329    .text.SdoDownloadSegmentInd:0000000000000000 SdoDownloadSegmentInd
     /tmp/ccs70NiP.s:806    .text.SdoDownloadSegmentInd:0000000000000210 $d
     /tmp/ccs70NiP.s:831    .text.SdoRes:0000000000000000 $t
     /tmp/ccs70NiP.s:837    .text.SdoRes:0000000000000000 SdoRes
     /tmp/ccs70NiP.s:1043   .text.SdoRes:00000000000000d0 $d
     /tmp/ccs70NiP.s:1049   .text.SDOS_SdoInd:0000000000000000 $t
     /tmp/ccs70NiP.s:1055   .text.SDOS_SdoInd:0000000000000000 SDOS_SdoInd
     /tmp/ccs70NiP.s:1631   .text.SDOS_SdoInd:0000000000000274 $d
     /tmp/ccs70NiP.s:1656   .text.SDOS_SdoInd:00000000000002c8 $t
     /tmp/ccs70NiP.s:1952   .text.SDOS_SdoInd:0000000000000424 $d
     /tmp/ccs70NiP.s:1971   .text.SDOS_SdoRes:0000000000000000 $t
     /tmp/ccs70NiP.s:1977   .text.SDOS_SdoRes:0000000000000000 SDOS_SdoRes
     /tmp/ccs70NiP.s:2159   .text.SDOS_SdoRes:00000000000000ac $d
     /tmp/ccs70NiP.s:2174   .text.SDOS_SdoInfoInd:0000000000000000 $t
     /tmp/ccs70NiP.s:2180   .text.SDOS_SdoInfoInd:0000000000000000 SDOS_SdoInfoInd
     /tmp/ccs70NiP.s:2857   .text.SDOS_SdoInfoInd:00000000000002bc $d
     /tmp/ccs70NiP.s:3007   .bss.pSdoSegObjEntry:0000000000000000 pSdoSegObjEntry
     /tmp/ccs70NiP.s:2954   .bss.nSdoSegCompleteSize:0000000000000000 nSdoSegCompleteSize
     /tmp/ccs70NiP.s:2920   .bss.bSdoSegLastToggle:0000000000000000 bSdoSegLastToggle
     /tmp/ccs70NiP.s:2947   .bss.nSdoSegBytesToHandle:0000000000000000 nSdoSegBytesToHandle
     /tmp/ccs70NiP.s:2973   .bss.nSdoSegSubindex:0000000000000000 nSdoSegSubindex
     /tmp/ccs70NiP.s:2961   .bss.nSdoSegIndex:0000000000000000 nSdoSegIndex
     /tmp/ccs70NiP.s:2908   .bss.bSdoSegAccess:0000000000000000 bSdoSegAccess
     /tmp/ccs70NiP.s:2914   .bss.bSdoSegFollows:0000000000000000 bSdoSegFollows
     /tmp/ccs70NiP.s:2967   .bss.nSdoSegService:0000000000000000 nSdoSegService
     /tmp/ccs70NiP.s:2902   .bss.bSdoInWork:0000000000000000 bSdoInWork
     /tmp/ccs70NiP.s:2993   .bss.pSdoResStored:0000000000000000 pSdoResStored
     /tmp/ccs70NiP.s:2979   .bss.pSdoInfoObjEntry:0000000000000000 pSdoInfoObjEntry
     /tmp/ccs70NiP.s:2940   .bss.nSdoInfoIndex:0000000000000000 nSdoInfoIndex
     /tmp/ccs70NiP.s:3047   .rodata.cAbortCode:0000000000000000 cAbortCode
     /tmp/ccs70NiP.s:2933   .bss.nSdoInfoFragmentsLeft:0000000000000000 nSdoInfoFragmentsLeft
     /tmp/ccs70NiP.s:3000   .bss.pSdoSegData:0000000000000000 pSdoSegData
     /tmp/ccs70NiP.s:2896   .bss.aSdoInfoHeader:0000000000000000 aSdoInfoHeader
     /tmp/ccs70NiP.s:2986   .bss.pSdoPendFunc:0000000000000000 pSdoPendFunc
     /tmp/ccs70NiP.s:3014   .bss.pStoreData:0000000000000000 pStoreData
     /tmp/ccs70NiP.s:3028   .bss.u32StoreDataSize:0000000000000000 u32StoreDataSize
     /tmp/ccs70NiP.s:3021   .bss.u16StoreIndex:0000000000000000 u16StoreIndex
     /tmp/ccs70NiP.s:3040   .bss.u8StoreSubindex:0000000000000000 u8StoreSubindex
     /tmp/ccs70NiP.s:2926   .bss.bStoreCompleteAccess:0000000000000000 bStoreCompleteAccess
     /tmp/ccs70NiP.s:3034   .bss.u8PendingSdo:0000000000000000 u8PendingSdo
     /tmp/ccs70NiP.s:2892   .bss.aSdoInfoHeader:0000000000000000 $d
     /tmp/ccs70NiP.s:2903   .bss.bSdoInWork:0000000000000000 $d
     /tmp/ccs70NiP.s:2909   .bss.bSdoSegAccess:0000000000000000 $d
     /tmp/ccs70NiP.s:2915   .bss.bSdoSegFollows:0000000000000000 $d
     /tmp/ccs70NiP.s:2921   .bss.bSdoSegLastToggle:0000000000000000 $d
     /tmp/ccs70NiP.s:2927   .bss.bStoreCompleteAccess:0000000000000000 $d
     /tmp/ccs70NiP.s:2929   .bss.nSdoInfoFragmentsLeft:0000000000000000 $d
     /tmp/ccs70NiP.s:2936   .bss.nSdoInfoIndex:0000000000000000 $d
     /tmp/ccs70NiP.s:2943   .bss.nSdoSegBytesToHandle:0000000000000000 $d
     /tmp/ccs70NiP.s:2950   .bss.nSdoSegCompleteSize:0000000000000000 $d
     /tmp/ccs70NiP.s:2957   .bss.nSdoSegIndex:0000000000000000 $d
ARM GAS  /tmp/ccs70NiP.s 			page 90


     /tmp/ccs70NiP.s:2968   .bss.nSdoSegService:0000000000000000 $d
     /tmp/ccs70NiP.s:2974   .bss.nSdoSegSubindex:0000000000000000 $d
     /tmp/ccs70NiP.s:2976   .bss.pSdoInfoObjEntry:0000000000000000 $d
     /tmp/ccs70NiP.s:2982   .bss.pSdoPendFunc:0000000000000000 $d
     /tmp/ccs70NiP.s:2989   .bss.pSdoResStored:0000000000000000 $d
     /tmp/ccs70NiP.s:2996   .bss.pSdoSegData:0000000000000000 $d
     /tmp/ccs70NiP.s:3003   .bss.pSdoSegObjEntry:0000000000000000 $d
     /tmp/ccs70NiP.s:3010   .bss.pStoreData:0000000000000000 $d
     /tmp/ccs70NiP.s:3017   .bss.u16StoreIndex:0000000000000000 $d
     /tmp/ccs70NiP.s:3024   .bss.u32StoreDataSize:0000000000000000 $d
     /tmp/ccs70NiP.s:3035   .bss.u8PendingSdo:0000000000000000 $d
     /tmp/ccs70NiP.s:3041   .bss.u8StoreSubindex:0000000000000000 $d
     /tmp/ccs70NiP.s:3043   .rodata.cAbortCode:0000000000000000 $d

UNDEFINED SYMBOLS
memcpy
free
u16SendMbxSize
OBJ_Write
u16ReceiveMbxSize
MBX_MailboxSendReq
pCoeSendStored
OBJ_GetObjectHandle
OBJ_GetObjectLength
malloc
OBJ_Read
OBJ_GetNoOfObjects
OBJ_GetObjectList
OBJ_GetObjDesc
OBJ_GetDesc
OBJ_GetEntryDesc
aSubindexDesc
