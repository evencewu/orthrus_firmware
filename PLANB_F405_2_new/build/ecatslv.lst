ARM GAS  /tmp/ccJBQgIh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ecatslv.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ResetALEventMask,"ax",%progbits
  20              		.align	1
  21              		.global	ResetALEventMask
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ResetALEventMask:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "Lib/ssc/src/ecatslv.c"
   1:Lib/ssc/src/ecatslv.c **** /**
   2:Lib/ssc/src/ecatslv.c **** \addtogroup ESM EtherCAT State Machine
   3:Lib/ssc/src/ecatslv.c **** @{
   4:Lib/ssc/src/ecatslv.c **** */
   5:Lib/ssc/src/ecatslv.c **** 
   6:Lib/ssc/src/ecatslv.c **** /**
   7:Lib/ssc/src/ecatslv.c **** \file ecatslv.c
   8:Lib/ssc/src/ecatslv.c **** \author EthercatSSC@beckhoff.com
   9:Lib/ssc/src/ecatslv.c **** \brief Implementation
  10:Lib/ssc/src/ecatslv.c **** This file contains the EtherCAT State Machine.
  11:Lib/ssc/src/ecatslv.c **** 
  12:Lib/ssc/src/ecatslv.c **** \version 5.11
  13:Lib/ssc/src/ecatslv.c **** 
  14:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.10:<br>
  15:Lib/ssc/src/ecatslv.c **** V5.11 COE3: change 0x10F3.2 (Sync Error limit) from UINT32 to UINT16 (according to the ETG.1020)<br
  16:Lib/ssc/src/ecatslv.c **** V5.11 DIAG4: change parameter handling in DIAG_CreateNewMessage()<br>
  17:Lib/ssc/src/ecatslv.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  18:Lib/ssc/src/ecatslv.c **** V5.11 ECAT4: enhance SM/Sync monitoring for input/output only slaves<br>
  19:Lib/ssc/src/ecatslv.c **** V5.11 ECAT5: "Add missing ""bEscAlEventEnbaled"" initialization if ""AL_EVENT_ENBALED"" is 0"""<br>
  20:Lib/ssc/src/ecatslv.c **** V5.11 ECAT7: add missing big endian swapping<br>
  21:Lib/ssc/src/ecatslv.c **** V5.11 ESC1: update max address calculation<br>
  22:Lib/ssc/src/ecatslv.c **** V5.11 ESM1: update calculation of subordinated cycles<br>
  23:Lib/ssc/src/ecatslv.c **** V5.11 ESM2: DC_SUPPORTED, Sync0 is not supported and Sync0 is generated according register values t
  24:Lib/ssc/src/ecatslv.c **** V5.11 ESM3: update checking of the user configured sync type<br>
  25:Lib/ssc/src/ecatslv.c **** V5.11 ESM4: prevent to go from ErrSafeOP to OP without re enabling Sync0/1<br>
  26:Lib/ssc/src/ecatslv.c **** V5.11 ESM5: DPRAM range was double checked<br>
  27:Lib/ssc/src/ecatslv.c **** V5.11 ESM6: in the SO transition wait by default until the master has send process data<br>
  28:Lib/ssc/src/ecatslv.c **** V5.11 HW1: "move hardware independent functions ""HW_DisableSyncManChannel()"", ""HW_EnableSyncManC
  29:Lib/ssc/src/ecatslv.c **** V5.11 HW2: check during ESM handling if the SM address and length is aligned according the ESC acce
ARM GAS  /tmp/ccJBQgIh.s 			page 2


  30:Lib/ssc/src/ecatslv.c **** V5.11 TEST9: "add behaviour 0x2020.7 (SDO requests on 0x3006.0 are set to pending until an FoE read
  31:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.01:<br>
  32:Lib/ssc/src/ecatslv.c **** V5.10 COE1: Define one entry description for all 0x1C3x objects and change data type of SI11,12,13 
  33:Lib/ssc/src/ecatslv.c **** V5.10 DIAG1: Define diagmessage textIDs<br>
  34:Lib/ssc/src/ecatslv.c **** V5.10 ECAT13: Update Synchronisation handling (FreeRun,SM Sync, Sync0, Sync1)<br>
  35:Lib/ssc/src/ecatslv.c ****               Compare DC UINT configuration (by ESC Config data) vs. DC activation register setting
  36:Lib/ssc/src/ecatslv.c ****               Update 0x1C3x entries<br>
  37:Lib/ssc/src/ecatslv.c **** V5.10 ESC2: Check if defined SM settings do not exceed the available DPRAM range (in error case AL 
  38:Lib/ssc/src/ecatslv.c **** V5.10 ESC3: Handle DC cControl register values in case of 32Bit ESC access (a Sync activation mask 
  39:Lib/ssc/src/ecatslv.c **** V5.10 ESC4: Mask lower 4 Bit of AL status to get Run led value<br>
  40:Lib/ssc/src/ecatslv.c ****             Invalid RunLed code was calculated if ESC set ECAT Run Led<br>
  41:Lib/ssc/src/ecatslv.c **** V5.10 ESC5: Add missing swapping<br>
  42:Lib/ssc/src/ecatslv.c **** V5.10 ESM2: Update "bApplEsmPending" flag during a transition to a lower state<br>
  43:Lib/ssc/src/ecatslv.c **** V5.10 ESM3: Add "volatile" directive for ESM dummy variables<br>
  44:Lib/ssc/src/ecatslv.c **** V5.10 HW5: Block ESC interrupts during Timer ISR<br>
  45:Lib/ssc/src/ecatslv.c **** V5.10 TEST9: Add option to prevent SM3 unlock during PS<br>
  46:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.0:<br>
  47:Lib/ssc/src/ecatslv.c **** V5.01 APPL3: Include library demo application<br>
  48:Lib/ssc/src/ecatslv.c **** V5.01 ESC2: Add missed value swapping<br>
  49:Lib/ssc/src/ecatslv.c **** V5.01 ESM1: Don't overwrite the error reason in case of an failed PS transition<br>
  50:Lib/ssc/src/ecatslv.c **** V5.01 ESM2: Don't check the "appl trigger" flag in case on an regular transition to a lower state (
  51:Lib/ssc/src/ecatslv.c **** V5.01 ESM3: Call Error acknowledge indication only if error was acknowledged by the master<br>
  52:Lib/ssc/src/ecatslv.c **** V5.01 HW3: Update blink code of an SM watchdog error<br>
  53:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.42:<br>
  54:Lib/ssc/src/ecatslv.c **** V5.0 ECAT1: Support Explicit Device ID.<br>
  55:Lib/ssc/src/ecatslv.c **** V5.0 ECAT2: Application specific functions are moved to application files.<br>
  56:Lib/ssc/src/ecatslv.c **** V5.0 ECAT3: Global dummy variables used for dummy ESC operations.<br>
  57:Lib/ssc/src/ecatslv.c **** V5.0 ESC1: ESC 32Bit Access added.<br>
  58:Lib/ssc/src/ecatslv.c **** V5.0 ESC2: Support ESC EtherCAT LED Indication.<br>
  59:Lib/ssc/src/ecatslv.c **** V5.0 ESC3: Support EEPROM Emulation.<br>
  60:Lib/ssc/src/ecatslv.c **** V5.0 ESM1: Update "LocalErrorFlag" handling.<br>
  61:Lib/ssc/src/ecatslv.c **** V5.0 ESM2: Update Error Acknowledge by ALControl INIT (without error acknowledge)<br>
  62:Lib/ssc/src/ecatslv.c **** V5.0 ESM3: Handle pending ESM transition<br>
  63:Lib/ssc/src/ecatslv.c **** V5.0 ESM4: ECAT_StateChange() will only be called form application. In case of an communication err
  64:Lib/ssc/src/ecatslv.c **** V5.0 MBX1: Support configuration without mailbox protocol support.<br>
  65:Lib/ssc/src/ecatslv.c **** V5.0 TEST1: Add test application. See Application Note ET9300 for more details.<br>
  66:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.40:<br>
  67:Lib/ssc/src/ecatslv.c **** V4.42 ESM1: Reset local error flag if master set the acknowledge bit (0x120.4)<br>
  68:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.30:<br>
  69:Lib/ssc/src/ecatslv.c **** V4.40 ESM5: Enable output SyncManager if local error acknowledged<br>
  70:Lib/ssc/src/ecatslv.c **** V4.40 HW0: Use common hardware access functions<br>
  71:Lib/ssc/src/ecatslv.c **** V4.40 PDO3: Add support if only input process data is used<br>
  72:Lib/ssc/src/ecatslv.c **** V4.40 ECAT4: Add read SM activation register to acknowledge SM Change event<br>
  73:Lib/ssc/src/ecatslv.c **** V4.40 PDO2: Check if max process data size was exceed<br>
  74:Lib/ssc/src/ecatslv.c **** V4.40 DIAG1: add diagnosis message support<br>
  75:Lib/ssc/src/ecatslv.c **** V4.40 ESM4: Change Check WD setup; add define OP_PD_REQUIRED (defines if process data required in s
  76:Lib/ssc/src/ecatslv.c **** V4.40 WD1: change WD behaviour depending if process data required in OP state<br>
  77:Lib/ssc/src/ecatslv.c **** V4.40 MBX4: Change processing order of mailbox SyncManager flags<br>
  78:Lib/ssc/src/ecatslv.c **** V4.40 ECAT1: Merge content of HW_Main (spihw.c /mcihw.c) to ECAT_Main<br>
  79:Lib/ssc/src/ecatslv.c **** V4.40 ECAT2: Added CheckIfLocalError() to check local flags and set ALStatus /Al Status code if req
  80:Lib/ssc/src/ecatslv.c **** V4.40 ESM2: Add AL_ControlRes() to complete pending state requests. Change SafeOP to OP state respo
  81:Lib/ssc/src/ecatslv.c **** V4.40 ESM1: Prevent double call of StopOutputHandler()<br>
  82:Lib/ssc/src/ecatslv.c **** V4.40 BOOT1: Enable Mailbox SyncManger on state change to BOOT state (to enable FoE)<br>
  83:Lib/ssc/src/ecatslv.c **** V4.40 ESM3: Change State machine behaviour according to ETG.1000 V1.0.2 (state change #26)<br>
  84:Lib/ssc/src/ecatslv.c **** V4.40 LED1: Set error blink code<br>
  85:Lib/ssc/src/ecatslv.c **** V4.40 TIMER1: Added DC_CheckWatchdog() triggered from ECAT_CheckTimer(). Change local Sync0 watchdo
  86:Lib/ssc/src/ecatslv.c **** V4.40 WD1: Change check process data watchdog settings<br>
ARM GAS  /tmp/ccJBQgIh.s 			page 3


  87:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.20:<br>
  88:Lib/ssc/src/ecatslv.c **** V4.30 OBJ 3: initialize the object dictionary in state change INIT->PREOP; clear object dictionary 
  89:Lib/ssc/src/ecatslv.c **** V4.30 SYNC: add 0x1C32:10; 0x1C33:10 (Sync0 cycle), change synchronisation control functionality<br
  90:Lib/ssc/src/ecatslv.c **** V4.30 CiA402: add CiA402_Init() call in state change from PREOP to SAFEOP if DC synchronisation is 
  91:Lib/ssc/src/ecatslv.c ****                    else the Init function is called when bus cycle time is calculated [CalcSMCycleT
  92:Lib/ssc/src/ecatslv.c ****                    trigger error handling if the EtherCAT state machine gets a transition from OP t
  93:Lib/ssc/src/ecatslv.c **** V4.20 ECAT 1: add LEGACY_MODE behaviour in ECAT_CheckWatchdog()<br>
  94:Lib/ssc/src/ecatslv.c **** V4.20 DC 1: Add DC pending state machine handling and Dc watchdog functionality<br>
  95:Lib/ssc/src/ecatslv.c **** V4.20 ESM 2: Add State transition from BOOT to INIT<br>
  96:Lib/ssc/src/ecatslv.c **** V4.20 ESM 1: Non LEGACY_MODE State change handling<br>
  97:Lib/ssc/src/ecatslv.c **** V4.11 Renamed the function parameter "code" of Function "SendSmFailedEmergency() to avoid<br>
  98:Lib/ssc/src/ecatslv.c **** problems with some compilers"<br>
  99:Lib/ssc/src/ecatslv.c **** V4.11 ECAT 1: Fixed a possible problem with state change Init -> SafeOP. The output syncmanager<br>
 100:Lib/ssc/src/ecatslv.c **** was enabled by the state change-flag and not by the actual state<br>
 101:Lib/ssc/src/ecatslv.c **** V4.11 LED 1: Clear the error LED during error acknowledgement<br>
 102:Lib/ssc/src/ecatslv.c **** V4.11 ESC 1: fixed size of MBXHEADER in the TFOEMBX struct <br>
 103:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.08:<br>
 104:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 1: clear bEcatOutputsReceived in startMailboxhandler()<br>
 105:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 2: clear bEcatOutputsReceived in stopMailboxhandler()<br>
 106:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 3: when switching from INIT to BOOT the SM settings shall be checked<br>
 107:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 4: APPL_StartInputHandler shall always be called and bEcatInputUpdateRunning shall alway
 108:Lib/ssc/src/ecatslv.c ****               in StartInputHandler independent of the input size<br>
 109:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 5: AL_ControlInd: the error acknowledge behaviour was changed<br>
 110:Lib/ssc/src/ecatslv.c ****               according to the protocol enhancements and the conformance test<br>
 111:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 6: AL_ControlInd: if a state transitions failed the corresponding stop function is<br>
 112:Lib/ssc/src/ecatslv.c ****               called to get a consistent set of variables<br>
 113:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 7: the local application requested to leave the state OP so we have to disable the SM2<b
 114:Lib/ssc/src/ecatslv.c ****                    and make the state change from OP to SAFEOP by calling StopOutputHandler<br>
 115:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 8: the AL Status Code has to be reset if the error was acknowledged by the master<br>
 116:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 9: ECAT_StateChange: when waiting for a State Change response from the application the<b
 117:Lib/ssc/src/ecatslv.c ****               AL Status shall only be written if the final state was reached<br>
 118:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.07:<br>
 119:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 1: The watchdog value was not rounded up<br>
 120:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 2: The value of u16WdValue was not set 0 if the register 0x420 is 0<br>
 121:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 3: The AlStatusCode is changed as parameter of the function AL_ControlInd<br>
 122:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 4: In a state transition OP2PREOP, SAFEOP2INIT or OP2INIT is requested,<br>
 123:Lib/ssc/src/ecatslv.c ****               this was not working correctly if one of the application functions<br>
 124:Lib/ssc/src/ecatslv.c ****               APPL_StopInputHandler or APPL_StopOutputHandler were returning NOERROR_INWORK<br>
 125:Lib/ssc/src/ecatslv.c ****               (because only the first state transition was made in that case)<br>
 126:Lib/ssc/src/ecatslv.c **** V4.08 AOE 1:    AoE was added<br>
 127:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.06:<br>
 128:Lib/ssc/src/ecatslv.c **** V4.07 ECAT 1: The sources for SPI and MCI were merged (in ecat_def.h<br>
 129:Lib/ssc/src/ecatslv.c ****                    set the switch MCI_HW to 1 when using the MCI,<br>
 130:Lib/ssc/src/ecatslv.c ****                    set the switch SPI_HW to 1 when using the SPI<br>
 131:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.00:<br>
 132:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 1: The Output sync Manager was not disabled when the state OP was left<br>
 133:Lib/ssc/src/ecatslv.c ****               by a local request (watchdog or io error)<br>
 134:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 2: APPL_StopOutputHandler returns an UINT16<br>
 135:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 3: TwinCAT compatibility mode: The state transition to OP is allowed when the<br>
 136:Lib/ssc/src/ecatslv.c ****                     WD-Trigger-Bit of the SM2-Control-Byte (0x814.6) is FALSE, in that case the<br>
 137:Lib/ssc/src/ecatslv.c ****                     watchdog will not be started before the outputs were received the first time<br
 138:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 4: "else" was too much<br>
 139:Lib/ssc/src/ecatslv.c **** <br>Changes to version V3.20:<br>
 140:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 1: The handling of the Sync Manager Parameter was included according to<br>
 141:Lib/ssc/src/ecatslv.c ****               the EtherCAT Guidelines and Protocol Enhancements Specification<br>
 142:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 2: The output sync manager is initialized during the state transition<br>
 143:Lib/ssc/src/ecatslv.c ****               from PREOP to SAFEOP that the master can check if the slave could update<br>
ARM GAS  /tmp/ccJBQgIh.s 			page 4


 144:Lib/ssc/src/ecatslv.c ****               inputs and outputs before switching the slave to OP<br>
 145:Lib/ssc/src/ecatslv.c ****               behaviour according to the EtherCAT Guidelines and Protocol Enhancements Specificatio
 146:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 3: The watchdog will be enabled in SAFE-OP that it can be checked if the last SM event<b
 147:Lib/ssc/src/ecatslv.c ****               was received during the watchdog time before switching to OP<br>
 148:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 4: The function CheckSmChannelParameters is included in the function<br>
 149:Lib/ssc/src/ecatslv.c ****               CheckSmSettings to get a better overview<br>
 150:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 5: In synchronous mode the slave should support 1- and 3-buffer mode, 3-buffer mode<br>
 151:Lib/ssc/src/ecatslv.c ****               should be the standard setting, because the controlling if the process data was updat
 152:Lib/ssc/src/ecatslv.c ****               should be done with the TxPDO Toggle, but the 1-buffer mode should be setable too,<br
 153:Lib/ssc/src/ecatslv.c ****               that the master could easily check if all slaves are synchronous by checking the<br>
 154:Lib/ssc/src/ecatslv.c ****               the working counter (if the outputs were not read or the inputs were not written<br>
 155:Lib/ssc/src/ecatslv.c ****               the ESC of the slave would not increment the working counter with expected value<br>
 156:Lib/ssc/src/ecatslv.c ****               if the 1-buffer mode is running)<br>
 157:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 6: The function ECAT_StateChange was added, which the application should call if a local
 158:Lib/ssc/src/ecatslv.c ****                    is detected (with the parameters alStatus = STATE_SAFEOP, alStatusCode = error c
 159:Lib/ssc/src/ecatslv.c ****                    or gone (with the parameters alStatus = STATE_OP, alStatusCode = 0)<br>
 160:Lib/ssc/src/ecatslv.c ****                    or if one of the functions APPL_StartMailboxHandler, APPL_StopMailboxHandler, AP
 161:Lib/ssc/src/ecatslv.c ****                    APPL_StopInputHandler, APPL_StartOutputHandler, APPL_StopOutputHandler has retur
 162:Lib/ssc/src/ecatslv.c ****                    to acknowledge the last state transition (with the parameters alStatus = new AL-
 163:Lib/ssc/src/ecatslv.c ****                    new AL-Status-Code)<br>
 164:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 7: The return values for the AL-StatusCode were changed to UINT16
 165:Lib/ssc/src/ecatslv.c **** */
 166:Lib/ssc/src/ecatslv.c **** 
 167:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 168:Lib/ssc/src/ecatslv.c **** ------
 169:Lib/ssc/src/ecatslv.c **** ------    Includes
 170:Lib/ssc/src/ecatslv.c **** ------
 171:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 172:Lib/ssc/src/ecatslv.c **** 
 173:Lib/ssc/src/ecatslv.c **** #define    _ECATSLV_    1
 174:Lib/ssc/src/ecatslv.c **** #include "ecatslv.h"
 175:Lib/ssc/src/ecatslv.c **** #undef    _ECATSLV_
 176:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT10*/
 177:Lib/ssc/src/ecatslv.c **** /*remove definition of _ECATSLV_ (#ifdef is used in ecatslv.h)*/
 178:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT10*/
 179:Lib/ssc/src/ecatslv.c **** 
 180:Lib/ssc/src/ecatslv.c **** #include "ecatappl.h"
 181:Lib/ssc/src/ecatslv.c **** 
 182:Lib/ssc/src/ecatslv.c **** 
 183:Lib/ssc/src/ecatslv.c **** 
 184:Lib/ssc/src/ecatslv.c **** 
 185:Lib/ssc/src/ecatslv.c **** #include "mailbox.h"
 186:Lib/ssc/src/ecatslv.c **** 
 187:Lib/ssc/src/ecatslv.c **** #include "ecatcoe.h"
 188:Lib/ssc/src/ecatslv.c **** #include "objdef.h"
 189:Lib/ssc/src/ecatslv.c **** 
 190:Lib/ssc/src/ecatslv.c **** 
 191:Lib/ssc/src/ecatslv.c **** 
 192:Lib/ssc/src/ecatslv.c **** #include "el9800appl.h"
 193:Lib/ssc/src/ecatslv.c **** 
 194:Lib/ssc/src/ecatslv.c **** /*--------------------------------------------------------------------------------------
 195:Lib/ssc/src/ecatslv.c **** ------
 196:Lib/ssc/src/ecatslv.c **** ------    local Types and Defines
 197:Lib/ssc/src/ecatslv.c **** ------
 198:Lib/ssc/src/ecatslv.c **** --------------------------------------------------------------------------------------*/
 199:Lib/ssc/src/ecatslv.c **** 
 200:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 5


 201:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 202:Lib/ssc/src/ecatslv.c **** ------
 203:Lib/ssc/src/ecatslv.c **** ------    local variables and constants
 204:Lib/ssc/src/ecatslv.c **** ------
 205:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 206:Lib/ssc/src/ecatslv.c **** UINT16    u16ALEventMask;                      // Value which will be written to the 0x204 register
 207:Lib/ssc/src/ecatslv.c **** 
 208:Lib/ssc/src/ecatslv.c **** /*Dummy variable to trigger read or writes events in the ESC*/
 209:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16    u16dummy;
 210:Lib/ssc/src/ecatslv.c **** 
 211:Lib/ssc/src/ecatslv.c **** 
 212:Lib/ssc/src/ecatslv.c ****         VARVOLATILE UINT16 SMActivate = 0;
 213:Lib/ssc/src/ecatslv.c **** 
 214:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 215:Lib/ssc/src/ecatslv.c **** TSYNCMAN		SyncManInfo;
 216:Lib/ssc/src/ecatslv.c **** 
 217:Lib/ssc/src/ecatslv.c **** //indicates if the EEPORM was loaded correct
 218:Lib/ssc/src/ecatslv.c **** BOOL EepromLoaded = FALSE;
 219:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 220:Lib/ssc/src/ecatslv.c **** ------
 221:Lib/ssc/src/ecatslv.c **** ------    local functions
 222:Lib/ssc/src/ecatslv.c **** ------
 223:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 224:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 225:Lib/ssc/src/ecatslv.c **** /**
 226:Lib/ssc/src/ecatslv.c ****  \param    intMask        interrupt mask (disabled interrupt shall be zero)
 227:Lib/ssc/src/ecatslv.c **** 
 228:Lib/ssc/src/ecatslv.c ****  \brief    This function makes an logical and with the AL Event Mask register (0x204)
 229:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 230:Lib/ssc/src/ecatslv.c **** void ResetALEventMask(UINT16 intMask)
 231:Lib/ssc/src/ecatslv.c **** {
  30              		.loc 1 231 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 231 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              		.cfi_def_cfa_offset 24
  42 0004 0446     		mov	r4, r0
 232:Lib/ssc/src/ecatslv.c ****     UINT16 mask;
  43              		.loc 1 232 5 is_stmt 1 view .LVU2
 233:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
  44              		.loc 1 233 5 view .LVU3
  45 0006 0222     		movs	r2, #2
  46 0008 4FF40171 		mov	r1, #516
  47 000c 0DF10600 		add	r0, sp, #6
  48              	.LVL1:
  49              		.loc 1 233 5 is_stmt 0 view .LVU4
  50 0010 FFF7FEFF 		bl	HW_EscRead
  51              	.LVL2:
 234:Lib/ssc/src/ecatslv.c ****     
 235:Lib/ssc/src/ecatslv.c ****     mask &= intMask;
ARM GAS  /tmp/ccJBQgIh.s 			page 6


  52              		.loc 1 235 5 is_stmt 1 view .LVU5
  53              		.loc 1 235 10 is_stmt 0 view .LVU6
  54 0014 BDF80600 		ldrh	r0, [sp, #6]
  55 0018 0440     		ands	r4, r4, r0
  56 001a ADF80640 		strh	r4, [sp, #6]	@ movhi
 236:Lib/ssc/src/ecatslv.c **** 
 237:Lib/ssc/src/ecatslv.c ****     DISABLE_ESC_INT();
  57              		.loc 1 237 5 is_stmt 1 view .LVU7
  58              	.LVL3:
  59              	.LBB10:
  60              	.LBI10:
  61              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cm4.h ****  *
   7:Drivers/CMSIS/Include/core_cm4.h ****  * @note
   8:Drivers/CMSIS/Include/core_cm4.h ****  *
   9:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cm4.h **** 
  12:Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cm4.h ****    *
  24:Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cm4.h **** 
  37:Drivers/CMSIS/Include/core_cm4.h **** 
  38:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __ICCARM__ )
  39:Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:Drivers/CMSIS/Include/core_cm4.h **** #endif
  41:Drivers/CMSIS/Include/core_cm4.h **** 
  42:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:Drivers/CMSIS/Include/core_cm4.h **** 
  45:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
ARM GAS  /tmp/ccJBQgIh.s 			page 7


  46:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  47:Drivers/CMSIS/Include/core_cm4.h **** #endif
  48:Drivers/CMSIS/Include/core_cm4.h **** 
  49:Drivers/CMSIS/Include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:Drivers/CMSIS/Include/core_cm4.h **** 
  52:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:Drivers/CMSIS/Include/core_cm4.h **** 
  58:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:Drivers/CMSIS/Include/core_cm4.h ****  */
  61:Drivers/CMSIS/Include/core_cm4.h **** 
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  64:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  65:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  66:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup Cortex_M4
  67:Drivers/CMSIS/Include/core_cm4.h ****   @{
  68:Drivers/CMSIS/Include/core_cm4.h ****  */
  69:Drivers/CMSIS/Include/core_cm4.h **** 
  70:Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:Drivers/CMSIS/Include/core_cm4.h **** 
  76:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:Drivers/CMSIS/Include/core_cm4.h **** 
  78:Drivers/CMSIS/Include/core_cm4.h **** 
  79:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  80:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:Drivers/CMSIS/Include/core_cm4.h **** 
  84:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  85:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:Drivers/CMSIS/Include/core_cm4.h **** 
  89:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:Drivers/CMSIS/Include/core_cm4.h **** 
  94:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
  95:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:Drivers/CMSIS/Include/core_cm4.h **** 
  98:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
  99:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 8


 103:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 104:Drivers/CMSIS/Include/core_cm4.h ****   #define __packed
 105:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:Drivers/CMSIS/Include/core_cm4.h **** 
 109:Drivers/CMSIS/Include/core_cm4.h **** #endif
 110:Drivers/CMSIS/Include/core_cm4.h **** 
 111:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:Drivers/CMSIS/Include/core_cm4.h **** */
 114:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 115:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 118:Drivers/CMSIS/Include/core_cm4.h ****     #else
 119:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 121:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 122:Drivers/CMSIS/Include/core_cm4.h ****   #else
 123:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 124:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 125:Drivers/CMSIS/Include/core_cm4.h **** 
 126:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 127:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 130:Drivers/CMSIS/Include/core_cm4.h ****     #else
 131:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 133:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 134:Drivers/CMSIS/Include/core_cm4.h ****   #else
 135:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 136:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 137:Drivers/CMSIS/Include/core_cm4.h **** 
 138:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 140:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 142:Drivers/CMSIS/Include/core_cm4.h ****     #else
 143:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 145:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 146:Drivers/CMSIS/Include/core_cm4.h ****   #else
 147:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 148:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm4.h **** 
 150:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 151:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 154:Drivers/CMSIS/Include/core_cm4.h ****     #else
 155:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 157:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 158:Drivers/CMSIS/Include/core_cm4.h ****   #else
 159:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
ARM GAS  /tmp/ccJBQgIh.s 			page 9


 160:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 163:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 164:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 166:Drivers/CMSIS/Include/core_cm4.h ****     #else
 167:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 169:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 170:Drivers/CMSIS/Include/core_cm4.h ****   #else
 171:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 172:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 173:Drivers/CMSIS/Include/core_cm4.h **** 
 174:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 178:Drivers/CMSIS/Include/core_cm4.h ****     #else
 179:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 181:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 182:Drivers/CMSIS/Include/core_cm4.h ****   #else
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 184:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 185:Drivers/CMSIS/Include/core_cm4.h **** #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 193:Drivers/CMSIS/Include/core_cm4.h **** }
 194:Drivers/CMSIS/Include/core_cm4.h **** #endif
 195:Drivers/CMSIS/Include/core_cm4.h **** 
 196:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:Drivers/CMSIS/Include/core_cm4.h **** 
 198:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:Drivers/CMSIS/Include/core_cm4.h **** 
 200:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:Drivers/CMSIS/Include/core_cm4.h **** 
 203:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 204:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 205:Drivers/CMSIS/Include/core_cm4.h **** #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 208:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 210:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000
 211:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 213:Drivers/CMSIS/Include/core_cm4.h **** 
 214:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0
 216:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
ARM GAS  /tmp/ccJBQgIh.s 			page 10


 217:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 218:Drivers/CMSIS/Include/core_cm4.h **** 
 219:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0
 221:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 233:Drivers/CMSIS/Include/core_cm4.h **** #endif
 234:Drivers/CMSIS/Include/core_cm4.h **** 
 235:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:Drivers/CMSIS/Include/core_cm4.h **** /**
 237:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:Drivers/CMSIS/Include/core_cm4.h **** 
 239:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:Drivers/CMSIS/Include/core_cm4.h **** */
 243:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 244:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:Drivers/CMSIS/Include/core_cm4.h **** #else
 246:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:Drivers/CMSIS/Include/core_cm4.h **** #endif
 248:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:Drivers/CMSIS/Include/core_cm4.h **** 
 251:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:Drivers/CMSIS/Include/core_cm4.h **** 
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** 
 255:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 256:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 257:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 258:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 259:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 260:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 261:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 262:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 263:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 264:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 265:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 266:Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:Drivers/CMSIS/Include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:Drivers/CMSIS/Include/core_cm4.h **** */
 269:Drivers/CMSIS/Include/core_cm4.h **** 
 270:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:Drivers/CMSIS/Include/core_cm4.h ****     \brief  Core Register type definitions.
 273:Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccJBQgIh.s 			page 11


 274:Drivers/CMSIS/Include/core_cm4.h ****  */
 275:Drivers/CMSIS/Include/core_cm4.h **** 
 276:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:Drivers/CMSIS/Include/core_cm4.h ****  */
 278:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 279:Drivers/CMSIS/Include/core_cm4.h **** {
 280:Drivers/CMSIS/Include/core_cm4.h ****   struct
 281:Drivers/CMSIS/Include/core_cm4.h ****   {
 282:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 292:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 295:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** 
 298:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:Drivers/CMSIS/Include/core_cm4.h **** 
 301:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 303:Drivers/CMSIS/Include/core_cm4.h **** 
 304:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:Drivers/CMSIS/Include/core_cm4.h **** 
 307:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:Drivers/CMSIS/Include/core_cm4.h **** 
 310:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** 
 314:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:Drivers/CMSIS/Include/core_cm4.h **** {
 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 325:Drivers/CMSIS/Include/core_cm4.h **** 
 326:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 327:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:Drivers/CMSIS/Include/core_cm4.h **** 
 330:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 12


 331:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:Drivers/CMSIS/Include/core_cm4.h ****  */
 333:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 334:Drivers/CMSIS/Include/core_cm4.h **** {
 335:Drivers/CMSIS/Include/core_cm4.h ****   struct
 336:Drivers/CMSIS/Include/core_cm4.h ****   {
 337:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** 
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** 
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** 
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** 
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** 
 371:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 373:Drivers/CMSIS/Include/core_cm4.h **** 
 374:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
 375:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:Drivers/CMSIS/Include/core_cm4.h **** 
 377:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:Drivers/CMSIS/Include/core_cm4.h **** 
 380:Drivers/CMSIS/Include/core_cm4.h **** 
 381:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:Drivers/CMSIS/Include/core_cm4.h ****  */
 383:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 384:Drivers/CMSIS/Include/core_cm4.h **** {
 385:Drivers/CMSIS/Include/core_cm4.h ****   struct
 386:Drivers/CMSIS/Include/core_cm4.h ****   {
 387:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
ARM GAS  /tmp/ccJBQgIh.s 			page 13


 388:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:Drivers/CMSIS/Include/core_cm4.h **** 
 399:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:Drivers/CMSIS/Include/core_cm4.h **** 
 402:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:Drivers/CMSIS/Include/core_cm4.h **** 
 405:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 406:Drivers/CMSIS/Include/core_cm4.h **** 
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:Drivers/CMSIS/Include/core_cm4.h ****   @{
 412:Drivers/CMSIS/Include/core_cm4.h ****  */
 413:Drivers/CMSIS/Include/core_cm4.h **** 
 414:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:Drivers/CMSIS/Include/core_cm4.h ****  */
 416:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 417:Drivers/CMSIS/Include/core_cm4.h **** {
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[24];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RSERVED1[24];
 422:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[24];
 424:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[24];
 426:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[56];
 428:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[644];
 430:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 431:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 432:Drivers/CMSIS/Include/core_cm4.h **** 
 433:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:Drivers/CMSIS/Include/core_cm4.h **** 
 439:Drivers/CMSIS/Include/core_cm4.h **** 
 440:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:Drivers/CMSIS/Include/core_cm4.h ****   @{
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccJBQgIh.s 			page 14


 445:Drivers/CMSIS/Include/core_cm4.h **** 
 446:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:Drivers/CMSIS/Include/core_cm4.h ****  */
 448:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm4.h **** {
 450:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 465:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[5];
 470:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 472:Drivers/CMSIS/Include/core_cm4.h **** 
 473:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** 
 489:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 15


 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** 
 524:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** 
 546:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** 
 556:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
ARM GAS  /tmp/ccJBQgIh.s 			page 16


 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** 
 575:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
ARM GAS  /tmp/ccJBQgIh.s 			page 17


 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** 
 618:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** 
 628:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** 
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:Drivers/CMSIS/Include/core_cm4.h **** 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 658:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 659:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 660:Drivers/CMSIS/Include/core_cm4.h ****   @{
 661:Drivers/CMSIS/Include/core_cm4.h ****  */
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:Drivers/CMSIS/Include/core_cm4.h ****  */
 665:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 666:Drivers/CMSIS/Include/core_cm4.h **** {
 667:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 668:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 671:Drivers/CMSIS/Include/core_cm4.h **** 
 672:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
ARM GAS  /tmp/ccJBQgIh.s 			page 18


 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:Drivers/CMSIS/Include/core_cm4.h **** 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:Drivers/CMSIS/Include/core_cm4.h **** 
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:Drivers/CMSIS/Include/core_cm4.h ****   @{
 699:Drivers/CMSIS/Include/core_cm4.h ****  */
 700:Drivers/CMSIS/Include/core_cm4.h **** 
 701:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 702:Drivers/CMSIS/Include/core_cm4.h ****  */
 703:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 704:Drivers/CMSIS/Include/core_cm4.h **** {
 705:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:Drivers/CMSIS/Include/core_cm4.h **** 
 715:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 716:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm4.h **** 
 718:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:Drivers/CMSIS/Include/core_cm4.h **** 
 724:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:Drivers/CMSIS/Include/core_cm4.h **** 
 728:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 729:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
ARM GAS  /tmp/ccJBQgIh.s 			page 19


 730:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:Drivers/CMSIS/Include/core_cm4.h **** 
 732:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:Drivers/CMSIS/Include/core_cm4.h **** 
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:Drivers/CMSIS/Include/core_cm4.h **** 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 748:Drivers/CMSIS/Include/core_cm4.h ****   @{
 749:Drivers/CMSIS/Include/core_cm4.h ****  */
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:Drivers/CMSIS/Include/core_cm4.h ****  */
 753:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 754:Drivers/CMSIS/Include/core_cm4.h **** {
 755:Drivers/CMSIS/Include/core_cm4.h ****   __O  union
 756:Drivers/CMSIS/Include/core_cm4.h ****   {
 757:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 759:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[864];
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[15];
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[15];
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[29];
 768:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[43];
 772:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 773:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 774:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[6];
 775:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
ARM GAS  /tmp/ccJBQgIh.s 			page 20


 787:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 807:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:Drivers/CMSIS/Include/core_cm4.h **** 
 809:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:Drivers/CMSIS/Include/core_cm4.h **** 
 812:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:Drivers/CMSIS/Include/core_cm4.h **** 
 815:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 816:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm4.h **** 
 818:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm4.h **** 
 821:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm4.h **** 
 825:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:Drivers/CMSIS/Include/core_cm4.h **** 
 829:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 830:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 831:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:Drivers/CMSIS/Include/core_cm4.h **** 
 833:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:Drivers/CMSIS/Include/core_cm4.h **** 
 837:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:Drivers/CMSIS/Include/core_cm4.h **** 
 840:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:Drivers/CMSIS/Include/core_cm4.h **** 
 843:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
ARM GAS  /tmp/ccJBQgIh.s 			page 21


 844:Drivers/CMSIS/Include/core_cm4.h **** 
 845:Drivers/CMSIS/Include/core_cm4.h **** 
 846:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:Drivers/CMSIS/Include/core_cm4.h ****   @{
 850:Drivers/CMSIS/Include/core_cm4.h ****  */
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:Drivers/CMSIS/Include/core_cm4.h ****  */
 854:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 855:Drivers/CMSIS/Include/core_cm4.h **** {
 856:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 862:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 864:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 868:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[1];
 872:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 873:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[1];
 876:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 886:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:Drivers/CMSIS/Include/core_cm4.h **** 
 897:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:Drivers/CMSIS/Include/core_cm4.h **** 
 900:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
ARM GAS  /tmp/ccJBQgIh.s 			page 22


 901:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:Drivers/CMSIS/Include/core_cm4.h **** 
 903:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:Drivers/CMSIS/Include/core_cm4.h **** 
 906:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:Drivers/CMSIS/Include/core_cm4.h **** 
 909:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:Drivers/CMSIS/Include/core_cm4.h **** 
 912:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:Drivers/CMSIS/Include/core_cm4.h **** 
 915:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:Drivers/CMSIS/Include/core_cm4.h **** 
 918:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 919:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:Drivers/CMSIS/Include/core_cm4.h **** 
 921:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:Drivers/CMSIS/Include/core_cm4.h **** 
 924:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:Drivers/CMSIS/Include/core_cm4.h **** 
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:Drivers/CMSIS/Include/core_cm4.h **** 
 940:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:Drivers/CMSIS/Include/core_cm4.h **** 
 952:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
ARM GAS  /tmp/ccJBQgIh.s 			page 23


 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:Drivers/CMSIS/Include/core_cm4.h **** 
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:Drivers/CMSIS/Include/core_cm4.h **** 
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:Drivers/CMSIS/Include/core_cm4.h **** 
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:Drivers/CMSIS/Include/core_cm4.h **** 
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:Drivers/CMSIS/Include/core_cm4.h **** 
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 978:Drivers/CMSIS/Include/core_cm4.h **** 
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:Drivers/CMSIS/Include/core_cm4.h **** 
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 987:Drivers/CMSIS/Include/core_cm4.h **** 
 988:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** 
 991:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:Drivers/CMSIS/Include/core_cm4.h ****   @{
 995:Drivers/CMSIS/Include/core_cm4.h ****  */
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:Drivers/CMSIS/Include/core_cm4.h ****  */
 999:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1000:Drivers/CMSIS/Include/core_cm4.h **** {
1001:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1002:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[2];
1004:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[55];
1006:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[131];
1008:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[759];
1012:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
ARM GAS  /tmp/ccJBQgIh.s 			page 24


1015:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[1];
1016:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[39];
1020:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED7[8];
1023:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:Drivers/CMSIS/Include/core_cm4.h **** 
1031:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
1033:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:Drivers/CMSIS/Include/core_cm4.h **** 
1039:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:Drivers/CMSIS/Include/core_cm4.h **** 
1042:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1044:Drivers/CMSIS/Include/core_cm4.h **** 
1045:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:Drivers/CMSIS/Include/core_cm4.h **** 
1052:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:Drivers/CMSIS/Include/core_cm4.h **** 
1055:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1057:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1058:Drivers/CMSIS/Include/core_cm4.h **** 
1059:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm4.h **** 
1063:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm4.h **** 
1066:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:Drivers/CMSIS/Include/core_cm4.h **** 
1069:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 25


1072:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm4.h **** 
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:Drivers/CMSIS/Include/core_cm4.h **** 
1081:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:Drivers/CMSIS/Include/core_cm4.h **** 
1085:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:Drivers/CMSIS/Include/core_cm4.h **** 
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:Drivers/CMSIS/Include/core_cm4.h **** 
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
ARM GAS  /tmp/ccJBQgIh.s 			page 26


1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:Drivers/CMSIS/Include/core_cm4.h **** 
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:Drivers/CMSIS/Include/core_cm4.h **** 
1134:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:Drivers/CMSIS/Include/core_cm4.h **** 
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:Drivers/CMSIS/Include/core_cm4.h **** 
1141:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:Drivers/CMSIS/Include/core_cm4.h **** 
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1147:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:Drivers/CMSIS/Include/core_cm4.h ****   @{
1149:Drivers/CMSIS/Include/core_cm4.h ****  */
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:Drivers/CMSIS/Include/core_cm4.h ****  */
1153:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1154:Drivers/CMSIS/Include/core_cm4.h **** {
1155:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1158:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1167:Drivers/CMSIS/Include/core_cm4.h **** 
1168:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register */
1169:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1173:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register */
1179:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:Drivers/CMSIS/Include/core_cm4.h **** 
1182:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:Drivers/CMSIS/Include/core_cm4.h **** 
1185:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
ARM GAS  /tmp/ccJBQgIh.s 			page 27


1186:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:Drivers/CMSIS/Include/core_cm4.h **** 
1188:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register */
1189:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm4.h **** 
1206:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm4.h **** 
1209:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm4.h **** 
1212:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm4.h **** 
1215:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm4.h **** 
1218:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm4.h **** 
1221:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm4.h **** 
1224:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm4.h **** 
1227:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm4.h **** 
1230:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** 
1233:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:Drivers/CMSIS/Include/core_cm4.h **** #endif
1235:Drivers/CMSIS/Include/core_cm4.h **** 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:Drivers/CMSIS/Include/core_cm4.h ****   @{
1242:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccJBQgIh.s 			page 28


1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:Drivers/CMSIS/Include/core_cm4.h ****  */
1246:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1247:Drivers/CMSIS/Include/core_cm4.h **** {
1248:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
1249:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register */
1257:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:Drivers/CMSIS/Include/core_cm4.h **** 
1260:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1261:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:Drivers/CMSIS/Include/core_cm4.h **** 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:Drivers/CMSIS/Include/core_cm4.h **** 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:Drivers/CMSIS/Include/core_cm4.h **** 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:Drivers/CMSIS/Include/core_cm4.h **** 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register */
1285:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1286:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1287:Drivers/CMSIS/Include/core_cm4.h **** 
1288:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
ARM GAS  /tmp/ccJBQgIh.s 			page 29


1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:Drivers/CMSIS/Include/core_cm4.h **** 
1305:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:Drivers/CMSIS/Include/core_cm4.h **** 
1308:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:Drivers/CMSIS/Include/core_cm4.h **** 
1311:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:Drivers/CMSIS/Include/core_cm4.h **** 
1314:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:Drivers/CMSIS/Include/core_cm4.h **** 
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1318:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:Drivers/CMSIS/Include/core_cm4.h **** 
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:Drivers/CMSIS/Include/core_cm4.h **** 
1326:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:Drivers/CMSIS/Include/core_cm4.h **** #endif
1341:Drivers/CMSIS/Include/core_cm4.h **** 
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1344:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:Drivers/CMSIS/Include/core_cm4.h ****   @{
1347:Drivers/CMSIS/Include/core_cm4.h ****  */
1348:Drivers/CMSIS/Include/core_cm4.h **** 
1349:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:Drivers/CMSIS/Include/core_cm4.h ****  */
1351:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1352:Drivers/CMSIS/Include/core_cm4.h **** {
1353:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
ARM GAS  /tmp/ccJBQgIh.s 			page 30


1357:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:Drivers/CMSIS/Include/core_cm4.h **** 
1363:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:Drivers/CMSIS/Include/core_cm4.h **** 
1366:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:Drivers/CMSIS/Include/core_cm4.h **** 
1393:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:Drivers/CMSIS/Include/core_cm4.h **** 
1396:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register */
1397:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1401:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:Drivers/CMSIS/Include/core_cm4.h **** 
1407:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:Drivers/CMSIS/Include/core_cm4.h **** 
1413:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
ARM GAS  /tmp/ccJBQgIh.s 			page 31


1414:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:Drivers/CMSIS/Include/core_cm4.h **** 
1416:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:Drivers/CMSIS/Include/core_cm4.h **** 
1419:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:Drivers/CMSIS/Include/core_cm4.h **** 
1422:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:Drivers/CMSIS/Include/core_cm4.h **** 
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:Drivers/CMSIS/Include/core_cm4.h ****   @{
1450:Drivers/CMSIS/Include/core_cm4.h ****  */
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1456:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1458:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:Drivers/CMSIS/Include/core_cm4.h **** 
1462:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 32


1471:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:Drivers/CMSIS/Include/core_cm4.h **** #endif
1475:Drivers/CMSIS/Include/core_cm4.h **** 
1476:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:Drivers/CMSIS/Include/core_cm4.h **** #endif
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** 
1485:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1486:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1487:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1488:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1489:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1490:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1491:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1492:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1493:Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:Drivers/CMSIS/Include/core_cm4.h **** */
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** 
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1500:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:Drivers/CMSIS/Include/core_cm4.h ****     @{
1503:Drivers/CMSIS/Include/core_cm4.h ****  */
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Priority Grouping
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:Drivers/CMSIS/Include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:Drivers/CMSIS/Include/core_cm4.h ****   Only values from 0..7 are used.
1510:Drivers/CMSIS/Include/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:Drivers/CMSIS/Include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:Drivers/CMSIS/Include/core_cm4.h **** 
1513:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1514:Drivers/CMSIS/Include/core_cm4.h ****  */
1515:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:Drivers/CMSIS/Include/core_cm4.h **** {
1517:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1518:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1519:Drivers/CMSIS/Include/core_cm4.h **** 
1520:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1521:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
1522:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
1525:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1526:Drivers/CMSIS/Include/core_cm4.h **** }
1527:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 33


1528:Drivers/CMSIS/Include/core_cm4.h **** 
1529:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Priority Grouping
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:Drivers/CMSIS/Include/core_cm4.h **** 
1533:Drivers/CMSIS/Include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:Drivers/CMSIS/Include/core_cm4.h ****  */
1535:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:Drivers/CMSIS/Include/core_cm4.h **** {
1537:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1538:Drivers/CMSIS/Include/core_cm4.h **** }
1539:Drivers/CMSIS/Include/core_cm4.h **** 
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Enable External Interrupt
1542:Drivers/CMSIS/Include/core_cm4.h **** 
1543:Drivers/CMSIS/Include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:Drivers/CMSIS/Include/core_cm4.h **** 
1545:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:Drivers/CMSIS/Include/core_cm4.h ****  */
1547:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1548:Drivers/CMSIS/Include/core_cm4.h **** {
1549:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1550:Drivers/CMSIS/Include/core_cm4.h **** }
1551:Drivers/CMSIS/Include/core_cm4.h **** 
1552:Drivers/CMSIS/Include/core_cm4.h **** 
1553:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Disable External Interrupt
1554:Drivers/CMSIS/Include/core_cm4.h **** 
1555:Drivers/CMSIS/Include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:Drivers/CMSIS/Include/core_cm4.h **** 
1557:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:Drivers/CMSIS/Include/core_cm4.h ****  */
1559:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
  62              		.loc 2 1559 22 view .LVU8
  63              	.LBB11:
1560:Drivers/CMSIS/Include/core_cm4.h **** {
1561:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  64              		.loc 2 1561 3 view .LVU9
  65              		.loc 2 1561 50 is_stmt 0 view .LVU10
  66 001e 074C     		ldr	r4, .L3
  67 0020 4FF40005 		mov	r5, #8388608
  68 0024 C4F88050 		str	r5, [r4, #128]
  69              	.LVL4:
  70              		.loc 2 1561 50 view .LVU11
  71              	.LBE11:
  72              	.LBE10:
 238:Lib/ssc/src/ecatslv.c **** 
 239:Lib/ssc/src/ecatslv.c **** 
 240:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
  73              		.loc 1 240 5 is_stmt 1 view .LVU12
  74 0028 0222     		movs	r2, #2
  75 002a 4FF40171 		mov	r1, #516
  76 002e 0DF10600 		add	r0, sp, #6
  77 0032 FFF7FEFF 		bl	HW_EscWrite
  78              	.LVL5:
 241:Lib/ssc/src/ecatslv.c ****     ENABLE_ESC_INT();
  79              		.loc 1 241 5 view .LVU13
  80              	.LBB12:
ARM GAS  /tmp/ccJBQgIh.s 			page 34


  81              	.LBI12:
1547:Drivers/CMSIS/Include/core_cm4.h **** {
  82              		.loc 2 1547 22 view .LVU14
  83              	.LBB13:
1549:Drivers/CMSIS/Include/core_cm4.h **** }
  84              		.loc 2 1549 3 view .LVU15
1549:Drivers/CMSIS/Include/core_cm4.h **** }
  85              		.loc 2 1549 50 is_stmt 0 view .LVU16
  86 0036 2560     		str	r5, [r4]
  87              	.LVL6:
1549:Drivers/CMSIS/Include/core_cm4.h **** }
  88              		.loc 2 1549 50 view .LVU17
  89              	.LBE13:
  90              	.LBE12:
 242:Lib/ssc/src/ecatslv.c **** }
  91              		.loc 1 242 1 view .LVU18
  92 0038 03B0     		add	sp, sp, #12
  93              		.cfi_def_cfa_offset 12
  94              		@ sp needed
  95 003a 30BD     		pop	{r4, r5, pc}
  96              	.L4:
  97              		.align	2
  98              	.L3:
  99 003c 00E100E0 		.word	-536813312
 100              		.cfi_endproc
 101              	.LFE123:
 103              		.section	.text.SetALEventMask,"ax",%progbits
 104              		.align	1
 105              		.global	SetALEventMask
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	SetALEventMask:
 111              	.LVL7:
 112              	.LFB124:
 243:Lib/ssc/src/ecatslv.c **** 
 244:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 245:Lib/ssc/src/ecatslv.c **** /**
 246:Lib/ssc/src/ecatslv.c ****  \param    intMask        interrupt mask (enabled interrupt shall be one)
 247:Lib/ssc/src/ecatslv.c **** 
 248:Lib/ssc/src/ecatslv.c ****   \brief    This function makes an logical or with the AL Event Mask register (0x204)
 249:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 250:Lib/ssc/src/ecatslv.c **** void SetALEventMask(UINT16 intMask)
 251:Lib/ssc/src/ecatslv.c **** {
 113              		.loc 1 251 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		.loc 1 251 1 is_stmt 0 view .LVU20
 118 0000 30B5     		push	{r4, r5, lr}
 119              		.cfi_def_cfa_offset 12
 120              		.cfi_offset 4, -12
 121              		.cfi_offset 5, -8
 122              		.cfi_offset 14, -4
 123 0002 83B0     		sub	sp, sp, #12
 124              		.cfi_def_cfa_offset 24
 125 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccJBQgIh.s 			page 35


 252:Lib/ssc/src/ecatslv.c ****     UINT16 mask;
 126              		.loc 1 252 5 is_stmt 1 view .LVU21
 253:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
 127              		.loc 1 253 5 view .LVU22
 128 0006 0222     		movs	r2, #2
 129 0008 4FF40171 		mov	r1, #516
 130 000c 0DF10600 		add	r0, sp, #6
 131              	.LVL8:
 132              		.loc 1 253 5 is_stmt 0 view .LVU23
 133 0010 FFF7FEFF 		bl	HW_EscRead
 134              	.LVL9:
 254:Lib/ssc/src/ecatslv.c ****     
 255:Lib/ssc/src/ecatslv.c ****     mask |= intMask;
 135              		.loc 1 255 5 is_stmt 1 view .LVU24
 136              		.loc 1 255 10 is_stmt 0 view .LVU25
 137 0014 BDF80600 		ldrh	r0, [sp, #6]
 138 0018 0443     		orrs	r4, r4, r0
 139 001a ADF80640 		strh	r4, [sp, #6]	@ movhi
 256:Lib/ssc/src/ecatslv.c **** 
 257:Lib/ssc/src/ecatslv.c ****     DISABLE_ESC_INT();
 140              		.loc 1 257 5 is_stmt 1 view .LVU26
 141              	.LVL10:
 142              	.LBB14:
 143              	.LBI14:
1559:Drivers/CMSIS/Include/core_cm4.h **** {
 144              		.loc 2 1559 22 view .LVU27
 145              	.LBB15:
 146              		.loc 2 1561 3 view .LVU28
 147              		.loc 2 1561 50 is_stmt 0 view .LVU29
 148 001e 074C     		ldr	r4, .L7
 149 0020 4FF40005 		mov	r5, #8388608
 150 0024 C4F88050 		str	r5, [r4, #128]
 151              	.LVL11:
 152              		.loc 2 1561 50 view .LVU30
 153              	.LBE15:
 154              	.LBE14:
 258:Lib/ssc/src/ecatslv.c **** 
 259:Lib/ssc/src/ecatslv.c **** 
 260:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
 155              		.loc 1 260 5 is_stmt 1 view .LVU31
 156 0028 0222     		movs	r2, #2
 157 002a 4FF40171 		mov	r1, #516
 158 002e 0DF10600 		add	r0, sp, #6
 159 0032 FFF7FEFF 		bl	HW_EscWrite
 160              	.LVL12:
 261:Lib/ssc/src/ecatslv.c ****     ENABLE_ESC_INT();
 161              		.loc 1 261 5 view .LVU32
 162              	.LBB16:
 163              	.LBI16:
1547:Drivers/CMSIS/Include/core_cm4.h **** {
 164              		.loc 2 1547 22 view .LVU33
 165              	.LBB17:
1549:Drivers/CMSIS/Include/core_cm4.h **** }
 166              		.loc 2 1549 3 view .LVU34
1549:Drivers/CMSIS/Include/core_cm4.h **** }
 167              		.loc 2 1549 50 is_stmt 0 view .LVU35
 168 0036 2560     		str	r5, [r4]
ARM GAS  /tmp/ccJBQgIh.s 			page 36


 169              	.LVL13:
1549:Drivers/CMSIS/Include/core_cm4.h **** }
 170              		.loc 2 1549 50 view .LVU36
 171              	.LBE17:
 172              	.LBE16:
 262:Lib/ssc/src/ecatslv.c **** }
 173              		.loc 1 262 1 view .LVU37
 174 0038 03B0     		add	sp, sp, #12
 175              		.cfi_def_cfa_offset 12
 176              		@ sp needed
 177 003a 30BD     		pop	{r4, r5, pc}
 178              	.L8:
 179              		.align	2
 180              	.L7:
 181 003c 00E100E0 		.word	-536813312
 182              		.cfi_endproc
 183              	.LFE124:
 185              		.section	.text.UpdateEEPROMLoadedState,"ax",%progbits
 186              		.align	1
 187              		.global	UpdateEEPROMLoadedState
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	UpdateEEPROMLoadedState:
 193              	.LFB125:
 263:Lib/ssc/src/ecatslv.c **** 
 264:Lib/ssc/src/ecatslv.c **** 
 265:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 266:Lib/ssc/src/ecatslv.c **** /**
 267:Lib/ssc/src/ecatslv.c **** 
 268:Lib/ssc/src/ecatslv.c **** \brief    This function reads the EEPROM loaded state
 269:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 270:Lib/ssc/src/ecatslv.c **** void UpdateEEPROMLoadedState(void)
 271:Lib/ssc/src/ecatslv.c **** {
 194              		.loc 1 271 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 8
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 00B5     		push	{lr}
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 14, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              		.cfi_def_cfa_offset 16
 203              	.LBB18:
 272:Lib/ssc/src/ecatslv.c ****     {
 273:Lib/ssc/src/ecatslv.c ****        UINT16 TmpVar = 0;
 204              		.loc 1 273 8 view .LVU39
 205              		.loc 1 273 15 is_stmt 0 view .LVU40
 206 0004 0023     		movs	r3, #0
 207 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
 274:Lib/ssc/src/ecatslv.c ****        //read EEPROM loaded information
 275:Lib/ssc/src/ecatslv.c ****        HW_EscReadWord(TmpVar, ESC_EEPROM_CONTROL_OFFSET);
 208              		.loc 1 275 8 is_stmt 1 view .LVU41
 209 000a 0222     		movs	r2, #2
 210 000c 40F20251 		movw	r1, #1282
 211 0010 0DF10600 		add	r0, sp, #6
 212 0014 FFF7FEFF 		bl	HW_EscRead
ARM GAS  /tmp/ccJBQgIh.s 			page 37


 213              	.LVL14:
 276:Lib/ssc/src/ecatslv.c ****        TmpVar = SWAPWORD(TmpVar);
 214              		.loc 1 276 8 view .LVU42
 215              		.loc 1 276 15 is_stmt 0 view .LVU43
 216 0018 BDF80630 		ldrh	r3, [sp, #6]
 277:Lib/ssc/src/ecatslv.c **** 
 278:Lib/ssc/src/ecatslv.c ****        if (((TmpVar & ESC_EEPROM_ERROR_CRC) > 0)
 217              		.loc 1 278 8 is_stmt 1 view .LVU44
 218              		.loc 1 278 11 is_stmt 0 view .LVU45
 219 001c 13F4006F 		tst	r3, #2048
 220 0020 02D1     		bne	.L10
 279:Lib/ssc/src/ecatslv.c ****           || ((TmpVar & ESC_EEPROM_ERROR_LOAD) > 0))
 221              		.loc 1 279 11 view .LVU46
 222 0022 13F4805F 		tst	r3, #4096
 223 0026 05D0     		beq	.L11
 224              	.L10:
 280:Lib/ssc/src/ecatslv.c ****        {
 281:Lib/ssc/src/ecatslv.c ****           EepromLoaded = FALSE;
 225              		.loc 1 281 11 is_stmt 1 view .LVU47
 226              		.loc 1 281 24 is_stmt 0 view .LVU48
 227 0028 044B     		ldr	r3, .L14
 228 002a 0022     		movs	r2, #0
 229 002c 1A70     		strb	r2, [r3]
 230              	.L9:
 231              	.LBE18:
 282:Lib/ssc/src/ecatslv.c ****        }
 283:Lib/ssc/src/ecatslv.c ****        else
 284:Lib/ssc/src/ecatslv.c ****        {
 285:Lib/ssc/src/ecatslv.c ****           EepromLoaded = TRUE;
 286:Lib/ssc/src/ecatslv.c ****        }
 287:Lib/ssc/src/ecatslv.c ****     }
 288:Lib/ssc/src/ecatslv.c **** }
 232              		.loc 1 288 1 view .LVU49
 233 002e 03B0     		add	sp, sp, #12
 234              		.cfi_remember_state
 235              		.cfi_def_cfa_offset 4
 236              		@ sp needed
 237 0030 5DF804FB 		ldr	pc, [sp], #4
 238              	.L11:
 239              		.cfi_restore_state
 240              	.LBB19:
 285:Lib/ssc/src/ecatslv.c ****        }
 241              		.loc 1 285 11 is_stmt 1 view .LVU50
 285:Lib/ssc/src/ecatslv.c ****        }
 242              		.loc 1 285 24 is_stmt 0 view .LVU51
 243 0034 014B     		ldr	r3, .L14
 244 0036 0122     		movs	r2, #1
 245 0038 1A70     		strb	r2, [r3]
 246              	.LBE19:
 247              		.loc 1 288 1 view .LVU52
 248 003a F8E7     		b	.L9
 249              	.L15:
 250              		.align	2
 251              	.L14:
 252 003c 00000000 		.word	.LANCHOR0
 253              		.cfi_endproc
 254              	.LFE125:
ARM GAS  /tmp/ccJBQgIh.s 			page 38


 256              		.section	.text.GetSyncMan,"ax",%progbits
 257              		.align	1
 258              		.global	GetSyncMan
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	GetSyncMan:
 264              	.LVL15:
 265              	.LFB126:
 289:Lib/ssc/src/ecatslv.c **** 
 290:Lib/ssc/src/ecatslv.c **** 
 291:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 292:Lib/ssc/src/ecatslv.c **** ------
 293:Lib/ssc/src/ecatslv.c **** ------    functions
 294:Lib/ssc/src/ecatslv.c **** ------
 295:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 296:Lib/ssc/src/ecatslv.c **** 
 297:Lib/ssc/src/ecatslv.c **** 
 298:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 299:Lib/ssc/src/ecatslv.c **** /**
 300:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 301:Lib/ssc/src/ecatslv.c **** 
 302:Lib/ssc/src/ecatslv.c ****  \return     pPdSyncMan        Pointer to the settings of requested SYNC Manager channel
 303:Lib/ssc/src/ecatslv.c **** 
 304:Lib/ssc/src/ecatslv.c ****  \brief    This function is called to read the SYNC Manager channel descriptions of the
 305:Lib/ssc/src/ecatslv.c ****              process data SYNC Managers.
 306:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 307:Lib/ssc/src/ecatslv.c **** 
 308:Lib/ssc/src/ecatslv.c **** TSYNCMAN ESCMEM * GetSyncMan( UINT8 channel )
 309:Lib/ssc/src/ecatslv.c **** {
 266              		.loc 1 309 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		.loc 1 309 1 is_stmt 0 view .LVU54
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 310:Lib/ssc/src/ecatslv.c ****     HW_EscRead((MEM_ADDR *)&SyncManInfo, ESC_SYNCMAN_REG_OFFSET + (channel * SIZEOF_SM_REGISTER), S
 275              		.loc 1 310 5 is_stmt 1 view .LVU55
 276              		.loc 1 310 65 is_stmt 0 view .LVU56
 277 0002 00F58071 		add	r1, r0, #256
 278              		.loc 1 310 5 view .LVU57
 279 0006 044C     		ldr	r4, .L18
 280 0008 0822     		movs	r2, #8
 281 000a C900     		lsls	r1, r1, #3
 282 000c 2046     		mov	r0, r4
 283              	.LVL16:
 284              		.loc 1 310 5 view .LVU58
 285 000e FFF7FEFF 		bl	HW_EscRead
 286              	.LVL17:
 311:Lib/ssc/src/ecatslv.c **** 
 312:Lib/ssc/src/ecatslv.c **** 
 313:Lib/ssc/src/ecatslv.c ****     return &SyncManInfo;
 287              		.loc 1 313 5 is_stmt 1 view .LVU59
 314:Lib/ssc/src/ecatslv.c **** }
ARM GAS  /tmp/ccJBQgIh.s 			page 39


 288              		.loc 1 314 1 is_stmt 0 view .LVU60
 289 0012 2046     		mov	r0, r4
 290 0014 10BD     		pop	{r4, pc}
 291              	.L19:
 292 0016 00BF     		.align	2
 293              	.L18:
 294 0018 00000000 		.word	.LANCHOR1
 295              		.cfi_endproc
 296              	.LFE126:
 298              		.section	.text.DisableSyncManChannel,"ax",%progbits
 299              		.align	1
 300              		.global	DisableSyncManChannel
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	DisableSyncManChannel:
 306              	.LVL18:
 307              	.LFB127:
 315:Lib/ssc/src/ecatslv.c **** 
 316:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 317:Lib/ssc/src/ecatslv.c **** /**
 318:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 319:Lib/ssc/src/ecatslv.c **** 
 320:Lib/ssc/src/ecatslv.c ****  \brief    This function disables a Sync Manager channel
 321:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 322:Lib/ssc/src/ecatslv.c **** void DisableSyncManChannel(UINT8 channel)
 323:Lib/ssc/src/ecatslv.c **** {
 308              		.loc 1 323 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		.loc 1 323 1 is_stmt 0 view .LVU62
 313 0000 10B5     		push	{r4, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 4, -8
 316              		.cfi_offset 14, -4
 317 0002 82B0     		sub	sp, sp, #8
 318              		.cfi_def_cfa_offset 16
 324:Lib/ssc/src/ecatslv.c ****     UINT16 Offset;
 319              		.loc 1 324 5 is_stmt 1 view .LVU63
 325:Lib/ssc/src/ecatslv.c ****     //The register 0x806 is only readable from PDI => writing 0 is valid
 326:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16 smStatus = SM_SETTING_PDI_DISABLE;
 320              		.loc 1 326 5 view .LVU64
 321              		.loc 1 326 24 is_stmt 0 view .LVU65
 322 0004 4FF48073 		mov	r3, #256
 323 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
 327:Lib/ssc/src/ecatslv.c ****     Offset = (ESC_SYNCMAN_ACTIVE_OFFSET + (SIZEOF_SM_REGISTER*channel));
 324              		.loc 1 327 5 is_stmt 1 view .LVU66
 325              		.loc 1 327 41 is_stmt 0 view .LVU67
 326 000c C400     		lsls	r4, r0, #3
 327              		.loc 1 327 12 view .LVU68
 328 000e 04F60604 		addw	r4, r4, #2054
 329              	.LVL19:
 328:Lib/ssc/src/ecatslv.c **** 
 329:Lib/ssc/src/ecatslv.c **** 
 330:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(smStatus,Offset);
 330              		.loc 1 330 5 is_stmt 1 view .LVU69
ARM GAS  /tmp/ccJBQgIh.s 			page 40


 331 0012 0222     		movs	r2, #2
 332 0014 2146     		mov	r1, r4
 333 0016 0DF10600 		add	r0, sp, #6
 334              	.LVL20:
 335              		.loc 1 330 5 is_stmt 0 view .LVU70
 336 001a FFF7FEFF 		bl	HW_EscWrite
 337              	.LVL21:
 338              	.L21:
 331:Lib/ssc/src/ecatslv.c ****     
 332:Lib/ssc/src/ecatslv.c ****     /*wait until SyncManager is disabled*/
 333:Lib/ssc/src/ecatslv.c ****     do
 339              		.loc 1 333 5 is_stmt 1 discriminator 1 view .LVU71
 334:Lib/ssc/src/ecatslv.c ****     {
 335:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(smStatus, Offset);
 340              		.loc 1 335 9 discriminator 1 view .LVU72
 341 001e 0222     		movs	r2, #2
 342 0020 2146     		mov	r1, r4
 343 0022 0DF10600 		add	r0, sp, #6
 344 0026 FFF7FEFF 		bl	HW_EscRead
 345              	.LVL22:
 336:Lib/ssc/src/ecatslv.c ****     }while(!(smStatus & SM_SETTING_PDI_DISABLE));
 346              		.loc 1 336 11 discriminator 1 view .LVU73
 347              		.loc 1 336 23 is_stmt 0 discriminator 1 view .LVU74
 348 002a BDF80630 		ldrh	r3, [sp, #6]
 349              		.loc 1 336 5 discriminator 1 view .LVU75
 350 002e 13F4807F 		tst	r3, #256
 351 0032 F4D0     		beq	.L21
 337:Lib/ssc/src/ecatslv.c **** }
 352              		.loc 1 337 1 view .LVU76
 353 0034 02B0     		add	sp, sp, #8
 354              		.cfi_def_cfa_offset 8
 355              		@ sp needed
 356 0036 10BD     		pop	{r4, pc}
 357              		.loc 1 337 1 view .LVU77
 358              		.cfi_endproc
 359              	.LFE127:
 361              		.section	.text.EnableSyncManChannel,"ax",%progbits
 362              		.align	1
 363              		.global	EnableSyncManChannel
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 368              	EnableSyncManChannel:
 369              	.LVL23:
 370              	.LFB128:
 338:Lib/ssc/src/ecatslv.c **** 
 339:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 340:Lib/ssc/src/ecatslv.c **** /**
 341:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 342:Lib/ssc/src/ecatslv.c **** 
 343:Lib/ssc/src/ecatslv.c ****  \brief    This function enables a Sync Manager channel
 344:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 345:Lib/ssc/src/ecatslv.c **** void EnableSyncManChannel(UINT8 channel)
 346:Lib/ssc/src/ecatslv.c **** {
 371              		.loc 1 346 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccJBQgIh.s 			page 41


 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		.loc 1 346 1 is_stmt 0 view .LVU79
 376 0000 10B5     		push	{r4, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 4, -8
 379              		.cfi_offset 14, -4
 380 0002 82B0     		sub	sp, sp, #8
 381              		.cfi_def_cfa_offset 16
 347:Lib/ssc/src/ecatslv.c ****     UINT16 Offset;
 382              		.loc 1 347 5 is_stmt 1 view .LVU80
 348:Lib/ssc/src/ecatslv.c ****     //The register 0x806 is only readable from PDI => writing 0 is valid
 349:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16 smStatus = 0x0000;
 383              		.loc 1 349 5 view .LVU81
 384              		.loc 1 349 24 is_stmt 0 view .LVU82
 385 0004 0023     		movs	r3, #0
 386 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
 350:Lib/ssc/src/ecatslv.c ****     Offset = (ESC_SYNCMAN_ACTIVE_OFFSET + (SIZEOF_SM_REGISTER*channel));
 387              		.loc 1 350 5 is_stmt 1 view .LVU83
 388              		.loc 1 350 41 is_stmt 0 view .LVU84
 389 000a C400     		lsls	r4, r0, #3
 390              		.loc 1 350 12 view .LVU85
 391 000c 04F60604 		addw	r4, r4, #2054
 392              	.LVL24:
 351:Lib/ssc/src/ecatslv.c **** 
 352:Lib/ssc/src/ecatslv.c **** 
 353:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(smStatus,Offset);
 393              		.loc 1 353 5 is_stmt 1 view .LVU86
 394 0010 0222     		movs	r2, #2
 395 0012 2146     		mov	r1, r4
 396 0014 0DF10600 		add	r0, sp, #6
 397              	.LVL25:
 398              		.loc 1 353 5 is_stmt 0 view .LVU87
 399 0018 FFF7FEFF 		bl	HW_EscWrite
 400              	.LVL26:
 401              	.L24:
 354:Lib/ssc/src/ecatslv.c ****     
 355:Lib/ssc/src/ecatslv.c ****     /*wait until SyncManager is enabled*/
 356:Lib/ssc/src/ecatslv.c ****     do
 402              		.loc 1 356 5 is_stmt 1 discriminator 1 view .LVU88
 357:Lib/ssc/src/ecatslv.c ****     {
 358:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(smStatus,Offset);
 403              		.loc 1 358 9 discriminator 1 view .LVU89
 404 001c 0222     		movs	r2, #2
 405 001e 2146     		mov	r1, r4
 406 0020 0DF10600 		add	r0, sp, #6
 407 0024 FFF7FEFF 		bl	HW_EscRead
 408              	.LVL27:
 359:Lib/ssc/src/ecatslv.c **** 
 360:Lib/ssc/src/ecatslv.c ****     }while((smStatus & SM_SETTING_PDI_DISABLE));
 409              		.loc 1 360 11 discriminator 1 view .LVU90
 410              		.loc 1 360 22 is_stmt 0 discriminator 1 view .LVU91
 411 0028 BDF80630 		ldrh	r3, [sp, #6]
 412              		.loc 1 360 5 discriminator 1 view .LVU92
 413 002c 13F4807F 		tst	r3, #256
 414 0030 F4D1     		bne	.L24
 361:Lib/ssc/src/ecatslv.c **** }
 415              		.loc 1 361 1 view .LVU93
ARM GAS  /tmp/ccJBQgIh.s 			page 42


 416 0032 02B0     		add	sp, sp, #8
 417              		.cfi_def_cfa_offset 8
 418              		@ sp needed
 419 0034 10BD     		pop	{r4, pc}
 420              		.loc 1 361 1 view .LVU94
 421              		.cfi_endproc
 422              	.LFE128:
 424              		.section	.text.CheckSmSettings,"ax",%progbits
 425              		.align	1
 426              		.global	CheckSmSettings
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	CheckSmSettings:
 432              	.LVL28:
 433              	.LFB129:
 362:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 363:Lib/ssc/src/ecatslv.c **** 
 364:Lib/ssc/src/ecatslv.c **** 
 365:Lib/ssc/src/ecatslv.c **** 
 366:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 367:Lib/ssc/src/ecatslv.c **** /**
 368:Lib/ssc/src/ecatslv.c ****  \param  maxChannel    last SM channel which should be checked
 369:Lib/ssc/src/ecatslv.c **** 
 370:Lib/ssc/src/ecatslv.c ****  \return                 0: okay else AL Status Code
 371:Lib/ssc/src/ecatslv.c **** 
 372:Lib/ssc/src/ecatslv.c ****  \brief    This function checks all SM channels
 373:Lib/ssc/src/ecatslv.c **** 
 374:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 375:Lib/ssc/src/ecatslv.c **** 
 376:Lib/ssc/src/ecatslv.c **** UINT8    CheckSmSettings(UINT8 maxChannel)
 377:Lib/ssc/src/ecatslv.c **** {
 434              		.loc 1 377 1 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		.loc 1 377 1 is_stmt 0 view .LVU96
 439 0000 38B5     		push	{r3, r4, r5, lr}
 440              		.cfi_def_cfa_offset 16
 441              		.cfi_offset 3, -16
 442              		.cfi_offset 4, -12
 443              		.cfi_offset 5, -8
 444              		.cfi_offset 14, -4
 378:Lib/ssc/src/ecatslv.c ****     UINT8 i;
 445              		.loc 1 378 5 is_stmt 1 view .LVU97
 379:Lib/ssc/src/ecatslv.c ****     UINT8 result = 0;
 446              		.loc 1 379 5 view .LVU98
 447              	.LVL29:
 380:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM *pSyncMan;
 448              		.loc 1 380 5 view .LVU99
 381:Lib/ssc/src/ecatslv.c ****     UINT16 SMLength = 0;
 449              		.loc 1 381 5 view .LVU100
 382:Lib/ssc/src/ecatslv.c ****     UINT16 SMAddress = 0;
 450              		.loc 1 382 5 view .LVU101
 383:Lib/ssc/src/ecatslv.c **** 
 384:Lib/ssc/src/ecatslv.c ****     //Check if max address defines are within the available ESC address range
 385:Lib/ssc/src/ecatslv.c ****     if((nMaxEscAddress < MAX_PD_WRITE_ADDRESS)
ARM GAS  /tmp/ccJBQgIh.s 			page 43


 451              		.loc 1 385 5 view .LVU102
 386:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_PD_READ_ADDRESS)
 387:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM5*/
 388:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_WRITE_ADDRESS)
 389:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM5*/
 390:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_READ_ADDRESS))
 452              		.loc 1 390 9 is_stmt 0 view .LVU103
 453 0002 9E4B     		ldr	r3, .L94
 454 0004 1A88     		ldrh	r2, [r3]
 385:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_PD_READ_ADDRESS)
 455              		.loc 1 385 7 view .LVU104
 456 0006 42F6FE73 		movw	r3, #12286
 457 000a 9A42     		cmp	r2, r3
 458 000c 40F22781 		bls	.L43
 459 0010 0446     		mov	r4, r0
 391:Lib/ssc/src/ecatslv.c ****     {
 392:Lib/ssc/src/ecatslv.c ****         /*The defines for maximum SM addresses are invalid for the used ESC (change the defines in 
 393:Lib/ssc/src/ecatslv.c ****         It may be also required to adapt the SM settings in the ESI file*/
 394:Lib/ssc/src/ecatslv.c **** 
 395:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_NOVALIDFIRMWARE;
 396:Lib/ssc/src/ecatslv.c ****     }
 397:Lib/ssc/src/ecatslv.c **** 
 398:Lib/ssc/src/ecatslv.c ****     /* check the Sync Manager Parameter for the Receive Mailbox (Sync Manager Channel 0) */
 399:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 400:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(MAILBOX_WRITE);
 460              		.loc 1 400 5 is_stmt 1 view .LVU105
 461              		.loc 1 400 16 is_stmt 0 view .LVU106
 462 0012 0020     		movs	r0, #0
 463              	.LVL30:
 464              		.loc 1 400 16 view .LVU107
 465 0014 FFF7FEFF 		bl	GetSyncMan
 466              	.LVL31:
 401:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 402:Lib/ssc/src/ecatslv.c **** 
 403:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 467              		.loc 1 403 5 is_stmt 1 view .LVU108
 468              		.loc 1 403 14 is_stmt 0 view .LVU109
 469 0018 4388     		ldrh	r3, [r0, #2]
 470              	.LVL32:
 404:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 471              		.loc 1 404 5 is_stmt 1 view .LVU110
 472              		.loc 1 404 15 is_stmt 0 view .LVU111
 473 001a 0288     		ldrh	r2, [r0]
 474              	.LVL33:
 405:Lib/ssc/src/ecatslv.c **** 
 406:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 407:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 408:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 475              		.loc 1 408 5 is_stmt 1 view .LVU112
 476              		.loc 1 408 8 is_stmt 0 view .LVU113
 477 001c 13F0010F 		tst	r3, #1
 478 0020 40F02081 		bne	.L44
 409:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 410:Lib/ssc/src/ecatslv.c **** 
 411:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 479              		.loc 1 411 5 is_stmt 1 view .LVU114
 480              		.loc 1 411 8 is_stmt 0 view .LVU115
ARM GAS  /tmp/ccJBQgIh.s 			page 44


 481 0024 12F0010F 		tst	r2, #1
 482 0028 40F01E81 		bne	.L45
 412:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 413:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 414:Lib/ssc/src/ecatslv.c **** 
 415:Lib/ssc/src/ecatslv.c ****     if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 483              		.loc 1 415 5 is_stmt 1 view .LVU116
 484              		.loc 1 415 29 is_stmt 0 view .LVU117
 485 002c C188     		ldrh	r1, [r0, #6]
 486              		.loc 1 415 8 view .LVU118
 487 002e 11F0010F 		tst	r1, #1
 488 0032 3CD0     		beq	.L46
 416:Lib/ssc/src/ecatslv.c ****         /* receive mailbox is not enabled */
 417:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 418:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM_SET
 489              		.loc 1 418 10 is_stmt 1 view .LVU119
 490              		.loc 1 418 34 is_stmt 0 view .LVU120
 491 0034 8188     		ldrh	r1, [r0, #4]
 492              		.loc 1 418 13 view .LVU121
 493 0036 01F00C00 		and	r0, r1, #12
 494              	.LVL34:
 495              		.loc 1 418 13 view .LVU122
 496 003a 0428     		cmp	r0, #4
 497 003c 01D0     		beq	.L85
 419:Lib/ssc/src/ecatslv.c ****        /* receive mailbox is not writable by the master*/
 420:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 498              		.loc 1 420 16 view .LVU123
 499 003e 1625     		movs	r5, #22
 500 0040 36E0     		b	.L28
 501              	.L85:
 421:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETTING_
 502              		.loc 1 421 10 is_stmt 1 view .LVU124
 503              		.loc 1 421 13 is_stmt 0 view .LVU125
 504 0042 11F0020F 		tst	r1, #2
 505 0046 3DD0     		beq	.L48
 422:Lib/ssc/src/ecatslv.c ****         /* receive mailbox is not in one buffer mode */
 423:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 424:Lib/ssc/src/ecatslv.c ****     else if ( SMLength < MIN_MBX_SIZE )
 506              		.loc 1 424 10 is_stmt 1 view .LVU126
 507              		.loc 1 424 13 is_stmt 0 view .LVU127
 508 0048 212B     		cmp	r3, #33
 509 004a 3DD9     		bls	.L49
 425:Lib/ssc/src/ecatslv.c ****         /* receive mailbox size is too small */
 426:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 427:Lib/ssc/src/ecatslv.c ****     else if ( SMLength > MAX_MBX_SIZE )
 510              		.loc 1 427 10 is_stmt 1 view .LVU128
 511              		.loc 1 427 13 is_stmt 0 view .LVU129
 512 004c B3F5807F 		cmp	r3, #256
 513 0050 3CD8     		bhi	.L50
 428:Lib/ssc/src/ecatslv.c ****         /* receive mailbox size is too great */
 429:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 430:Lib/ssc/src/ecatslv.c ****      else if ( SMAddress < MIN_MBX_WRITE_ADDRESS )
 514              		.loc 1 430 11 is_stmt 1 view .LVU130
 515              		.loc 1 430 14 is_stmt 0 view .LVU131
 516 0052 B2F5805F 		cmp	r2, #4096
 517 0056 3BD3     		bcc	.L51
 431:Lib/ssc/src/ecatslv.c ****         /* receive mailbox address is too small */
ARM GAS  /tmp/ccJBQgIh.s 			page 45


 432:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 433:Lib/ssc/src/ecatslv.c ****     else if ( SMAddress > MAX_MBX_WRITE_ADDRESS)
 518              		.loc 1 433 10 is_stmt 1 view .LVU132
 519              		.loc 1 433 13 is_stmt 0 view .LVU133
 520 0058 B2F5405F 		cmp	r2, #12288
 521 005c 01D3     		bcc	.L86
 434:Lib/ssc/src/ecatslv.c ****         /* receive mailbox address is too great */
 435:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 522              		.loc 1 435 16 view .LVU134
 523 005e 1625     		movs	r5, #22
 524 0060 26E0     		b	.L28
 525              	.L86:
 436:Lib/ssc/src/ecatslv.c **** 
 437:Lib/ssc/src/ecatslv.c **** 
 438:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 526              		.loc 1 438 5 is_stmt 1 view .LVU135
 439:Lib/ssc/src/ecatslv.c ****     {
 440:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Send Mailbox (Sync Manager Channel 1) */
 441:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 442:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(MAILBOX_READ);
 527              		.loc 1 442 9 view .LVU136
 528              		.loc 1 442 20 is_stmt 0 view .LVU137
 529 0062 0120     		movs	r0, #1
 530 0064 FFF7FEFF 		bl	GetSyncMan
 531              	.LVL35:
 532              		.loc 1 442 20 view .LVU138
 533 0068 0346     		mov	r3, r0
 534              	.LVL36:
 443:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 444:Lib/ssc/src/ecatslv.c **** 
 445:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 535              		.loc 1 445 5 is_stmt 1 view .LVU139
 536              		.loc 1 445 14 is_stmt 0 view .LVU140
 537 006a 4188     		ldrh	r1, [r0, #2]
 538              	.LVL37:
 446:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 539              		.loc 1 446 5 is_stmt 1 view .LVU141
 540              		.loc 1 446 15 is_stmt 0 view .LVU142
 541 006c 0288     		ldrh	r2, [r0]
 542              	.LVL38:
 447:Lib/ssc/src/ecatslv.c **** 
 448:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 449:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 450:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 543              		.loc 1 450 5 is_stmt 1 view .LVU143
 544              		.loc 1 450 8 is_stmt 0 view .LVU144
 545 006e 11F0010F 		tst	r1, #1
 546 0072 40F0FB80 		bne	.L53
 451:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 452:Lib/ssc/src/ecatslv.c **** 
 453:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 547              		.loc 1 453 5 is_stmt 1 view .LVU145
 548              		.loc 1 453 8 is_stmt 0 view .LVU146
 549 0076 12F0010F 		tst	r2, #1
 550 007a 40F0F980 		bne	.L54
 454:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 455:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
ARM GAS  /tmp/ccJBQgIh.s 			page 46


 456:Lib/ssc/src/ecatslv.c **** 
 457:Lib/ssc/src/ecatslv.c ****       if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 551              		.loc 1 457 7 is_stmt 1 view .LVU147
 552              		.loc 1 457 31 is_stmt 0 view .LVU148
 553 007e C088     		ldrh	r0, [r0, #6]
 554              	.LVL39:
 555              		.loc 1 457 10 view .LVU149
 556 0080 10F0010F 		tst	r0, #1
 557 0084 71D0     		beq	.L55
 458:Lib/ssc/src/ecatslv.c ****             /* send mailbox is not enabled */
 459:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 460:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM
 558              		.loc 1 460 14 is_stmt 1 view .LVU150
 559              		.loc 1 460 38 is_stmt 0 view .LVU151
 560 0086 9B88     		ldrh	r3, [r3, #4]
 561              	.LVL40:
 562              		.loc 1 460 17 view .LVU152
 563 0088 13F00C0F 		tst	r3, #12
 564 008c 6FD1     		bne	.L56
 461:Lib/ssc/src/ecatslv.c ****            /* receive mailbox is not readable by the master*/
 462:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 463:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETT
 565              		.loc 1 463 14 is_stmt 1 view .LVU153
 566              		.loc 1 463 17 is_stmt 0 view .LVU154
 567 008e 13F0020F 		tst	r3, #2
 568 0092 6ED0     		beq	.L57
 464:Lib/ssc/src/ecatslv.c ****             /* receive mailbox is not in one buffer mode */
 465:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 466:Lib/ssc/src/ecatslv.c ****         else if ( SMLength < MIN_MBX_SIZE )
 569              		.loc 1 466 14 is_stmt 1 view .LVU155
 570              		.loc 1 466 17 is_stmt 0 view .LVU156
 571 0094 2129     		cmp	r1, #33
 572 0096 6ED9     		bls	.L58
 467:Lib/ssc/src/ecatslv.c ****             /* send mailbox size is too small */
 468:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 469:Lib/ssc/src/ecatslv.c ****         else if ( SMLength > MAX_MBX_SIZE )
 573              		.loc 1 469 14 is_stmt 1 view .LVU157
 574              		.loc 1 469 17 is_stmt 0 view .LVU158
 575 0098 B1F5807F 		cmp	r1, #256
 576 009c 6DD8     		bhi	.L59
 470:Lib/ssc/src/ecatslv.c ****             /* send mailbox size is too great */
 471:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 472:Lib/ssc/src/ecatslv.c ****          else if ( SMAddress < MIN_MBX_READ_ADDRESS )
 577              		.loc 1 472 15 is_stmt 1 view .LVU159
 578              		.loc 1 472 18 is_stmt 0 view .LVU160
 579 009e B2F5805F 		cmp	r2, #4096
 580 00a2 6CD3     		bcc	.L60
 473:Lib/ssc/src/ecatslv.c ****             /* send mailbox address is too small */
 474:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 475:Lib/ssc/src/ecatslv.c ****         else if ( SMAddress > MAX_MBX_READ_ADDRESS )
 581              		.loc 1 475 14 is_stmt 1 view .LVU161
 582              		.loc 1 475 17 is_stmt 0 view .LVU162
 583 00a4 B2F5405F 		cmp	r2, #12288
 584 00a8 6BD2     		bcs	.L61
 379:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM *pSyncMan;
 585              		.loc 1 379 11 view .LVU163
 586 00aa 0025     		movs	r5, #0
ARM GAS  /tmp/ccJBQgIh.s 			page 47


 587 00ac 00E0     		b	.L28
 588              	.LVL41:
 589              	.L46:
 417:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM_SET
 590              		.loc 1 417 16 view .LVU164
 591 00ae 1625     		movs	r5, #22
 592              	.LVL42:
 593              	.L28:
 476:Lib/ssc/src/ecatslv.c ****             /* send mailbox address is too great */
 477:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 478:Lib/ssc/src/ecatslv.c **** 
 479:Lib/ssc/src/ecatslv.c ****     }
 480:Lib/ssc/src/ecatslv.c **** 
 481:Lib/ssc/src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_IN )
 594              		.loc 1 481 5 is_stmt 1 view .LVU165
 595              		.loc 1 481 8 is_stmt 0 view .LVU166
 596 00b0 0DB9     		cbnz	r5, .L29
 597              		.loc 1 481 22 discriminator 1 view .LVU167
 598 00b2 032C     		cmp	r4, #3
 599 00b4 0ED8     		bhi	.L87
 600              	.LVL43:
 601              	.L29:
 482:Lib/ssc/src/ecatslv.c ****     {
 483:Lib/ssc/src/ecatslv.c ****         /* b3BufferMode is only set, if inputs and outputs are running in 3-Buffer-Mode when leavin
 484:Lib/ssc/src/ecatslv.c ****         b3BufferMode = TRUE;
 485:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 486:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 487:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 488:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 489:Lib/ssc/src/ecatslv.c **** 
 490:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 491:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 492:Lib/ssc/src/ecatslv.c **** 
 493:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 494:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 495:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 496:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 497:Lib/ssc/src/ecatslv.c **** 
 498:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 499:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 500:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 501:Lib/ssc/src/ecatslv.c **** 
 502:Lib/ssc/src/ecatslv.c ****         if ((pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLe
 503:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 504:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 505:Lib/ssc/src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 506:Lib/ssc/src/ecatslv.c ****         {
 507:Lib/ssc/src/ecatslv.c ****             /* Sync Manager Channel 3 is active, input size has to greater 0 */
 508:Lib/ssc/src/ecatslv.c ****             if ( SMLength != nPdInputSize || nPdInputSize == 0 || SMLength > MAX_PD_INPUT_SIZE)
 509:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 510:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 511:Lib/ssc/src/ecatslv.c ****             else
 512:Lib/ssc/src/ecatslv.c ****                 /* sizes matches */
 513:Lib/ssc/src/ecatslv.c ****             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) == SM_
 514:Lib/ssc/src/ecatslv.c ****             {
 515:Lib/ssc/src/ecatslv.c ****                 /* settings match */
 516:Lib/ssc/src/ecatslv.c ****                 if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_READ_ADDRESS )&&( SMAddr
ARM GAS  /tmp/ccJBQgIh.s 			page 48


 517:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 518:Lib/ssc/src/ecatslv.c ****                     )
 519:Lib/ssc/src/ecatslv.c ****                 {
 520:Lib/ssc/src/ecatslv.c ****                     /* addresses match */
 521:Lib/ssc/src/ecatslv.c **** 
 522:Lib/ssc/src/ecatslv.c ****                     if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) == 
 523:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 524:Lib/ssc/src/ecatslv.c ****                         b3BufferMode = FALSE;
 525:Lib/ssc/src/ecatslv.c ****                 }
 526:Lib/ssc/src/ecatslv.c ****                 else
 527:Lib/ssc/src/ecatslv.c ****                     /* input address is out of the allowed area or has changed in SAFEOP or OP */
 528:Lib/ssc/src/ecatslv.c ****                     result = SYNCMANCHADDRESS+1;
 529:Lib/ssc/src/ecatslv.c ****             }
 530:Lib/ssc/src/ecatslv.c ****             else
 531:Lib/ssc/src/ecatslv.c ****                 /* input settings do not match */
 532:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSETTINGS+1;
 533:Lib/ssc/src/ecatslv.c ****         }
 534:Lib/ssc/src/ecatslv.c ****         else if ( SMLength != 0 || nPdInputSize != 0 )
 535:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 536:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
 537:Lib/ssc/src/ecatslv.c **** 
 538:Lib/ssc/src/ecatslv.c **** 
 539:Lib/ssc/src/ecatslv.c **** 
 540:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 541:Lib/ssc/src/ecatslv.c ****         {
 542:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMINCFG;
 543:Lib/ssc/src/ecatslv.c ****         }
 544:Lib/ssc/src/ecatslv.c ****     }
 545:Lib/ssc/src/ecatslv.c **** 
 546:Lib/ssc/src/ecatslv.c **** 
 547:Lib/ssc/src/ecatslv.c **** //    else
 548:Lib/ssc/src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_OUT )
 602              		.loc 1 548 5 is_stmt 1 view .LVU168
 603              		.loc 1 548 8 is_stmt 0 view .LVU169
 604 00b6 0DB9     		cbnz	r5, .L31
 605              		.loc 1 548 22 discriminator 1 view .LVU170
 606 00b8 022C     		cmp	r4, #2
 607 00ba 64D8     		bhi	.L88
 608              	.LVL44:
 609              	.L31:
 549:Lib/ssc/src/ecatslv.c ****     {
 550:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Outputs (Sync Manager Channel 2) */
 551:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 552:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 553:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 554:Lib/ssc/src/ecatslv.c **** 
 555:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 556:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 557:Lib/ssc/src/ecatslv.c **** 
 558:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 559:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 560:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 561:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 562:Lib/ssc/src/ecatslv.c **** 
 563:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 564:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 565:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
ARM GAS  /tmp/ccJBQgIh.s 			page 49


 566:Lib/ssc/src/ecatslv.c **** 
 567:Lib/ssc/src/ecatslv.c ****     if ( (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLengt
 568:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 569:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 570:Lib/ssc/src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 571:Lib/ssc/src/ecatslv.c ****         {
 572:Lib/ssc/src/ecatslv.c ****             /* Sync Manager Channel 2 is active, output size has to greater 0 */
 573:Lib/ssc/src/ecatslv.c ****             if ( SMLength == nPdOutputSize && nPdOutputSize != 0 && SMLength <= ((UINT16)MAX_PD_OUT
 574:Lib/ssc/src/ecatslv.c **** 
 575:Lib/ssc/src/ecatslv.c ****             {
 576:Lib/ssc/src/ecatslv.c ****                 /* sizes match */
 577:Lib/ssc/src/ecatslv.c ****                 if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) ==
 578:Lib/ssc/src/ecatslv.c ****                 {
 579:Lib/ssc/src/ecatslv.c ****                     /* settings match */
 580:Lib/ssc/src/ecatslv.c ****                     if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_WRITE_ADDRESS )&&( S
 581:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 582:Lib/ssc/src/ecatslv.c ****                         )
 583:Lib/ssc/src/ecatslv.c ****                     {
 584:Lib/ssc/src/ecatslv.c ****                         /* addresses match */
 585:Lib/ssc/src/ecatslv.c ****                         {
 586:Lib/ssc/src/ecatslv.c ****                             /* check, if watchdog trigger is enabled */
 587:Lib/ssc/src/ecatslv.c ****                             if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_WATCHDOG
 588:Lib/ssc/src/ecatslv.c ****                             {
 589:Lib/ssc/src/ecatslv.c ****                                 bWdTrigger = TRUE;
 590:Lib/ssc/src/ecatslv.c ****                             }
 591:Lib/ssc/src/ecatslv.c ****                             else
 592:Lib/ssc/src/ecatslv.c ****                             {
 593:Lib/ssc/src/ecatslv.c ****                                 bWdTrigger = FALSE;
 594:Lib/ssc/src/ecatslv.c ****                             }
 595:Lib/ssc/src/ecatslv.c **** 
 596:Lib/ssc/src/ecatslv.c ****                             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_M
 597:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 598:Lib/ssc/src/ecatslv.c ****                                 b3BufferMode = FALSE;
 599:Lib/ssc/src/ecatslv.c ****                         }
 600:Lib/ssc/src/ecatslv.c ****                     }
 601:Lib/ssc/src/ecatslv.c ****                     else
 602:Lib/ssc/src/ecatslv.c ****                         /* output address is out of the allowed area or has changed in SAFEOP or OP
 603:Lib/ssc/src/ecatslv.c ****                         result = SYNCMANCHADDRESS+1;
 604:Lib/ssc/src/ecatslv.c ****                 }
 605:Lib/ssc/src/ecatslv.c ****                 else
 606:Lib/ssc/src/ecatslv.c ****                     /* output settings do not match */
 607:Lib/ssc/src/ecatslv.c ****                     result = SYNCMANCHSETTINGS+1;
 608:Lib/ssc/src/ecatslv.c ****             }
 609:Lib/ssc/src/ecatslv.c ****             else
 610:Lib/ssc/src/ecatslv.c ****                 /* output sizes don't match */
 611:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 612:Lib/ssc/src/ecatslv.c ****         }
 613:Lib/ssc/src/ecatslv.c ****         else if ( SMLength != 0 || nPdOutputSize != 0 )
 614:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 615:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
 616:Lib/ssc/src/ecatslv.c **** 
 617:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 618:Lib/ssc/src/ecatslv.c ****         {
 619:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMOUTCFG;
 620:Lib/ssc/src/ecatslv.c ****         }
 621:Lib/ssc/src/ecatslv.c ****     }
 622:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 50


 623:Lib/ssc/src/ecatslv.c **** 
 624:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 610              		.loc 1 624 5 is_stmt 1 view .LVU171
 611              		.loc 1 624 8 is_stmt 0 view .LVU172
 612 00bc 002D     		cmp	r5, #0
 613 00be 00F0C980 		beq	.L41
 614 00c2 CDE0     		b	.L27
 615              	.LVL45:
 616              	.L48:
 423:Lib/ssc/src/ecatslv.c ****     else if ( SMLength < MIN_MBX_SIZE )
 617              		.loc 1 423 16 view .LVU173
 618 00c4 1625     		movs	r5, #22
 619 00c6 F3E7     		b	.L28
 620              	.L49:
 426:Lib/ssc/src/ecatslv.c ****     else if ( SMLength > MAX_MBX_SIZE )
 621              		.loc 1 426 16 view .LVU174
 622 00c8 1625     		movs	r5, #22
 623 00ca F1E7     		b	.L28
 624              	.L50:
 429:Lib/ssc/src/ecatslv.c ****      else if ( SMAddress < MIN_MBX_WRITE_ADDRESS )
 625              		.loc 1 429 16 view .LVU175
 626 00cc 1625     		movs	r5, #22
 627 00ce EFE7     		b	.L28
 628              	.L51:
 432:Lib/ssc/src/ecatslv.c ****     else if ( SMAddress > MAX_MBX_WRITE_ADDRESS)
 629              		.loc 1 432 16 view .LVU176
 630 00d0 1625     		movs	r5, #22
 631 00d2 EDE7     		b	.L28
 632              	.LVL46:
 633              	.L87:
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 634              		.loc 1 484 9 is_stmt 1 view .LVU177
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 635              		.loc 1 484 22 is_stmt 0 view .LVU178
 636 00d4 6A4B     		ldr	r3, .L94+4
 637 00d6 0122     		movs	r2, #1
 638              	.LVL47:
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 639              		.loc 1 484 22 view .LVU179
 640 00d8 1A70     		strb	r2, [r3]
 487:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 641              		.loc 1 487 9 is_stmt 1 view .LVU180
 487:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 642              		.loc 1 487 20 is_stmt 0 view .LVU181
 643 00da 0320     		movs	r0, #3
 644 00dc FFF7FEFF 		bl	GetSyncMan
 645              	.LVL48:
 490:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 646              		.loc 1 490 5 is_stmt 1 view .LVU182
 490:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 647              		.loc 1 490 14 is_stmt 0 view .LVU183
 648 00e0 4288     		ldrh	r2, [r0, #2]
 649              	.LVL49:
 491:Lib/ssc/src/ecatslv.c **** 
 650              		.loc 1 491 5 is_stmt 1 view .LVU184
 491:Lib/ssc/src/ecatslv.c **** 
 651              		.loc 1 491 15 is_stmt 0 view .LVU185
ARM GAS  /tmp/ccJBQgIh.s 			page 51


 652 00e2 0188     		ldrh	r1, [r0]
 653              	.LVL50:
 495:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 654              		.loc 1 495 5 is_stmt 1 view .LVU186
 495:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 655              		.loc 1 495 8 is_stmt 0 view .LVU187
 656 00e4 12F0010F 		tst	r2, #1
 657 00e8 40F0C480 		bne	.L62
 498:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 658              		.loc 1 498 5 is_stmt 1 view .LVU188
 498:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 659              		.loc 1 498 8 is_stmt 0 view .LVU189
 660 00ec 11F0010F 		tst	r1, #1
 661 00f0 40F0C280 		bne	.L63
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 662              		.loc 1 502 9 is_stmt 1 view .LVU190
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 663              		.loc 1 502 32 is_stmt 0 view .LVU191
 664 00f4 C388     		ldrh	r3, [r0, #6]
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 665              		.loc 1 502 12 view .LVU192
 666 00f6 13F00103 		ands	r3, r3, #1
 667 00fa 02D0     		beq	.L30
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 668              		.loc 1 502 93 discriminator 1 view .LVU193
 669 00fc 002A     		cmp	r2, #0
 670 00fe 00F09580 		beq	.L64
 671              	.L30:
 505:Lib/ssc/src/ecatslv.c ****         {
 672              		.loc 1 505 14 is_stmt 1 view .LVU194
 505:Lib/ssc/src/ecatslv.c ****         {
 673              		.loc 1 505 17 is_stmt 0 view .LVU195
 674 0102 53B3     		cbz	r3, .L32
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 675              		.loc 1 508 13 is_stmt 1 view .LVU196
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 676              		.loc 1 508 27 is_stmt 0 view .LVU197
 677 0104 5F4B     		ldr	r3, .L94+8
 678 0106 1B88     		ldrh	r3, [r3]
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 679              		.loc 1 508 16 view .LVU198
 680 0108 9342     		cmp	r3, r2
 681 010a 01D0     		beq	.L89
 542:Lib/ssc/src/ecatslv.c ****         }
 682              		.loc 1 542 20 view .LVU199
 683 010c 1E25     		movs	r5, #30
 684              	.LVL51:
 542:Lib/ssc/src/ecatslv.c ****         }
 685              		.loc 1 542 20 view .LVU200
 686 010e D5E7     		b	.L31
 687              	.LVL52:
 688              	.L89:
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 689              		.loc 1 508 43 discriminator 1 view .LVU201
 690 0110 002B     		cmp	r3, #0
 691 0112 00F08D80 		beq	.L66
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
ARM GAS  /tmp/ccJBQgIh.s 			page 52


 692              		.loc 1 508 64 discriminator 2 view .LVU202
 693 0116 442A     		cmp	r2, #68
 694 0118 00F28C80 		bhi	.L67
 513:Lib/ssc/src/ecatslv.c ****             {
 695              		.loc 1 513 13 is_stmt 1 view .LVU203
 513:Lib/ssc/src/ecatslv.c ****             {
 696              		.loc 1 513 37 is_stmt 0 view .LVU204
 697 011c 8388     		ldrh	r3, [r0, #4]
 513:Lib/ssc/src/ecatslv.c ****             {
 698              		.loc 1 513 16 view .LVU205
 699 011e 13F00C0F 		tst	r3, #12
 700 0122 40F08980 		bne	.L68
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 701              		.loc 1 516 17 is_stmt 1 view .LVU206
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 702              		.loc 1 516 36 is_stmt 0 view .LVU207
 703 0126 584A     		ldr	r2, .L94+12
 704              	.LVL53:
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 705              		.loc 1 516 36 view .LVU208
 706 0128 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 707              		.loc 1 516 20 view .LVU209
 708 012a 022A     		cmp	r2, #2
 709 012c 08D0     		beq	.L90
 710              	.L33:
 517:Lib/ssc/src/ecatslv.c ****                     )
 711              		.loc 1 517 20 view .LVU210
 712 012e 022A     		cmp	r2, #2
 713 0130 00F08480 		beq	.L69
 517:Lib/ssc/src/ecatslv.c ****                     )
 714              		.loc 1 517 66 discriminator 1 view .LVU211
 715 0134 554A     		ldr	r2, .L94+16
 716 0136 1288     		ldrh	r2, [r2]
 517:Lib/ssc/src/ecatslv.c ****                     )
 717              		.loc 1 517 52 discriminator 1 view .LVU212
 718 0138 8A42     		cmp	r2, r1
 719 013a 07D0     		beq	.L34
 542:Lib/ssc/src/ecatslv.c ****         }
 720              		.loc 1 542 20 view .LVU213
 721 013c 1E25     		movs	r5, #30
 722              	.LVL54:
 542:Lib/ssc/src/ecatslv.c ****         }
 723              		.loc 1 542 20 view .LVU214
 724 013e BDE7     		b	.L31
 725              	.LVL55:
 726              	.L90:
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 727              		.loc 1 516 52 discriminator 1 view .LVU215
 728 0140 B1F5805F 		cmp	r1, #4096
 729 0144 F3D3     		bcc	.L33
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 730              		.loc 1 516 90 discriminator 2 view .LVU216
 731 0146 B1F5405F 		cmp	r1, #12288
 732 014a F0D2     		bcs	.L33
 733              	.L34:
 522:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
ARM GAS  /tmp/ccJBQgIh.s 			page 53


 734              		.loc 1 522 21 is_stmt 1 view .LVU217
 522:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 735              		.loc 1 522 24 is_stmt 0 view .LVU218
 736 014c 13F0020F 		tst	r3, #2
 737 0150 B1D0     		beq	.L29
 524:Lib/ssc/src/ecatslv.c ****                 }
 738              		.loc 1 524 25 is_stmt 1 view .LVU219
 524:Lib/ssc/src/ecatslv.c ****                 }
 739              		.loc 1 524 38 is_stmt 0 view .LVU220
 740 0152 4B4B     		ldr	r3, .L94+4
 741 0154 0022     		movs	r2, #0
 742 0156 1A70     		strb	r2, [r3]
 743 0158 ADE7     		b	.L29
 744              	.LVL56:
 745              	.L32:
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 746              		.loc 1 534 14 is_stmt 1 view .LVU221
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 747              		.loc 1 534 17 is_stmt 0 view .LVU222
 748 015a 002A     		cmp	r2, #0
 749 015c 70D1     		bne	.L71
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 750              		.loc 1 534 49 discriminator 1 view .LVU223
 751 015e 494B     		ldr	r3, .L94+8
 752 0160 1B88     		ldrh	r3, [r3]
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 753              		.loc 1 534 33 discriminator 1 view .LVU224
 754 0162 002B     		cmp	r3, #0
 755 0164 A7D0     		beq	.L29
 542:Lib/ssc/src/ecatslv.c ****         }
 756              		.loc 1 542 20 view .LVU225
 757 0166 1E25     		movs	r5, #30
 758              	.LVL57:
 542:Lib/ssc/src/ecatslv.c ****         }
 759              		.loc 1 542 20 view .LVU226
 760 0168 A8E7     		b	.L31
 761              	.LVL58:
 762              	.L55:
 459:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM
 763              		.loc 1 459 20 view .LVU227
 764 016a 1625     		movs	r5, #22
 765 016c A3E7     		b	.L29
 766              	.LVL59:
 767              	.L56:
 462:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETT
 768              		.loc 1 462 20 view .LVU228
 769 016e 1625     		movs	r5, #22
 770 0170 A1E7     		b	.L29
 771              	.L57:
 465:Lib/ssc/src/ecatslv.c ****         else if ( SMLength < MIN_MBX_SIZE )
 772              		.loc 1 465 20 view .LVU229
 773 0172 1625     		movs	r5, #22
 774 0174 9FE7     		b	.L29
 775              	.L58:
 468:Lib/ssc/src/ecatslv.c ****         else if ( SMLength > MAX_MBX_SIZE )
 776              		.loc 1 468 20 view .LVU230
 777 0176 1625     		movs	r5, #22
ARM GAS  /tmp/ccJBQgIh.s 			page 54


 778 0178 9DE7     		b	.L29
 779              	.L59:
 471:Lib/ssc/src/ecatslv.c ****          else if ( SMAddress < MIN_MBX_READ_ADDRESS )
 780              		.loc 1 471 20 view .LVU231
 781 017a 1625     		movs	r5, #22
 782 017c 9BE7     		b	.L29
 783              	.L60:
 474:Lib/ssc/src/ecatslv.c ****         else if ( SMAddress > MAX_MBX_READ_ADDRESS )
 784              		.loc 1 474 20 view .LVU232
 785 017e 1625     		movs	r5, #22
 786 0180 99E7     		b	.L29
 787              	.L61:
 477:Lib/ssc/src/ecatslv.c **** 
 788              		.loc 1 477 20 view .LVU233
 789 0182 1625     		movs	r5, #22
 790 0184 97E7     		b	.L29
 791              	.LVL60:
 792              	.L88:
 552:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 793              		.loc 1 552 9 is_stmt 1 view .LVU234
 552:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 794              		.loc 1 552 20 is_stmt 0 view .LVU235
 795 0186 0220     		movs	r0, #2
 796 0188 FFF7FEFF 		bl	GetSyncMan
 797              	.LVL61:
 555:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 798              		.loc 1 555 5 is_stmt 1 view .LVU236
 555:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 799              		.loc 1 555 14 is_stmt 0 view .LVU237
 800 018c 4288     		ldrh	r2, [r0, #2]
 801              	.LVL62:
 556:Lib/ssc/src/ecatslv.c **** 
 802              		.loc 1 556 5 is_stmt 1 view .LVU238
 556:Lib/ssc/src/ecatslv.c **** 
 803              		.loc 1 556 15 is_stmt 0 view .LVU239
 804 018e 0188     		ldrh	r1, [r0]
 805              	.LVL63:
 560:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 806              		.loc 1 560 5 is_stmt 1 view .LVU240
 560:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 807              		.loc 1 560 8 is_stmt 0 view .LVU241
 808 0190 12F0010F 		tst	r2, #1
 809 0194 40F08680 		bne	.L73
 563:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 810              		.loc 1 563 5 is_stmt 1 view .LVU242
 563:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 811              		.loc 1 563 8 is_stmt 0 view .LVU243
 812 0198 11F0010F 		tst	r1, #1
 813 019c 40F08480 		bne	.L74
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 814              		.loc 1 567 5 is_stmt 1 view .LVU244
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 815              		.loc 1 567 29 is_stmt 0 view .LVU245
 816 01a0 C388     		ldrh	r3, [r0, #6]
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 817              		.loc 1 567 8 view .LVU246
 818 01a2 13F00103 		ands	r3, r3, #1
ARM GAS  /tmp/ccJBQgIh.s 			page 55


 819 01a6 01D0     		beq	.L35
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 820              		.loc 1 567 90 discriminator 1 view .LVU247
 821 01a8 002A     		cmp	r2, #0
 822 01aa 7FD0     		beq	.L75
 823              	.L35:
 570:Lib/ssc/src/ecatslv.c ****         {
 824              		.loc 1 570 14 is_stmt 1 view .LVU248
 570:Lib/ssc/src/ecatslv.c ****         {
 825              		.loc 1 570 17 is_stmt 0 view .LVU249
 826 01ac 002B     		cmp	r3, #0
 827 01ae 34D0     		beq	.L36
 573:Lib/ssc/src/ecatslv.c **** 
 828              		.loc 1 573 13 is_stmt 1 view .LVU250
 573:Lib/ssc/src/ecatslv.c **** 
 829              		.loc 1 573 27 is_stmt 0 view .LVU251
 830 01b0 374B     		ldr	r3, .L94+20
 831 01b2 1B88     		ldrh	r3, [r3]
 573:Lib/ssc/src/ecatslv.c **** 
 832              		.loc 1 573 16 view .LVU252
 833 01b4 9342     		cmp	r3, r2
 834 01b6 01D0     		beq	.L91
 619:Lib/ssc/src/ecatslv.c ****         }
 835              		.loc 1 619 20 view .LVU253
 836 01b8 1D25     		movs	r5, #29
 837              	.LVL64:
 619:Lib/ssc/src/ecatslv.c ****         }
 838              		.loc 1 619 20 view .LVU254
 839 01ba 51E0     		b	.L27
 840              	.LVL65:
 841              	.L91:
 573:Lib/ssc/src/ecatslv.c **** 
 842              		.loc 1 573 44 discriminator 1 view .LVU255
 843 01bc 002B     		cmp	r3, #0
 844 01be 77D0     		beq	.L77
 573:Lib/ssc/src/ecatslv.c **** 
 845              		.loc 1 573 66 discriminator 2 view .LVU256
 846 01c0 442A     		cmp	r2, #68
 847 01c2 77D8     		bhi	.L78
 577:Lib/ssc/src/ecatslv.c ****                 {
 848              		.loc 1 577 17 is_stmt 1 view .LVU257
 577:Lib/ssc/src/ecatslv.c ****                 {
 849              		.loc 1 577 41 is_stmt 0 view .LVU258
 850 01c4 8388     		ldrh	r3, [r0, #4]
 577:Lib/ssc/src/ecatslv.c ****                 {
 851              		.loc 1 577 20 view .LVU259
 852 01c6 03F00C02 		and	r2, r3, #12
 853              	.LVL66:
 577:Lib/ssc/src/ecatslv.c ****                 {
 854              		.loc 1 577 20 view .LVU260
 855 01ca 042A     		cmp	r2, #4
 856 01cc 01D0     		beq	.L92
 619:Lib/ssc/src/ecatslv.c ****         }
 857              		.loc 1 619 20 view .LVU261
 858 01ce 1D25     		movs	r5, #29
 859              	.LVL67:
 619:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccJBQgIh.s 			page 56


 860              		.loc 1 619 20 view .LVU262
 861 01d0 46E0     		b	.L27
 862              	.LVL68:
 863              	.L92:
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 864              		.loc 1 580 21 is_stmt 1 view .LVU263
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 865              		.loc 1 580 40 is_stmt 0 view .LVU264
 866 01d2 2D4A     		ldr	r2, .L94+12
 867 01d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 868              		.loc 1 580 24 view .LVU265
 869 01d6 022A     		cmp	r2, #2
 870 01d8 07D0     		beq	.L93
 871              	.L37:
 581:Lib/ssc/src/ecatslv.c ****                         )
 872              		.loc 1 581 24 view .LVU266
 873 01da 022A     		cmp	r2, #2
 874 01dc 6CD0     		beq	.L80
 581:Lib/ssc/src/ecatslv.c ****                         )
 875              		.loc 1 581 70 discriminator 1 view .LVU267
 876 01de 2D4A     		ldr	r2, .L94+24
 877 01e0 1288     		ldrh	r2, [r2]
 581:Lib/ssc/src/ecatslv.c ****                         )
 878              		.loc 1 581 56 discriminator 1 view .LVU268
 879 01e2 8A42     		cmp	r2, r1
 880 01e4 07D0     		beq	.L38
 619:Lib/ssc/src/ecatslv.c ****         }
 881              		.loc 1 619 20 view .LVU269
 882 01e6 1D25     		movs	r5, #29
 883              	.LVL69:
 619:Lib/ssc/src/ecatslv.c ****         }
 884              		.loc 1 619 20 view .LVU270
 885 01e8 3AE0     		b	.L27
 886              	.LVL70:
 887              	.L93:
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 888              		.loc 1 580 56 discriminator 1 view .LVU271
 889 01ea B1F5805F 		cmp	r1, #4096
 890 01ee F4D3     		bcc	.L37
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 891              		.loc 1 580 95 discriminator 2 view .LVU272
 892 01f0 B1F5405F 		cmp	r1, #12288
 893 01f4 F1D2     		bcs	.L37
 894              	.L38:
 587:Lib/ssc/src/ecatslv.c ****                             {
 895              		.loc 1 587 29 is_stmt 1 view .LVU273
 587:Lib/ssc/src/ecatslv.c ****                             {
 896              		.loc 1 587 32 is_stmt 0 view .LVU274
 897 01f6 13F0400F 		tst	r3, #64
 898 01fa 0AD0     		beq	.L39
 589:Lib/ssc/src/ecatslv.c ****                             }
 899              		.loc 1 589 33 is_stmt 1 view .LVU275
 589:Lib/ssc/src/ecatslv.c ****                             }
 900              		.loc 1 589 44 is_stmt 0 view .LVU276
 901 01fc 264A     		ldr	r2, .L94+28
 902 01fe 0121     		movs	r1, #1
ARM GAS  /tmp/ccJBQgIh.s 			page 57


 903              	.LVL71:
 589:Lib/ssc/src/ecatslv.c ****                             }
 904              		.loc 1 589 44 view .LVU277
 905 0200 1170     		strb	r1, [r2]
 906              	.LVL72:
 907              	.L40:
 596:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 908              		.loc 1 596 29 is_stmt 1 view .LVU278
 596:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 909              		.loc 1 596 32 is_stmt 0 view .LVU279
 910 0202 13F0020F 		tst	r3, #2
 911 0206 3FF459AF 		beq	.L31
 598:Lib/ssc/src/ecatslv.c ****                         }
 912              		.loc 1 598 33 is_stmt 1 view .LVU280
 598:Lib/ssc/src/ecatslv.c ****                         }
 913              		.loc 1 598 46 is_stmt 0 view .LVU281
 914 020a 1D4B     		ldr	r3, .L94+4
 915 020c 0022     		movs	r2, #0
 916 020e 1A70     		strb	r2, [r3]
 917 0210 54E7     		b	.L31
 918              	.LVL73:
 919              	.L39:
 593:Lib/ssc/src/ecatslv.c ****                             }
 920              		.loc 1 593 33 is_stmt 1 view .LVU282
 593:Lib/ssc/src/ecatslv.c ****                             }
 921              		.loc 1 593 44 is_stmt 0 view .LVU283
 922 0212 214A     		ldr	r2, .L94+28
 923 0214 0021     		movs	r1, #0
 924              	.LVL74:
 593:Lib/ssc/src/ecatslv.c ****                             }
 925              		.loc 1 593 44 view .LVU284
 926 0216 1170     		strb	r1, [r2]
 927              	.LVL75:
 593:Lib/ssc/src/ecatslv.c ****                             }
 928              		.loc 1 593 44 view .LVU285
 929 0218 F3E7     		b	.L40
 930              	.LVL76:
 931              	.L36:
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 932              		.loc 1 613 14 is_stmt 1 view .LVU286
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 933              		.loc 1 613 17 is_stmt 0 view .LVU287
 934 021a 002A     		cmp	r2, #0
 935 021c 4ED1     		bne	.L82
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 936              		.loc 1 613 50 discriminator 1 view .LVU288
 937 021e 1C4B     		ldr	r3, .L94+20
 938 0220 1B88     		ldrh	r3, [r3]
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 939              		.loc 1 613 33 discriminator 1 view .LVU289
 940 0222 002B     		cmp	r3, #0
 941 0224 3FF44AAF 		beq	.L31
 619:Lib/ssc/src/ecatslv.c ****         }
 942              		.loc 1 619 20 view .LVU290
 943 0228 1D25     		movs	r5, #29
 944              	.LVL77:
 619:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccJBQgIh.s 			page 58


 945              		.loc 1 619 20 view .LVU291
 946 022a 19E0     		b	.L27
 947              	.LVL78:
 948              	.L64:
 542:Lib/ssc/src/ecatslv.c ****         }
 949              		.loc 1 542 20 view .LVU292
 950 022c 1E25     		movs	r5, #30
 951              	.LVL79:
 542:Lib/ssc/src/ecatslv.c ****         }
 952              		.loc 1 542 20 view .LVU293
 953 022e 45E7     		b	.L31
 954              	.LVL80:
 955              	.L66:
 542:Lib/ssc/src/ecatslv.c ****         }
 956              		.loc 1 542 20 view .LVU294
 957 0230 1E25     		movs	r5, #30
 958              	.LVL81:
 542:Lib/ssc/src/ecatslv.c ****         }
 959              		.loc 1 542 20 view .LVU295
 960 0232 43E7     		b	.L31
 961              	.LVL82:
 962              	.L67:
 542:Lib/ssc/src/ecatslv.c ****         }
 963              		.loc 1 542 20 view .LVU296
 964 0234 1E25     		movs	r5, #30
 965              	.LVL83:
 542:Lib/ssc/src/ecatslv.c ****         }
 966              		.loc 1 542 20 view .LVU297
 967 0236 41E7     		b	.L31
 968              	.LVL84:
 969              	.L68:
 542:Lib/ssc/src/ecatslv.c ****         }
 970              		.loc 1 542 20 view .LVU298
 971 0238 1E25     		movs	r5, #30
 972              	.LVL85:
 542:Lib/ssc/src/ecatslv.c ****         }
 973              		.loc 1 542 20 view .LVU299
 974 023a 3FE7     		b	.L31
 975              	.LVL86:
 976              	.L69:
 542:Lib/ssc/src/ecatslv.c ****         }
 977              		.loc 1 542 20 view .LVU300
 978 023c 1E25     		movs	r5, #30
 979              	.LVL87:
 542:Lib/ssc/src/ecatslv.c ****         }
 980              		.loc 1 542 20 view .LVU301
 981 023e 3DE7     		b	.L31
 982              	.LVL88:
 983              	.L71:
 542:Lib/ssc/src/ecatslv.c ****         }
 984              		.loc 1 542 20 view .LVU302
 985 0240 1E25     		movs	r5, #30
 986              	.LVL89:
 542:Lib/ssc/src/ecatslv.c ****         }
 987              		.loc 1 542 20 view .LVU303
 988 0242 3BE7     		b	.L31
 989              	.LVL90:
ARM GAS  /tmp/ccJBQgIh.s 			page 59


 990              	.L42:
 625:Lib/ssc/src/ecatslv.c ****     {
 626:Lib/ssc/src/ecatslv.c ****         /* the Enable-Byte of the rest of the SM channels has to be read to acknowledge the SM-Chan
 627:Lib/ssc/src/ecatslv.c ****         for (i = maxChannel; i < nMaxSyncMan; i++)
 628:Lib/ssc/src/ecatslv.c ****         {
 629:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 630:Lib/ssc/src/ecatslv.c ****             pSyncMan = GetSyncMan(i);
 991              		.loc 1 630 13 is_stmt 1 discriminator 3 view .LVU304
 992              		.loc 1 630 24 is_stmt 0 discriminator 3 view .LVU305
 993 0244 2046     		mov	r0, r4
 994 0246 FFF7FEFF 		bl	GetSyncMan
 995              	.LVL91:
 631:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 632:Lib/ssc/src/ecatslv.c ****             SMActivate = pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET];
 996              		.loc 1 632 13 is_stmt 1 discriminator 3 view .LVU306
 997              		.loc 1 632 44 is_stmt 0 discriminator 3 view .LVU307
 998 024a C288     		ldrh	r2, [r0, #6]
 999              		.loc 1 632 24 discriminator 3 view .LVU308
 1000 024c 134B     		ldr	r3, .L94+32
 1001 024e 1A80     		strh	r2, [r3]	@ movhi
 627:Lib/ssc/src/ecatslv.c ****         {
 1002              		.loc 1 627 47 is_stmt 1 discriminator 3 view .LVU309
 627:Lib/ssc/src/ecatslv.c ****         {
 1003              		.loc 1 627 48 is_stmt 0 discriminator 3 view .LVU310
 1004 0250 0134     		adds	r4, r4, #1
 1005              	.LVL92:
 627:Lib/ssc/src/ecatslv.c ****         {
 1006              		.loc 1 627 48 discriminator 3 view .LVU311
 1007 0252 E4B2     		uxtb	r4, r4
 1008              	.LVL93:
 1009              	.L41:
 627:Lib/ssc/src/ecatslv.c ****         {
 1010              		.loc 1 627 30 is_stmt 1 discriminator 1 view .LVU312
 627:Lib/ssc/src/ecatslv.c ****         {
 1011              		.loc 1 627 32 is_stmt 0 discriminator 1 view .LVU313
 1012 0254 124B     		ldr	r3, .L94+36
 1013 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 627:Lib/ssc/src/ecatslv.c ****         {
 1014              		.loc 1 627 9 discriminator 1 view .LVU314
 1015 0258 A342     		cmp	r3, r4
 1016 025a F3D8     		bhi	.L42
 1017 025c 00E0     		b	.L27
 1018              	.LVL94:
 1019              	.L43:
 395:Lib/ssc/src/ecatslv.c ****     }
 1020              		.loc 1 395 16 view .LVU315
 1021 025e 1425     		movs	r5, #20
 1022              	.LVL95:
 1023              	.L27:
 633:Lib/ssc/src/ecatslv.c ****         }
 634:Lib/ssc/src/ecatslv.c ****     }
 635:Lib/ssc/src/ecatslv.c ****     return result;
 636:Lib/ssc/src/ecatslv.c **** }
 1024              		.loc 1 636 1 view .LVU316
 1025 0260 2846     		mov	r0, r5
 1026 0262 38BD     		pop	{r3, r4, r5, pc}
 1027              	.LVL96:
ARM GAS  /tmp/ccJBQgIh.s 			page 60


 1028              	.L44:
 409:Lib/ssc/src/ecatslv.c **** 
 1029              		.loc 1 409 16 view .LVU317
 1030 0264 1725     		movs	r5, #23
 1031 0266 FBE7     		b	.L27
 1032              	.L45:
 412:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1033              		.loc 1 412 16 view .LVU318
 1034 0268 1725     		movs	r5, #23
 1035 026a F9E7     		b	.L27
 1036              	.LVL97:
 1037              	.L53:
 451:Lib/ssc/src/ecatslv.c **** 
 1038              		.loc 1 451 16 view .LVU319
 1039 026c 1725     		movs	r5, #23
 1040 026e F7E7     		b	.L27
 1041              	.L54:
 454:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1042              		.loc 1 454 16 view .LVU320
 1043 0270 1725     		movs	r5, #23
 1044 0272 F5E7     		b	.L27
 1045              	.LVL98:
 1046              	.L62:
 496:Lib/ssc/src/ecatslv.c **** 
 1047              		.loc 1 496 16 view .LVU321
 1048 0274 1725     		movs	r5, #23
 1049              	.LVL99:
 496:Lib/ssc/src/ecatslv.c **** 
 1050              		.loc 1 496 16 view .LVU322
 1051 0276 F3E7     		b	.L27
 1052              	.LVL100:
 1053              	.L63:
 499:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1054              		.loc 1 499 16 view .LVU323
 1055 0278 1725     		movs	r5, #23
 1056              	.LVL101:
 499:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1057              		.loc 1 499 16 view .LVU324
 1058 027a F1E7     		b	.L27
 1059              	.L95:
 1060              		.align	2
 1061              	.L94:
 1062 027c 00000000 		.word	.LANCHOR2
 1063 0280 00000000 		.word	.LANCHOR3
 1064 0284 00000000 		.word	.LANCHOR4
 1065 0288 00000000 		.word	.LANCHOR5
 1066 028c 00000000 		.word	.LANCHOR6
 1067 0290 00000000 		.word	.LANCHOR7
 1068 0294 00000000 		.word	.LANCHOR8
 1069 0298 00000000 		.word	.LANCHOR9
 1070 029c 00000000 		.word	.LANCHOR10
 1071 02a0 00000000 		.word	.LANCHOR11
 1072              	.LVL102:
 1073              	.L73:
 561:Lib/ssc/src/ecatslv.c **** 
 1074              		.loc 1 561 16 view .LVU325
 1075 02a4 1725     		movs	r5, #23
ARM GAS  /tmp/ccJBQgIh.s 			page 61


 1076              	.LVL103:
 561:Lib/ssc/src/ecatslv.c **** 
 1077              		.loc 1 561 16 view .LVU326
 1078 02a6 DBE7     		b	.L27
 1079              	.LVL104:
 1080              	.L74:
 564:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1081              		.loc 1 564 16 view .LVU327
 1082 02a8 1725     		movs	r5, #23
 1083              	.LVL105:
 564:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1084              		.loc 1 564 16 view .LVU328
 1085 02aa D9E7     		b	.L27
 1086              	.LVL106:
 1087              	.L75:
 619:Lib/ssc/src/ecatslv.c ****         }
 1088              		.loc 1 619 20 view .LVU329
 1089 02ac 1D25     		movs	r5, #29
 1090              	.LVL107:
 619:Lib/ssc/src/ecatslv.c ****         }
 1091              		.loc 1 619 20 view .LVU330
 1092 02ae D7E7     		b	.L27
 1093              	.LVL108:
 1094              	.L77:
 619:Lib/ssc/src/ecatslv.c ****         }
 1095              		.loc 1 619 20 view .LVU331
 1096 02b0 1D25     		movs	r5, #29
 1097              	.LVL109:
 619:Lib/ssc/src/ecatslv.c ****         }
 1098              		.loc 1 619 20 view .LVU332
 1099 02b2 D5E7     		b	.L27
 1100              	.LVL110:
 1101              	.L78:
 619:Lib/ssc/src/ecatslv.c ****         }
 1102              		.loc 1 619 20 view .LVU333
 1103 02b4 1D25     		movs	r5, #29
 1104              	.LVL111:
 619:Lib/ssc/src/ecatslv.c ****         }
 1105              		.loc 1 619 20 view .LVU334
 1106 02b6 D3E7     		b	.L27
 1107              	.LVL112:
 1108              	.L80:
 619:Lib/ssc/src/ecatslv.c ****         }
 1109              		.loc 1 619 20 view .LVU335
 1110 02b8 1D25     		movs	r5, #29
 1111              	.LVL113:
 619:Lib/ssc/src/ecatslv.c ****         }
 1112              		.loc 1 619 20 view .LVU336
 1113 02ba D1E7     		b	.L27
 1114              	.LVL114:
 1115              	.L82:
 619:Lib/ssc/src/ecatslv.c ****         }
 1116              		.loc 1 619 20 view .LVU337
 1117 02bc 1D25     		movs	r5, #29
 1118              	.LVL115:
 619:Lib/ssc/src/ecatslv.c ****         }
 1119              		.loc 1 619 20 view .LVU338
ARM GAS  /tmp/ccJBQgIh.s 			page 62


 1120 02be CFE7     		b	.L27
 1121              		.cfi_endproc
 1122              	.LFE129:
 1124              		.section	.text.StartInputHandler,"ax",%progbits
 1125              		.align	1
 1126              		.global	StartInputHandler
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1131              	StartInputHandler:
 1132              	.LFB130:
 637:Lib/ssc/src/ecatslv.c **** 
 638:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 639:Lib/ssc/src/ecatslv.c **** /**
 640:Lib/ssc/src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
 641:Lib/ssc/src/ecatslv.c **** 
 642:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from PREOP to SAFEOP.
 643:Lib/ssc/src/ecatslv.c ****  |brief  the areas of the Sync Managers will be checked for overlapping,
 644:Lib/ssc/src/ecatslv.c ****  \brief  the synchronization mode (Free Run, Synchron, Distributed Clocks) is selected,
 645:Lib/ssc/src/ecatslv.c ****  \brief  the requested cycle time will be checked, the watchdog is started
 646:Lib/ssc/src/ecatslv.c ****  \brief  and the AL Event Mask register will be set
 647:Lib/ssc/src/ecatslv.c **** 
 648:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 649:Lib/ssc/src/ecatslv.c **** 
 650:Lib/ssc/src/ecatslv.c **** UINT16 StartInputHandler(void)
 651:Lib/ssc/src/ecatslv.c **** {
 1133              		.loc 1 651 1 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 16
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1138              		.cfi_def_cfa_offset 20
 1139              		.cfi_offset 4, -20
 1140              		.cfi_offset 5, -16
 1141              		.cfi_offset 6, -12
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 85B0     		sub	sp, sp, #20
 1145              		.cfi_def_cfa_offset 40
 652:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM * pSyncMan;
 1146              		.loc 1 652 5 view .LVU340
 653:Lib/ssc/src/ecatslv.c ****     UINT16        dcControl;
 1147              		.loc 1 653 5 view .LVU341
 654:Lib/ssc/src/ecatslv.c ****     UINT16     wdiv = 0;
 1148              		.loc 1 654 5 view .LVU342
 1149              		.loc 1 654 16 is_stmt 0 view .LVU343
 1150 0004 0023     		movs	r3, #0
 1151 0006 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 655:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 656:Lib/ssc/src/ecatslv.c ****     UINT16     wd = 0;
 1152              		.loc 1 656 5 is_stmt 1 view .LVU344
 1153              		.loc 1 656 16 is_stmt 0 view .LVU345
 1154 000a ADF80A30 		strh	r3, [sp, #10]	@ movhi
 657:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 658:Lib/ssc/src/ecatslv.c ****     UINT32     cycleTimeSync0 = 0; /* Sync0 cycle time */
 1155              		.loc 1 658 5 is_stmt 1 view .LVU346
 1156              		.loc 1 658 16 is_stmt 0 view .LVU347
ARM GAS  /tmp/ccJBQgIh.s 			page 63


 1157 000e 0193     		str	r3, [sp, #4]
 659:Lib/ssc/src/ecatslv.c ****     UINT32     cycleTimeSync1 = 0; /* Delay between the Sync0 and Sycn1 signal. A new Sync1 cycle s
 1158              		.loc 1 659 5 is_stmt 1 view .LVU348
 1159              		.loc 1 659 16 is_stmt 0 view .LVU349
 1160 0010 0093     		str	r3, [sp]
 660:Lib/ssc/src/ecatslv.c ****     BOOL bSubordinatedCycles = FALSE;
 1161              		.loc 1 660 5 is_stmt 1 view .LVU350
 1162              	.LVL116:
 661:Lib/ssc/src/ecatslv.c **** 
 662:Lib/ssc/src/ecatslv.c ****     UINT16    nPdInputBuffer = 3;
 1163              		.loc 1 662 5 view .LVU351
 663:Lib/ssc/src/ecatslv.c ****     UINT16    nPdOutputBuffer = 3;
 1164              		.loc 1 663 5 view .LVU352
 664:Lib/ssc/src/ecatslv.c **** 
 665:Lib/ssc/src/ecatslv.c ****     UINT16 SyncType0x1C32 = 0; /* Helper variable for sync type for SM2 (required if no CoE is supp
 1165              		.loc 1 665 5 view .LVU353
 666:Lib/ssc/src/ecatslv.c ****     UINT16 SyncType0x1C33 = 0; /* Helper variable for sync type for SM3 (required if no CoE is supp
 1166              		.loc 1 666 5 view .LVU354
 667:Lib/ssc/src/ecatslv.c **** 
 668:Lib/ssc/src/ecatslv.c ****     UINT16 u16MinSuppSyncType = 0xFFFF;  /* Minimum supported Sync Types */
 1167              		.loc 1 668 5 view .LVU355
 669:Lib/ssc/src/ecatslv.c **** 
 670:Lib/ssc/src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManOutPar.u16SyncTypesSupported;
 1168              		.loc 1 670 5 view .LVU356
 1169              		.loc 1 670 41 is_stmt 0 view .LVU357
 1170 0012 684A     		ldr	r2, .L186
 1171 0014 9489     		ldrh	r4, [r2, #12]
 1172              	.LVL117:
 671:Lib/ssc/src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManInPar.u16SyncTypesSupported;
 1173              		.loc 1 671 5 is_stmt 1 view .LVU358
 1174              		.loc 1 671 40 is_stmt 0 view .LVU359
 1175 0016 684A     		ldr	r2, .L186+4
 1176 0018 9289     		ldrh	r2, [r2, #12]
 1177              		.loc 1 671 24 view .LVU360
 1178 001a 1440     		ands	r4, r4, r2
 1179              	.LVL118:
 672:Lib/ssc/src/ecatslv.c **** 
 673:Lib/ssc/src/ecatslv.c ****     u16ALEventMask = 0;
 1180              		.loc 1 673 5 is_stmt 1 view .LVU361
 1181              		.loc 1 673 20 is_stmt 0 view .LVU362
 1182 001c 674A     		ldr	r2, .L186+8
 1183 001e 1380     		strh	r3, [r2]	@ movhi
 674:Lib/ssc/src/ecatslv.c **** 
 675:Lib/ssc/src/ecatslv.c ****     /* 
 676:Lib/ssc/src/ecatslv.c ****         --- Check if SyncManager areas overlapping --- 
 677:Lib/ssc/src/ecatslv.c ****     */
 678:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 1184              		.loc 1 678 5 is_stmt 1 view .LVU363
 1185              		.loc 1 678 31 is_stmt 0 view .LVU364
 1186 0020 674A     		ldr	r2, .L186+12
 1187 0022 1370     		strb	r3, [r2]
 679:Lib/ssc/src/ecatslv.c **** 
 680:Lib/ssc/src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 2 (Outputs) */
 681:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 682:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 1188              		.loc 1 682 5 is_stmt 1 view .LVU365
 1189              		.loc 1 682 16 is_stmt 0 view .LVU366
ARM GAS  /tmp/ccJBQgIh.s 			page 64


 1190 0024 0220     		movs	r0, #2
 1191 0026 FFF7FEFF 		bl	GetSyncMan
 1192              	.LVL119:
 683:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 684:Lib/ssc/src/ecatslv.c ****     /* store the address of the Sync Manager Channel 2 (Outputs) */
 685:Lib/ssc/src/ecatslv.c ****     nEscAddrOutputData = pSyncMan->PhysicalStartAddress;
 1193              		.loc 1 685 5 is_stmt 1 view .LVU367
 1194              		.loc 1 685 34 is_stmt 0 view .LVU368
 1195 002a 0288     		ldrh	r2, [r0]
 1196              		.loc 1 685 24 view .LVU369
 1197 002c 654B     		ldr	r3, .L186+16
 1198 002e 1A80     		strh	r2, [r3]	@ movhi
 686:Lib/ssc/src/ecatslv.c ****     /* get the number of output buffer used for calculating the address areas */
 687:Lib/ssc/src/ecatslv.c ****     if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE)
 1199              		.loc 1 687 5 is_stmt 1 view .LVU370
 1200              		.loc 1 687 27 is_stmt 0 view .LVU371
 1201 0030 8388     		ldrh	r3, [r0, #4]
 1202              		.loc 1 687 8 view .LVU372
 1203 0032 13F0020F 		tst	r3, #2
 1204 0036 40F08780 		bne	.L145
 663:Lib/ssc/src/ecatslv.c **** 
 1205              		.loc 1 663 15 view .LVU373
 1206 003a 0325     		movs	r5, #3
 1207              	.L97:
 1208              	.LVL120:
 688:Lib/ssc/src/ecatslv.c ****     {
 689:Lib/ssc/src/ecatslv.c ****        nPdOutputBuffer = 1;
 690:Lib/ssc/src/ecatslv.c ****     }
 691:Lib/ssc/src/ecatslv.c **** 
 692:Lib/ssc/src/ecatslv.c **** 
 693:Lib/ssc/src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 3 (Inputs) */
 694:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 695:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 1209              		.loc 1 695 5 is_stmt 1 view .LVU374
 1210              		.loc 1 695 16 is_stmt 0 view .LVU375
 1211 003c 0320     		movs	r0, #3
 1212              	.LVL121:
 1213              		.loc 1 695 16 view .LVU376
 1214 003e FFF7FEFF 		bl	GetSyncMan
 1215              	.LVL122:
 696:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 697:Lib/ssc/src/ecatslv.c ****     /* store the address of the Sync Manager Channel 3 (Inputs)*/
 698:Lib/ssc/src/ecatslv.c ****     nEscAddrInputData = pSyncMan->PhysicalStartAddress;
 1216              		.loc 1 698 5 is_stmt 1 view .LVU377
 1217              		.loc 1 698 33 is_stmt 0 view .LVU378
 1218 0042 0388     		ldrh	r3, [r0]
 1219              		.loc 1 698 23 view .LVU379
 1220 0044 604A     		ldr	r2, .L186+20
 1221 0046 1380     		strh	r3, [r2]	@ movhi
 699:Lib/ssc/src/ecatslv.c ****     
 700:Lib/ssc/src/ecatslv.c ****     /* get the number of input buffer used for calculating the address areas */
 701:Lib/ssc/src/ecatslv.c ****     if ( pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE )
 1222              		.loc 1 701 5 is_stmt 1 view .LVU380
 1223              		.loc 1 701 28 is_stmt 0 view .LVU381
 1224 0048 8288     		ldrh	r2, [r0, #4]
 1225              		.loc 1 701 8 view .LVU382
 1226 004a 12F0020F 		tst	r2, #2
ARM GAS  /tmp/ccJBQgIh.s 			page 65


 1227 004e 7DD1     		bne	.L146
 662:Lib/ssc/src/ecatslv.c ****     UINT16    nPdOutputBuffer = 3;
 1228              		.loc 1 662 15 view .LVU383
 1229 0050 0322     		movs	r2, #3
 1230              	.L98:
 1231              	.LVL123:
 702:Lib/ssc/src/ecatslv.c ****         nPdInputBuffer = 1;
 703:Lib/ssc/src/ecatslv.c **** 
 704:Lib/ssc/src/ecatslv.c ****     /* it has be checked if the Sync Manager memory areas for Inputs and Outputs will not overlap
 705:Lib/ssc/src/ecatslv.c ****        the Sync Manager memory areas for the Mailbox */
 706:Lib/ssc/src/ecatslv.c **** 
 707:Lib/ssc/src/ecatslv.c ****     if (((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrSendMbx && (nEscAddrInputD
 1232              		.loc 1 707 5 is_stmt 1 view .LVU384
 1233              		.loc 1 707 44 is_stmt 0 view .LVU385
 1234 0052 5E49     		ldr	r1, .L186+24
 1235 0054 B1F800E0 		ldrh	lr, [r1]
 1236              		.loc 1 707 29 view .LVU386
 1237 0058 0EFB0232 		mla	r2, lr, r2, r3
 1238              	.LVL124:
 1239              		.loc 1 707 62 view .LVU387
 1240 005c 5C49     		ldr	r1, .L186+28
 1241 005e 0988     		ldrh	r1, [r1]
 1242              		.loc 1 707 8 view .LVU388
 1243 0060 8A42     		cmp	r2, r1
 1244 0062 05DD     		ble	.L99
 1245              		.loc 1 707 125 discriminator 1 view .LVU389
 1246 0064 5B48     		ldr	r0, .L186+32
 1247              	.LVL125:
 1248              		.loc 1 707 125 discriminator 1 view .LVU390
 1249 0066 0088     		ldrh	r0, [r0]
 1250 0068 0844     		add	r0, r0, r1
 1251              		.loc 1 707 82 discriminator 1 view .LVU391
 1252 006a 8342     		cmp	r3, r0
 1253 006c C0F25E82 		blt	.L147
 1254              	.L99:
 708:Lib/ssc/src/ecatslv.c ****        || ((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrReceiveMbx && (nEscAddrI
 1255              		.loc 1 708 64 view .LVU392
 1256 0070 5948     		ldr	r0, .L186+36
 1257 0072 0088     		ldrh	r0, [r0]
 1258              		.loc 1 708 8 view .LVU393
 1259 0074 8242     		cmp	r2, r0
 1260 0076 05DD     		ble	.L101
 1261              		.loc 1 708 133 discriminator 1 view .LVU394
 1262 0078 584A     		ldr	r2, .L186+40
 1263 007a 1288     		ldrh	r2, [r2]
 1264 007c 0244     		add	r2, r2, r0
 1265              		.loc 1 708 87 discriminator 1 view .LVU395
 1266 007e 9342     		cmp	r3, r2
 1267 0080 C0F25682 		blt	.L148
 1268              	.L101:
 709:Lib/ssc/src/ecatslv.c ****         )
 710:Lib/ssc/src/ecatslv.c ****     {
 711:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMINCFG;
 712:Lib/ssc/src/ecatslv.c ****     }
 713:Lib/ssc/src/ecatslv.c **** 
 714:Lib/ssc/src/ecatslv.c ****     if (
 1269              		.loc 1 714 5 is_stmt 1 view .LVU396
ARM GAS  /tmp/ccJBQgIh.s 			page 66


 715:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1270              		.loc 1 715 30 is_stmt 0 view .LVU397
 1271 0084 4F4A     		ldr	r2, .L186+16
 1272 0086 B2F800C0 		ldrh	ip, [r2]
 1273              		.loc 1 715 46 view .LVU398
 1274 008a 554A     		ldr	r2, .L186+44
 1275 008c 1288     		ldrh	r2, [r2]
 1276              		.loc 1 715 30 view .LVU399
 1277 008e 05FB02C2 		mla	r2, r5, r2, ip
 714:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1278              		.loc 1 714 8 view .LVU400
 1279 0092 9142     		cmp	r1, r2
 1280 0094 05DA     		bge	.L102
 1281              		.loc 1 715 129 view .LVU401
 1282 0096 4F4D     		ldr	r5, .L186+32
 1283              	.LVL126:
 1284              		.loc 1 715 129 view .LVU402
 1285 0098 2D88     		ldrh	r5, [r5]
 1286 009a 2944     		add	r1, r1, r5
 1287              		.loc 1 715 85 view .LVU403
 1288 009c 8C45     		cmp	ip, r1
 1289 009e C0F24982 		blt	.L149
 1290              	.L102:
 716:Lib/ssc/src/ecatslv.c ****         ||((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrReceiveMbx && (nEscAd
 1291              		.loc 1 716 9 view .LVU404
 1292 00a2 9042     		cmp	r0, r2
 1293 00a4 05DA     		bge	.L103
 1294              		.loc 1 716 137 discriminator 1 view .LVU405
 1295 00a6 4D49     		ldr	r1, .L186+40
 1296 00a8 0988     		ldrh	r1, [r1]
 1297 00aa 0844     		add	r0, r0, r1
 1298              		.loc 1 716 90 discriminator 1 view .LVU406
 1299 00ac 8445     		cmp	ip, r0
 1300 00ae C0F24382 		blt	.L150
 1301              	.L103:
 717:Lib/ssc/src/ecatslv.c ****         ||
 1302              		.loc 1 717 9 view .LVU407
 1303 00b2 9342     		cmp	r3, r2
 1304 00b4 03DA     		bge	.L104
 718:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > nEscAddrInputData && (nEscAddrOut
 1305              		.loc 1 718 129 view .LVU408
 1306 00b6 7344     		add	r3, r3, lr
 1307              		.loc 1 718 85 view .LVU409
 1308 00b8 9C45     		cmp	ip, r3
 1309 00ba C0F23F82 		blt	.L151
 1310              	.L104:
 719:Lib/ssc/src/ecatslv.c ****         )
 720:Lib/ssc/src/ecatslv.c ****     {
 721:Lib/ssc/src/ecatslv.c ****         /* Sync Manager Channel 2 memory area (Outputs) overlaps the Sync Manager memory areas for 
 722:Lib/ssc/src/ecatslv.c ****            or the Sync Manager Channel 3 memory area (Inputs) */
 723:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMOUTCFG;
 724:Lib/ssc/src/ecatslv.c ****     }
 725:Lib/ssc/src/ecatslv.c **** 
 726:Lib/ssc/src/ecatslv.c ****     /* 
 727:Lib/ssc/src/ecatslv.c ****         --- Check configured synchronisation ---
 728:Lib/ssc/src/ecatslv.c ****     */
 729:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 67


 730:Lib/ssc/src/ecatslv.c ****     /* Get the DC Control/Activation register value*/
 731:Lib/ssc/src/ecatslv.c ****     /*Read registers 0x980:0x981 (corresponding masks are adapted)*/
 732:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(dcControl, ESC_DC_UNIT_CONTROL_OFFSET);
 1311              		.loc 1 732 5 is_stmt 1 view .LVU410
 1312 00be 0222     		movs	r2, #2
 1313 00c0 4FF41861 		mov	r1, #2432
 1314 00c4 0DF10E00 		add	r0, sp, #14
 1315 00c8 FFF7FEFF 		bl	HW_EscRead
 1316              	.LVL127:
 733:Lib/ssc/src/ecatslv.c ****     dcControl = SWAPWORD(dcControl);
 1317              		.loc 1 733 5 view .LVU411
 734:Lib/ssc/src/ecatslv.c **** 
 735:Lib/ssc/src/ecatslv.c ****     // Cycle time for Sync0
 736:Lib/ssc/src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync0, ESC_DC_SYNC0_CYCLETIME_OFFSET);
 1318              		.loc 1 736 9 view .LVU412
 1319 00cc 0422     		movs	r2, #4
 1320 00ce 4FF41A61 		mov	r1, #2464
 1321 00d2 0DEB0200 		add	r0, sp, r2
 1322 00d6 FFF7FEFF 		bl	HW_EscRead
 1323              	.LVL128:
 737:Lib/ssc/src/ecatslv.c ****         cycleTimeSync0 = SWAPDWORD(cycleTimeSync0);
 1324              		.loc 1 737 9 view .LVU413
 738:Lib/ssc/src/ecatslv.c **** 
 739:Lib/ssc/src/ecatslv.c ****     // Cycle time for Sync1
 740:Lib/ssc/src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync1, ESC_DC_SYNC1_CYCLETIME_OFFSET);
 1325              		.loc 1 740 9 view .LVU414
 1326 00da 0422     		movs	r2, #4
 1327 00dc 40F6A411 		movw	r1, #2468
 1328 00e0 6846     		mov	r0, sp
 1329 00e2 FFF7FEFF 		bl	HW_EscRead
 1330              	.LVL129:
 741:Lib/ssc/src/ecatslv.c ****         cycleTimeSync1 = SWAPDWORD(cycleTimeSync1);
 1331              		.loc 1 741 9 view .LVU415
 1332              		.loc 1 741 24 is_stmt 0 view .LVU416
 1333 00e6 0098     		ldr	r0, [sp]
 742:Lib/ssc/src/ecatslv.c **** 
 743:Lib/ssc/src/ecatslv.c **** 
 744:Lib/ssc/src/ecatslv.c ****     SyncType0x1C32 = sSyncManOutPar.u16SyncType;
 1334              		.loc 1 744 5 is_stmt 1 view .LVU417
 1335              		.loc 1 744 20 is_stmt 0 view .LVU418
 1336 00e8 324B     		ldr	r3, .L186
 1337 00ea 5B88     		ldrh	r3, [r3, #2]
 1338              	.LVL130:
 745:Lib/ssc/src/ecatslv.c ****     SyncType0x1C33 = sSyncManInPar.u16SyncType;
 1339              		.loc 1 745 5 is_stmt 1 view .LVU419
 1340              		.loc 1 745 20 is_stmt 0 view .LVU420
 1341 00ec 324A     		ldr	r2, .L186+4
 1342 00ee 5188     		ldrh	r1, [r2, #2]
 1343              	.LVL131:
 746:Lib/ssc/src/ecatslv.c **** 
 747:Lib/ssc/src/ecatslv.c **** 
 748:Lib/ssc/src/ecatslv.c **** 
 749:Lib/ssc/src/ecatslv.c ****     /* check general DC register plausibility and if configuration is supported
 750:Lib/ssc/src/ecatslv.c ****        - 0x981 DC Active
 751:Lib/ssc/src/ecatslv.c ****        - 0x9A0:0x9A3 Sync0 Cycle
 752:Lib/ssc/src/ecatslv.c ****        - 0x9A4:0x9A7 Sync1 Cycle
 753:Lib/ssc/src/ecatslv.c ****     */
ARM GAS  /tmp/ccJBQgIh.s 			page 68


 754:Lib/ssc/src/ecatslv.c ****     if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) != 0)
 1344              		.loc 1 754 5 is_stmt 1 view .LVU421
 1345              		.loc 1 754 19 is_stmt 0 view .LVU422
 1346 00f0 BDF80E20 		ldrh	r2, [sp, #14]
 1347              		.loc 1 754 7 view .LVU423
 1348 00f4 12F41065 		ands	r5, r2, #2304
 1349 00f8 33D0     		beq	.L152
 755:Lib/ssc/src/ecatslv.c ****     {
 756:Lib/ssc/src/ecatslv.c ****         /* DC unit is active at least one Sync signal shall be generated */
 757:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC0_ACTIVE_MASK | ESC_DC_SYNC1_ACTIVE_MASK)) == 0)
 1350              		.loc 1 757 9 is_stmt 1 view .LVU424
 1351              		.loc 1 757 11 is_stmt 0 view .LVU425
 1352 00fa 12F4C066 		ands	r6, r2, #1536
 1353 00fe 00F01F82 		beq	.L153
 758:Lib/ssc/src/ecatslv.c ****         {
 759:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 760:Lib/ssc/src/ecatslv.c ****         }
 761:Lib/ssc/src/ecatslv.c **** 
 762:Lib/ssc/src/ecatslv.c ****         /* If Sync1 shall only be active if also Sync0 will be generated*/
 763:Lib/ssc/src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1354              		.loc 1 763 9 is_stmt 1 view .LVU426
 1355              		.loc 1 763 11 is_stmt 0 view .LVU427
 1356 0102 B6F5806F 		cmp	r6, #1024
 1357 0106 00F01D82 		beq	.L154
 764:Lib/ssc/src/ecatslv.c ****             && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0))
 765:Lib/ssc/src/ecatslv.c ****         {
 766:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 767:Lib/ssc/src/ecatslv.c ****         }
 768:Lib/ssc/src/ecatslv.c **** 
 769:Lib/ssc/src/ecatslv.c ****         if(u16MinSuppSyncType != 0)
 1358              		.loc 1 769 9 is_stmt 1 view .LVU428
 1359              		.loc 1 769 11 is_stmt 0 view .LVU429
 1360 010a 6CB1     		cbz	r4, .L106
 770:Lib/ssc/src/ecatslv.c ****         {
 771:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM2*/
 772:Lib/ssc/src/ecatslv.c ****             if((((u16MinSuppSyncType & SYNCTYPE_DCSYNC0SUPP) == 0) && ((dcControl & ESC_DC_SYNC0_AC
 1361              		.loc 1 772 13 is_stmt 1 view .LVU430
 1362              		.loc 1 772 15 is_stmt 0 view .LVU431
 1363 010c 14F0040F 		tst	r4, #4
 1364 0110 03D1     		bne	.L107
 1365              		.loc 1 772 68 discriminator 1 view .LVU432
 1366 0112 12F4007F 		tst	r2, #512
 1367 0116 40F01782 		bne	.L155
 1368              	.L107:
 773:Lib/ssc/src/ecatslv.c ****                 ||(((u16MinSuppSyncType & SYNCTYPE_DCSYNC1SUPP) == 0) && ((dcControl & ESC_DC_SYNC1
 1369              		.loc 1 773 17 view .LVU433
 1370 011a 14F0080F 		tst	r4, #8
 1371 011e 03D1     		bne	.L106
 1372              		.loc 1 773 71 discriminator 1 view .LVU434
 1373 0120 12F4806F 		tst	r2, #1024
 1374 0124 40F01282 		bne	.L156
 1375              	.L106:
 774:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM2*/
 775:Lib/ssc/src/ecatslv.c ****             {
 776:Lib/ssc/src/ecatslv.c ****                 /* Sync0 is not supported but will be generated*/
 777:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;                   
 778:Lib/ssc/src/ecatslv.c ****     }
ARM GAS  /tmp/ccJBQgIh.s 			page 69


 779:Lib/ssc/src/ecatslv.c ****         }
 780:Lib/ssc/src/ecatslv.c **** 
 781:Lib/ssc/src/ecatslv.c ****         /*Check if Sync0 cycle time is supported*/
 782:Lib/ssc/src/ecatslv.c ****         if ( cycleTimeSync0 != 0 && (cycleTimeSync0 < MIN_PD_CYCLE_TIME || cycleTimeSync0 > MAX_PD_
 1376              		.loc 1 782 9 is_stmt 1 view .LVU435
 1377              		.loc 1 782 29 is_stmt 0 view .LVU436
 1378 0128 019F     		ldr	r7, [sp, #4]
 1379              		.loc 1 782 12 view .LVU437
 1380 012a 47B1     		cbz	r7, .L108
 1381              		.loc 1 782 73 discriminator 1 view .LVU438
 1382 012c A7F5F42C 		sub	ip, r7, #499712
 1383 0130 ACF5907C 		sub	ip, ip, #288
 1384              		.loc 1 782 34 discriminator 1 view .LVU439
 1385 0134 DFF8B0E0 		ldr	lr, .L186+52
 1386 0138 F445     		cmp	ip, lr
 1387 013a 00F20982 		bhi	.L157
 1388              	.L108:
 783:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCSYNC0CYCLETIME;
 784:Lib/ssc/src/ecatslv.c **** 
 785:Lib/ssc/src/ecatslv.c **** 
 786:Lib/ssc/src/ecatslv.c ****         /* Check if Subordinated cycles are configured */
 787:Lib/ssc/src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0) && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK)
 1389              		.loc 1 787 9 is_stmt 1 view .LVU440
 1390              		.loc 1 787 11 is_stmt 0 view .LVU441
 1391 013e B6F5C06F 		cmp	r6, #1536
 1392 0142 05D0     		beq	.L178
 660:Lib/ssc/src/ecatslv.c **** 
 1393              		.loc 1 660 10 view .LVU442
 1394 0144 0026     		movs	r6, #0
 1395 0146 0DE0     		b	.L105
 1396              	.LVL132:
 1397              	.L145:
 689:Lib/ssc/src/ecatslv.c ****     }
 1398              		.loc 1 689 24 view .LVU443
 1399 0148 0125     		movs	r5, #1
 1400 014a 77E7     		b	.L97
 1401              	.LVL133:
 1402              	.L146:
 702:Lib/ssc/src/ecatslv.c **** 
 1403              		.loc 1 702 24 view .LVU444
 1404 014c 0122     		movs	r2, #1
 1405 014e 80E7     		b	.L98
 1406              	.LVL134:
 1407              	.L178:
 788:Lib/ssc/src/ecatslv.c ****         {
 789:Lib/ssc/src/ecatslv.c ****             /* For Subordinated cycles both Sync signals shall be active and Sync0 is not configure
 790:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM1*/
 791:Lib/ssc/src/ecatslv.c ****             if((cycleTimeSync1 > 0) && (cycleTimeSync1 >= cycleTimeSync0))
 1408              		.loc 1 791 13 is_stmt 1 view .LVU445
 1409              		.loc 1 791 15 is_stmt 0 view .LVU446
 1410 0150 C8B1     		cbz	r0, .L159
 1411              		.loc 1 791 37 discriminator 1 view .LVU447
 1412 0152 B842     		cmp	r0, r7
 1413 0154 19D3     		bcc	.L160
 792:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM1*/
 793:Lib/ssc/src/ecatslv.c ****             {
 794:Lib/ssc/src/ecatslv.c ****                 bSubordinatedCycles = TRUE;
ARM GAS  /tmp/ccJBQgIh.s 			page 70


 1414              		.loc 1 794 17 is_stmt 1 view .LVU448
 1415              	.LVL135:
 795:Lib/ssc/src/ecatslv.c ****             }
 796:Lib/ssc/src/ecatslv.c ****         }
 797:Lib/ssc/src/ecatslv.c **** 
 798:Lib/ssc/src/ecatslv.c ****         /* Dump an error if subordinated cycles are configured but not supported */
 799:Lib/ssc/src/ecatslv.c ****         if(bSubordinatedCycles && ((u16MinSuppSyncType & SYNCTYPE_SUBCYCLESUPP) == 0))
 1416              		.loc 1 799 9 view .LVU449
 1417              		.loc 1 799 32 is_stmt 0 view .LVU450
 1418 0156 14F0100F 		tst	r4, #16
 1419 015a 00F0FB81 		beq	.L161
 794:Lib/ssc/src/ecatslv.c ****             }
 1420              		.loc 1 794 37 view .LVU451
 1421 015e 0126     		movs	r6, #1
 1422 0160 00E0     		b	.L105
 1423              	.LVL136:
 1424              	.L152:
 660:Lib/ssc/src/ecatslv.c **** 
 1425              		.loc 1 660 10 view .LVU452
 1426 0162 0026     		movs	r6, #0
 1427              	.LVL137:
 1428              	.L105:
 800:Lib/ssc/src/ecatslv.c ****         {
 801:Lib/ssc/src/ecatslv.c ****              return ALSTATUSCODE_DCINVALIDSYNCCFG;
 802:Lib/ssc/src/ecatslv.c ****         }
 803:Lib/ssc/src/ecatslv.c ****     }
 804:Lib/ssc/src/ecatslv.c **** 
 805:Lib/ssc/src/ecatslv.c **** 
 806:Lib/ssc/src/ecatslv.c ****     /*
 807:Lib/ssc/src/ecatslv.c ****         Check if the user configured Sync Type matches the DC register values (if the Sync Type is 
 808:Lib/ssc/src/ecatslv.c ****     */
 809:Lib/ssc/src/ecatslv.c ****     if(bSyncSetByUser)
 1429              		.loc 1 809 5 is_stmt 1 view .LVU453
 1430              		.loc 1 809 8 is_stmt 0 view .LVU454
 1431 0164 1F4C     		ldr	r4, .L186+48
 1432              	.LVL138:
 1433              		.loc 1 809 8 view .LVU455
 1434 0166 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 1435              		.loc 1 809 7 view .LVU456
 1436 0168 002C     		cmp	r4, #0
 1437 016a 3FD0     		beq	.L109
 810:Lib/ssc/src/ecatslv.c ****     {
 811:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1438              		.loc 1 811 9 is_stmt 1 view .LVU457
 1439              		.loc 1 811 11 is_stmt 0 view .LVU458
 1440 016c 7DB9     		cbnz	r5, .L110
 812:Lib/ssc/src/ecatslv.c ****         {
 813:Lib/ssc/src/ecatslv.c ****             /* DC out unit not enabled => no DC mode shall be set */
 814:Lib/ssc/src/ecatslv.c ****             if((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1441              		.loc 1 814 13 is_stmt 1 view .LVU459
 1442              		.loc 1 814 53 is_stmt 0 view .LVU460
 1443 016e 9A1E     		subs	r2, r3, #2
 1444 0170 92B2     		uxth	r2, r2
 1445              		.loc 1 814 15 view .LVU461
 1446 0172 012A     		cmp	r2, #1
 1447 0174 40F2F081 		bls	.L162
 815:Lib/ssc/src/ecatslv.c ****                 ||(SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))
ARM GAS  /tmp/ccJBQgIh.s 			page 71


 1448              		.loc 1 815 17 view .LVU462
 1449 0178 0229     		cmp	r1, #2
 1450 017a 00F0EF81 		beq	.L163
 1451              		.loc 1 815 56 discriminator 1 view .LVU463
 1452 017e 0329     		cmp	r1, #3
 1453 0180 46D1     		bne	.L111
 816:Lib/ssc/src/ecatslv.c ****             {
 817:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1454              		.loc 1 817 24 view .LVU464
 1455 0182 3020     		movs	r0, #48
 1456 0184 FEE0     		b	.L100
 1457              	.LVL139:
 1458              	.L159:
 660:Lib/ssc/src/ecatslv.c **** 
 1459              		.loc 1 660 10 view .LVU465
 1460 0186 0026     		movs	r6, #0
 1461 0188 ECE7     		b	.L105
 1462              	.L160:
 1463 018a 0026     		movs	r6, #0
 1464 018c EAE7     		b	.L105
 1465              	.LVL140:
 1466              	.L110:
 818:Lib/ssc/src/ecatslv.c ****             }
 819:Lib/ssc/src/ecatslv.c ****         } //if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 
 820:Lib/ssc/src/ecatslv.c ****     else
 821:Lib/ssc/src/ecatslv.c ****     {
 822:Lib/ssc/src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 1467              		.loc 1 822 13 is_stmt 1 view .LVU466
 1468              		.loc 1 822 15 is_stmt 0 view .LVU467
 1469 018e 12F4806F 		tst	r2, #1024
 1470 0192 05D1     		bne	.L112
 823:Lib/ssc/src/ecatslv.c ****             {
 824:Lib/ssc/src/ecatslv.c ****                 /* No Sync 1 is generated => No Sync1 Sync Type shall configured*/
 825:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 826:Lib/ssc/src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC1)
 1471              		.loc 1 826 17 is_stmt 1 view .LVU468
 1472              		.loc 1 826 19 is_stmt 0 view .LVU469
 1473 0194 032B     		cmp	r3, #3
 1474 0196 00F0E381 		beq	.L165
 827:Lib/ssc/src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC1))
 1475              		.loc 1 827 21 view .LVU470
 1476 019a 0329     		cmp	r1, #3
 1477 019c 00F0E281 		beq	.L166
 1478              	.L112:
 828:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 829:Lib/ssc/src/ecatslv.c ****                 {
 830:Lib/ssc/src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 831:Lib/ssc/src/ecatslv.c ****                 }
 832:Lib/ssc/src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 833:Lib/ssc/src/ecatslv.c **** 
 834:Lib/ssc/src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1479              		.loc 1 834 13 is_stmt 1 view .LVU471
 1480              		.loc 1 834 15 is_stmt 0 view .LVU472
 1481 01a0 12F4007F 		tst	r2, #512
 1482 01a4 34D1     		bne	.L111
 835:Lib/ssc/src/ecatslv.c ****             {
 836:Lib/ssc/src/ecatslv.c ****                 /* No Sync 0 is generated => No Sync0 Sync Type shall configured*/
ARM GAS  /tmp/ccJBQgIh.s 			page 72


 837:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 838:Lib/ssc/src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC0)
 1483              		.loc 1 838 17 is_stmt 1 view .LVU473
 1484              		.loc 1 838 19 is_stmt 0 view .LVU474
 1485 01a6 022B     		cmp	r3, #2
 1486 01a8 00F0DE81 		beq	.L167
 839:Lib/ssc/src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC0))
 1487              		.loc 1 839 21 view .LVU475
 1488 01ac 0229     		cmp	r1, #2
 1489 01ae 2FD1     		bne	.L111
 840:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 841:Lib/ssc/src/ecatslv.c ****                 {
 842:Lib/ssc/src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1490              		.loc 1 842 28 view .LVU476
 1491 01b0 3020     		movs	r0, #48
 1492 01b2 E7E0     		b	.L100
 1493              	.L187:
 1494              		.align	2
 1495              	.L186:
 1496 01b4 00000000 		.word	sSyncManOutPar
 1497 01b8 00000000 		.word	sSyncManInPar
 1498 01bc 00000000 		.word	.LANCHOR12
 1499 01c0 00000000 		.word	.LANCHOR13
 1500 01c4 00000000 		.word	.LANCHOR8
 1501 01c8 00000000 		.word	.LANCHOR6
 1502 01cc 00000000 		.word	.LANCHOR4
 1503 01d0 00000000 		.word	u16EscAddrSendMbx
 1504 01d4 00000000 		.word	u16SendMbxSize
 1505 01d8 00000000 		.word	u16EscAddrReceiveMbx
 1506 01dc 00000000 		.word	u16ReceiveMbxSize
 1507 01e0 00000000 		.word	.LANCHOR7
 1508 01e4 00000000 		.word	bSyncSetByUser
 1509 01e8 E05E48C3 		.word	-1018667296
 1510              	.L109:
 843:Lib/ssc/src/ecatslv.c ****                 }
 844:Lib/ssc/src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 845:Lib/ssc/src/ecatslv.c **** 
 846:Lib/ssc/src/ecatslv.c ****         }
 847:Lib/ssc/src/ecatslv.c ****     } //if(bSyncSetByUser)
 848:Lib/ssc/src/ecatslv.c ****     else
 849:Lib/ssc/src/ecatslv.c ****     {
 850:Lib/ssc/src/ecatslv.c ****         /* No Sync Type selected by user => Configure Sync Type based on DC register values*/
 851:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1511              		.loc 1 851 9 is_stmt 1 view .LVU477
 1512              		.loc 1 851 11 is_stmt 0 view .LVU478
 1513 01ec 002D     		cmp	r5, #0
 1514 01ee 40F0D580 		bne	.L113
 852:Lib/ssc/src/ecatslv.c ****         {
 853:Lib/ssc/src/ecatslv.c ****             /* Activation or auto activation of the Sync Out Unit is disabled => Free Run or SM Syn
 854:Lib/ssc/src/ecatslv.c **** 
 855:Lib/ssc/src/ecatslv.c ****             /* AL Event enabled => Configure SM Sync*/
 856:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize > 0)
 1515              		.loc 1 856 13 is_stmt 1 view .LVU479
 1516              		.loc 1 856 31 is_stmt 0 view .LVU480
 1517 01f2 904B     		ldr	r3, .L188
 1518              	.LVL141:
 1519              		.loc 1 856 31 view .LVU481
ARM GAS  /tmp/ccJBQgIh.s 			page 73


 1520 01f4 1A88     		ldrh	r2, [r3]
 1521              		.loc 1 856 16 view .LVU482
 1522 01f6 002A     		cmp	r2, #0
 1523 01f8 00F0C680 		beq	.L114
 857:Lib/ssc/src/ecatslv.c ****             {
 858:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_SM_SYNCHRON;
 1524              		.loc 1 858 17 is_stmt 1 view .LVU483
 1525              	.LVL142:
 859:Lib/ssc/src/ecatslv.c ****                 
 860:Lib/ssc/src/ecatslv.c ****                 if (nPdInputSize > 0)
 1526              		.loc 1 860 17 view .LVU484
 1527              		.loc 1 860 34 is_stmt 0 view .LVU485
 1528 01fc 8E4B     		ldr	r3, .L188+4
 1529 01fe 1988     		ldrh	r1, [r3]
 1530              	.LVL143:
 1531              		.loc 1 860 20 view .LVU486
 1532 0200 0029     		cmp	r1, #0
 1533 0202 00F0C780 		beq	.L169
 861:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_SM2_SYNCHRON;
 1534              		.loc 1 861 36 view .LVU487
 1535 0206 2221     		movs	r1, #34
 858:Lib/ssc/src/ecatslv.c ****                 
 1536              		.loc 1 858 32 view .LVU488
 1537 0208 0123     		movs	r3, #1
 1538              	.LVL144:
 1539              	.L115:
 862:Lib/ssc/src/ecatslv.c ****                 else
 863:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_FREERUN;
 864:Lib/ssc/src/ecatslv.c ****             }
 865:Lib/ssc/src/ecatslv.c ****             else if (nPdInputSize > 0)
 866:Lib/ssc/src/ecatslv.c ****             {
 867:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 868:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_SM_SYNCHRON;
 869:Lib/ssc/src/ecatslv.c ****             }
 870:Lib/ssc/src/ecatslv.c ****             else
 871:Lib/ssc/src/ecatslv.c ****             {
 872:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 873:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 874:Lib/ssc/src/ecatslv.c ****             }
 875:Lib/ssc/src/ecatslv.c ****             sSyncManOutPar.u16GetCycleTime = 1;
 1540              		.loc 1 875 13 is_stmt 1 view .LVU489
 1541              		.loc 1 875 44 is_stmt 0 view .LVU490
 1542 020a 8C4A     		ldr	r2, .L188+8
 1543 020c 0124     		movs	r4, #1
 1544 020e 9483     		strh	r4, [r2, #28]	@ movhi
 1545              	.LVL145:
 1546              	.L111:
 876:Lib/ssc/src/ecatslv.c **** 
 877:Lib/ssc/src/ecatslv.c ****         }
 878:Lib/ssc/src/ecatslv.c ****         else
 879:Lib/ssc/src/ecatslv.c ****         {
 880:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize > 0)
 881:Lib/ssc/src/ecatslv.c ****             {
 882:Lib/ssc/src/ecatslv.c ****                 /* Sync Signal generation is active*/
 883:Lib/ssc/src/ecatslv.c ****                 if (bSubordinatedCycles)
 884:Lib/ssc/src/ecatslv.c ****                 {
 885:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC1;
ARM GAS  /tmp/ccJBQgIh.s 			page 74


 886:Lib/ssc/src/ecatslv.c ****                 }
 887:Lib/ssc/src/ecatslv.c ****                 else
 888:Lib/ssc/src/ecatslv.c ****                 {
 889:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC0;
 890:Lib/ssc/src/ecatslv.c ****                 }
 891:Lib/ssc/src/ecatslv.c ****             }
 892:Lib/ssc/src/ecatslv.c ****             else
 893:Lib/ssc/src/ecatslv.c ****             {
 894:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 895:Lib/ssc/src/ecatslv.c ****             }
 896:Lib/ssc/src/ecatslv.c **** 
 897:Lib/ssc/src/ecatslv.c **** 
 898:Lib/ssc/src/ecatslv.c ****             if (nPdInputSize > 0)
 899:Lib/ssc/src/ecatslv.c ****             {
 900:Lib/ssc/src/ecatslv.c ****                 if ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0)
 901:Lib/ssc/src/ecatslv.c ****                 {
 902:Lib/ssc/src/ecatslv.c ****                     /* If Sync1 is available the inputs will always be mapped with Sync1 */
 903:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC1;
 904:Lib/ssc/src/ecatslv.c ****                 }
 905:Lib/ssc/src/ecatslv.c ****                 else
 906:Lib/ssc/src/ecatslv.c ****                 {
 907:Lib/ssc/src/ecatslv.c ****                     /* Map Inputs based on Sync0*/
 908:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC0;
 909:Lib/ssc/src/ecatslv.c ****                 }
 910:Lib/ssc/src/ecatslv.c ****             }
 911:Lib/ssc/src/ecatslv.c ****             else
 912:Lib/ssc/src/ecatslv.c ****             {
 913:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 914:Lib/ssc/src/ecatslv.c ****             }
 915:Lib/ssc/src/ecatslv.c ****         }
 916:Lib/ssc/src/ecatslv.c ****     }
 917:Lib/ssc/src/ecatslv.c **** 
 918:Lib/ssc/src/ecatslv.c ****     /* Update Cycle time entries if DC Sync Mode enabled */
 919:Lib/ssc/src/ecatslv.c ****     if(SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1547              		.loc 1 919 5 is_stmt 1 view .LVU491
 1548              		.loc 1 919 7 is_stmt 0 view .LVU492
 1549 0210 032B     		cmp	r3, #3
 1550 0212 00F0D680 		beq	.L179
 920:Lib/ssc/src/ecatslv.c ****     {
 921:Lib/ssc/src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 922:Lib/ssc/src/ecatslv.c **** 
 923:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 924:Lib/ssc/src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 925:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 926:Lib/ssc/src/ecatslv.c ****     }
 927:Lib/ssc/src/ecatslv.c ****     else if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 1551              		.loc 1 927 10 is_stmt 1 view .LVU493
 1552              		.loc 1 927 12 is_stmt 0 view .LVU494
 1553 0216 022B     		cmp	r3, #2
 1554 0218 00F0D980 		beq	.L180
 1555              	.L118:
 928:Lib/ssc/src/ecatslv.c ****     {
 929:Lib/ssc/src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 930:Lib/ssc/src/ecatslv.c **** 
 931:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 932:Lib/ssc/src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT16)cycleTimeSync0;
 933:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
ARM GAS  /tmp/ccJBQgIh.s 			page 75


 934:Lib/ssc/src/ecatslv.c ****     }
 935:Lib/ssc/src/ecatslv.c **** 
 936:Lib/ssc/src/ecatslv.c ****     /* Set global flags based on Sync Type */
 937:Lib/ssc/src/ecatslv.c ****     if ( !b3BufferMode )
 1556              		.loc 1 937 5 is_stmt 1 view .LVU495
 1557              		.loc 1 937 10 is_stmt 0 view .LVU496
 1558 021c 884A     		ldr	r2, .L188+12
 1559 021e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1560              		.loc 1 937 8 view .LVU497
 1561 0220 2AB9     		cbnz	r2, .L119
 938:Lib/ssc/src/ecatslv.c ****     {
 939:Lib/ssc/src/ecatslv.c ****         /* 1-Buffer-Mode configured => For free run it shall be 3Buffer mode*/
 940:Lib/ssc/src/ecatslv.c ****         if (( SyncType0x1C32 == SYNCTYPE_FREERUN ) || ( SyncType0x1C33 == SYNCTYPE_FREERUN ))
 1562              		.loc 1 940 9 is_stmt 1 view .LVU498
 1563              		.loc 1 940 12 is_stmt 0 view .LVU499
 1564 0222 002B     		cmp	r3, #0
 1565 0224 00F0A281 		beq	.L173
 1566              		.loc 1 940 52 discriminator 1 view .LVU500
 1567 0228 0029     		cmp	r1, #0
 1568 022a 00F0A181 		beq	.L174
 1569              	.L119:
 941:Lib/ssc/src/ecatslv.c ****         {
 942:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_FREERUNNEEDS3BUFFERMODE;
 943:Lib/ssc/src/ecatslv.c ****         }
 944:Lib/ssc/src/ecatslv.c ****     }
 945:Lib/ssc/src/ecatslv.c **** 
 946:Lib/ssc/src/ecatslv.c ****     /* If no free run is supported the EscInt is always enabled*/
 947:Lib/ssc/src/ecatslv.c ****         if (( SyncType0x1C32 != SYNCTYPE_FREERUN ) || ( SyncType0x1C33 != SYNCTYPE_FREERUN ))
 1570              		.loc 1 947 9 is_stmt 1 view .LVU501
 1571              		.loc 1 947 12 is_stmt 0 view .LVU502
 1572 022e 03B9     		cbnz	r3, .L120
 1573              		.loc 1 947 52 discriminator 1 view .LVU503
 1574 0230 11B1     		cbz	r1, .L121
 1575              	.L120:
 948:Lib/ssc/src/ecatslv.c ****         {
 949:Lib/ssc/src/ecatslv.c ****         /* ECAT Synchron Mode, the ESC interrupt is enabled */
 950:Lib/ssc/src/ecatslv.c ****         bEscIntEnabled = TRUE;
 1576              		.loc 1 950 9 is_stmt 1 view .LVU504
 1577              		.loc 1 950 24 is_stmt 0 view .LVU505
 1578 0232 844A     		ldr	r2, .L188+16
 1579 0234 0124     		movs	r4, #1
 1580 0236 1470     		strb	r4, [r2]
 1581              	.L121:
 951:Lib/ssc/src/ecatslv.c ****     }
 952:Lib/ssc/src/ecatslv.c **** 
 953:Lib/ssc/src/ecatslv.c ****         /* Update value for AL Event Mask register (0x204) */
 954:Lib/ssc/src/ecatslv.c ****         if(bEscIntEnabled)
 1582              		.loc 1 954 9 is_stmt 1 view .LVU506
 1583              		.loc 1 954 12 is_stmt 0 view .LVU507
 1584 0238 824A     		ldr	r2, .L188+16
 1585 023a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1586              		.loc 1 954 11 view .LVU508
 1587 023c 42B1     		cbz	r2, .L122
 955:Lib/ssc/src/ecatslv.c ****         {
 956:Lib/ssc/src/ecatslv.c ****             if(nPdOutputSize > 0)
 1588              		.loc 1 956 13 is_stmt 1 view .LVU509
 1589              		.loc 1 956 30 is_stmt 0 view .LVU510
ARM GAS  /tmp/ccJBQgIh.s 			page 76


 1590 023e 7D4A     		ldr	r2, .L188
 1591 0240 1288     		ldrh	r2, [r2]
 1592              		.loc 1 956 15 view .LVU511
 1593 0242 002A     		cmp	r2, #0
 1594 0244 00F0CA80 		beq	.L123
 957:Lib/ssc/src/ecatslv.c ****             {
 958:Lib/ssc/src/ecatslv.c ****                 u16ALEventMask = PROCESS_OUTPUT_EVENT;
 1595              		.loc 1 958 17 is_stmt 1 view .LVU512
 1596              		.loc 1 958 32 is_stmt 0 view .LVU513
 1597 0248 7F4A     		ldr	r2, .L188+20
 1598 024a 4FF48064 		mov	r4, #1024
 1599 024e 1480     		strh	r4, [r2]	@ movhi
 1600              	.L122:
 959:Lib/ssc/src/ecatslv.c ****             }
 960:Lib/ssc/src/ecatslv.c ****             else if(nPdInputSize > 0)
 961:Lib/ssc/src/ecatslv.c ****             {
 962:Lib/ssc/src/ecatslv.c ****                 u16ALEventMask = PROCESS_INPUT_EVENT;
 963:Lib/ssc/src/ecatslv.c ****             }
 964:Lib/ssc/src/ecatslv.c **** 
 965:Lib/ssc/src/ecatslv.c ****         }
 966:Lib/ssc/src/ecatslv.c **** 
 967:Lib/ssc/src/ecatslv.c ****         if ((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1601              		.loc 1 967 9 is_stmt 1 view .LVU514
 1602              		.loc 1 967 50 is_stmt 0 view .LVU515
 1603 0250 9A1E     		subs	r2, r3, #2
 1604 0252 92B2     		uxth	r2, r2
 1605              		.loc 1 967 12 view .LVU516
 1606 0254 012A     		cmp	r2, #1
 1607 0256 03D9     		bls	.L124
 968:Lib/ssc/src/ecatslv.c ****             || (SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))/* Sync
 1608              		.loc 1 968 13 view .LVU517
 1609 0258 0229     		cmp	r1, #2
 1610 025a 01D0     		beq	.L124
 1611              		.loc 1 968 53 discriminator 1 view .LVU518
 1612 025c 0329     		cmp	r1, #3
 1613 025e 08D1     		bne	.L125
 1614              	.L124:
 969:Lib/ssc/src/ecatslv.c ****         {
 970:Lib/ssc/src/ecatslv.c ****             /* slave is running in DC-mode */
 971:Lib/ssc/src/ecatslv.c ****             bDcSyncActive = TRUE;
 1615              		.loc 1 971 13 is_stmt 1 view .LVU519
 1616              		.loc 1 971 27 is_stmt 0 view .LVU520
 1617 0260 7A4A     		ldr	r2, .L188+24
 1618 0262 0124     		movs	r4, #1
 1619 0264 1470     		strb	r4, [r2]
 972:Lib/ssc/src/ecatslv.c **** 
 973:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 974:Lib/ssc/src/ecatslv.c ****             /*In case of an Input only application with DC no PDI Isr handling is required*/
 975:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize == 0)
 1620              		.loc 1 975 13 is_stmt 1 view .LVU521
 1621              		.loc 1 975 31 is_stmt 0 view .LVU522
 1622 0266 734A     		ldr	r2, .L188
 1623 0268 1288     		ldrh	r2, [r2]
 1624              		.loc 1 975 16 view .LVU523
 1625 026a 12B9     		cbnz	r2, .L125
 976:Lib/ssc/src/ecatslv.c ****             {
 977:Lib/ssc/src/ecatslv.c ****                u16ALEventMask = 0;
ARM GAS  /tmp/ccJBQgIh.s 			page 77


 1626              		.loc 1 977 16 is_stmt 1 view .LVU524
 1627              		.loc 1 977 31 is_stmt 0 view .LVU525
 1628 026c 764A     		ldr	r2, .L188+20
 1629 026e 0024     		movs	r4, #0
 1630 0270 1480     		strh	r4, [r2]	@ movhi
 1631              	.L125:
 978:Lib/ssc/src/ecatslv.c ****             }
 979:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 980:Lib/ssc/src/ecatslv.c ****         }
 981:Lib/ssc/src/ecatslv.c **** 
 982:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u16SyncType = SyncType0x1C32;
 1632              		.loc 1 982 5 is_stmt 1 view .LVU526
 1633              		.loc 1 982 32 is_stmt 0 view .LVU527
 1634 0272 724A     		ldr	r2, .L188+8
 1635 0274 5380     		strh	r3, [r2, #2]	@ movhi
 983:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u16SyncType = SyncType0x1C33;
 1636              		.loc 1 983 5 is_stmt 1 view .LVU528
 1637              		.loc 1 983 31 is_stmt 0 view .LVU529
 1638 0276 764A     		ldr	r2, .L188+28
 1639 0278 5180     		strh	r1, [r2, #2]	@ movhi
 984:Lib/ssc/src/ecatslv.c **** 
 985:Lib/ssc/src/ecatslv.c ****     /* Calculate number of Sync0 events within one SM cycle and the Sync0 events on which the input
 986:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Value = 0;
 1640              		.loc 1 986 5 is_stmt 1 view .LVU530
 1641              		.loc 1 986 26 is_stmt 0 view .LVU531
 1642 027a 0022     		movs	r2, #0
 1643 027c 754C     		ldr	r4, .L188+32
 1644 027e 2280     		strh	r2, [r4]	@ movhi
 987:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Counter = 0;
 1645              		.loc 1 987 5 is_stmt 1 view .LVU532
 1646              		.loc 1 987 28 is_stmt 0 view .LVU533
 1647 0280 754C     		ldr	r4, .L188+36
 1648 0282 2280     		strh	r2, [r4]	@ movhi
 988:Lib/ssc/src/ecatslv.c ****     u16SmSync0Value = 0;
 1649              		.loc 1 988 5 is_stmt 1 view .LVU534
 1650              		.loc 1 988 21 is_stmt 0 view .LVU535
 1651 0284 754C     		ldr	r4, .L188+40
 1652 0286 2280     		strh	r2, [r4]	@ movhi
 989:Lib/ssc/src/ecatslv.c ****     u16SmSync0Counter = 0;
 1653              		.loc 1 989 5 is_stmt 1 view .LVU536
 1654              		.loc 1 989 23 is_stmt 0 view .LVU537
 1655 0288 754C     		ldr	r4, .L188+44
 1656 028a 2280     		strh	r2, [r4]	@ movhi
 990:Lib/ssc/src/ecatslv.c **** 
 991:Lib/ssc/src/ecatslv.c **** 
 992:Lib/ssc/src/ecatslv.c ****     if(bSubordinatedCycles == TRUE)
 1657              		.loc 1 992 5 is_stmt 1 view .LVU538
 1658              		.loc 1 992 7 is_stmt 0 view .LVU539
 1659 028c 002E     		cmp	r6, #0
 1660 028e 40F0AF80 		bne	.L181
 993:Lib/ssc/src/ecatslv.c ****     {
 994:Lib/ssc/src/ecatslv.c ****         /* get the number of Sync0 event within on SM cycle */
 995:Lib/ssc/src/ecatslv.c ****         if(cycleTimeSync1 >= cycleTimeSync0)
 996:Lib/ssc/src/ecatslv.c ****         {
 997:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = (UINT16)(cycleTimeSync1 / cycleTimeSync0);
 998:Lib/ssc/src/ecatslv.c ****             
 999:Lib/ssc/src/ecatslv.c ****             if((cycleTimeSync1 % cycleTimeSync0) == 0)
ARM GAS  /tmp/ccJBQgIh.s 			page 78


1000:Lib/ssc/src/ecatslv.c ****             {
1001:Lib/ssc/src/ecatslv.c ****                 /* if the Sync1cycletime/Sync0cycletime ratio is even one additional tick */
1002:Lib/ssc/src/ecatslv.c ****                 u16SmSync0Value ++;
1003:Lib/ssc/src/ecatslv.c ****         }
1004:Lib/ssc/src/ecatslv.c ****         }
1005:Lib/ssc/src/ecatslv.c ****         else
1006:Lib/ssc/src/ecatslv.c ****         {
1007:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = 1;
1008:Lib/ssc/src/ecatslv.c ****         }
1009:Lib/ssc/src/ecatslv.c **** 
1010:Lib/ssc/src/ecatslv.c ****         /* Calculate the Sync0 tick on which the inputs shall be latched (last Sync0 before the nex
1011:Lib/ssc/src/ecatslv.c ****         LatchInputSync0Value = (UINT16) (cycleTimeSync1 / cycleTimeSync0);
1012:Lib/ssc/src/ecatslv.c **** 
1013:Lib/ssc/src/ecatslv.c ****         if((cycleTimeSync1 % cycleTimeSync0) > 0)
1014:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
1015:Lib/ssc/src/ecatslv.c **** 
1016:Lib/ssc/src/ecatslv.c ****     }
1017:Lib/ssc/src/ecatslv.c ****     else 
1018:Lib/ssc/src/ecatslv.c ****     {
1019:Lib/ssc/src/ecatslv.c ****         if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 1661              		.loc 1 1019 9 is_stmt 1 view .LVU540
 1662              		.loc 1 1019 11 is_stmt 0 view .LVU541
 1663 0292 022B     		cmp	r3, #2
 1664 0294 00F0CA80 		beq	.L182
 1665              	.LVL146:
 1666              	.L130:
1020:Lib/ssc/src/ecatslv.c ****         {
1021:Lib/ssc/src/ecatslv.c ****             /* if SyncType of 0x1C32 is 2 the Sync0 event is trigger once during a SM cycle */
1022:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = 1;
1023:Lib/ssc/src/ecatslv.c ****         }   
1024:Lib/ssc/src/ecatslv.c **** 
1025:Lib/ssc/src/ecatslv.c ****         if(SyncType0x1C33 != SYNCTYPE_DCSYNC1)
 1667              		.loc 1 1025 9 is_stmt 1 view .LVU542
 1668              		.loc 1 1025 11 is_stmt 0 view .LVU543
 1669 0298 0329     		cmp	r1, #3
 1670 029a 02D0     		beq	.L129
1026:Lib/ssc/src/ecatslv.c ****         {
1027:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value = 1;
 1671              		.loc 1 1027 13 is_stmt 1 view .LVU544
 1672              		.loc 1 1027 34 is_stmt 0 view .LVU545
 1673 029c 6D4B     		ldr	r3, .L188+32
 1674 029e 0122     		movs	r2, #1
 1675 02a0 1A80     		strh	r2, [r3]	@ movhi
 1676              	.LVL147:
 1677              	.L129:
1028:Lib/ssc/src/ecatslv.c ****         }
1029:Lib/ssc/src/ecatslv.c ****     }
1030:Lib/ssc/src/ecatslv.c **** 
1031:Lib/ssc/src/ecatslv.c **** 
1032:Lib/ssc/src/ecatslv.c **** 
1033:Lib/ssc/src/ecatslv.c ****     /* reset the error counter indicating synchronization problems */
1034:Lib/ssc/src/ecatslv.c ****     sCycleDiag.syncFailedCounter = 0;
 1678              		.loc 1 1034 5 is_stmt 1 view .LVU546
 1679              		.loc 1 1034 34 is_stmt 0 view .LVU547
 1680 02a2 704B     		ldr	r3, .L188+48
 1681 02a4 0022     		movs	r2, #0
 1682 02a6 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccJBQgIh.s 			page 79


1035:Lib/ssc/src/ecatslv.c **** 
1036:Lib/ssc/src/ecatslv.c **** 
1037:Lib/ssc/src/ecatslv.c ****     /*
1038:Lib/ssc/src/ecatslv.c ****         --- Check watchdog settings ---
1039:Lib/ssc/src/ecatslv.c ****     */
1040:Lib/ssc/src/ecatslv.c **** 
1041:Lib/ssc/src/ecatslv.c ****     /*get the watchdog time (register 0x420). if value is > 0 watchdog is active*/
1042:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1043:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(wd, ESC_PD_WD_TIME);
 1683              		.loc 1 1043 5 is_stmt 1 view .LVU548
 1684 02a8 0222     		movs	r2, #2
 1685 02aa 4FF48461 		mov	r1, #1056
 1686 02ae 0DF10A00 		add	r0, sp, #10
 1687 02b2 FFF7FEFF 		bl	HW_EscRead
 1688              	.LVL148:
1044:Lib/ssc/src/ecatslv.c ****     wd = SWAPWORD(wd);
 1689              		.loc 1 1044 5 view .LVU549
 1690              		.loc 1 1044 8 is_stmt 0 view .LVU550
 1691 02b6 BDF80A20 		ldrh	r2, [sp, #10]
1045:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1046:Lib/ssc/src/ecatslv.c **** 
1047:Lib/ssc/src/ecatslv.c ****     if (nPdOutputSize > 0 &&  wd != 0 )
 1692              		.loc 1 1047 5 is_stmt 1 view .LVU551
 1693              		.loc 1 1047 23 is_stmt 0 view .LVU552
 1694 02ba 5E4B     		ldr	r3, .L188
 1695 02bc 1B88     		ldrh	r3, [r3]
 1696              		.loc 1 1047 8 view .LVU553
 1697 02be 13B1     		cbz	r3, .L131
 1698              		.loc 1 1047 27 discriminator 1 view .LVU554
 1699 02c0 002A     		cmp	r2, #0
 1700 02c2 40F0E780 		bne	.L183
 1701              	.L131:
1048:Lib/ssc/src/ecatslv.c ****     {
1049:Lib/ssc/src/ecatslv.c ****     /*get watchdog divider (register 0x400)*/
1050:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(wdiv, ESC_WD_DIVIDER_OFFSET);
1051:Lib/ssc/src/ecatslv.c ****     wdiv = SWAPWORD(wdiv);
1052:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
1053:Lib/ssc/src/ecatslv.c ****         {
1054:Lib/ssc/src/ecatslv.c ****             /* the ESC subtracts 2 in register 0x400 so it has to be added here */
1055:Lib/ssc/src/ecatslv.c ****             UINT32 d = wdiv+2;
1056:Lib/ssc/src/ecatslv.c **** 
1057:Lib/ssc/src/ecatslv.c ****             d *= wd;
1058:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
1059:Lib/ssc/src/ecatslv.c ****             /* watchdog value has to be rounded up */
1060:Lib/ssc/src/ecatslv.c ****             d += 24999;
1061:Lib/ssc/src/ecatslv.c ****             d /= 25000;
1062:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
1063:Lib/ssc/src/ecatslv.c ****         }
1064:Lib/ssc/src/ecatslv.c ****         else
1065:Lib/ssc/src/ecatslv.c ****         {
1066:Lib/ssc/src/ecatslv.c ****             wd = 0;
1067:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
1068:Lib/ssc/src/ecatslv.c ****             EcatWdValue = 0;
1069:Lib/ssc/src/ecatslv.c ****         }
1070:Lib/ssc/src/ecatslv.c ****     }
1071:Lib/ssc/src/ecatslv.c ****     else
1072:Lib/ssc/src/ecatslv.c ****     {
ARM GAS  /tmp/ccJBQgIh.s 			page 80


1073:Lib/ssc/src/ecatslv.c ****         /* the watchdog is deactivated or slave has no output process data*/
1074:Lib/ssc/src/ecatslv.c ****         wdiv = 0;
 1702              		.loc 1 1074 9 is_stmt 1 view .LVU555
 1703              		.loc 1 1074 14 is_stmt 0 view .LVU556
 1704 02c6 0023     		movs	r3, #0
 1705 02c8 ADF80C30 		strh	r3, [sp, #12]	@ movhi
1075:Lib/ssc/src/ecatslv.c ****         EcatWdValue = 0;
 1706              		.loc 1 1075 9 is_stmt 1 view .LVU557
 1707              		.loc 1 1075 21 is_stmt 0 view .LVU558
 1708 02cc 664A     		ldr	r2, .L188+52
 1709 02ce 1380     		strh	r3, [r2]	@ movhi
 1710              	.L133:
1076:Lib/ssc/src/ecatslv.c ****     }
1077:Lib/ssc/src/ecatslv.c **** 
1078:Lib/ssc/src/ecatslv.c ****     if((EcatWdValue == 0 && bWdTrigger) || (EcatWdValue != 0 && !bWdTrigger))
 1711              		.loc 1 1078 5 is_stmt 1 view .LVU559
 1712              		.loc 1 1078 21 is_stmt 0 view .LVU560
 1713 02d0 654B     		ldr	r3, .L188+52
 1714 02d2 1B88     		ldrh	r3, [r3]
 1715              		.loc 1 1078 7 view .LVU561
 1716 02d4 23B9     		cbnz	r3, .L134
 1717              		.loc 1 1078 26 discriminator 1 view .LVU562
 1718 02d6 654A     		ldr	r2, .L188+56
 1719 02d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1720 02da 002A     		cmp	r2, #0
 1721 02dc 40F04A81 		bne	.L175
 1722              	.L134:
 1723              		.loc 1 1078 41 discriminator 3 view .LVU563
 1724 02e0 23B1     		cbz	r3, .L135
 1725              		.loc 1 1078 65 discriminator 4 view .LVU564
 1726 02e2 624B     		ldr	r3, .L188+56
 1727 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1728              		.loc 1 1078 62 discriminator 4 view .LVU565
 1729 02e6 002B     		cmp	r3, #0
 1730 02e8 00F04681 		beq	.L176
 1731              	.L135:
1079:Lib/ssc/src/ecatslv.c ****     {
1080:Lib/ssc/src/ecatslv.c ****         /* if the WD-Trigger in the Sync Manager Channel 2 Control-Byte is set (Bit 6 of Register 0
1081:Lib/ssc/src/ecatslv.c ****             an error has to be returned */
1082:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDWDCFG;
1083:Lib/ssc/src/ecatslv.c ****     }
1084:Lib/ssc/src/ecatslv.c **** 
1085:Lib/ssc/src/ecatslv.c ****     if ( bEscIntEnabled && nPdOutputSize != 0 )
 1732              		.loc 1 1085 5 is_stmt 1 view .LVU566
 1733              		.loc 1 1085 10 is_stmt 0 view .LVU567
 1734 02ec 554B     		ldr	r3, .L188+16
 1735 02ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1736              		.loc 1 1085 8 view .LVU568
 1737 02f0 3BB1     		cbz	r3, .L136
 1738              		.loc 1 1085 42 discriminator 1 view .LVU569
 1739 02f2 504B     		ldr	r3, .L188
 1740 02f4 1B88     		ldrh	r3, [r3]
 1741              		.loc 1 1085 25 discriminator 1 view .LVU570
 1742 02f6 23B1     		cbz	r3, .L136
1086:Lib/ssc/src/ecatslv.c ****     {
1087:Lib/ssc/src/ecatslv.c ****         /* ECAT synchron Mode is active, the Sync Manager Channel 2 event
1088:Lib/ssc/src/ecatslv.c ****            has to activated in the AL-Event mask register */
ARM GAS  /tmp/ccJBQgIh.s 			page 81


1089:Lib/ssc/src/ecatslv.c ****         u16ALEventMask |= PROCESS_OUTPUT_EVENT;
 1743              		.loc 1 1089 9 is_stmt 1 view .LVU571
 1744              		.loc 1 1089 24 is_stmt 0 view .LVU572
 1745 02f8 534A     		ldr	r2, .L188+20
 1746 02fa 1388     		ldrh	r3, [r2]
 1747 02fc 43F48063 		orr	r3, r3, #1024
 1748 0300 1380     		strh	r3, [r2]	@ movhi
 1749              	.L136:
1090:Lib/ssc/src/ecatslv.c ****     }
1091:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1092:Lib/ssc/src/ecatslv.c **** 
1093:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 1750              		.loc 1 1093 5 is_stmt 1 view .LVU573
 1751              		.loc 1 1093 18 is_stmt 0 view .LVU574
 1752 0302 0023     		movs	r3, #0
 1753 0304 5A4A     		ldr	r2, .L188+60
 1754 0306 1380     		strh	r3, [r2]	@ movhi
1094:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 1755              		.loc 1 1094 5 is_stmt 1 view .LVU575
 1756              		.loc 1 1094 20 is_stmt 0 view .LVU576
 1757 0308 5A4A     		ldr	r2, .L188+64
 1758 030a 1380     		strh	r3, [r2]	@ movhi
1095:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 1759              		.loc 1 1095 5 is_stmt 1 view .LVU577
 1760              		.loc 1 1095 20 is_stmt 0 view .LVU578
 1761 030c 5A4A     		ldr	r2, .L188+68
 1762 030e 1380     		strh	r3, [r2]	@ movhi
1096:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 1763              		.loc 1 1096 5 is_stmt 1 view .LVU579
 1764              		.loc 1 1096 18 is_stmt 0 view .LVU580
 1765 0310 5A4A     		ldr	r2, .L188+72
 1766 0312 1380     		strh	r3, [r2]	@ movhi
1097:Lib/ssc/src/ecatslv.c ****     bDcRunning = FALSE;
 1767              		.loc 1 1097 5 is_stmt 1 view .LVU581
 1768              		.loc 1 1097 16 is_stmt 0 view .LVU582
 1769 0314 5A4A     		ldr	r2, .L188+76
 1770 0316 1370     		strb	r3, [r2]
1098:Lib/ssc/src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 1771              		.loc 1 1098 5 is_stmt 1 view .LVU583
 1772              		.loc 1 1098 26 is_stmt 0 view .LVU584
 1773 0318 5A4A     		ldr	r2, .L188+80
 1774 031a 1370     		strb	r3, [r2]
1099:Lib/ssc/src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 1775              		.loc 1 1099 5 is_stmt 1 view .LVU585
 1776              		.loc 1 1099 33 is_stmt 0 view .LVU586
 1777 031c 5A4A     		ldr	r2, .L188+84
 1778 031e 1380     		strh	r3, [r2]	@ movhi
1100:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1101:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 1779              		.loc 1 1101 5 is_stmt 1 view .LVU587
 1780              		.loc 1 1101 31 is_stmt 0 view .LVU588
 1781 0320 4B4A     		ldr	r2, .L188+28
 1782 0322 82F84030 		strb	r3, [r2, #64]
1102:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1103:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u8SyncError = 0;
 1783              		.loc 1 1103 5 is_stmt 1 view .LVU589
 1784              		.loc 1 1103 32 is_stmt 0 view .LVU590
ARM GAS  /tmp/ccJBQgIh.s 			page 82


 1785 0326 454A     		ldr	r2, .L188+8
 1786 0328 82F84030 		strb	r3, [r2, #64]
1104:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u16SmEventMissedCounter = 0;
 1787              		.loc 1 1104 5 is_stmt 1 view .LVU591
 1788              		.loc 1 1104 44 is_stmt 0 view .LVU592
 1789 032c 1385     		strh	r3, [r2, #40]	@ movhi
1105:Lib/ssc/src/ecatslv.c **** 
1106:Lib/ssc/src/ecatslv.c ****     /* calculate the Sync0/Sync1 watchdog timeouts */
1107:Lib/ssc/src/ecatslv.c ****     if ( (dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0 )
 1790              		.loc 1 1107 5 is_stmt 1 view .LVU593
 1791              		.loc 1 1107 21 is_stmt 0 view .LVU594
 1792 032e BDF80E30 		ldrh	r3, [sp, #14]
 1793              		.loc 1 1107 8 view .LVU595
 1794 0332 13F4007F 		tst	r3, #512
 1795 0336 18D0     		beq	.L137
1108:Lib/ssc/src/ecatslv.c ****     {
1109:Lib/ssc/src/ecatslv.c ****         /*calculate the Sync0 Watchdog counter value the minimum value is 1 ms
1110:Lib/ssc/src/ecatslv.c ****             if the sync0 cycle is greater 500us the Sync0 Wd value is 2*Sycn0 cycle */
1111:Lib/ssc/src/ecatslv.c ****         if(cycleTimeSync0 == 0)
 1796              		.loc 1 1111 9 is_stmt 1 view .LVU596
 1797              		.loc 1 1111 27 is_stmt 0 view .LVU597
 1798 0338 0199     		ldr	r1, [sp, #4]
 1799              		.loc 1 1111 11 view .LVU598
 1800 033a 59B1     		cbz	r1, .L138
 1801              	.LBB20:
1112:Lib/ssc/src/ecatslv.c ****         {
1113:Lib/ssc/src/ecatslv.c ****             Sync0WdValue = 0;
1114:Lib/ssc/src/ecatslv.c ****         }
1115:Lib/ssc/src/ecatslv.c ****         else
1116:Lib/ssc/src/ecatslv.c ****         {
1117:Lib/ssc/src/ecatslv.c ****             UINT32 Sync0Cycle = cycleTimeSync0/100000;
 1802              		.loc 1 1117 13 is_stmt 1 view .LVU599
 1803              		.loc 1 1117 20 is_stmt 0 view .LVU600
 1804 033c 4A09     		lsrs	r2, r1, #5
 1805 033e 5348     		ldr	r0, .L188+88
 1806 0340 A0FB0202 		umull	r0, r2, r0, r2
 1807 0344 D209     		lsrs	r2, r2, #7
 1808              	.LVL149:
1118:Lib/ssc/src/ecatslv.c ****             if(Sync0Cycle < 5)
 1809              		.loc 1 1118 13 is_stmt 1 view .LVU601
 1810              		.loc 1 1118 15 is_stmt 0 view .LVU602
 1811 0346 5248     		ldr	r0, .L188+92
 1812 0348 8142     		cmp	r1, r0
 1813 034a 00F2C280 		bhi	.L139
1119:Lib/ssc/src/ecatslv.c ****             {
1120:Lib/ssc/src/ecatslv.c ****                 /*Sync0 cycle less than 500us*/
1121:Lib/ssc/src/ecatslv.c ****                 Sync0WdValue = 1;
 1814              		.loc 1 1121 17 is_stmt 1 view .LVU603
 1815              		.loc 1 1121 30 is_stmt 0 view .LVU604
 1816 034e 484A     		ldr	r2, .L188+60
 1817              	.LVL150:
 1818              		.loc 1 1121 30 view .LVU605
 1819 0350 0120     		movs	r0, #1
 1820 0352 1080     		strh	r0, [r2]	@ movhi
 1821              	.LVL151:
 1822              	.L138:
 1823              		.loc 1 1121 30 view .LVU606
ARM GAS  /tmp/ccJBQgIh.s 			page 83


 1824              	.LBE20:
1122:Lib/ssc/src/ecatslv.c ****             }
1123:Lib/ssc/src/ecatslv.c ****             else
1124:Lib/ssc/src/ecatslv.c ****             {
1125:Lib/ssc/src/ecatslv.c ****                 Sync0WdValue = (UINT16)(Sync0Cycle*2)/10;
1126:Lib/ssc/src/ecatslv.c ****             }
1127:Lib/ssc/src/ecatslv.c ****         }
1128:Lib/ssc/src/ecatslv.c **** 
1129:Lib/ssc/src/ecatslv.c ****         /* Calculate also the watchdog time for Sync1*/
1130:Lib/ssc/src/ecatslv.c ****         if ( (dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0 )
 1825              		.loc 1 1130 9 is_stmt 1 view .LVU607
 1826              		.loc 1 1130 12 is_stmt 0 view .LVU608
 1827 0354 13F4806F 		tst	r3, #1024
 1828 0358 07D0     		beq	.L137
1131:Lib/ssc/src/ecatslv.c ****         {
1132:Lib/ssc/src/ecatslv.c ****             if(cycleTimeSync1 < cycleTimeSync0)
 1829              		.loc 1 1132 13 is_stmt 1 view .LVU609
 1830              		.loc 1 1132 31 is_stmt 0 view .LVU610
 1831 035a 009A     		ldr	r2, [sp]
 1832              		.loc 1 1132 15 view .LVU611
 1833 035c 9142     		cmp	r1, r2
 1834 035e 40F2C180 		bls	.L140
1133:Lib/ssc/src/ecatslv.c **** 						{
1134:Lib/ssc/src/ecatslv.c **** 										/* Sync 1 has the same cycle time than Sync0 (maybe with a shift (cycleTimeSync1 > 0))*/
1135:Lib/ssc/src/ecatslv.c **** 										Sync1WdValue = Sync0WdValue;
 1835              		.loc 1 1135 11 is_stmt 1 view .LVU612
 1836              		.loc 1 1135 24 is_stmt 0 view .LVU613
 1837 0362 434B     		ldr	r3, .L188+60
 1838 0364 1A88     		ldrh	r2, [r3]
 1839 0366 454B     		ldr	r3, .L188+72
 1840 0368 1A80     		strh	r2, [r3]	@ movhi
 1841              	.L137:
1136:Lib/ssc/src/ecatslv.c **** 						}
1137:Lib/ssc/src/ecatslv.c **** 						else
1138:Lib/ssc/src/ecatslv.c **** 						{
1139:Lib/ssc/src/ecatslv.c **** 										/* Sync1 cycle is larger than Sync0 (e.g. subordinated Sync0 cycles) */
1140:Lib/ssc/src/ecatslv.c **** 										UINT32 Sync1Cycle = cycleTimeSync1/100000;
1141:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
1142:Lib/ssc/src/ecatslv.c **** 										{
1143:Lib/ssc/src/ecatslv.c **** 												/*Sync0 cycle less than 500us*/
1144:Lib/ssc/src/ecatslv.c **** 												Sync1WdValue = 1;
1145:Lib/ssc/src/ecatslv.c **** 										}
1146:Lib/ssc/src/ecatslv.c **** 										else
1147:Lib/ssc/src/ecatslv.c **** 										{
1148:Lib/ssc/src/ecatslv.c **** 												Sync1WdValue = (UINT16)(Sync1Cycle*2)/10;
1149:Lib/ssc/src/ecatslv.c **** 										}
1150:Lib/ssc/src/ecatslv.c **** 
1151:Lib/ssc/src/ecatslv.c **** 												/* add one Sync0 cycle because the Sync1 cycle starts on the next Sync0 after the Sync1
1152:Lib/ssc/src/ecatslv.c **** 													Sync1WdValue += Sync0WdValue/2;
1153:Lib/ssc/src/ecatslv.c **** 						}
1154:Lib/ssc/src/ecatslv.c **** 				}
1155:Lib/ssc/src/ecatslv.c ****     }
1156:Lib/ssc/src/ecatslv.c **** 
1157:Lib/ssc/src/ecatslv.c **** 
1158:Lib/ssc/src/ecatslv.c **** 
1159:Lib/ssc/src/ecatslv.c **** 
1160:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 84


1161:Lib/ssc/src/ecatslv.c ****     if(nPdOutputSize > 0)
 1842              		.loc 1 1161 5 is_stmt 1 view .LVU614
 1843              		.loc 1 1161 22 is_stmt 0 view .LVU615
 1844 036a 324B     		ldr	r3, .L188
 1845 036c 1B88     		ldrh	r3, [r3]
 1846              		.loc 1 1161 7 view .LVU616
 1847 036e 002B     		cmp	r3, #0
 1848 0370 40F0D480 		bne	.L184
 1849              	.L143:
1162:Lib/ssc/src/ecatslv.c ****     {
1163:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1164:Lib/ssc/src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_OUT);
1165:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1166:Lib/ssc/src/ecatslv.c ****     }
1167:Lib/ssc/src/ecatslv.c **** 
1168:Lib/ssc/src/ecatslv.c ****     if(nPdInputSize > 0)
 1850              		.loc 1 1168 5 is_stmt 1 view .LVU617
 1851              		.loc 1 1168 21 is_stmt 0 view .LVU618
 1852 0374 304B     		ldr	r3, .L188+4
 1853 0376 1B88     		ldrh	r3, [r3]
 1854              		.loc 1 1168 7 view .LVU619
 1855 0378 002B     		cmp	r3, #0
 1856 037a 40F0D380 		bne	.L185
 1857              	.L144:
1169:Lib/ssc/src/ecatslv.c ****     {
1170:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1171:Lib/ssc/src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_IN);
1172:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1173:Lib/ssc/src/ecatslv.c ****     }
1174:Lib/ssc/src/ecatslv.c **** 
1175:Lib/ssc/src/ecatslv.c ****     /*write initial input data*/
1176:Lib/ssc/src/ecatslv.c ****     PDO_InputMapping();
 1858              		.loc 1 1176 5 is_stmt 1 view .LVU620
 1859 037e FFF7FEFF 		bl	PDO_InputMapping
 1860              	.LVL152:
1177:Lib/ssc/src/ecatslv.c **** 
1178:Lib/ssc/src/ecatslv.c ****     return ALSTATUSCODE_NOERROR;
 1861              		.loc 1 1178 5 view .LVU621
 1862              		.loc 1 1178 12 is_stmt 0 view .LVU622
 1863 0382 0020     		movs	r0, #0
 1864              	.LVL153:
 1865              	.L100:
1179:Lib/ssc/src/ecatslv.c **** }
 1866              		.loc 1 1179 1 view .LVU623
 1867 0384 05B0     		add	sp, sp, #20
 1868              		.cfi_remember_state
 1869              		.cfi_def_cfa_offset 20
 1870              		@ sp needed
 1871 0386 F0BD     		pop	{r4, r5, r6, r7, pc}
 1872              	.LVL154:
 1873              	.L114:
 1874              		.cfi_restore_state
 865:Lib/ssc/src/ecatslv.c ****             {
 1875              		.loc 1 865 18 is_stmt 1 view .LVU624
 865:Lib/ssc/src/ecatslv.c ****             {
 1876              		.loc 1 865 35 is_stmt 0 view .LVU625
 1877 0388 2B4B     		ldr	r3, .L188+4
ARM GAS  /tmp/ccJBQgIh.s 			page 85


 1878 038a 1B88     		ldrh	r3, [r3]
 865:Lib/ssc/src/ecatslv.c ****             {
 1879              		.loc 1 865 21 view .LVU626
 1880 038c 23B1     		cbz	r3, .L170
 867:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_SM_SYNCHRON;
 1881              		.loc 1 867 32 view .LVU627
 1882 038e 1346     		mov	r3, r2
 868:Lib/ssc/src/ecatslv.c ****             }
 1883              		.loc 1 868 32 view .LVU628
 1884 0390 0121     		movs	r1, #1
 1885              	.LVL155:
 868:Lib/ssc/src/ecatslv.c ****             }
 1886              		.loc 1 868 32 view .LVU629
 1887 0392 3AE7     		b	.L115
 1888              	.LVL156:
 1889              	.L169:
 858:Lib/ssc/src/ecatslv.c ****                 
 1890              		.loc 1 858 32 view .LVU630
 1891 0394 0123     		movs	r3, #1
 1892 0396 38E7     		b	.L115
 1893              	.LVL157:
 1894              	.L170:
 873:Lib/ssc/src/ecatslv.c ****             }
 1895              		.loc 1 873 32 view .LVU631
 1896 0398 1946     		mov	r1, r3
 1897              	.LVL158:
 873:Lib/ssc/src/ecatslv.c ****             }
 1898              		.loc 1 873 32 view .LVU632
 1899 039a 36E7     		b	.L115
 1900              	.LVL159:
 1901              	.L113:
 880:Lib/ssc/src/ecatslv.c ****             {
 1902              		.loc 1 880 13 is_stmt 1 view .LVU633
 880:Lib/ssc/src/ecatslv.c ****             {
 1903              		.loc 1 880 31 is_stmt 0 view .LVU634
 1904 039c 254B     		ldr	r3, .L188
 1905              	.LVL160:
 880:Lib/ssc/src/ecatslv.c ****             {
 1906              		.loc 1 880 31 view .LVU635
 1907 039e 1B88     		ldrh	r3, [r3]
 880:Lib/ssc/src/ecatslv.c ****             {
 1908              		.loc 1 880 16 view .LVU636
 1909 03a0 0BB1     		cbz	r3, .L116
 883:Lib/ssc/src/ecatslv.c ****                 {
 1910              		.loc 1 883 17 is_stmt 1 view .LVU637
 883:Lib/ssc/src/ecatslv.c ****                 {
 1911              		.loc 1 883 20 is_stmt 0 view .LVU638
 1912 03a2 56B1     		cbz	r6, .L171
 885:Lib/ssc/src/ecatslv.c ****                 }
 1913              		.loc 1 885 36 view .LVU639
 1914 03a4 0323     		movs	r3, #3
 1915              	.L116:
 1916              	.LVL161:
 898:Lib/ssc/src/ecatslv.c ****             {
 1917              		.loc 1 898 13 is_stmt 1 view .LVU640
 898:Lib/ssc/src/ecatslv.c ****             {
 1918              		.loc 1 898 30 is_stmt 0 view .LVU641
ARM GAS  /tmp/ccJBQgIh.s 			page 86


 1919 03a6 2449     		ldr	r1, .L188+4
 1920              	.LVL162:
 898:Lib/ssc/src/ecatslv.c ****             {
 1921              		.loc 1 898 30 view .LVU642
 1922 03a8 0988     		ldrh	r1, [r1]
 898:Lib/ssc/src/ecatslv.c ****             {
 1923              		.loc 1 898 16 view .LVU643
 1924 03aa 0029     		cmp	r1, #0
 1925 03ac 3FF430AF 		beq	.L111
 900:Lib/ssc/src/ecatslv.c ****                 {
 1926              		.loc 1 900 17 is_stmt 1 view .LVU644
 900:Lib/ssc/src/ecatslv.c ****                 {
 1927              		.loc 1 900 20 is_stmt 0 view .LVU645
 1928 03b0 12F4806F 		tst	r2, #1024
 1929 03b4 03D0     		beq	.L172
 903:Lib/ssc/src/ecatslv.c ****                 }
 1930              		.loc 1 903 36 view .LVU646
 1931 03b6 0321     		movs	r1, #3
 1932 03b8 2AE7     		b	.L111
 1933              	.LVL163:
 1934              	.L171:
 889:Lib/ssc/src/ecatslv.c ****                 }
 1935              		.loc 1 889 36 view .LVU647
 1936 03ba 0223     		movs	r3, #2
 1937 03bc F3E7     		b	.L116
 1938              	.LVL164:
 1939              	.L172:
 908:Lib/ssc/src/ecatslv.c ****                 }
 1940              		.loc 1 908 36 view .LVU648
 1941 03be 0221     		movs	r1, #2
 1942 03c0 26E7     		b	.L111
 1943              	.LVL165:
 1944              	.L179:
 921:Lib/ssc/src/ecatslv.c **** 
 1945              		.loc 1 921 9 is_stmt 1 view .LVU649
 921:Lib/ssc/src/ecatslv.c **** 
 1946              		.loc 1 921 42 is_stmt 0 view .LVU650
 1947 03c2 019A     		ldr	r2, [sp, #4]
 1948 03c4 1D4C     		ldr	r4, .L188+8
 1949 03c6 6262     		str	r2, [r4, #36]
 924:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1950              		.loc 1 924 9 is_stmt 1 view .LVU651
 924:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1951              		.loc 1 924 41 is_stmt 0 view .LVU652
 1952 03c8 214C     		ldr	r4, .L188+28
 1953 03ca 6262     		str	r2, [r4, #36]
 1954 03cc 26E7     		b	.L118
 1955              	.L180:
 929:Lib/ssc/src/ecatslv.c **** 
 1956              		.loc 1 929 9 is_stmt 1 view .LVU653
 929:Lib/ssc/src/ecatslv.c **** 
 1957              		.loc 1 929 42 is_stmt 0 view .LVU654
 1958 03ce 019A     		ldr	r2, [sp, #4]
 1959 03d0 1A4C     		ldr	r4, .L188+8
 1960 03d2 6262     		str	r2, [r4, #36]
 932:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1961              		.loc 1 932 9 is_stmt 1 view .LVU655
ARM GAS  /tmp/ccJBQgIh.s 			page 87


 932:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1962              		.loc 1 932 41 is_stmt 0 view .LVU656
 1963 03d4 92B2     		uxth	r2, r2
 1964 03d6 1E4C     		ldr	r4, .L188+28
 1965 03d8 6262     		str	r2, [r4, #36]
 1966 03da 1FE7     		b	.L118
 1967              	.L123:
 960:Lib/ssc/src/ecatslv.c ****             {
 1968              		.loc 1 960 18 is_stmt 1 view .LVU657
 960:Lib/ssc/src/ecatslv.c ****             {
 1969              		.loc 1 960 34 is_stmt 0 view .LVU658
 1970 03dc 164A     		ldr	r2, .L188+4
 1971 03de 1288     		ldrh	r2, [r2]
 960:Lib/ssc/src/ecatslv.c ****             {
 1972              		.loc 1 960 20 view .LVU659
 1973 03e0 002A     		cmp	r2, #0
 1974 03e2 3FF435AF 		beq	.L122
 962:Lib/ssc/src/ecatslv.c ****             }
 1975              		.loc 1 962 17 is_stmt 1 view .LVU660
 962:Lib/ssc/src/ecatslv.c ****             }
 1976              		.loc 1 962 32 is_stmt 0 view .LVU661
 1977 03e6 184A     		ldr	r2, .L188+20
 1978 03e8 4FF40064 		mov	r4, #2048
 1979 03ec 1480     		strh	r4, [r2]	@ movhi
 1980 03ee 2FE7     		b	.L122
 1981              	.L181:
 995:Lib/ssc/src/ecatslv.c ****         {
 1982              		.loc 1 995 9 is_stmt 1 view .LVU662
 995:Lib/ssc/src/ecatslv.c ****         {
 1983              		.loc 1 995 27 is_stmt 0 view .LVU663
 1984 03f0 019B     		ldr	r3, [sp, #4]
 1985              	.LVL166:
 995:Lib/ssc/src/ecatslv.c ****         {
 1986              		.loc 1 995 11 view .LVU664
 1987 03f2 9842     		cmp	r0, r3
 1988 03f4 0AD3     		bcc	.L127
 997:Lib/ssc/src/ecatslv.c ****             
 1989              		.loc 1 997 13 is_stmt 1 view .LVU665
 997:Lib/ssc/src/ecatslv.c ****             
 1990              		.loc 1 997 55 is_stmt 0 view .LVU666
 1991 03f6 B0FBF3F2 		udiv	r2, r0, r3
 997:Lib/ssc/src/ecatslv.c ****             
 1992              		.loc 1 997 31 view .LVU667
 1993 03fa 91B2     		uxth	r1, r2
 1994              	.LVL167:
 997:Lib/ssc/src/ecatslv.c ****             
 1995              		.loc 1 997 29 view .LVU668
 1996 03fc 174C     		ldr	r4, .L188+40
 1997 03fe 2180     		strh	r1, [r4]	@ movhi
 999:Lib/ssc/src/ecatslv.c ****             {
 1998              		.loc 1 999 13 is_stmt 1 view .LVU669
 999:Lib/ssc/src/ecatslv.c ****             {
 1999              		.loc 1 999 32 is_stmt 0 view .LVU670
 2000 0400 03FB1202 		mls	r2, r3, r2, r0
 999:Lib/ssc/src/ecatslv.c ****             {
 2001              		.loc 1 999 15 view .LVU671
 2002 0404 2AB9     		cbnz	r2, .L128
ARM GAS  /tmp/ccJBQgIh.s 			page 88


1002:Lib/ssc/src/ecatslv.c ****         }
 2003              		.loc 1 1002 17 is_stmt 1 view .LVU672
1002:Lib/ssc/src/ecatslv.c ****         }
 2004              		.loc 1 1002 33 is_stmt 0 view .LVU673
 2005 0406 0131     		adds	r1, r1, #1
 2006 0408 2180     		strh	r1, [r4]	@ movhi
 2007 040a 02E0     		b	.L128
 2008              	.LVL168:
 2009              	.L127:
1007:Lib/ssc/src/ecatslv.c ****         }
 2010              		.loc 1 1007 13 is_stmt 1 view .LVU674
1007:Lib/ssc/src/ecatslv.c ****         }
 2011              		.loc 1 1007 29 is_stmt 0 view .LVU675
 2012 040c 134A     		ldr	r2, .L188+40
 2013 040e 0121     		movs	r1, #1
 2014              	.LVL169:
1007:Lib/ssc/src/ecatslv.c ****         }
 2015              		.loc 1 1007 29 view .LVU676
 2016 0410 1180     		strh	r1, [r2]	@ movhi
 2017              	.L128:
1011:Lib/ssc/src/ecatslv.c **** 
 2018              		.loc 1 1011 9 is_stmt 1 view .LVU677
1011:Lib/ssc/src/ecatslv.c **** 
 2019              		.loc 1 1011 57 is_stmt 0 view .LVU678
 2020 0412 B0FBF3F1 		udiv	r1, r0, r3
1011:Lib/ssc/src/ecatslv.c **** 
 2021              		.loc 1 1011 32 view .LVU679
 2022 0416 8AB2     		uxth	r2, r1
1011:Lib/ssc/src/ecatslv.c **** 
 2023              		.loc 1 1011 30 view .LVU680
 2024 0418 0E4C     		ldr	r4, .L188+32
 2025 041a 2280     		strh	r2, [r4]	@ movhi
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 2026              		.loc 1 1013 9 is_stmt 1 view .LVU681
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 2027              		.loc 1 1013 28 is_stmt 0 view .LVU682
 2028 041c 03FB1100 		mls	r0, r3, r1, r0
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 2029              		.loc 1 1013 11 view .LVU683
 2030 0420 0028     		cmp	r0, #0
 2031 0422 3FF43EAF 		beq	.L129
1014:Lib/ssc/src/ecatslv.c **** 
 2032              		.loc 1 1014 13 is_stmt 1 view .LVU684
1014:Lib/ssc/src/ecatslv.c **** 
 2033              		.loc 1 1014 33 is_stmt 0 view .LVU685
 2034 0426 0132     		adds	r2, r2, #1
 2035 0428 2280     		strh	r2, [r4]	@ movhi
 2036 042a 3AE7     		b	.L129
 2037              	.LVL170:
 2038              	.L182:
1022:Lib/ssc/src/ecatslv.c ****         }   
 2039              		.loc 1 1022 13 is_stmt 1 view .LVU686
1022:Lib/ssc/src/ecatslv.c ****         }   
 2040              		.loc 1 1022 29 is_stmt 0 view .LVU687
 2041 042c 0B4B     		ldr	r3, .L188+40
 2042              	.LVL171:
1022:Lib/ssc/src/ecatslv.c ****         }   
ARM GAS  /tmp/ccJBQgIh.s 			page 89


 2043              		.loc 1 1022 29 view .LVU688
 2044 042e 0122     		movs	r2, #1
 2045 0430 1A80     		strh	r2, [r3]	@ movhi
 2046 0432 31E7     		b	.L130
 2047              	.L189:
 2048              		.align	2
 2049              	.L188:
 2050 0434 00000000 		.word	.LANCHOR7
 2051 0438 00000000 		.word	.LANCHOR4
 2052 043c 00000000 		.word	sSyncManOutPar
 2053 0440 00000000 		.word	.LANCHOR3
 2054 0444 00000000 		.word	.LANCHOR14
 2055 0448 00000000 		.word	.LANCHOR12
 2056 044c 00000000 		.word	.LANCHOR15
 2057 0450 00000000 		.word	sSyncManInPar
 2058 0454 00000000 		.word	.LANCHOR16
 2059 0458 00000000 		.word	.LANCHOR17
 2060 045c 00000000 		.word	.LANCHOR18
 2061 0460 00000000 		.word	.LANCHOR19
 2062 0464 00000000 		.word	sCycleDiag
 2063 0468 00000000 		.word	.LANCHOR20
 2064 046c 00000000 		.word	.LANCHOR9
 2065 0470 00000000 		.word	.LANCHOR21
 2066 0474 00000000 		.word	.LANCHOR22
 2067 0478 00000000 		.word	.LANCHOR23
 2068 047c 00000000 		.word	.LANCHOR24
 2069 0480 00000000 		.word	.LANCHOR25
 2070 0484 00000000 		.word	.LANCHOR26
 2071 0488 00000000 		.word	.LANCHOR27
 2072 048c C55A7C0A 		.word	175921861
 2073 0490 1FA10700 		.word	499999
 2074              	.LVL172:
 2075              	.L183:
1050:Lib/ssc/src/ecatslv.c ****     wdiv = SWAPWORD(wdiv);
 2076              		.loc 1 1050 5 is_stmt 1 view .LVU689
 2077 0494 0222     		movs	r2, #2
 2078 0496 4FF48061 		mov	r1, #1024
 2079 049a 03A8     		add	r0, sp, #12
 2080 049c FFF7FEFF 		bl	HW_EscRead
 2081              	.LVL173:
1051:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
 2082              		.loc 1 1051 5 view .LVU690
1051:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
 2083              		.loc 1 1051 10 is_stmt 0 view .LVU691
 2084 04a0 BDF80C20 		ldrh	r2, [sp, #12]
1052:Lib/ssc/src/ecatslv.c ****         {
 2085              		.loc 1 1052 9 is_stmt 1 view .LVU692
1052:Lib/ssc/src/ecatslv.c ****         {
 2086              		.loc 1 1052 12 is_stmt 0 view .LVU693
 2087 04a4 7AB1     		cbz	r2, .L132
 2088              	.LBB21:
1055:Lib/ssc/src/ecatslv.c **** 
 2089              		.loc 1 1055 13 is_stmt 1 view .LVU694
1055:Lib/ssc/src/ecatslv.c **** 
 2090              		.loc 1 1055 28 is_stmt 0 view .LVU695
 2091 04a6 0232     		adds	r2, r2, #2
 2092              	.LVL174:
ARM GAS  /tmp/ccJBQgIh.s 			page 90


1057:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
 2093              		.loc 1 1057 13 is_stmt 1 view .LVU696
1057:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
 2094              		.loc 1 1057 15 is_stmt 0 view .LVU697
 2095 04a8 BDF80A10 		ldrh	r1, [sp, #10]
 2096              	.LVL175:
1060:Lib/ssc/src/ecatslv.c ****             d /= 25000;
 2097              		.loc 1 1060 13 is_stmt 1 view .LVU698
1060:Lib/ssc/src/ecatslv.c ****             d /= 25000;
 2098              		.loc 1 1060 15 is_stmt 0 view .LVU699
 2099 04ac 46F2A713 		movw	r3, #24999
 2100 04b0 02FB0133 		mla	r3, r2, r1, r3
 2101              	.LVL176:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2102              		.loc 1 1061 13 is_stmt 1 view .LVU700
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2103              		.loc 1 1061 15 is_stmt 0 view .LVU701
 2104 04b4 DB08     		lsrs	r3, r3, #3
 2105              	.LVL177:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2106              		.loc 1 1061 15 view .LVU702
 2107 04b6 314A     		ldr	r2, .L190
 2108              	.LVL178:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2109              		.loc 1 1061 15 view .LVU703
 2110 04b8 A2FB0323 		umull	r2, r3, r2, r3
 2111              	.LVL179:
1062:Lib/ssc/src/ecatslv.c ****         }
 2112              		.loc 1 1062 13 is_stmt 1 view .LVU704
1062:Lib/ssc/src/ecatslv.c ****         }
 2113              		.loc 1 1062 27 is_stmt 0 view .LVU705
 2114 04bc C3F30F23 		ubfx	r3, r3, #8, #16
 2115              	.LVL180:
1062:Lib/ssc/src/ecatslv.c ****         }
 2116              		.loc 1 1062 25 view .LVU706
 2117 04c0 2F4A     		ldr	r2, .L190+4
 2118 04c2 1380     		strh	r3, [r2]	@ movhi
 2119              	.LBE21:
 2120 04c4 04E7     		b	.L133
 2121              	.LVL181:
 2122              	.L132:
1066:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
 2123              		.loc 1 1066 13 is_stmt 1 view .LVU707
1066:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
 2124              		.loc 1 1066 16 is_stmt 0 view .LVU708
 2125 04c6 0023     		movs	r3, #0
 2126 04c8 ADF80A30 		strh	r3, [sp, #10]	@ movhi
1068:Lib/ssc/src/ecatslv.c ****         }
 2127              		.loc 1 1068 13 is_stmt 1 view .LVU709
1068:Lib/ssc/src/ecatslv.c ****         }
 2128              		.loc 1 1068 25 is_stmt 0 view .LVU710
 2129 04cc 2C4A     		ldr	r2, .L190+4
 2130 04ce 1380     		strh	r3, [r2]	@ movhi
 2131 04d0 FEE6     		b	.L133
 2132              	.LVL182:
 2133              	.L139:
 2134              	.LBB22:
ARM GAS  /tmp/ccJBQgIh.s 			page 91


1125:Lib/ssc/src/ecatslv.c ****             }
 2135              		.loc 1 1125 17 is_stmt 1 view .LVU711
1125:Lib/ssc/src/ecatslv.c ****             }
 2136              		.loc 1 1125 32 is_stmt 0 view .LVU712
 2137 04d2 5200     		lsls	r2, r2, #1
 2138              	.LVL183:
1125:Lib/ssc/src/ecatslv.c ****             }
 2139              		.loc 1 1125 32 view .LVU713
 2140 04d4 92B2     		uxth	r2, r2
1125:Lib/ssc/src/ecatslv.c ****             }
 2141              		.loc 1 1125 30 view .LVU714
 2142 04d6 2B48     		ldr	r0, .L190+8
 2143 04d8 A0FB0202 		umull	r0, r2, r0, r2
 2144 04dc D208     		lsrs	r2, r2, #3
 2145 04de 2A48     		ldr	r0, .L190+12
 2146 04e0 0280     		strh	r2, [r0]	@ movhi
 2147 04e2 37E7     		b	.L138
 2148              	.LVL184:
 2149              	.L140:
1125:Lib/ssc/src/ecatslv.c ****             }
 2150              		.loc 1 1125 30 view .LVU715
 2151              	.LBE22:
 2152              	.LBB23:
1140:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
 2153              		.loc 1 1140 11 is_stmt 1 view .LVU716
1140:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
 2154              		.loc 1 1140 18 is_stmt 0 view .LVU717
 2155 04e4 5309     		lsrs	r3, r2, #5
 2156 04e6 2949     		ldr	r1, .L190+16
 2157 04e8 A1FB0313 		umull	r1, r3, r1, r3
 2158 04ec DB09     		lsrs	r3, r3, #7
 2159              	.LVL185:
1141:Lib/ssc/src/ecatslv.c **** 										{
 2160              		.loc 1 1141 11 is_stmt 1 view .LVU718
1141:Lib/ssc/src/ecatslv.c **** 										{
 2161              		.loc 1 1141 13 is_stmt 0 view .LVU719
 2162 04ee 2849     		ldr	r1, .L190+20
 2163 04f0 8A42     		cmp	r2, r1
 2164 04f2 0AD8     		bhi	.L141
1144:Lib/ssc/src/ecatslv.c **** 										}
 2165              		.loc 1 1144 13 is_stmt 1 view .LVU720
1144:Lib/ssc/src/ecatslv.c **** 										}
 2166              		.loc 1 1144 26 is_stmt 0 view .LVU721
 2167 04f4 274B     		ldr	r3, .L190+24
 2168              	.LVL186:
1144:Lib/ssc/src/ecatslv.c **** 										}
 2169              		.loc 1 1144 26 view .LVU722
 2170 04f6 0122     		movs	r2, #1
 2171              	.LVL187:
1144:Lib/ssc/src/ecatslv.c **** 										}
 2172              		.loc 1 1144 26 view .LVU723
 2173 04f8 1A80     		strh	r2, [r3]	@ movhi
 2174              	.L142:
1152:Lib/ssc/src/ecatslv.c **** 						}
 2175              		.loc 1 1152 14 is_stmt 1 view .LVU724
1152:Lib/ssc/src/ecatslv.c **** 						}
 2176              		.loc 1 1152 27 is_stmt 0 view .LVU725
ARM GAS  /tmp/ccJBQgIh.s 			page 92


 2177 04fa 264A     		ldr	r2, .L190+24
 2178 04fc 224B     		ldr	r3, .L190+12
 2179 04fe 1988     		ldrh	r1, [r3]
 2180 0500 1388     		ldrh	r3, [r2]
 2181 0502 03EB5103 		add	r3, r3, r1, lsr #1
 2182 0506 1380     		strh	r3, [r2]	@ movhi
 2183 0508 2FE7     		b	.L137
 2184              	.LVL188:
 2185              	.L141:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2186              		.loc 1 1148 13 is_stmt 1 view .LVU726
1148:Lib/ssc/src/ecatslv.c **** 										}
 2187              		.loc 1 1148 28 is_stmt 0 view .LVU727
 2188 050a 5B00     		lsls	r3, r3, #1
 2189              	.LVL189:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2190              		.loc 1 1148 28 view .LVU728
 2191 050c 9BB2     		uxth	r3, r3
1148:Lib/ssc/src/ecatslv.c **** 										}
 2192              		.loc 1 1148 26 view .LVU729
 2193 050e 1D4A     		ldr	r2, .L190+8
 2194              	.LVL190:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2195              		.loc 1 1148 26 view .LVU730
 2196 0510 A2FB0323 		umull	r2, r3, r2, r3
 2197 0514 DB08     		lsrs	r3, r3, #3
 2198 0516 1F4A     		ldr	r2, .L190+24
 2199 0518 1380     		strh	r3, [r2]	@ movhi
 2200 051a EEE7     		b	.L142
 2201              	.LVL191:
 2202              	.L184:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2203              		.loc 1 1148 26 view .LVU731
 2204              	.LBE23:
1164:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2205              		.loc 1 1164 9 is_stmt 1 view .LVU732
 2206 051c 0220     		movs	r0, #2
 2207 051e FFF7FEFF 		bl	EnableSyncManChannel
 2208              	.LVL192:
 2209 0522 27E7     		b	.L143
 2210              	.L185:
1171:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2211              		.loc 1 1171 9 view .LVU733
 2212 0524 0320     		movs	r0, #3
 2213 0526 FFF7FEFF 		bl	EnableSyncManChannel
 2214              	.LVL193:
 2215 052a 28E7     		b	.L144
 2216              	.LVL194:
 2217              	.L147:
 711:Lib/ssc/src/ecatslv.c ****     }
 2218              		.loc 1 711 16 is_stmt 0 view .LVU734
 2219 052c 1E20     		movs	r0, #30
 2220 052e 29E7     		b	.L100
 2221              	.L148:
 2222 0530 1E20     		movs	r0, #30
 2223 0532 27E7     		b	.L100
 2224              	.LVL195:
ARM GAS  /tmp/ccJBQgIh.s 			page 93


 2225              	.L149:
 723:Lib/ssc/src/ecatslv.c ****     }
 2226              		.loc 1 723 16 view .LVU735
 2227 0534 1D20     		movs	r0, #29
 2228 0536 25E7     		b	.L100
 2229              	.L150:
 2230 0538 1D20     		movs	r0, #29
 2231 053a 23E7     		b	.L100
 2232              	.L151:
 2233 053c 1D20     		movs	r0, #29
 2234 053e 21E7     		b	.L100
 2235              	.LVL196:
 2236              	.L153:
 759:Lib/ssc/src/ecatslv.c ****         }
 2237              		.loc 1 759 20 view .LVU736
 2238 0540 3020     		movs	r0, #48
 2239 0542 1FE7     		b	.L100
 2240              	.L154:
 766:Lib/ssc/src/ecatslv.c ****         }
 2241              		.loc 1 766 20 view .LVU737
 2242 0544 3020     		movs	r0, #48
 2243 0546 1DE7     		b	.L100
 2244              	.L155:
 777:Lib/ssc/src/ecatslv.c ****     }
 2245              		.loc 1 777 24 view .LVU738
 2246 0548 3020     		movs	r0, #48
 2247 054a 1BE7     		b	.L100
 2248              	.L156:
 2249 054c 3020     		movs	r0, #48
 2250 054e 19E7     		b	.L100
 2251              	.L157:
 783:Lib/ssc/src/ecatslv.c **** 
 2252              		.loc 1 783 20 view .LVU739
 2253 0550 3620     		movs	r0, #54
 2254 0552 17E7     		b	.L100
 2255              	.LVL197:
 2256              	.L161:
 801:Lib/ssc/src/ecatslv.c ****         }
 2257              		.loc 1 801 21 view .LVU740
 2258 0554 3020     		movs	r0, #48
 2259 0556 15E7     		b	.L100
 2260              	.LVL198:
 2261              	.L162:
 817:Lib/ssc/src/ecatslv.c ****             }
 2262              		.loc 1 817 24 view .LVU741
 2263 0558 3020     		movs	r0, #48
 2264 055a 13E7     		b	.L100
 2265              	.L163:
 2266 055c 3020     		movs	r0, #48
 2267 055e 11E7     		b	.L100
 2268              	.L165:
 830:Lib/ssc/src/ecatslv.c ****                 }
 2269              		.loc 1 830 28 view .LVU742
 2270 0560 3020     		movs	r0, #48
 2271 0562 0FE7     		b	.L100
 2272              	.L166:
 2273 0564 3020     		movs	r0, #48
ARM GAS  /tmp/ccJBQgIh.s 			page 94


 2274 0566 0DE7     		b	.L100
 2275              	.L167:
 842:Lib/ssc/src/ecatslv.c ****                 }
 2276              		.loc 1 842 28 view .LVU743
 2277 0568 3020     		movs	r0, #48
 2278 056a 0BE7     		b	.L100
 2279              	.L173:
 942:Lib/ssc/src/ecatslv.c ****         }
 2280              		.loc 1 942 24 view .LVU744
 2281 056c 2920     		movs	r0, #41
 2282 056e 09E7     		b	.L100
 2283              	.L174:
 2284 0570 2920     		movs	r0, #41
 2285 0572 07E7     		b	.L100
 2286              	.LVL199:
 2287              	.L175:
1082:Lib/ssc/src/ecatslv.c ****     }
 2288              		.loc 1 1082 16 view .LVU745
 2289 0574 1F20     		movs	r0, #31
 2290 0576 05E7     		b	.L100
 2291              	.L176:
 2292 0578 1F20     		movs	r0, #31
 2293 057a 03E7     		b	.L100
 2294              	.L191:
 2295              		.align	2
 2296              	.L190:
 2297 057c 89B5F814 		.word	351843721
 2298 0580 00000000 		.word	.LANCHOR20
 2299 0584 CDCCCCCC 		.word	-858993459
 2300 0588 00000000 		.word	.LANCHOR21
 2301 058c C55A7C0A 		.word	175921861
 2302 0590 1FA10700 		.word	499999
 2303 0594 00000000 		.word	.LANCHOR24
 2304              		.cfi_endproc
 2305              	.LFE130:
 2307              		.section	.text.StartOutputHandler,"ax",%progbits
 2308              		.align	1
 2309              		.global	StartOutputHandler
 2310              		.syntax unified
 2311              		.thumb
 2312              		.thumb_func
 2314              	StartOutputHandler:
 2315              	.LFB131:
1180:Lib/ssc/src/ecatslv.c **** 
1181:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1182:Lib/ssc/src/ecatslv.c **** /**
1183:Lib/ssc/src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
1184:Lib/ssc/src/ecatslv.c **** 
1185:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from SAFEOP to OP.
1186:Lib/ssc/src/ecatslv.c ****  \brief  It will be checked if outputs had to be received before switching to OP
1187:Lib/ssc/src/ecatslv.c ****  \brief  and the state transition would be refused if outputs are missing
1188:Lib/ssc/src/ecatslv.c **** 
1189:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1190:Lib/ssc/src/ecatslv.c **** 
1191:Lib/ssc/src/ecatslv.c **** UINT16 StartOutputHandler(void)
1192:Lib/ssc/src/ecatslv.c **** {
 2316              		.loc 1 1192 1 is_stmt 1 view -0
ARM GAS  /tmp/ccJBQgIh.s 			page 95


 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              		@ link register save eliminated.
1193:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM6*/
1194:Lib/ssc/src/ecatslv.c ****     /* by default the SO transition should be completed in AlControlRes().
1195:Lib/ssc/src/ecatslv.c ****        required to support also masters which starts to send process data after the SO transition w
1196:Lib/ssc/src/ecatslv.c ****        (if the master don't send process data within "SAFEOP2OPTIMEOUT" the transition is rejected)
1197:Lib/ssc/src/ecatslv.c ****     UINT16 result = NOERROR_INWORK;
 2321              		.loc 1 1197 5 view .LVU747
 2322              	.LVL200:
1198:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM6*/
1199:Lib/ssc/src/ecatslv.c ****     if(bLocalErrorFlag)
 2323              		.loc 1 1199 5 view .LVU748
 2324              		.loc 1 1199 8 is_stmt 0 view .LVU749
 2325 0000 094B     		ldr	r3, .L197
 2326 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2327              		.loc 1 1199 7 view .LVU750
 2328 0004 53B9     		cbnz	r3, .L196
1200:Lib/ssc/src/ecatslv.c ****     {
1201:Lib/ssc/src/ecatslv.c ****         /*Local error still exists => skip state request to OP and response with "u16LocalErrorCode
1202:Lib/ssc/src/ecatslv.c ****         return u16LocalErrorCode;
1203:Lib/ssc/src/ecatslv.c ****     }
1204:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1205:Lib/ssc/src/ecatslv.c **** 
1206:Lib/ssc/src/ecatslv.c **** 
1207:Lib/ssc/src/ecatslv.c ****     /*DC synchronisation is active wait until pll is valid*/
1208:Lib/ssc/src/ecatslv.c ****     if(bDcSyncActive)
 2329              		.loc 1 1208 5 is_stmt 1 view .LVU751
 2330              		.loc 1 1208 8 is_stmt 0 view .LVU752
 2331 0006 094B     		ldr	r3, .L197+4
 2332 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2333              		.loc 1 1208 7 view .LVU753
 2334 000a 53B1     		cbz	r3, .L195
1209:Lib/ssc/src/ecatslv.c ****     {
1210:Lib/ssc/src/ecatslv.c ****         i16WaitForPllRunningTimeout = 200;
 2335              		.loc 1 1210 9 is_stmt 1 view .LVU754
 2336              		.loc 1 1210 37 is_stmt 0 view .LVU755
 2337 000c 084B     		ldr	r3, .L197+8
 2338 000e C822     		movs	r2, #200
 2339 0010 1A80     		strh	r2, [r3]	@ movhi
1211:Lib/ssc/src/ecatslv.c ****         i16WaitForPllRunningCnt = 0;
 2340              		.loc 1 1211 9 is_stmt 1 view .LVU756
 2341              		.loc 1 1211 33 is_stmt 0 view .LVU757
 2342 0012 084B     		ldr	r3, .L197+12
 2343 0014 0022     		movs	r2, #0
 2344 0016 1A80     		strh	r2, [r3]	@ movhi
1212:Lib/ssc/src/ecatslv.c ****     }
1213:Lib/ssc/src/ecatslv.c **** 
1214:Lib/ssc/src/ecatslv.c **** 
1215:Lib/ssc/src/ecatslv.c ****     return result;
 2345              		.loc 1 1215 12 view .LVU758
 2346 0018 FF20     		movs	r0, #255
 2347 001a 7047     		bx	lr
 2348              	.L196:
1202:Lib/ssc/src/ecatslv.c ****     }
 2349              		.loc 1 1202 9 is_stmt 1 view .LVU759
ARM GAS  /tmp/ccJBQgIh.s 			page 96


1202:Lib/ssc/src/ecatslv.c ****     }
 2350              		.loc 1 1202 16 is_stmt 0 view .LVU760
 2351 001c 064B     		ldr	r3, .L197+16
 2352 001e 1888     		ldrh	r0, [r3]
 2353 0020 7047     		bx	lr
 2354              	.L195:
 2355              		.loc 1 1215 12 view .LVU761
 2356 0022 FF20     		movs	r0, #255
1216:Lib/ssc/src/ecatslv.c **** }
 2357              		.loc 1 1216 1 view .LVU762
 2358 0024 7047     		bx	lr
 2359              	.L198:
 2360 0026 00BF     		.align	2
 2361              	.L197:
 2362 0028 00000000 		.word	.LANCHOR28
 2363 002c 00000000 		.word	.LANCHOR15
 2364 0030 00000000 		.word	.LANCHOR27
 2365 0034 00000000 		.word	.LANCHOR30
 2366 0038 00000000 		.word	.LANCHOR29
 2367              		.cfi_endproc
 2368              	.LFE131:
 2370              		.section	.text.StopOutputHandler,"ax",%progbits
 2371              		.align	1
 2372              		.global	StopOutputHandler
 2373              		.syntax unified
 2374              		.thumb
 2375              		.thumb_func
 2377              	StopOutputHandler:
 2378              	.LFB132:
1217:Lib/ssc/src/ecatslv.c **** 
1218:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1219:Lib/ssc/src/ecatslv.c **** /**
1220:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from OP to SAFEOP
1221:Lib/ssc/src/ecatslv.c ****  \brief  the outputs can be set to an application specific safe state,
1222:Lib/ssc/src/ecatslv.c ****  \brief  the state transition can be delayed by returning NOERROR_INWORK
1223:Lib/ssc/src/ecatslv.c **** 
1224:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1225:Lib/ssc/src/ecatslv.c **** 
1226:Lib/ssc/src/ecatslv.c **** void StopOutputHandler(void)
1227:Lib/ssc/src/ecatslv.c **** {
 2379              		.loc 1 1227 1 is_stmt 1 view -0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 0
 2382              		@ frame_needed = 0, uses_anonymous_args = 0
 2383              		@ link register save eliminated.
1228:Lib/ssc/src/ecatslv.c ****     /* reset the flags that outputs were received and that the slave is in OP */
1229:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2384              		.loc 1 1229 5 view .LVU764
 2385              		.loc 1 1229 31 is_stmt 0 view .LVU765
 2386 0000 0023     		movs	r3, #0
 2387 0002 024A     		ldr	r2, .L200
 2388 0004 1370     		strb	r3, [r2]
1230:Lib/ssc/src/ecatslv.c ****     bEcatOutputUpdateRunning = FALSE;
 2389              		.loc 1 1230 5 is_stmt 1 view .LVU766
 2390              		.loc 1 1230 30 is_stmt 0 view .LVU767
 2391 0006 024A     		ldr	r2, .L200+4
 2392 0008 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccJBQgIh.s 			page 97


1231:Lib/ssc/src/ecatslv.c **** }
 2393              		.loc 1 1231 1 view .LVU768
 2394 000a 7047     		bx	lr
 2395              	.L201:
 2396              		.align	2
 2397              	.L200:
 2398 000c 00000000 		.word	.LANCHOR13
 2399 0010 00000000 		.word	.LANCHOR31
 2400              		.cfi_endproc
 2401              	.LFE132:
 2403              		.section	.text.StopInputHandler,"ax",%progbits
 2404              		.align	1
 2405              		.global	StopInputHandler
 2406              		.syntax unified
 2407              		.thumb
 2408              		.thumb_func
 2410              	StopInputHandler:
 2411              	.LFB133:
1232:Lib/ssc/src/ecatslv.c **** 
1233:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1234:Lib/ssc/src/ecatslv.c **** /**
1235:Lib/ssc/src/ecatslv.c ****   \brief    This function is called in case of the state transition from SAFEOP to PREOP
1236:Lib/ssc/src/ecatslv.c **** 
1237:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1238:Lib/ssc/src/ecatslv.c **** 
1239:Lib/ssc/src/ecatslv.c **** void StopInputHandler(void)
1240:Lib/ssc/src/ecatslv.c **** {
 2412              		.loc 1 1240 1 is_stmt 1 view -0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416 0000 08B5     		push	{r3, lr}
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 3, -8
 2419              		.cfi_offset 14, -4
1241:Lib/ssc/src/ecatslv.c ****     if(nPdOutputSize > 0)
 2420              		.loc 1 1241 5 view .LVU770
 2421              		.loc 1 1241 22 is_stmt 0 view .LVU771
 2422 0002 1D4B     		ldr	r3, .L208
 2423 0004 1B88     		ldrh	r3, [r3]
 2424              		.loc 1 1241 7 view .LVU772
 2425 0006 002B     		cmp	r3, #0
 2426 0008 2ED1     		bne	.L206
 2427              	.L203:
1242:Lib/ssc/src/ecatslv.c ****     {
1243:Lib/ssc/src/ecatslv.c ****         /* disable the Sync Manager Channel 2 (outputs) */
1244:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1245:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_OUT);
1246:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1247:Lib/ssc/src/ecatslv.c ****     }
1248:Lib/ssc/src/ecatslv.c **** 
1249:Lib/ssc/src/ecatslv.c ****     if(nPdInputSize > 0)
 2428              		.loc 1 1249 5 is_stmt 1 view .LVU773
 2429              		.loc 1 1249 21 is_stmt 0 view .LVU774
 2430 000a 1C4B     		ldr	r3, .L208+4
 2431 000c 1B88     		ldrh	r3, [r3]
 2432              		.loc 1 1249 7 view .LVU775
ARM GAS  /tmp/ccJBQgIh.s 			page 98


 2433 000e 002B     		cmp	r3, #0
 2434 0010 2ED1     		bne	.L207
 2435              	.L204:
 2436              	.LBB24:
1250:Lib/ssc/src/ecatslv.c ****     {
1251:Lib/ssc/src/ecatslv.c ****         /*disable Sync Manager 3 (inputs) if no outputs available*/
1252:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1253:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_IN);
1254:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1255:Lib/ssc/src/ecatslv.c ****     }
1256:Lib/ssc/src/ecatslv.c **** 
1257:Lib/ssc/src/ecatslv.c ****     /* reset the events in the AL Event mask register (0x204) */
1258:Lib/ssc/src/ecatslv.c ****     {
1259:Lib/ssc/src/ecatslv.c ****         UINT16 ResetMask = SYNC0_EVENT | SYNC1_EVENT;
 2437              		.loc 1 1259 9 is_stmt 1 view .LVU776
 2438              	.LVL201:
1260:Lib/ssc/src/ecatslv.c ****         ResetMask |= PROCESS_OUTPUT_EVENT;
 2439              		.loc 1 1260 9 view .LVU777
1261:Lib/ssc/src/ecatslv.c ****         ResetMask |= PROCESS_INPUT_EVENT;
 2440              		.loc 1 1261 9 view .LVU778
1262:Lib/ssc/src/ecatslv.c **** 
1263:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1264:Lib/ssc/src/ecatslv.c ****     ResetALEventMask( ~(ResetMask) );
 2441              		.loc 1 1264 5 view .LVU779
 2442 0012 4FF2F330 		movw	r0, #62451
 2443 0016 FFF7FEFF 		bl	ResetALEventMask
 2444              	.LVL202:
 2445              	.LBE24:
1265:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1266:Lib/ssc/src/ecatslv.c ****     }
1267:Lib/ssc/src/ecatslv.c ****     /* reset the flags */
1268:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2446              		.loc 1 1268 5 view .LVU780
 2447              		.loc 1 1268 31 is_stmt 0 view .LVU781
 2448 001a 0023     		movs	r3, #0
 2449 001c 184A     		ldr	r2, .L208+8
 2450 001e 1370     		strb	r3, [r2]
1269:Lib/ssc/src/ecatslv.c ****     bEscIntEnabled = FALSE;
 2451              		.loc 1 1269 5 is_stmt 1 view .LVU782
 2452              		.loc 1 1269 20 is_stmt 0 view .LVU783
 2453 0020 184A     		ldr	r2, .L208+12
 2454 0022 1370     		strb	r3, [r2]
1270:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1271:Lib/ssc/src/ecatslv.c **** 
1272:Lib/ssc/src/ecatslv.c ****     bDcSyncActive = FALSE;
 2455              		.loc 1 1272 5 is_stmt 1 view .LVU784
 2456              		.loc 1 1272 19 is_stmt 0 view .LVU785
 2457 0024 184A     		ldr	r2, .L208+16
 2458 0026 1370     		strb	r3, [r2]
1273:Lib/ssc/src/ecatslv.c ****     bDcRunning = FALSE;
 2459              		.loc 1 1273 5 is_stmt 1 view .LVU786
 2460              		.loc 1 1273 16 is_stmt 0 view .LVU787
 2461 0028 184A     		ldr	r2, .L208+20
 2462 002a 1370     		strb	r3, [r2]
1274:Lib/ssc/src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 2463              		.loc 1 1274 5 is_stmt 1 view .LVU788
 2464              		.loc 1 1274 26 is_stmt 0 view .LVU789
ARM GAS  /tmp/ccJBQgIh.s 			page 99


 2465 002c 184A     		ldr	r2, .L208+24
 2466 002e 1370     		strb	r3, [r2]
1275:Lib/ssc/src/ecatslv.c ****     u16SmSync0Value = 0;
 2467              		.loc 1 1275 5 is_stmt 1 view .LVU790
 2468              		.loc 1 1275 21 is_stmt 0 view .LVU791
 2469 0030 184A     		ldr	r2, .L208+28
 2470 0032 1380     		strh	r3, [r2]	@ movhi
1276:Lib/ssc/src/ecatslv.c ****     u16SmSync0Counter = 0;
 2471              		.loc 1 1276 5 is_stmt 1 view .LVU792
 2472              		.loc 1 1276 23 is_stmt 0 view .LVU793
 2473 0034 184A     		ldr	r2, .L208+32
 2474 0036 1380     		strh	r3, [r2]	@ movhi
1277:Lib/ssc/src/ecatslv.c **** 
1278:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 2475              		.loc 1 1278 5 is_stmt 1 view .LVU794
 2476              		.loc 1 1278 18 is_stmt 0 view .LVU795
 2477 0038 184A     		ldr	r2, .L208+36
 2478 003a 1380     		strh	r3, [r2]	@ movhi
1279:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 2479              		.loc 1 1279 5 is_stmt 1 view .LVU796
 2480              		.loc 1 1279 20 is_stmt 0 view .LVU797
 2481 003c 184A     		ldr	r2, .L208+40
 2482 003e 1380     		strh	r3, [r2]	@ movhi
1280:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 2483              		.loc 1 1280 5 is_stmt 1 view .LVU798
 2484              		.loc 1 1280 20 is_stmt 0 view .LVU799
 2485 0040 184A     		ldr	r2, .L208+44
 2486 0042 1380     		strh	r3, [r2]	@ movhi
1281:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 2487              		.loc 1 1281 5 is_stmt 1 view .LVU800
 2488              		.loc 1 1281 18 is_stmt 0 view .LVU801
 2489 0044 184A     		ldr	r2, .L208+48
 2490 0046 1380     		strh	r3, [r2]	@ movhi
1282:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Value = 0;
 2491              		.loc 1 1282 5 is_stmt 1 view .LVU802
 2492              		.loc 1 1282 26 is_stmt 0 view .LVU803
 2493 0048 184A     		ldr	r2, .L208+52
 2494 004a 1380     		strh	r3, [r2]	@ movhi
1283:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Counter = 0;
 2495              		.loc 1 1283 5 is_stmt 1 view .LVU804
 2496              		.loc 1 1283 28 is_stmt 0 view .LVU805
 2497 004c 184A     		ldr	r2, .L208+56
 2498 004e 1380     		strh	r3, [r2]	@ movhi
1284:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1285:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 2499              		.loc 1 1285 5 is_stmt 1 view .LVU806
 2500              		.loc 1 1285 31 is_stmt 0 view .LVU807
 2501 0050 184A     		ldr	r2, .L208+60
 2502 0052 82F84030 		strb	r3, [r2, #64]
1286:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1287:Lib/ssc/src/ecatslv.c **** 
1288:Lib/ssc/src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 2503              		.loc 1 1288 5 is_stmt 1 view .LVU808
 2504              		.loc 1 1288 33 is_stmt 0 view .LVU809
 2505 0056 184A     		ldr	r2, .L208+64
 2506 0058 1380     		strh	r3, [r2]	@ movhi
1289:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 100


1290:Lib/ssc/src/ecatslv.c ****     bWdTrigger = FALSE;
 2507              		.loc 1 1290 5 is_stmt 1 view .LVU810
 2508              		.loc 1 1290 16 is_stmt 0 view .LVU811
 2509 005a 184A     		ldr	r2, .L208+68
 2510 005c 1370     		strb	r3, [r2]
1291:Lib/ssc/src/ecatslv.c ****     bEcatInputUpdateRunning = FALSE;
 2511              		.loc 1 1291 5 is_stmt 1 view .LVU812
 2512              		.loc 1 1291 29 is_stmt 0 view .LVU813
 2513 005e 184A     		ldr	r2, .L208+72
 2514 0060 1370     		strb	r3, [r2]
1292:Lib/ssc/src/ecatslv.c **** 
1293:Lib/ssc/src/ecatslv.c ****     /*Indicate no user specified Sync mode*/
1294:Lib/ssc/src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2515              		.loc 1 1294 5 is_stmt 1 view .LVU814
 2516              		.loc 1 1294 20 is_stmt 0 view .LVU815
 2517 0062 184A     		ldr	r2, .L208+76
 2518 0064 1370     		strb	r3, [r2]
1295:Lib/ssc/src/ecatslv.c **** }
 2519              		.loc 1 1295 1 view .LVU816
 2520 0066 08BD     		pop	{r3, pc}
 2521              	.LVL203:
 2522              	.L206:
1245:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2523              		.loc 1 1245 9 is_stmt 1 view .LVU817
 2524 0068 0220     		movs	r0, #2
 2525 006a FFF7FEFF 		bl	DisableSyncManChannel
 2526              	.LVL204:
 2527 006e CCE7     		b	.L203
 2528              	.L207:
1253:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2529              		.loc 1 1253 9 view .LVU818
 2530 0070 0320     		movs	r0, #3
 2531 0072 FFF7FEFF 		bl	DisableSyncManChannel
 2532              	.LVL205:
 2533 0076 CCE7     		b	.L204
 2534              	.L209:
 2535              		.align	2
 2536              	.L208:
 2537 0078 00000000 		.word	.LANCHOR7
 2538 007c 00000000 		.word	.LANCHOR4
 2539 0080 00000000 		.word	.LANCHOR13
 2540 0084 00000000 		.word	.LANCHOR14
 2541 0088 00000000 		.word	.LANCHOR15
 2542 008c 00000000 		.word	.LANCHOR25
 2543 0090 00000000 		.word	.LANCHOR26
 2544 0094 00000000 		.word	.LANCHOR18
 2545 0098 00000000 		.word	.LANCHOR19
 2546 009c 00000000 		.word	.LANCHOR21
 2547 00a0 00000000 		.word	.LANCHOR22
 2548 00a4 00000000 		.word	.LANCHOR23
 2549 00a8 00000000 		.word	.LANCHOR24
 2550 00ac 00000000 		.word	.LANCHOR16
 2551 00b0 00000000 		.word	.LANCHOR17
 2552 00b4 00000000 		.word	sSyncManInPar
 2553 00b8 00000000 		.word	.LANCHOR27
 2554 00bc 00000000 		.word	.LANCHOR9
 2555 00c0 00000000 		.word	.LANCHOR32
ARM GAS  /tmp/ccJBQgIh.s 			page 101


 2556 00c4 00000000 		.word	bSyncSetByUser
 2557              		.cfi_endproc
 2558              	.LFE133:
 2560              		.section	.text.BackToInitTransition,"ax",%progbits
 2561              		.align	1
 2562              		.global	BackToInitTransition
 2563              		.syntax unified
 2564              		.thumb
 2565              		.thumb_func
 2567              	BackToInitTransition:
 2568              	.LFB134:
1296:Lib/ssc/src/ecatslv.c **** 
1297:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1298:Lib/ssc/src/ecatslv.c **** /**
1299:Lib/ssc/src/ecatslv.c **** \brief    This function is called when a X to Init transition is completed
1300:Lib/ssc/src/ecatslv.c **** 
1301:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1302:Lib/ssc/src/ecatslv.c **** 
1303:Lib/ssc/src/ecatslv.c **** void BackToInitTransition(void)
1304:Lib/ssc/src/ecatslv.c **** {
 2569              		.loc 1 1304 1 view -0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              		@ link register save eliminated.
1305:Lib/ssc/src/ecatslv.c ****     /* Reset indication that the user has written a sync mode*/
1306:Lib/ssc/src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2574              		.loc 1 1306 5 view .LVU820
 2575              		.loc 1 1306 20 is_stmt 0 view .LVU821
 2576 0000 014B     		ldr	r3, .L211
 2577 0002 0022     		movs	r2, #0
 2578 0004 1A70     		strb	r2, [r3]
1307:Lib/ssc/src/ecatslv.c **** }
 2579              		.loc 1 1307 1 view .LVU822
 2580 0006 7047     		bx	lr
 2581              	.L212:
 2582              		.align	2
 2583              	.L211:
 2584 0008 00000000 		.word	bSyncSetByUser
 2585              		.cfi_endproc
 2586              	.LFE134:
 2588              		.section	.text.SetALStatus,"ax",%progbits
 2589              		.align	1
 2590              		.global	SetALStatus
 2591              		.syntax unified
 2592              		.thumb
 2593              		.thumb_func
 2595              	SetALStatus:
 2596              	.LVL206:
 2597              	.LFB135:
1308:Lib/ssc/src/ecatslv.c **** 
1309:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1310:Lib/ssc/src/ecatslv.c **** /**
1311:Lib/ssc/src/ecatslv.c ****  \param alStatus        New AL Status (written to register 0x130)
1312:Lib/ssc/src/ecatslv.c ****  \param alStatusCode    New AL Status Code (written to register 0x134)
1313:Lib/ssc/src/ecatslv.c **** 
1314:Lib/ssc/src/ecatslv.c ****   \brief  The function changes the state of the EtherCAT ASIC to the requested.
ARM GAS  /tmp/ccJBQgIh.s 			page 102


1315:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1316:Lib/ssc/src/ecatslv.c **** void SetALStatus(UINT8 alStatus, UINT16 alStatusCode)
1317:Lib/ssc/src/ecatslv.c **** {
 2598              		.loc 1 1317 1 is_stmt 1 view -0
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 8
 2601              		@ frame_needed = 0, uses_anonymous_args = 0
 2602              		.loc 1 1317 1 is_stmt 0 view .LVU824
 2603 0000 00B5     		push	{lr}
 2604              		.cfi_def_cfa_offset 4
 2605              		.cfi_offset 14, -4
 2606 0002 83B0     		sub	sp, sp, #12
 2607              		.cfi_def_cfa_offset 16
1318:Lib/ssc/src/ecatslv.c ****     UINT16 Value = alStatusCode;
 2608              		.loc 1 1318 5 is_stmt 1 view .LVU825
 2609              		.loc 1 1318 12 is_stmt 0 view .LVU826
 2610 0004 ADF80610 		strh	r1, [sp, #6]	@ movhi
1319:Lib/ssc/src/ecatslv.c **** 
1320:Lib/ssc/src/ecatslv.c ****     /*update global status variable if required*/
1321:Lib/ssc/src/ecatslv.c ****     if(nAlStatus != alStatus)
 2611              		.loc 1 1321 5 is_stmt 1 view .LVU827
 2612              		.loc 1 1321 18 is_stmt 0 view .LVU828
 2613 0008 0F4B     		ldr	r3, .L218
 2614 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2615              		.loc 1 1321 7 view .LVU829
 2616 000c 8342     		cmp	r3, r0
 2617 000e 01D0     		beq	.L214
1322:Lib/ssc/src/ecatslv.c ****     {
1323:Lib/ssc/src/ecatslv.c ****         nAlStatus = alStatus;
 2618              		.loc 1 1323 9 is_stmt 1 view .LVU830
 2619              		.loc 1 1323 19 is_stmt 0 view .LVU831
 2620 0010 0D4B     		ldr	r3, .L218
 2621 0012 1870     		strb	r0, [r3]
 2622              	.L214:
1324:Lib/ssc/src/ecatslv.c ****     }
1325:Lib/ssc/src/ecatslv.c **** 
1326:Lib/ssc/src/ecatslv.c **** 
1327:Lib/ssc/src/ecatslv.c ****     if (alStatusCode != 0xFFFF)
 2623              		.loc 1 1327 5 is_stmt 1 view .LVU832
 2624              		.loc 1 1327 8 is_stmt 0 view .LVU833
 2625 0014 4FF6FF73 		movw	r3, #65535
 2626 0018 9942     		cmp	r1, r3
 2627 001a 0DD1     		bne	.L217
 2628              	.LVL207:
 2629              	.L215:
1328:Lib/ssc/src/ecatslv.c ****     {
1329:Lib/ssc/src/ecatslv.c ****         Value = SWAPWORD(Value);
1330:Lib/ssc/src/ecatslv.c **** 
1331:Lib/ssc/src/ecatslv.c ****         HW_EscWriteWord(Value,ESC_AL_STATUS_CODE_OFFSET);
1332:Lib/ssc/src/ecatslv.c ****     }
1333:Lib/ssc/src/ecatslv.c **** 
1334:Lib/ssc/src/ecatslv.c ****     Value = nAlStatus;
 2630              		.loc 1 1334 5 is_stmt 1 view .LVU834
 2631              		.loc 1 1334 11 is_stmt 0 view .LVU835
 2632 001c 0A4B     		ldr	r3, .L218
 2633 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2634 0020 ADF80630 		strh	r3, [sp, #6]	@ movhi
ARM GAS  /tmp/ccJBQgIh.s 			page 103


1335:Lib/ssc/src/ecatslv.c ****     Value = SWAPWORD(Value);
 2635              		.loc 1 1335 5 is_stmt 1 view .LVU836
1336:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(Value,ESC_AL_STATUS_OFFSET);
 2636              		.loc 1 1336 5 view .LVU837
 2637 0024 0222     		movs	r2, #2
 2638 0026 4FF49871 		mov	r1, #304
 2639 002a 0DF10600 		add	r0, sp, #6
 2640 002e FFF7FEFF 		bl	HW_EscWrite
 2641              	.LVL208:
1337:Lib/ssc/src/ecatslv.c **** 
1338:Lib/ssc/src/ecatslv.c **** }
 2642              		.loc 1 1338 1 is_stmt 0 view .LVU838
 2643 0032 03B0     		add	sp, sp, #12
 2644              		.cfi_remember_state
 2645              		.cfi_def_cfa_offset 4
 2646              		@ sp needed
 2647 0034 5DF804FB 		ldr	pc, [sp], #4
 2648              	.LVL209:
 2649              	.L217:
 2650              		.cfi_restore_state
1329:Lib/ssc/src/ecatslv.c **** 
 2651              		.loc 1 1329 9 is_stmt 1 view .LVU839
1331:Lib/ssc/src/ecatslv.c ****     }
 2652              		.loc 1 1331 9 view .LVU840
 2653 0038 0222     		movs	r2, #2
 2654 003a 4FF49A71 		mov	r1, #308
 2655              	.LVL210:
1331:Lib/ssc/src/ecatslv.c ****     }
 2656              		.loc 1 1331 9 is_stmt 0 view .LVU841
 2657 003e 0DF10600 		add	r0, sp, #6
 2658              	.LVL211:
1331:Lib/ssc/src/ecatslv.c ****     }
 2659              		.loc 1 1331 9 view .LVU842
 2660 0042 FFF7FEFF 		bl	HW_EscWrite
 2661              	.LVL212:
1331:Lib/ssc/src/ecatslv.c ****     }
 2662              		.loc 1 1331 9 view .LVU843
 2663 0046 E9E7     		b	.L215
 2664              	.L219:
 2665              		.align	2
 2666              	.L218:
 2667 0048 00000000 		.word	.LANCHOR5
 2668              		.cfi_endproc
 2669              	.LFE135:
 2671              		.section	.text.AL_ControlInd,"ax",%progbits
 2672              		.align	1
 2673              		.global	AL_ControlInd
 2674              		.syntax unified
 2675              		.thumb
 2676              		.thumb_func
 2678              	AL_ControlInd:
 2679              	.LVL213:
 2680              	.LFB136:
1339:Lib/ssc/src/ecatslv.c **** 
1340:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1341:Lib/ssc/src/ecatslv.c **** /**
1342:Lib/ssc/src/ecatslv.c ****  \param    alControl        requested new state
ARM GAS  /tmp/ccJBQgIh.s 			page 104


1343:Lib/ssc/src/ecatslv.c ****  \param alStatusCode    requested status code
1344:Lib/ssc/src/ecatslv.c **** 
1345:Lib/ssc/src/ecatslv.c ****  \brief    This function handles the EtherCAT State Machine. It is called
1346:Lib/ssc/src/ecatslv.c ****             * in case of an AL Control event (Bit 0 of AL-Event (Reg 0x220),
1347:Lib/ssc/src/ecatslv.c ****                when the Master has written the AL Control Register (from ECAT_Main),
1348:Lib/ssc/src/ecatslv.c ****               alControl contains the content of the AL Control (Reg 0x120)
1349:Lib/ssc/src/ecatslv.c ****             * in case of a SM-Change event (Bit 4 of AL-Event (Reg 0x220)),
1350:Lib/ssc/src/ecatslv.c ****               when an Activate SYNCM y register is written by the master (from ECAT_Main),
1351:Lib/ssc/src/ecatslv.c ****               alControl contains the actual state (Bit 0-3 of AL Status (Reg 0x130))
1352:Lib/ssc/src/ecatslv.c ****             * in case of a locally expired watchdog (from ECAT_Main),
1353:Lib/ssc/src/ecatslv.c ****               alControl contains the requested new state (SAFE_OP)
1354:Lib/ssc/src/ecatslv.c ****             * in case of an application specific event to change the EtherCAT state (from applicati
1355:Lib/ssc/src/ecatslv.c ****               alControl contains the requested new state (INIT, PRE_OP or SAFE_OP)
1356:Lib/ssc/src/ecatslv.c **** 
1357:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1358:Lib/ssc/src/ecatslv.c **** 
1359:Lib/ssc/src/ecatslv.c **** void AL_ControlInd(UINT8 alControl, UINT16 alStatusCode)
1360:Lib/ssc/src/ecatslv.c **** {
 2681              		.loc 1 1360 1 is_stmt 1 view -0
 2682              		.cfi_startproc
 2683              		@ args = 0, pretend = 0, frame = 0
 2684              		@ frame_needed = 0, uses_anonymous_args = 0
 2685              		.loc 1 1360 1 is_stmt 0 view .LVU845
 2686 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2687              		.cfi_def_cfa_offset 24
 2688              		.cfi_offset 4, -24
 2689              		.cfi_offset 5, -20
 2690              		.cfi_offset 6, -16
 2691              		.cfi_offset 7, -12
 2692              		.cfi_offset 8, -8
 2693              		.cfi_offset 14, -4
 2694 0004 0E46     		mov	r6, r1
1361:Lib/ssc/src/ecatslv.c ****     UINT16        result = 0;
 2695              		.loc 1 1361 5 is_stmt 1 view .LVU846
 2696              	.LVL214:
1362:Lib/ssc/src/ecatslv.c ****     UINT8            bErrAck = 0;
 2697              		.loc 1 1362 5 view .LVU847
1363:Lib/ssc/src/ecatslv.c ****     UINT8         stateTrans;
 2698              		.loc 1 1363 5 view .LVU848
1364:Lib/ssc/src/ecatslv.c ****     /*deactivate ESM timeout counter*/
1365:Lib/ssc/src/ecatslv.c ****     EsmTimeoutCounter = -1;
 2699              		.loc 1 1365 5 view .LVU849
 2700              		.loc 1 1365 23 is_stmt 0 view .LVU850
 2701 0006 474B     		ldr	r3, .L301
 2702 0008 4FF6FF72 		movw	r2, #65535
 2703 000c 1A80     		strh	r2, [r3]	@ movhi
1366:Lib/ssc/src/ecatslv.c ****     bApplEsmPending = TRUE;
 2704              		.loc 1 1366 5 is_stmt 1 view .LVU851
 2705              		.loc 1 1366 21 is_stmt 0 view .LVU852
 2706 000e 464B     		ldr	r3, .L301+4
 2707 0010 0122     		movs	r2, #1
 2708 0012 1A70     		strb	r2, [r3]
1367:Lib/ssc/src/ecatslv.c **** 
1368:Lib/ssc/src/ecatslv.c ****     /* reset the Error Flag in case of acknowledge by the Master */
1369:Lib/ssc/src/ecatslv.c ****     if ( alControl & STATE_CHANGE )
 2709              		.loc 1 1369 5 is_stmt 1 view .LVU853
 2710              		.loc 1 1369 8 is_stmt 0 view .LVU854
ARM GAS  /tmp/ccJBQgIh.s 			page 105


 2711 0014 10F01007 		ands	r7, r0, #16
 2712 0018 2BD0     		beq	.L221
1370:Lib/ssc/src/ecatslv.c ****     {
1371:Lib/ssc/src/ecatslv.c ****         bErrAck = 1;
 2713              		.loc 1 1371 9 is_stmt 1 view .LVU855
 2714              	.LVL215:
1372:Lib/ssc/src/ecatslv.c ****         nAlStatus &= ~STATE_CHANGE;
 2715              		.loc 1 1372 9 view .LVU856
 2716              		.loc 1 1372 19 is_stmt 0 view .LVU857
 2717 001a 444A     		ldr	r2, .L301+8
 2718 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2719 001e 23F01003 		bic	r3, r3, #16
 2720 0022 1370     		strb	r3, [r2]
1371:Lib/ssc/src/ecatslv.c ****         nAlStatus &= ~STATE_CHANGE;
 2721              		.loc 1 1371 17 view .LVU858
 2722 0024 0127     		movs	r7, #1
 2723              	.LVL216:
 2724              	.L222:
1373:Lib/ssc/src/ecatslv.c ****         /*enable SM2 is moved to state transition block. First check SM Settings.*/
1374:Lib/ssc/src/ecatslv.c ****     }
1375:Lib/ssc/src/ecatslv.c ****     else if ( (nAlStatus & STATE_CHANGE)
1376:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
1377:Lib/ssc/src/ecatslv.c ****     //               (the error was acknowledged with the same state before independent of the ackn
1378:Lib/ssc/src/ecatslv.c ****     /*Error Acknowledge with 0xX1 is allowed*/
1379:Lib/ssc/src/ecatslv.c ****            && (alControl & STATE_MASK) != STATE_INIT )
1380:Lib/ssc/src/ecatslv.c ****         /* the error flag (Bit 4) is set in the AL-Status and the ErrAck bit (Bit 4)
1381:Lib/ssc/src/ecatslv.c ****            is not set in the AL-Control, so the state cannot be set to a higher state
1382:Lib/ssc/src/ecatslv.c ****            and the new state request will be ignored */
1383:Lib/ssc/src/ecatslv.c ****         return;
1384:Lib/ssc/src/ecatslv.c ****     else
1385:Lib/ssc/src/ecatslv.c ****     {
1386:Lib/ssc/src/ecatslv.c ****         nAlStatus &= STATE_MASK;
1387:Lib/ssc/src/ecatslv.c ****     }
1388:Lib/ssc/src/ecatslv.c **** 
1389:Lib/ssc/src/ecatslv.c ****     /* generate a variable for the state transition
1390:Lib/ssc/src/ecatslv.c ****       (Bit 0-3: new state (AL Control), Bit 4-7: old state (AL Status) */
1391:Lib/ssc/src/ecatslv.c ****     alControl &= STATE_MASK;
 2725              		.loc 1 1391 5 is_stmt 1 view .LVU859
 2726              		.loc 1 1391 15 is_stmt 0 view .LVU860
 2727 0026 00F00F05 		and	r5, r0, #15
 2728              	.LVL217:
1392:Lib/ssc/src/ecatslv.c ****     stateTrans = nAlStatus;
 2729              		.loc 1 1392 5 is_stmt 1 view .LVU861
 2730              		.loc 1 1392 16 is_stmt 0 view .LVU862
 2731 002a 404B     		ldr	r3, .L301+8
 2732 002c 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 2733              	.LVL218:
1393:Lib/ssc/src/ecatslv.c ****     stateTrans <<= 4;
 2734              		.loc 1 1393 5 is_stmt 1 view .LVU863
 2735              		.loc 1 1393 16 is_stmt 0 view .LVU864
 2736 002e 2401     		lsls	r4, r4, #4
 2737              	.LVL219:
 2738              		.loc 1 1393 16 view .LVU865
 2739 0030 E4B2     		uxtb	r4, r4
 2740              	.LVL220:
1394:Lib/ssc/src/ecatslv.c ****     stateTrans += alControl;
 2741              		.loc 1 1394 5 is_stmt 1 view .LVU866
ARM GAS  /tmp/ccJBQgIh.s 			page 106


 2742              		.loc 1 1394 16 is_stmt 0 view .LVU867
 2743 0032 2C44     		add	r4, r4, r5
 2744              	.LVL221:
 2745              		.loc 1 1394 16 view .LVU868
 2746 0034 E4B2     		uxtb	r4, r4
 2747              	.LVL222:
1395:Lib/ssc/src/ecatslv.c **** 
1396:Lib/ssc/src/ecatslv.c **** 
1397:Lib/ssc/src/ecatslv.c ****     /* check the SYNCM settings depending on the state transition */
1398:Lib/ssc/src/ecatslv.c ****     switch ( stateTrans )
 2748              		.loc 1 1398 5 is_stmt 1 view .LVU869
 2749 0036 482C     		cmp	r4, #72
 2750 0038 2FD8     		bhi	.L225
 2751 003a 222C     		cmp	r4, #34
 2752 003c 28D3     		bcc	.L286
 2753 003e A4F12203 		sub	r3, r4, #34
 2754 0042 262B     		cmp	r3, #38
 2755 0044 7ED8     		bhi	.L277
 2756 0046 DFE803F0 		tbb	[pc, r3]
 2757              	.L230:
 2758 004a 2F       		.byte	(.L227-.L230)/2
 2759 004b 7D       		.byte	(.L277-.L230)/2
 2760 004c 35       		.byte	(.L231-.L230)/2
 2761 004d 7D       		.byte	(.L277-.L230)/2
 2762 004e 7D       		.byte	(.L277-.L230)/2
 2763 004f 7D       		.byte	(.L277-.L230)/2
 2764 0050 7D       		.byte	(.L277-.L230)/2
 2765 0051 7D       		.byte	(.L277-.L230)/2
 2766 0052 7D       		.byte	(.L277-.L230)/2
 2767 0053 7D       		.byte	(.L277-.L230)/2
 2768 0054 7D       		.byte	(.L277-.L230)/2
 2769 0055 7D       		.byte	(.L277-.L230)/2
 2770 0056 7D       		.byte	(.L277-.L230)/2
 2771 0057 7D       		.byte	(.L277-.L230)/2
 2772 0058 7D       		.byte	(.L277-.L230)/2
 2773 0059 7D       		.byte	(.L277-.L230)/2
 2774 005a 7D       		.byte	(.L277-.L230)/2
 2775 005b 7D       		.byte	(.L277-.L230)/2
 2776 005c 7D       		.byte	(.L277-.L230)/2
 2777 005d 7D       		.byte	(.L277-.L230)/2
 2778 005e 7D       		.byte	(.L277-.L230)/2
 2779 005f 7D       		.byte	(.L277-.L230)/2
 2780 0060 7D       		.byte	(.L277-.L230)/2
 2781 0061 7D       		.byte	(.L277-.L230)/2
 2782 0062 7D       		.byte	(.L277-.L230)/2
 2783 0063 7D       		.byte	(.L277-.L230)/2
 2784 0064 7D       		.byte	(.L277-.L230)/2
 2785 0065 7D       		.byte	(.L277-.L230)/2
 2786 0066 7D       		.byte	(.L277-.L230)/2
 2787 0067 7D       		.byte	(.L277-.L230)/2
 2788 0068 7D       		.byte	(.L277-.L230)/2
 2789 0069 7D       		.byte	(.L277-.L230)/2
 2790 006a 2F       		.byte	(.L227-.L230)/2
 2791 006b 7D       		.byte	(.L277-.L230)/2
 2792 006c 3B       		.byte	(.L229-.L230)/2
 2793 006d 7D       		.byte	(.L277-.L230)/2
 2794 006e 7D       		.byte	(.L277-.L230)/2
ARM GAS  /tmp/ccJBQgIh.s 			page 107


 2795 006f 7D       		.byte	(.L277-.L230)/2
 2796 0070 3B       		.byte	(.L229-.L230)/2
 2797              	.LVL223:
 2798 0071 00       		.p2align 1
 2799              	.L221:
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2800              		.loc 1 1375 10 view .LVU870
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2801              		.loc 1 1375 26 is_stmt 0 view .LVU871
 2802 0072 2E4B     		ldr	r3, .L301+8
 2803 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2804              		.loc 1 1375 13 view .LVU872
 2805 0076 13F0100F 		tst	r3, #16
 2806 007a 04D0     		beq	.L223
1379:Lib/ssc/src/ecatslv.c ****         /* the error flag (Bit 4) is set in the AL-Status and the ErrAck bit (Bit 4)
 2807              		.loc 1 1379 12 view .LVU873
 2808 007c 00F00F02 		and	r2, r0, #15
 2809 0080 012A     		cmp	r2, #1
 2810 0082 40F02582 		bne	.L220
 2811              	.L223:
1386:Lib/ssc/src/ecatslv.c ****     }
 2812              		.loc 1 1386 9 is_stmt 1 view .LVU874
1386:Lib/ssc/src/ecatslv.c ****     }
 2813              		.loc 1 1386 19 is_stmt 0 view .LVU875
 2814 0086 03F00F03 		and	r3, r3, #15
 2815 008a 284A     		ldr	r2, .L301+8
 2816 008c 1370     		strb	r3, [r2]
 2817 008e CAE7     		b	.L222
 2818              	.LVL224:
 2819              	.L286:
 2820              		.loc 1 1398 5 view .LVU876
 2821 0090 122C     		cmp	r4, #18
 2822 0092 09D0     		beq	.L227
 2823 0094 4FF00008 		mov	r8, #0
 2824 0098 56E0     		b	.L228
 2825              	.L225:
 2826              		.loc 1 1398 5 view .LVU877
 2827 009a 842C     		cmp	r4, #132
 2828 009c 10D0     		beq	.L229
 2829 009e 882C     		cmp	r4, #136
 2830 00a0 0ED0     		beq	.L229
 2831 00a2 822C     		cmp	r4, #130
 2832 00a4 40F0D280 		bne	.L278
 2833              	.L227:
1399:Lib/ssc/src/ecatslv.c ****     {
1400:Lib/ssc/src/ecatslv.c ****     case INIT_2_PREOP:
1401:Lib/ssc/src/ecatslv.c ****     case OP_2_PREOP:
1402:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_PREOP:
1403:Lib/ssc/src/ecatslv.c ****     case PREOP_2_PREOP:
1404:Lib/ssc/src/ecatslv.c ****         /* in PREOP only the SYNCM settings for SYNCM0 and SYNCM1 (mailbox)
1405:Lib/ssc/src/ecatslv.c ****            are checked, if result is unequal 0, the slave will stay in or
1406:Lib/ssc/src/ecatslv.c ****            switch to INIT and set the ErrorInd Bit (bit 4) of the AL-Status */
1407:Lib/ssc/src/ecatslv.c ****         result = CheckSmSettings(MAILBOX_READ+1);
 2834              		.loc 1 1407 9 is_stmt 1 view .LVU878
 2835              		.loc 1 1407 18 is_stmt 0 view .LVU879
 2836 00a8 0220     		movs	r0, #2
ARM GAS  /tmp/ccJBQgIh.s 			page 108


 2837 00aa FFF7FEFF 		bl	CheckSmSettings
 2838              	.LVL225:
 2839              		.loc 1 1407 16 view .LVU880
 2840 00ae 1FFA80F8 		uxth	r8, r0
 2841              	.LVL226:
1408:Lib/ssc/src/ecatslv.c ****         break;
 2842              		.loc 1 1408 9 is_stmt 1 view .LVU881
 2843 00b2 0BE0     		b	.L232
 2844              	.LVL227:
 2845              	.L231:
1409:Lib/ssc/src/ecatslv.c ****     case PREOP_2_SAFEOP:
1410:Lib/ssc/src/ecatslv.c ****         {
1411:Lib/ssc/src/ecatslv.c ****         /* before checking the SYNCM settings for SYNCM2 and SYNCM3 (process data)
1412:Lib/ssc/src/ecatslv.c ****            the expected length of input data (nPdInputSize) and output data (nPdOutputSize)
1413:Lib/ssc/src/ecatslv.c ****             could be adapted (changed by PDO-Assign and/or PDO-Mapping)
1414:Lib/ssc/src/ecatslv.c ****             if result is unequal 0, the slave will stay in PREOP and set
1415:Lib/ssc/src/ecatslv.c ****             the ErrorInd Bit (bit 4) of the AL-Status */
1416:Lib/ssc/src/ecatslv.c ****         result = APPL_GenerateMapping(&nPdInputSize,&nPdOutputSize);
 2846              		.loc 1 1416 9 view .LVU882
 2847              		.loc 1 1416 18 is_stmt 0 view .LVU883
 2848 00b4 1E49     		ldr	r1, .L301+12
 2849              	.LVL228:
 2850              		.loc 1 1416 18 view .LVU884
 2851 00b6 1F48     		ldr	r0, .L301+16
 2852 00b8 FFF7FEFF 		bl	APPL_GenerateMapping
 2853              	.LVL229:
1417:Lib/ssc/src/ecatslv.c **** 
1418:Lib/ssc/src/ecatslv.c ****         if (result != 0)
 2854              		.loc 1 1418 9 is_stmt 1 view .LVU885
 2855              		.loc 1 1418 12 is_stmt 0 view .LVU886
 2856 00bc 8046     		mov	r8, r0
 2857 00be 28B9     		cbnz	r0, .L232
 2858              	.LVL230:
 2859              	.L229:
1419:Lib/ssc/src/ecatslv.c ****             break;
1420:Lib/ssc/src/ecatslv.c ****         }
1421:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_OP:
1422:Lib/ssc/src/ecatslv.c ****     case OP_2_SAFEOP:
1423:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_SAFEOP:
1424:Lib/ssc/src/ecatslv.c ****     case OP_2_OP:
1425:Lib/ssc/src/ecatslv.c ****         /* in SAFEOP or OP the SYNCM settings for all SYNCM are checked
1426:Lib/ssc/src/ecatslv.c ****            if result is unequal 0, the slave will stay in or
1427:Lib/ssc/src/ecatslv.c ****            switch to PREOP and set the ErrorInd Bit (bit 4) of the AL-Status */
1428:Lib/ssc/src/ecatslv.c ****         result = CheckSmSettings(nMaxSyncMan);
 2860              		.loc 1 1428 9 is_stmt 1 view .LVU887
 2861              		.loc 1 1428 18 is_stmt 0 view .LVU888
 2862 00c0 1D4B     		ldr	r3, .L301+20
 2863 00c2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2864 00c4 FFF7FEFF 		bl	CheckSmSettings
 2865              	.LVL231:
 2866              		.loc 1 1428 16 view .LVU889
 2867 00c8 1FFA80F8 		uxth	r8, r0
 2868              	.LVL232:
1429:Lib/ssc/src/ecatslv.c ****         break;
 2869              		.loc 1 1429 9 is_stmt 1 view .LVU890
 2870              	.L232:
1430:Lib/ssc/src/ecatslv.c ****     }
ARM GAS  /tmp/ccJBQgIh.s 			page 109


1431:Lib/ssc/src/ecatslv.c **** 
1432:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 2871              		.loc 1 1432 5 view .LVU891
 2872              		.loc 1 1432 8 is_stmt 0 view .LVU892
 2873 00cc B8F1000F 		cmp	r8, #0
 2874 00d0 3AD0     		beq	.L228
1433:Lib/ssc/src/ecatslv.c ****     {
1434:Lib/ssc/src/ecatslv.c ****         /* execute the corresponding local management service(s) depending on the state transition 
1435:Lib/ssc/src/ecatslv.c ****         nEcatStateTrans = 0;
1436:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
1437:Lib/ssc/src/ecatslv.c ****         {
1438:Lib/ssc/src/ecatslv.c ****         case INIT_2_BOOT    :
1439:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
1440:Lib/ssc/src/ecatslv.c ****             break;
1441:Lib/ssc/src/ecatslv.c **** 
1442:Lib/ssc/src/ecatslv.c ****         case BOOT_2_INIT    :
1443:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
1444:Lib/ssc/src/ecatslv.c **** 
1445:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1446:Lib/ssc/src/ecatslv.c **** 
1447:Lib/ssc/src/ecatslv.c ****             break;
1448:Lib/ssc/src/ecatslv.c ****         case INIT_2_PREOP :
1449:Lib/ssc/src/ecatslv.c **** 
1450:Lib/ssc/src/ecatslv.c ****            UpdateEEPROMLoadedState();
1451:Lib/ssc/src/ecatslv.c **** 
1452:Lib/ssc/src/ecatslv.c ****             if (EepromLoaded == FALSE)
1453:Lib/ssc/src/ecatslv.c ****             {
1454:Lib/ssc/src/ecatslv.c ****                 //return an error if the EEPROM was not loaded correct  (device restart is required
1455:Lib/ssc/src/ecatslv.c ****                 result = ALSTATUSCODE_EE_ERROR;
1456:Lib/ssc/src/ecatslv.c ****             }
1457:Lib/ssc/src/ecatslv.c ****             if (result == 0)
1458:Lib/ssc/src/ecatslv.c ****             {
1459:Lib/ssc/src/ecatslv.c ****             /* MBX_StartMailboxHandler (in mailbox.c) checks if the areas of the mailbox
1460:Lib/ssc/src/ecatslv.c ****                sync managers SYNCM0 and SYNCM1 overlap each other
1461:Lib/ssc/src/ecatslv.c ****               if result is unequal 0, the slave will stay in INIT
1462:Lib/ssc/src/ecatslv.c ****               and sets the ErrorInd Bit (bit 4) of the AL-Status */
1463:Lib/ssc/src/ecatslv.c ****             result = MBX_StartMailboxHandler();
1464:Lib/ssc/src/ecatslv.c ****             if (result == 0)
1465:Lib/ssc/src/ecatslv.c ****             {
1466:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1467:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
1468:Lib/ssc/src/ecatslv.c ****                    if the state transition from INIT to PREOP should be done
1469:Lib/ssc/src/ecatslv.c ****                  if result is unequal 0, the slave will stay in INIT
1470:Lib/ssc/src/ecatslv.c ****                  and sets the ErrorInd Bit (bit 4) of the AL-Status */
1471:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartMailboxHandler();
1472:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
1473:Lib/ssc/src/ecatslv.c ****                 {
1474:Lib/ssc/src/ecatslv.c ****                     bMbxRunning = TRUE;
1475:Lib/ssc/src/ecatslv.c ****                 }
1476:Lib/ssc/src/ecatslv.c ****             }
1477:Lib/ssc/src/ecatslv.c **** 
1478:Lib/ssc/src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
1479:Lib/ssc/src/ecatslv.c ****             {
1480:Lib/ssc/src/ecatslv.c ****                 /*Stop APPL Mbx handler if APPL Start Mbx handler was called before*/
1481:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1482:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
1483:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 110


1484:Lib/ssc/src/ecatslv.c ****                  MBX_StopMailboxHandler();
1485:Lib/ssc/src/ecatslv.c ****             }
1486:Lib/ssc/src/ecatslv.c **** 
1487:Lib/ssc/src/ecatslv.c ****             }
1488:Lib/ssc/src/ecatslv.c ****             break;
1489:Lib/ssc/src/ecatslv.c **** 
1490:Lib/ssc/src/ecatslv.c ****         case PREOP_2_SAFEOP:
1491:Lib/ssc/src/ecatslv.c ****             /* start the input handler (function is defined above) */
1492:Lib/ssc/src/ecatslv.c ****             result = StartInputHandler();
1493:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
1494:Lib/ssc/src/ecatslv.c ****             {
1495:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1496:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
1497:Lib/ssc/src/ecatslv.c **** 
1498:Lib/ssc/src/ecatslv.c ****                 if(result == 0)
1499:Lib/ssc/src/ecatslv.c ****                 {
1500:Lib/ssc/src/ecatslv.c ****                     /* initialize the AL Event Mask register (0x204) */
1501:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1502:Lib/ssc/src/ecatslv.c ****                     SetALEventMask( u16ALEventMask );
1503:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1504:Lib/ssc/src/ecatslv.c **** 
1505:Lib/ssc/src/ecatslv.c ****                     bEcatInputUpdateRunning = TRUE;
1506:Lib/ssc/src/ecatslv.c ****                 }
1507:Lib/ssc/src/ecatslv.c ****             }
1508:Lib/ssc/src/ecatslv.c **** 
1509:Lib/ssc/src/ecatslv.c ****             /*if one start input handler returned an error stop the input handler*/
1510:Lib/ssc/src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
1511:Lib/ssc/src/ecatslv.c ****             {
1512:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1513:Lib/ssc/src/ecatslv.c ****                 {
1514:Lib/ssc/src/ecatslv.c ****                     /*Call only the APPL stop handler if the APPL start handler was called before*/
1515:Lib/ssc/src/ecatslv.c ****                     /*The application can react to the state transition in the function APPL_StopIn
1516:Lib/ssc/src/ecatslv.c ****                     APPL_StopInputHandler();
1517:Lib/ssc/src/ecatslv.c ****                 }
1518:Lib/ssc/src/ecatslv.c **** 
1519:Lib/ssc/src/ecatslv.c ****                 StopInputHandler();
1520:Lib/ssc/src/ecatslv.c ****             }
1521:Lib/ssc/src/ecatslv.c ****             break;
1522:Lib/ssc/src/ecatslv.c **** 
1523:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_OP:
1524:Lib/ssc/src/ecatslv.c ****             /* start the output handler (function is defined above) */
1525:Lib/ssc/src/ecatslv.c ****             result = StartOutputHandler();
1526:Lib/ssc/src/ecatslv.c ****             if(result == 0)
1527:Lib/ssc/src/ecatslv.c ****             {
1528:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1529:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
1530:Lib/ssc/src/ecatslv.c **** 
1531:Lib/ssc/src/ecatslv.c ****                 if(result == 0)
1532:Lib/ssc/src/ecatslv.c ****                 {
1533:Lib/ssc/src/ecatslv.c ****                     /*Device is in OPERATINAL*/
1534:Lib/ssc/src/ecatslv.c ****                     bEcatOutputUpdateRunning = TRUE;
1535:Lib/ssc/src/ecatslv.c ****                 }
1536:Lib/ssc/src/ecatslv.c **** 
1537:Lib/ssc/src/ecatslv.c ****             }
1538:Lib/ssc/src/ecatslv.c **** 
1539:Lib/ssc/src/ecatslv.c ****             if ( result != 0 && result != NOERROR_INWORK)
1540:Lib/ssc/src/ecatslv.c ****             {
ARM GAS  /tmp/ccJBQgIh.s 			page 111


1541:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1542:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
1543:Lib/ssc/src/ecatslv.c **** 
1544:Lib/ssc/src/ecatslv.c ****                 StopOutputHandler();
1545:Lib/ssc/src/ecatslv.c ****             }
1546:Lib/ssc/src/ecatslv.c **** 
1547:Lib/ssc/src/ecatslv.c ****             break;
1548:Lib/ssc/src/ecatslv.c **** 
1549:Lib/ssc/src/ecatslv.c ****         case OP_2_SAFEOP:
1550:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1551:Lib/ssc/src/ecatslv.c ****             APPL_StopOutputHandler();
1552:Lib/ssc/src/ecatslv.c **** 
1553:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1554:Lib/ssc/src/ecatslv.c **** 
1555:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1556:Lib/ssc/src/ecatslv.c **** 
1557:Lib/ssc/src/ecatslv.c ****             break;
1558:Lib/ssc/src/ecatslv.c **** 
1559:Lib/ssc/src/ecatslv.c ****         case OP_2_PREOP:
1560:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1561:Lib/ssc/src/ecatslv.c ****             result = APPL_StopOutputHandler();
1562:Lib/ssc/src/ecatslv.c **** 
1563:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1564:Lib/ssc/src/ecatslv.c **** 
1565:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1566:Lib/ssc/src/ecatslv.c **** 
1567:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1568:Lib/ssc/src/ecatslv.c ****                 break;
1569:Lib/ssc/src/ecatslv.c **** 
1570:Lib/ssc/src/ecatslv.c ****             stateTrans = SAFEOP_2_PREOP;
1571:Lib/ssc/src/ecatslv.c **** 
1572:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_PREOP:
1573:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1574:Lib/ssc/src/ecatslv.c ****             APPL_StopInputHandler();
1575:Lib/ssc/src/ecatslv.c ****            
1576:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1577:Lib/ssc/src/ecatslv.c **** 
1578:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1579:Lib/ssc/src/ecatslv.c **** 
1580:Lib/ssc/src/ecatslv.c ****             break;
1581:Lib/ssc/src/ecatslv.c **** 
1582:Lib/ssc/src/ecatslv.c ****         case OP_2_INIT:
1583:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1584:Lib/ssc/src/ecatslv.c ****             result = APPL_StopOutputHandler();
1585:Lib/ssc/src/ecatslv.c **** 
1586:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1587:Lib/ssc/src/ecatslv.c **** 
1588:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1589:Lib/ssc/src/ecatslv.c **** 
1590:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1591:Lib/ssc/src/ecatslv.c ****                 break;
1592:Lib/ssc/src/ecatslv.c ****             
1593:Lib/ssc/src/ecatslv.c ****             stateTrans = SAFEOP_2_INIT;
1594:Lib/ssc/src/ecatslv.c **** 
1595:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_INIT:
1596:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1597:Lib/ssc/src/ecatslv.c ****             result = APPL_StopInputHandler();
ARM GAS  /tmp/ccJBQgIh.s 			page 112


1598:Lib/ssc/src/ecatslv.c ****             
1599:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1600:Lib/ssc/src/ecatslv.c **** 
1601:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1602:Lib/ssc/src/ecatslv.c **** 
1603:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1604:Lib/ssc/src/ecatslv.c ****                 break;
1605:Lib/ssc/src/ecatslv.c ****             stateTrans = PREOP_2_INIT;
1606:Lib/ssc/src/ecatslv.c **** 
1607:Lib/ssc/src/ecatslv.c ****         case PREOP_2_INIT:
1608:Lib/ssc/src/ecatslv.c ****             MBX_StopMailboxHandler();
1609:Lib/ssc/src/ecatslv.c ****             result = APPL_StopMailboxHandler();
1610:Lib/ssc/src/ecatslv.c **** 
1611:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1612:Lib/ssc/src/ecatslv.c ****             break;
1613:Lib/ssc/src/ecatslv.c **** 
1614:Lib/ssc/src/ecatslv.c ****         case INIT_2_INIT:
1615:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1616:Lib/ssc/src/ecatslv.c ****         case PREOP_2_PREOP:
1617:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_SAFEOP:
1618:Lib/ssc/src/ecatslv.c ****         case OP_2_OP:
1619:Lib/ssc/src/ecatslv.c ****             if(bErrAck)
1620:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
1621:Lib/ssc/src/ecatslv.c **** 
1622:Lib/ssc/src/ecatslv.c ****             if(!bLocalErrorFlag)
1623:Lib/ssc/src/ecatslv.c ****             {
1624:Lib/ssc/src/ecatslv.c ****                 /*no local error flag is currently active, enable SM*/
1625:Lib/ssc/src/ecatslv.c ****                 if ( nAlStatus & (STATE_SAFEOP | STATE_OP))
1626:Lib/ssc/src/ecatslv.c ****                 {
1627:Lib/ssc/src/ecatslv.c ****                     if(nPdOutputSize > 0)
1628:Lib/ssc/src/ecatslv.c ****                     {
1629:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1630:Lib/ssc/src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_OUT);
1631:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1632:Lib/ssc/src/ecatslv.c ****                     }
1633:Lib/ssc/src/ecatslv.c ****                     else 
1634:Lib/ssc/src/ecatslv.c ****                     if(nPdInputSize > 0)
1635:Lib/ssc/src/ecatslv.c ****                     {
1636:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1637:Lib/ssc/src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_IN);
1638:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1639:Lib/ssc/src/ecatslv.c ****                     }
1640:Lib/ssc/src/ecatslv.c ****                 }
1641:Lib/ssc/src/ecatslv.c ****             }
1642:Lib/ssc/src/ecatslv.c ****             result = NOERROR_NOSTATECHANGE;
1643:Lib/ssc/src/ecatslv.c ****             break;
1644:Lib/ssc/src/ecatslv.c **** 
1645:Lib/ssc/src/ecatslv.c ****         case INIT_2_SAFEOP:
1646:Lib/ssc/src/ecatslv.c ****         case INIT_2_OP:
1647:Lib/ssc/src/ecatslv.c ****         case PREOP_2_OP:
1648:Lib/ssc/src/ecatslv.c ****         case PREOP_2_BOOT:
1649:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_BOOT:
1650:Lib/ssc/src/ecatslv.c ****         case OP_2_BOOT:
1651:Lib/ssc/src/ecatslv.c ****         case BOOT_2_PREOP:
1652:Lib/ssc/src/ecatslv.c ****         case BOOT_2_SAFEOP:
1653:Lib/ssc/src/ecatslv.c ****         case BOOT_2_OP:
1654:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDALCONTROL;
ARM GAS  /tmp/ccJBQgIh.s 			page 113


1655:Lib/ssc/src/ecatslv.c ****             break;
1656:Lib/ssc/src/ecatslv.c **** 
1657:Lib/ssc/src/ecatslv.c ****         default:
1658:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_UNKNOWNALCONTROL;
1659:Lib/ssc/src/ecatslv.c ****             break;
1660:Lib/ssc/src/ecatslv.c ****         }
1661:Lib/ssc/src/ecatslv.c ****     }
1662:Lib/ssc/src/ecatslv.c ****     else
1663:Lib/ssc/src/ecatslv.c ****     {
1664:Lib/ssc/src/ecatslv.c ****         /* the checking of the sync manager settings was not successful
1665:Lib/ssc/src/ecatslv.c ****             switch back the state to PREOP or INIT */
1666:Lib/ssc/src/ecatslv.c ****         switch (nAlStatus)
 2875              		.loc 1 1666 9 is_stmt 1 view .LVU893
 2876 00d2 164B     		ldr	r3, .L301+8
 2877 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2878 00d6 042B     		cmp	r3, #4
 2879 00d8 00F0AC81 		beq	.L259
 2880 00dc 082B     		cmp	r3, #8
 2881 00de 00F0A581 		beq	.L260
 2882 00e2 022B     		cmp	r3, #2
 2883 00e4 00F0AA81 		beq	.L261
 2884              	.LVL233:
 2885              	.L250:
1667:Lib/ssc/src/ecatslv.c ****         {
1668:Lib/ssc/src/ecatslv.c ****         case STATE_OP:
1669:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1670:Lib/ssc/src/ecatslv.c ****             APPL_StopOutputHandler();
1671:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1672:Lib/ssc/src/ecatslv.c ****         case STATE_SAFEOP:
1673:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1674:Lib/ssc/src/ecatslv.c ****             APPL_StopInputHandler();
1675:Lib/ssc/src/ecatslv.c **** 
1676:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1677:Lib/ssc/src/ecatslv.c **** 
1678:Lib/ssc/src/ecatslv.c ****         case STATE_PREOP:
1679:Lib/ssc/src/ecatslv.c **** 
1680:Lib/ssc/src/ecatslv.c ****             if ( result == ALSTATUSCODE_INVALIDMBXCFGINPREOP )
1681:Lib/ssc/src/ecatslv.c ****             {
1682:Lib/ssc/src/ecatslv.c ****                 /* the mailbox sync manager settings were wrong, switch back to INIT */
1683:Lib/ssc/src/ecatslv.c ****                 MBX_StopMailboxHandler();
1684:Lib/ssc/src/ecatslv.c ****                 APPL_StopMailboxHandler();
1685:Lib/ssc/src/ecatslv.c **** 
1686:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_INIT;
1687:Lib/ssc/src/ecatslv.c ****             }
1688:Lib/ssc/src/ecatslv.c ****             else
1689:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_PREOP;
1690:Lib/ssc/src/ecatslv.c ****         }
1691:Lib/ssc/src/ecatslv.c ****     }
1692:Lib/ssc/src/ecatslv.c **** 
1693:Lib/ssc/src/ecatslv.c ****     if ( result == NOERROR_INWORK )
 2886              		.loc 1 1693 5 view .LVU894
 2887              		.loc 1 1693 8 is_stmt 0 view .LVU895
 2888 00e8 B8F1FF0F 		cmp	r8, #255
 2889 00ec 40F0C581 		bne	.L247
1694:Lib/ssc/src/ecatslv.c ****     {
1695:Lib/ssc/src/ecatslv.c ****         /* state transition is still in work
1696:Lib/ssc/src/ecatslv.c ****             ECAT_StateChange must be called from the application */
ARM GAS  /tmp/ccJBQgIh.s 			page 114


1697:Lib/ssc/src/ecatslv.c ****         bEcatWaitForAlControlRes = TRUE;
 2890              		.loc 1 1697 9 is_stmt 1 view .LVU896
 2891              		.loc 1 1697 34 is_stmt 0 view .LVU897
 2892 00f0 124B     		ldr	r3, .L301+24
 2893 00f2 0122     		movs	r2, #1
 2894 00f4 1A70     		strb	r2, [r3]
1698:Lib/ssc/src/ecatslv.c ****         /* state transition has to be stored */
1699:Lib/ssc/src/ecatslv.c ****         nEcatStateTrans = stateTrans;
 2895              		.loc 1 1699 9 is_stmt 1 view .LVU898
 2896              		.loc 1 1699 25 is_stmt 0 view .LVU899
 2897 00f6 A4B2     		uxth	r4, r4
 2898 00f8 114B     		ldr	r3, .L301+28
 2899 00fa 1C80     		strh	r4, [r3]	@ movhi
1700:Lib/ssc/src/ecatslv.c **** 
1701:Lib/ssc/src/ecatslv.c ****         /*Init ESM timeout counter (will be decremented with the local 1ms timer)*/
1702:Lib/ssc/src/ecatslv.c ****         switch(nEcatStateTrans)
 2900              		.loc 1 1702 9 is_stmt 1 view .LVU900
 2901 00fc 242C     		cmp	r4, #36
 2902 00fe 00F0B581 		beq	.L263
 2903 0102 00F2AD81 		bhi	.L264
 2904 0106 123C     		subs	r4, r4, #18
 2905 0108 A4B2     		uxth	r4, r4
 2906 010a 9442     		cmp	r4, r2
 2907 010c 00F2AA81 		bhi	.L265
1703:Lib/ssc/src/ecatslv.c ****         {
1704:Lib/ssc/src/ecatslv.c ****             case INIT_2_PREOP:
1705:Lib/ssc/src/ecatslv.c ****             case INIT_2_BOOT:
1706:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = PREOPTIMEOUT;
 2908              		.loc 1 1706 17 view .LVU901
 2909              		.loc 1 1706 35 is_stmt 0 view .LVU902
 2910 0110 044B     		ldr	r3, .L301
 2911 0112 4FF4FA62 		mov	r2, #2000
 2912 0116 1A80     		strh	r2, [r3]	@ movhi
1707:Lib/ssc/src/ecatslv.c ****             break;
 2913              		.loc 1 1707 13 is_stmt 1 view .LVU903
 2914              	.L267:
1708:Lib/ssc/src/ecatslv.c ****             case PREOP_2_SAFEOP:
1709:Lib/ssc/src/ecatslv.c ****             case SAFEOP_2_OP:
1710:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = SAFEOP2OPTIMEOUT;
1711:Lib/ssc/src/ecatslv.c ****                 break;
1712:Lib/ssc/src/ecatslv.c ****            default:
1713:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = 200; //Set default timeout value to 200ms
1714:Lib/ssc/src/ecatslv.c ****                 break;
1715:Lib/ssc/src/ecatslv.c ****         }
1716:Lib/ssc/src/ecatslv.c ****         EsmTimeoutCounter -= 50; //subtract 50ms from the timeout to react before the master runs i
 2915              		.loc 1 1716 9 view .LVU904
 2916              		.loc 1 1716 27 is_stmt 0 view .LVU905
 2917 0118 024A     		ldr	r2, .L301
 2918 011a 1388     		ldrh	r3, [r2]
 2919 011c 323B     		subs	r3, r3, #50
 2920 011e 1380     		strh	r3, [r2]	@ movhi
 2921 0120 D6E1     		b	.L220
 2922              	.L302:
 2923 0122 00BF     		.align	2
 2924              	.L301:
 2925 0124 00000000 		.word	.LANCHOR33
 2926 0128 00000000 		.word	.LANCHOR34
ARM GAS  /tmp/ccJBQgIh.s 			page 115


 2927 012c 00000000 		.word	.LANCHOR5
 2928 0130 00000000 		.word	.LANCHOR7
 2929 0134 00000000 		.word	.LANCHOR4
 2930 0138 00000000 		.word	.LANCHOR11
 2931 013c 00000000 		.word	.LANCHOR36
 2932 0140 00000000 		.word	.LANCHOR35
 2933              	.LVL234:
 2934              	.L277:
1398:Lib/ssc/src/ecatslv.c ****     {
 2935              		.loc 1 1398 5 view .LVU906
 2936 0144 4FF00008 		mov	r8, #0
 2937              	.LVL235:
 2938              	.L228:
1435:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
 2939              		.loc 1 1435 9 is_stmt 1 view .LVU907
1435:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
 2940              		.loc 1 1435 25 is_stmt 0 view .LVU908
 2941 0148 9D4B     		ldr	r3, .L303
 2942 014a 0022     		movs	r2, #0
 2943 014c 1A80     		strh	r2, [r3]	@ movhi
1436:Lib/ssc/src/ecatslv.c ****         {
 2944              		.loc 1 1436 9 is_stmt 1 view .LVU909
 2945 014e A4F11103 		sub	r3, r4, #17
 2946 0152 772B     		cmp	r3, #119
 2947 0154 00F28F81 		bhi	.L234
 2948 0158 DFE813F0 		tbh	[pc, r3, lsl #1]
 2949              	.L236:
 2950 015c 4001     		.2byte	(.L249-.L236)/2
 2951 015e 8000     		.2byte	(.L248-.L236)/2
 2952 0160 BC01     		.2byte	(.L279-.L236)/2
 2953 0162 6501     		.2byte	(.L238-.L236)/2
 2954 0164 8D01     		.2byte	(.L234-.L236)/2
 2955 0166 8D01     		.2byte	(.L234-.L236)/2
 2956 0168 8D01     		.2byte	(.L234-.L236)/2
 2957 016a 6501     		.2byte	(.L238-.L236)/2
 2958 016c 8D01     		.2byte	(.L234-.L236)/2
 2959 016e 8D01     		.2byte	(.L234-.L236)/2
 2960 0170 8D01     		.2byte	(.L234-.L236)/2
 2961 0172 8D01     		.2byte	(.L234-.L236)/2
 2962 0174 8D01     		.2byte	(.L234-.L236)/2
 2963 0176 8D01     		.2byte	(.L234-.L236)/2
 2964 0178 8D01     		.2byte	(.L234-.L236)/2
 2965 017a 8D01     		.2byte	(.L234-.L236)/2
 2966 017c 2A01     		.2byte	(.L246-.L236)/2
 2967 017e 4201     		.2byte	(.L235-.L236)/2
 2968 0180 6501     		.2byte	(.L238-.L236)/2
 2969 0182 AC00     		.2byte	(.L245-.L236)/2
 2970 0184 8D01     		.2byte	(.L234-.L236)/2
 2971 0186 8D01     		.2byte	(.L234-.L236)/2
 2972 0188 8D01     		.2byte	(.L234-.L236)/2
 2973 018a 6501     		.2byte	(.L238-.L236)/2
 2974 018c 8D01     		.2byte	(.L234-.L236)/2
 2975 018e 8D01     		.2byte	(.L234-.L236)/2
 2976 0190 8D01     		.2byte	(.L234-.L236)/2
 2977 0192 8D01     		.2byte	(.L234-.L236)/2
 2978 0194 8D01     		.2byte	(.L234-.L236)/2
 2979 0196 8D01     		.2byte	(.L234-.L236)/2
ARM GAS  /tmp/ccJBQgIh.s 			page 116


 2980 0198 8D01     		.2byte	(.L234-.L236)/2
 2981 019a 8D01     		.2byte	(.L234-.L236)/2
 2982 019c 7B00     		.2byte	(.L244-.L236)/2
 2983 019e 6501     		.2byte	(.L238-.L236)/2
 2984 01a0 8D01     		.2byte	(.L234-.L236)/2
 2985 01a2 6501     		.2byte	(.L238-.L236)/2
 2986 01a4 8D01     		.2byte	(.L234-.L236)/2
 2987 01a6 8D01     		.2byte	(.L234-.L236)/2
 2988 01a8 8D01     		.2byte	(.L234-.L236)/2
 2989 01aa 6501     		.2byte	(.L238-.L236)/2
 2990 01ac 8D01     		.2byte	(.L234-.L236)/2
 2991 01ae 8D01     		.2byte	(.L234-.L236)/2
 2992 01b0 8D01     		.2byte	(.L234-.L236)/2
 2993 01b2 8D01     		.2byte	(.L234-.L236)/2
 2994 01b4 8D01     		.2byte	(.L234-.L236)/2
 2995 01b6 8D01     		.2byte	(.L234-.L236)/2
 2996 01b8 8D01     		.2byte	(.L234-.L236)/2
 2997 01ba 8D01     		.2byte	(.L234-.L236)/2
 2998 01bc 1D01     		.2byte	(.L243-.L236)/2
 2999 01be 0801     		.2byte	(.L242-.L236)/2
 3000 01c0 6501     		.2byte	(.L238-.L236)/2
 3001 01c2 4201     		.2byte	(.L235-.L236)/2
 3002 01c4 8D01     		.2byte	(.L234-.L236)/2
 3003 01c6 8D01     		.2byte	(.L234-.L236)/2
 3004 01c8 8D01     		.2byte	(.L234-.L236)/2
 3005 01ca D200     		.2byte	(.L241-.L236)/2
 3006 01cc 8D01     		.2byte	(.L234-.L236)/2
 3007 01ce 8D01     		.2byte	(.L234-.L236)/2
 3008 01d0 8D01     		.2byte	(.L234-.L236)/2
 3009 01d2 8D01     		.2byte	(.L234-.L236)/2
 3010 01d4 8D01     		.2byte	(.L234-.L236)/2
 3011 01d6 8D01     		.2byte	(.L234-.L236)/2
 3012 01d8 8D01     		.2byte	(.L234-.L236)/2
 3013 01da 8D01     		.2byte	(.L234-.L236)/2
 3014 01dc 8D01     		.2byte	(.L234-.L236)/2
 3015 01de 8D01     		.2byte	(.L234-.L236)/2
 3016 01e0 8D01     		.2byte	(.L234-.L236)/2
 3017 01e2 8D01     		.2byte	(.L234-.L236)/2
 3018 01e4 8D01     		.2byte	(.L234-.L236)/2
 3019 01e6 8D01     		.2byte	(.L234-.L236)/2
 3020 01e8 8D01     		.2byte	(.L234-.L236)/2
 3021 01ea 8D01     		.2byte	(.L234-.L236)/2
 3022 01ec 8D01     		.2byte	(.L234-.L236)/2
 3023 01ee 8D01     		.2byte	(.L234-.L236)/2
 3024 01f0 8D01     		.2byte	(.L234-.L236)/2
 3025 01f2 8D01     		.2byte	(.L234-.L236)/2
 3026 01f4 8D01     		.2byte	(.L234-.L236)/2
 3027 01f6 8D01     		.2byte	(.L234-.L236)/2
 3028 01f8 8D01     		.2byte	(.L234-.L236)/2
 3029 01fa 8D01     		.2byte	(.L234-.L236)/2
 3030 01fc 8D01     		.2byte	(.L234-.L236)/2
 3031 01fe 8D01     		.2byte	(.L234-.L236)/2
 3032 0200 8D01     		.2byte	(.L234-.L236)/2
 3033 0202 8D01     		.2byte	(.L234-.L236)/2
 3034 0204 8D01     		.2byte	(.L234-.L236)/2
 3035 0206 8D01     		.2byte	(.L234-.L236)/2
 3036 0208 8D01     		.2byte	(.L234-.L236)/2
ARM GAS  /tmp/ccJBQgIh.s 			page 117


 3037 020a 8D01     		.2byte	(.L234-.L236)/2
 3038 020c 8D01     		.2byte	(.L234-.L236)/2
 3039 020e 8D01     		.2byte	(.L234-.L236)/2
 3040 0210 8D01     		.2byte	(.L234-.L236)/2
 3041 0212 8D01     		.2byte	(.L234-.L236)/2
 3042 0214 8D01     		.2byte	(.L234-.L236)/2
 3043 0216 8D01     		.2byte	(.L234-.L236)/2
 3044 0218 8D01     		.2byte	(.L234-.L236)/2
 3045 021a 8D01     		.2byte	(.L234-.L236)/2
 3046 021c 8D01     		.2byte	(.L234-.L236)/2
 3047 021e 8D01     		.2byte	(.L234-.L236)/2
 3048 0220 8D01     		.2byte	(.L234-.L236)/2
 3049 0222 8D01     		.2byte	(.L234-.L236)/2
 3050 0224 8D01     		.2byte	(.L234-.L236)/2
 3051 0226 8D01     		.2byte	(.L234-.L236)/2
 3052 0228 8D01     		.2byte	(.L234-.L236)/2
 3053 022a 8D01     		.2byte	(.L234-.L236)/2
 3054 022c 8D01     		.2byte	(.L234-.L236)/2
 3055 022e 8D01     		.2byte	(.L234-.L236)/2
 3056 0230 8D01     		.2byte	(.L234-.L236)/2
 3057 0232 8D01     		.2byte	(.L234-.L236)/2
 3058 0234 8D01     		.2byte	(.L234-.L236)/2
 3059 0236 8D01     		.2byte	(.L234-.L236)/2
 3060 0238 8D01     		.2byte	(.L234-.L236)/2
 3061 023a 8D01     		.2byte	(.L234-.L236)/2
 3062 023c 1001     		.2byte	(.L240-.L236)/2
 3063 023e FB00     		.2byte	(.L239-.L236)/2
 3064 0240 6501     		.2byte	(.L238-.L236)/2
 3065 0242 F300     		.2byte	(.L237-.L236)/2
 3066 0244 8D01     		.2byte	(.L234-.L236)/2
 3067 0246 8D01     		.2byte	(.L234-.L236)/2
 3068 0248 8D01     		.2byte	(.L234-.L236)/2
 3069 024a 4201     		.2byte	(.L235-.L236)/2
 3070              	.LVL236:
 3071              		.p2align 1
 3072              	.L278:
1398:Lib/ssc/src/ecatslv.c ****     {
 3073              		.loc 1 1398 5 is_stmt 0 view .LVU910
 3074 024c 4FF00008 		mov	r8, #0
 3075 0250 7AE7     		b	.L228
 3076              	.LVL237:
 3077              	.L244:
1443:Lib/ssc/src/ecatslv.c **** 
 3078              		.loc 1 1443 13 is_stmt 1 view .LVU911
1445:Lib/ssc/src/ecatslv.c **** 
 3079              		.loc 1 1445 13 view .LVU912
 3080 0252 FFF7FEFF 		bl	BackToInitTransition
 3081              	.LVL238:
1447:Lib/ssc/src/ecatslv.c ****         case INIT_2_PREOP :
 3082              		.loc 1 1447 13 view .LVU913
1693:Lib/ssc/src/ecatslv.c ****     {
 3083              		.loc 1 1693 5 view .LVU914
1443:Lib/ssc/src/ecatslv.c **** 
 3084              		.loc 1 1443 20 is_stmt 0 view .LVU915
 3085 0256 4FF01308 		mov	r8, #19
 3086 025a 0EE1     		b	.L247
 3087              	.LVL239:
ARM GAS  /tmp/ccJBQgIh.s 			page 118


 3088              	.L248:
1450:Lib/ssc/src/ecatslv.c **** 
 3089              		.loc 1 1450 12 is_stmt 1 view .LVU916
 3090 025c FFF7FEFF 		bl	UpdateEEPROMLoadedState
 3091              	.LVL240:
1452:Lib/ssc/src/ecatslv.c ****             {
 3092              		.loc 1 1452 13 view .LVU917
1452:Lib/ssc/src/ecatslv.c ****             {
 3093              		.loc 1 1452 30 is_stmt 0 view .LVU918
 3094 0260 584B     		ldr	r3, .L303+4
 3095 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1452:Lib/ssc/src/ecatslv.c ****             {
 3096              		.loc 1 1452 16 view .LVU919
 3097 0264 002B     		cmp	r3, #0
 3098 0266 00F0F880 		beq	.L280
 3099              	.LVL241:
1457:Lib/ssc/src/ecatslv.c ****             {
 3100              		.loc 1 1457 13 is_stmt 1 view .LVU920
1457:Lib/ssc/src/ecatslv.c ****             {
 3101              		.loc 1 1457 16 is_stmt 0 view .LVU921
 3102 026a B8F1000F 		cmp	r8, #0
 3103 026e 7FF43BAF 		bne	.L250
1463:Lib/ssc/src/ecatslv.c ****             if (result == 0)
 3104              		.loc 1 1463 13 is_stmt 1 view .LVU922
1463:Lib/ssc/src/ecatslv.c ****             if (result == 0)
 3105              		.loc 1 1463 22 is_stmt 0 view .LVU923
 3106 0272 FFF7FEFF 		bl	MBX_StartMailboxHandler
 3107              	.LVL242:
1464:Lib/ssc/src/ecatslv.c ****             {
 3108              		.loc 1 1464 13 is_stmt 1 view .LVU924
1464:Lib/ssc/src/ecatslv.c ****             {
 3109              		.loc 1 1464 16 is_stmt 0 view .LVU925
 3110 0276 8046     		mov	r8, r0
 3111 0278 68B1     		cbz	r0, .L287
 3112              	.L251:
 3113              	.LVL243:
1478:Lib/ssc/src/ecatslv.c ****             {
 3114              		.loc 1 1478 13 is_stmt 1 view .LVU926
1478:Lib/ssc/src/ecatslv.c ****             {
 3115              		.loc 1 1478 15 is_stmt 0 view .LVU927
 3116 027a B8F1000F 		cmp	r8, #0
 3117 027e 3FF433AF 		beq	.L250
1478:Lib/ssc/src/ecatslv.c ****             {
 3118              		.loc 1 1478 28 discriminator 1 view .LVU928
 3119 0282 B8F1FF0F 		cmp	r8, #255
 3120 0286 3FF42FAF 		beq	.L250
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3121              		.loc 1 1481 17 is_stmt 1 view .LVU929
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3122              		.loc 1 1481 20 is_stmt 0 view .LVU930
 3123 028a 4F4B     		ldr	r3, .L303+8
 3124 028c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3125              		.loc 1 1481 19 view .LVU931
 3126 028e 73B1     		cbz	r3, .L288
 3127              	.L252:
1484:Lib/ssc/src/ecatslv.c ****             }
ARM GAS  /tmp/ccJBQgIh.s 			page 119


 3128              		.loc 1 1484 18 is_stmt 1 view .LVU932
 3129 0290 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3130              	.LVL244:
 3131 0294 28E7     		b	.L250
 3132              	.LVL245:
 3133              	.L287:
1466:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
 3134              		.loc 1 1466 17 view .LVU933
1466:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
 3135              		.loc 1 1466 33 is_stmt 0 view .LVU934
 3136 0296 4C4B     		ldr	r3, .L303+8
 3137 0298 0022     		movs	r2, #0
 3138 029a 1A70     		strb	r2, [r3]
1471:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
 3139              		.loc 1 1471 17 is_stmt 1 view .LVU935
1471:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
 3140              		.loc 1 1471 26 is_stmt 0 view .LVU936
 3141 029c FFF7FEFF 		bl	APPL_StartMailboxHandler
 3142              	.LVL246:
1472:Lib/ssc/src/ecatslv.c ****                 {
 3143              		.loc 1 1472 17 is_stmt 1 view .LVU937
1472:Lib/ssc/src/ecatslv.c ****                 {
 3144              		.loc 1 1472 20 is_stmt 0 view .LVU938
 3145 02a0 8046     		mov	r8, r0
 3146 02a2 0028     		cmp	r0, #0
 3147 02a4 E9D1     		bne	.L251
1474:Lib/ssc/src/ecatslv.c ****                 }
 3148              		.loc 1 1474 21 is_stmt 1 view .LVU939
1474:Lib/ssc/src/ecatslv.c ****                 }
 3149              		.loc 1 1474 33 is_stmt 0 view .LVU940
 3150 02a6 494B     		ldr	r3, .L303+12
 3151 02a8 0122     		movs	r2, #1
 3152 02aa 1A70     		strb	r2, [r3]
 3153 02ac E5E7     		b	.L251
 3154              	.LVL247:
 3155              	.L288:
1482:Lib/ssc/src/ecatslv.c **** 
 3156              		.loc 1 1482 21 is_stmt 1 view .LVU941
 3157 02ae FFF7FEFF 		bl	APPL_StopMailboxHandler
 3158              	.LVL248:
 3159 02b2 EDE7     		b	.L252
 3160              	.LVL249:
 3161              	.L245:
1492:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
 3162              		.loc 1 1492 13 view .LVU942
1492:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
 3163              		.loc 1 1492 22 is_stmt 0 view .LVU943
 3164 02b4 FFF7FEFF 		bl	StartInputHandler
 3165              	.LVL250:
1493:Lib/ssc/src/ecatslv.c ****             {
 3166              		.loc 1 1493 13 is_stmt 1 view .LVU944
1493:Lib/ssc/src/ecatslv.c ****             {
 3167              		.loc 1 1493 16 is_stmt 0 view .LVU945
 3168 02b8 8046     		mov	r8, r0
 3169 02ba 68B1     		cbz	r0, .L289
 3170              	.LVL251:
 3171              	.L253:
ARM GAS  /tmp/ccJBQgIh.s 			page 120


1510:Lib/ssc/src/ecatslv.c ****             {
 3172              		.loc 1 1510 13 is_stmt 1 view .LVU946
1510:Lib/ssc/src/ecatslv.c ****             {
 3173              		.loc 1 1510 15 is_stmt 0 view .LVU947
 3174 02bc B8F1000F 		cmp	r8, #0
 3175 02c0 3FF412AF 		beq	.L250
1510:Lib/ssc/src/ecatslv.c ****             {
 3176              		.loc 1 1510 28 discriminator 1 view .LVU948
 3177 02c4 B8F1FF0F 		cmp	r8, #255
 3178 02c8 3FF40EAF 		beq	.L250
1512:Lib/ssc/src/ecatslv.c ****                 {
 3179              		.loc 1 1512 17 is_stmt 1 view .LVU949
1512:Lib/ssc/src/ecatslv.c ****                 {
 3180              		.loc 1 1512 20 is_stmt 0 view .LVU950
 3181 02cc 3E4B     		ldr	r3, .L303+8
 3182 02ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1512:Lib/ssc/src/ecatslv.c ****                 {
 3183              		.loc 1 1512 19 view .LVU951
 3184 02d0 9BB1     		cbz	r3, .L290
 3185              	.L254:
1519:Lib/ssc/src/ecatslv.c ****             }
 3186              		.loc 1 1519 17 is_stmt 1 view .LVU952
 3187 02d2 FFF7FEFF 		bl	StopInputHandler
 3188              	.LVL252:
 3189 02d6 07E7     		b	.L250
 3190              	.LVL253:
 3191              	.L289:
1495:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
 3192              		.loc 1 1495 17 view .LVU953
1495:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
 3193              		.loc 1 1495 33 is_stmt 0 view .LVU954
 3194 02d8 3B4B     		ldr	r3, .L303+8
 3195 02da 0022     		movs	r2, #0
 3196 02dc 1A70     		strb	r2, [r3]
1496:Lib/ssc/src/ecatslv.c **** 
 3197              		.loc 1 1496 17 is_stmt 1 view .LVU955
1496:Lib/ssc/src/ecatslv.c **** 
 3198              		.loc 1 1496 26 is_stmt 0 view .LVU956
 3199 02de 3C48     		ldr	r0, .L303+16
 3200              	.LVL254:
1496:Lib/ssc/src/ecatslv.c **** 
 3201              		.loc 1 1496 26 view .LVU957
 3202 02e0 FFF7FEFF 		bl	APPL_StartInputHandler
 3203              	.LVL255:
1498:Lib/ssc/src/ecatslv.c ****                 {
 3204              		.loc 1 1498 17 is_stmt 1 view .LVU958
1498:Lib/ssc/src/ecatslv.c ****                 {
 3205              		.loc 1 1498 19 is_stmt 0 view .LVU959
 3206 02e4 8046     		mov	r8, r0
 3207 02e6 0028     		cmp	r0, #0
 3208 02e8 E8D1     		bne	.L253
1502:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3209              		.loc 1 1502 21 is_stmt 1 view .LVU960
 3210 02ea 394B     		ldr	r3, .L303+16
 3211 02ec 1888     		ldrh	r0, [r3]
 3212              	.LVL256:
1502:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
ARM GAS  /tmp/ccJBQgIh.s 			page 121


 3213              		.loc 1 1502 21 is_stmt 0 view .LVU961
 3214 02ee FFF7FEFF 		bl	SetALEventMask
 3215              	.LVL257:
1505:Lib/ssc/src/ecatslv.c ****                 }
 3216              		.loc 1 1505 21 is_stmt 1 view .LVU962
1505:Lib/ssc/src/ecatslv.c ****                 }
 3217              		.loc 1 1505 45 is_stmt 0 view .LVU963
 3218 02f2 384B     		ldr	r3, .L303+20
 3219 02f4 0122     		movs	r2, #1
 3220 02f6 1A70     		strb	r2, [r3]
 3221 02f8 E0E7     		b	.L253
 3222              	.LVL258:
 3223              	.L290:
1516:Lib/ssc/src/ecatslv.c ****                 }
 3224              		.loc 1 1516 21 is_stmt 1 view .LVU964
 3225 02fa FFF7FEFF 		bl	APPL_StopInputHandler
 3226              	.LVL259:
 3227 02fe E8E7     		b	.L254
 3228              	.LVL260:
 3229              	.L241:
1525:Lib/ssc/src/ecatslv.c ****             if(result == 0)
 3230              		.loc 1 1525 13 view .LVU965
1525:Lib/ssc/src/ecatslv.c ****             if(result == 0)
 3231              		.loc 1 1525 22 is_stmt 0 view .LVU966
 3232 0300 FFF7FEFF 		bl	StartOutputHandler
 3233              	.LVL261:
1526:Lib/ssc/src/ecatslv.c ****             {
 3234              		.loc 1 1526 13 is_stmt 1 view .LVU967
1526:Lib/ssc/src/ecatslv.c ****             {
 3235              		.loc 1 1526 15 is_stmt 0 view .LVU968
 3236 0304 8046     		mov	r8, r0
 3237 0306 68B1     		cbz	r0, .L291
 3238              	.L255:
 3239              	.LVL262:
1539:Lib/ssc/src/ecatslv.c ****             {
 3240              		.loc 1 1539 13 is_stmt 1 view .LVU969
1539:Lib/ssc/src/ecatslv.c ****             {
 3241              		.loc 1 1539 16 is_stmt 0 view .LVU970
 3242 0308 B8F1000F 		cmp	r8, #0
 3243 030c 3FF4ECAE 		beq	.L250
1539:Lib/ssc/src/ecatslv.c ****             {
 3244              		.loc 1 1539 30 discriminator 1 view .LVU971
 3245 0310 B8F1FF0F 		cmp	r8, #255
 3246 0314 3FF4E8AE 		beq	.L250
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3247              		.loc 1 1541 17 is_stmt 1 view .LVU972
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3248              		.loc 1 1541 20 is_stmt 0 view .LVU973
 3249 0318 2B4B     		ldr	r3, .L303+8
 3250 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3251              		.loc 1 1541 19 view .LVU974
 3252 031c 73B1     		cbz	r3, .L292
 3253              	.L256:
1544:Lib/ssc/src/ecatslv.c ****             }
 3254              		.loc 1 1544 17 is_stmt 1 view .LVU975
 3255 031e FFF7FEFF 		bl	StopOutputHandler
ARM GAS  /tmp/ccJBQgIh.s 			page 122


 3256              	.LVL263:
 3257 0322 E1E6     		b	.L250
 3258              	.LVL264:
 3259              	.L291:
1528:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
 3260              		.loc 1 1528 17 view .LVU976
1528:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
 3261              		.loc 1 1528 33 is_stmt 0 view .LVU977
 3262 0324 284B     		ldr	r3, .L303+8
 3263 0326 0022     		movs	r2, #0
 3264 0328 1A70     		strb	r2, [r3]
1529:Lib/ssc/src/ecatslv.c **** 
 3265              		.loc 1 1529 17 is_stmt 1 view .LVU978
1529:Lib/ssc/src/ecatslv.c **** 
 3266              		.loc 1 1529 26 is_stmt 0 view .LVU979
 3267 032a FFF7FEFF 		bl	APPL_StartOutputHandler
 3268              	.LVL265:
1531:Lib/ssc/src/ecatslv.c ****                 {
 3269              		.loc 1 1531 17 is_stmt 1 view .LVU980
1531:Lib/ssc/src/ecatslv.c ****                 {
 3270              		.loc 1 1531 19 is_stmt 0 view .LVU981
 3271 032e 8046     		mov	r8, r0
 3272 0330 0028     		cmp	r0, #0
 3273 0332 E9D1     		bne	.L255
1534:Lib/ssc/src/ecatslv.c ****                 }
 3274              		.loc 1 1534 21 is_stmt 1 view .LVU982
1534:Lib/ssc/src/ecatslv.c ****                 }
 3275              		.loc 1 1534 46 is_stmt 0 view .LVU983
 3276 0334 284B     		ldr	r3, .L303+24
 3277 0336 0122     		movs	r2, #1
 3278 0338 1A70     		strb	r2, [r3]
 3279 033a E5E7     		b	.L255
 3280              	.LVL266:
 3281              	.L292:
1542:Lib/ssc/src/ecatslv.c **** 
 3282              		.loc 1 1542 21 is_stmt 1 view .LVU984
 3283 033c FFF7FEFF 		bl	APPL_StopOutputHandler
 3284              	.LVL267:
 3285 0340 EDE7     		b	.L256
 3286              	.LVL268:
 3287              	.L237:
1551:Lib/ssc/src/ecatslv.c **** 
 3288              		.loc 1 1551 13 view .LVU985
 3289 0342 FFF7FEFF 		bl	APPL_StopOutputHandler
 3290              	.LVL269:
1553:Lib/ssc/src/ecatslv.c **** 
 3291              		.loc 1 1553 13 view .LVU986
 3292 0346 FFF7FEFF 		bl	StopOutputHandler
 3293              	.LVL270:
1555:Lib/ssc/src/ecatslv.c **** 
 3294              		.loc 1 1555 13 view .LVU987
1555:Lib/ssc/src/ecatslv.c **** 
 3295              		.loc 1 1555 29 is_stmt 0 view .LVU988
 3296 034a 1F4B     		ldr	r3, .L303+8
 3297 034c 0022     		movs	r2, #0
 3298 034e 1A70     		strb	r2, [r3]
1557:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 123


 3299              		.loc 1 1557 13 is_stmt 1 view .LVU989
 3300 0350 CAE6     		b	.L250
 3301              	.L239:
1561:Lib/ssc/src/ecatslv.c **** 
 3302              		.loc 1 1561 13 view .LVU990
1561:Lib/ssc/src/ecatslv.c **** 
 3303              		.loc 1 1561 22 is_stmt 0 view .LVU991
 3304 0352 FFF7FEFF 		bl	APPL_StopOutputHandler
 3305              	.LVL271:
 3306 0356 8046     		mov	r8, r0
 3307              	.LVL272:
1563:Lib/ssc/src/ecatslv.c **** 
 3308              		.loc 1 1563 13 is_stmt 1 view .LVU992
 3309 0358 FFF7FEFF 		bl	StopOutputHandler
 3310              	.LVL273:
1565:Lib/ssc/src/ecatslv.c **** 
 3311              		.loc 1 1565 13 view .LVU993
1565:Lib/ssc/src/ecatslv.c **** 
 3312              		.loc 1 1565 29 is_stmt 0 view .LVU994
 3313 035c 1A4B     		ldr	r3, .L303+8
 3314 035e 0022     		movs	r2, #0
 3315 0360 1A70     		strb	r2, [r3]
1567:Lib/ssc/src/ecatslv.c ****                 break;
 3316              		.loc 1 1567 13 is_stmt 1 view .LVU995
1567:Lib/ssc/src/ecatslv.c ****                 break;
 3317              		.loc 1 1567 16 is_stmt 0 view .LVU996
 3318 0362 B8F1000F 		cmp	r8, #0
 3319 0366 7FF4BFAE 		bne	.L250
 3320              	.LVL274:
1570:Lib/ssc/src/ecatslv.c **** 
 3321              		.loc 1 1570 24 view .LVU997
 3322 036a 4224     		movs	r4, #66
 3323              	.LVL275:
 3324              	.L242:
1574:Lib/ssc/src/ecatslv.c ****            
 3325              		.loc 1 1574 13 is_stmt 1 view .LVU998
 3326 036c FFF7FEFF 		bl	APPL_StopInputHandler
 3327              	.LVL276:
1576:Lib/ssc/src/ecatslv.c **** 
 3328              		.loc 1 1576 13 view .LVU999
 3329 0370 FFF7FEFF 		bl	StopInputHandler
 3330              	.LVL277:
1578:Lib/ssc/src/ecatslv.c **** 
 3331              		.loc 1 1578 13 view .LVU1000
1578:Lib/ssc/src/ecatslv.c **** 
 3332              		.loc 1 1578 29 is_stmt 0 view .LVU1001
 3333 0374 144B     		ldr	r3, .L303+8
 3334 0376 0022     		movs	r2, #0
 3335 0378 1A70     		strb	r2, [r3]
1580:Lib/ssc/src/ecatslv.c **** 
 3336              		.loc 1 1580 13 is_stmt 1 view .LVU1002
 3337 037a B5E6     		b	.L250
 3338              	.LVL278:
 3339              	.L240:
1584:Lib/ssc/src/ecatslv.c **** 
 3340              		.loc 1 1584 13 view .LVU1003
1584:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 124


 3341              		.loc 1 1584 22 is_stmt 0 view .LVU1004
 3342 037c FFF7FEFF 		bl	APPL_StopOutputHandler
 3343              	.LVL279:
 3344 0380 8046     		mov	r8, r0
 3345              	.LVL280:
1586:Lib/ssc/src/ecatslv.c **** 
 3346              		.loc 1 1586 13 is_stmt 1 view .LVU1005
 3347 0382 FFF7FEFF 		bl	StopOutputHandler
 3348              	.LVL281:
1588:Lib/ssc/src/ecatslv.c **** 
 3349              		.loc 1 1588 13 view .LVU1006
1588:Lib/ssc/src/ecatslv.c **** 
 3350              		.loc 1 1588 29 is_stmt 0 view .LVU1007
 3351 0386 104B     		ldr	r3, .L303+8
 3352 0388 0022     		movs	r2, #0
 3353 038a 1A70     		strb	r2, [r3]
1590:Lib/ssc/src/ecatslv.c ****                 break;
 3354              		.loc 1 1590 13 is_stmt 1 view .LVU1008
1590:Lib/ssc/src/ecatslv.c ****                 break;
 3355              		.loc 1 1590 16 is_stmt 0 view .LVU1009
 3356 038c B8F1000F 		cmp	r8, #0
 3357 0390 7FF4AAAE 		bne	.L250
 3358              	.LVL282:
1593:Lib/ssc/src/ecatslv.c **** 
 3359              		.loc 1 1593 24 view .LVU1010
 3360 0394 4124     		movs	r4, #65
 3361              	.LVL283:
 3362              	.L243:
1597:Lib/ssc/src/ecatslv.c ****             
 3363              		.loc 1 1597 13 is_stmt 1 view .LVU1011
1597:Lib/ssc/src/ecatslv.c ****             
 3364              		.loc 1 1597 22 is_stmt 0 view .LVU1012
 3365 0396 FFF7FEFF 		bl	APPL_StopInputHandler
 3366              	.LVL284:
 3367 039a 8046     		mov	r8, r0
 3368              	.LVL285:
1599:Lib/ssc/src/ecatslv.c **** 
 3369              		.loc 1 1599 13 is_stmt 1 view .LVU1013
 3370 039c FFF7FEFF 		bl	StopInputHandler
 3371              	.LVL286:
1601:Lib/ssc/src/ecatslv.c **** 
 3372              		.loc 1 1601 13 view .LVU1014
1601:Lib/ssc/src/ecatslv.c **** 
 3373              		.loc 1 1601 29 is_stmt 0 view .LVU1015
 3374 03a0 094B     		ldr	r3, .L303+8
 3375 03a2 0022     		movs	r2, #0
 3376 03a4 1A70     		strb	r2, [r3]
1603:Lib/ssc/src/ecatslv.c ****                 break;
 3377              		.loc 1 1603 13 is_stmt 1 view .LVU1016
1603:Lib/ssc/src/ecatslv.c ****                 break;
 3378              		.loc 1 1603 16 is_stmt 0 view .LVU1017
 3379 03a6 B8F1000F 		cmp	r8, #0
 3380 03aa 7FF49DAE 		bne	.L250
 3381              	.LVL287:
1605:Lib/ssc/src/ecatslv.c **** 
 3382              		.loc 1 1605 24 view .LVU1018
 3383 03ae 2124     		movs	r4, #33
ARM GAS  /tmp/ccJBQgIh.s 			page 125


 3384              	.LVL288:
 3385              	.L246:
1608:Lib/ssc/src/ecatslv.c ****             result = APPL_StopMailboxHandler();
 3386              		.loc 1 1608 13 is_stmt 1 view .LVU1019
 3387 03b0 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3388              	.LVL289:
1609:Lib/ssc/src/ecatslv.c **** 
 3389              		.loc 1 1609 13 view .LVU1020
1609:Lib/ssc/src/ecatslv.c **** 
 3390              		.loc 1 1609 22 is_stmt 0 view .LVU1021
 3391 03b4 FFF7FEFF 		bl	APPL_StopMailboxHandler
 3392              	.LVL290:
 3393 03b8 8046     		mov	r8, r0
 3394              	.LVL291:
1611:Lib/ssc/src/ecatslv.c ****             break;
 3395              		.loc 1 1611 13 is_stmt 1 view .LVU1022
 3396 03ba FFF7FEFF 		bl	BackToInitTransition
 3397              	.LVL292:
1612:Lib/ssc/src/ecatslv.c **** 
 3398              		.loc 1 1612 13 view .LVU1023
 3399 03be 93E6     		b	.L250
 3400              	.L304:
 3401              		.align	2
 3402              	.L303:
 3403 03c0 00000000 		.word	.LANCHOR35
 3404 03c4 00000000 		.word	.LANCHOR0
 3405 03c8 00000000 		.word	.LANCHOR34
 3406 03cc 00000000 		.word	bMbxRunning
 3407 03d0 00000000 		.word	.LANCHOR12
 3408 03d4 00000000 		.word	.LANCHOR32
 3409 03d8 00000000 		.word	.LANCHOR31
 3410              	.LVL293:
 3411              	.L249:
1615:Lib/ssc/src/ecatslv.c ****         case PREOP_2_PREOP:
 3412              		.loc 1 1615 13 view .LVU1024
 3413 03dc FFF7FEFF 		bl	BackToInitTransition
 3414              	.LVL294:
 3415              	.L235:
1619:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
 3416              		.loc 1 1619 13 view .LVU1025
1619:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
 3417              		.loc 1 1619 15 is_stmt 0 view .LVU1026
 3418 03e0 8FB9     		cbnz	r7, .L293
 3419              	.L257:
1622:Lib/ssc/src/ecatslv.c ****             {
 3420              		.loc 1 1622 13 is_stmt 1 view .LVU1027
1622:Lib/ssc/src/ecatslv.c ****             {
 3421              		.loc 1 1622 16 is_stmt 0 view .LVU1028
 3422 03e2 504B     		ldr	r3, .L305
 3423 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1622:Lib/ssc/src/ecatslv.c ****             {
 3424              		.loc 1 1622 15 view .LVU1029
 3425 03e6 002B     		cmp	r3, #0
 3426 03e8 77D1     		bne	.L281
1625:Lib/ssc/src/ecatslv.c ****                 {
 3427              		.loc 1 1625 17 is_stmt 1 view .LVU1030
1625:Lib/ssc/src/ecatslv.c ****                 {
ARM GAS  /tmp/ccJBQgIh.s 			page 126


 3428              		.loc 1 1625 32 is_stmt 0 view .LVU1031
 3429 03ea 4F4B     		ldr	r3, .L305+4
 3430 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1625:Lib/ssc/src/ecatslv.c ****                 {
 3431              		.loc 1 1625 20 view .LVU1032
 3432 03ee 13F00C0F 		tst	r3, #12
 3433 03f2 75D0     		beq	.L282
1627:Lib/ssc/src/ecatslv.c ****                     {
 3434              		.loc 1 1627 21 is_stmt 1 view .LVU1033
1627:Lib/ssc/src/ecatslv.c ****                     {
 3435              		.loc 1 1627 38 is_stmt 0 view .LVU1034
 3436 03f4 4D4B     		ldr	r3, .L305+8
 3437 03f6 1B88     		ldrh	r3, [r3]
1627:Lib/ssc/src/ecatslv.c ****                     {
 3438              		.loc 1 1627 23 view .LVU1035
 3439 03f8 4BB9     		cbnz	r3, .L294
1634:Lib/ssc/src/ecatslv.c ****                     {
 3440              		.loc 1 1634 21 is_stmt 1 view .LVU1036
1634:Lib/ssc/src/ecatslv.c ****                     {
 3441              		.loc 1 1634 37 is_stmt 0 view .LVU1037
 3442 03fa 4D4B     		ldr	r3, .L305+12
 3443 03fc 1B88     		ldrh	r3, [r3]
1634:Lib/ssc/src/ecatslv.c ****                     {
 3444              		.loc 1 1634 23 view .LVU1038
 3445 03fe 63B9     		cbnz	r3, .L295
1642:Lib/ssc/src/ecatslv.c ****             break;
 3446              		.loc 1 1642 20 view .LVU1039
 3447 0400 4FF0FE08 		mov	r8, #254
 3448 0404 39E0     		b	.L247
 3449              	.L293:
1620:Lib/ssc/src/ecatslv.c **** 
 3450              		.loc 1 1620 17 is_stmt 1 view .LVU1040
 3451 0406 2046     		mov	r0, r4
 3452 0408 FFF7FEFF 		bl	APPL_AckErrorInd
 3453              	.LVL295:
 3454 040c E9E7     		b	.L257
 3455              	.L294:
1630:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3456              		.loc 1 1630 25 view .LVU1041
 3457 040e 0220     		movs	r0, #2
 3458 0410 FFF7FEFF 		bl	EnableSyncManChannel
 3459              	.LVL296:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3460              		.loc 1 1642 20 is_stmt 0 view .LVU1042
 3461 0414 4FF0FE08 		mov	r8, #254
 3462 0418 2FE0     		b	.L247
 3463              	.L295:
1637:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3464              		.loc 1 1637 25 is_stmt 1 view .LVU1043
 3465 041a 0320     		movs	r0, #3
 3466 041c FFF7FEFF 		bl	EnableSyncManChannel
 3467              	.LVL297:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3468              		.loc 1 1642 20 is_stmt 0 view .LVU1044
 3469 0420 4FF0FE08 		mov	r8, #254
 3470 0424 29E0     		b	.L247
 3471              	.L238:
ARM GAS  /tmp/ccJBQgIh.s 			page 127


1654:Lib/ssc/src/ecatslv.c ****             break;
 3472              		.loc 1 1654 20 view .LVU1045
 3473 0426 4FF01108 		mov	r8, #17
 3474 042a 26E0     		b	.L247
 3475              	.LVL298:
 3476              	.L260:
1670:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
 3477              		.loc 1 1670 13 is_stmt 1 view .LVU1046
 3478 042c FFF7FEFF 		bl	APPL_StopOutputHandler
 3479              	.LVL299:
1671:Lib/ssc/src/ecatslv.c ****         case STATE_SAFEOP:
 3480              		.loc 1 1671 13 view .LVU1047
 3481 0430 FFF7FEFF 		bl	StopOutputHandler
 3482              	.LVL300:
 3483              	.L259:
1674:Lib/ssc/src/ecatslv.c **** 
 3484              		.loc 1 1674 13 view .LVU1048
 3485 0434 FFF7FEFF 		bl	APPL_StopInputHandler
 3486              	.LVL301:
1676:Lib/ssc/src/ecatslv.c **** 
 3487              		.loc 1 1676 13 view .LVU1049
 3488 0438 FFF7FEFF 		bl	StopInputHandler
 3489              	.LVL302:
 3490              	.L261:
1680:Lib/ssc/src/ecatslv.c ****             {
 3491              		.loc 1 1680 13 view .LVU1050
1680:Lib/ssc/src/ecatslv.c ****             {
 3492              		.loc 1 1680 16 is_stmt 0 view .LVU1051
 3493 043c B8F1160F 		cmp	r8, #22
 3494 0440 03D0     		beq	.L296
1689:Lib/ssc/src/ecatslv.c ****         }
 3495              		.loc 1 1689 17 is_stmt 1 view .LVU1052
1689:Lib/ssc/src/ecatslv.c ****         }
 3496              		.loc 1 1689 27 is_stmt 0 view .LVU1053
 3497 0442 394B     		ldr	r3, .L305+4
 3498 0444 0222     		movs	r2, #2
 3499 0446 1A70     		strb	r2, [r3]
 3500 0448 4EE6     		b	.L250
 3501              	.L296:
1683:Lib/ssc/src/ecatslv.c ****                 APPL_StopMailboxHandler();
 3502              		.loc 1 1683 17 is_stmt 1 view .LVU1054
 3503 044a FFF7FEFF 		bl	MBX_StopMailboxHandler
 3504              	.LVL303:
1684:Lib/ssc/src/ecatslv.c **** 
 3505              		.loc 1 1684 17 view .LVU1055
 3506 044e FFF7FEFF 		bl	APPL_StopMailboxHandler
 3507              	.LVL304:
1686:Lib/ssc/src/ecatslv.c ****             }
 3508              		.loc 1 1686 17 view .LVU1056
1686:Lib/ssc/src/ecatslv.c ****             }
 3509              		.loc 1 1686 27 is_stmt 0 view .LVU1057
 3510 0452 354B     		ldr	r3, .L305+4
 3511 0454 0122     		movs	r2, #1
 3512 0456 1A70     		strb	r2, [r3]
 3513 0458 46E6     		b	.L250
 3514              	.LVL305:
 3515              	.L280:
ARM GAS  /tmp/ccJBQgIh.s 			page 128


1455:Lib/ssc/src/ecatslv.c ****             }
 3516              		.loc 1 1455 24 view .LVU1058
 3517 045a 4FF05108 		mov	r8, #81
 3518 045e 43E6     		b	.L250
 3519              	.LVL306:
 3520              	.L264:
1702:Lib/ssc/src/ecatslv.c ****         {
 3521              		.loc 1 1702 9 view .LVU1059
 3522 0460 482C     		cmp	r4, #72
 3523 0462 03D0     		beq	.L263
 3524              	.L265:
1713:Lib/ssc/src/ecatslv.c ****                 break;
 3525              		.loc 1 1713 17 is_stmt 1 view .LVU1060
1713:Lib/ssc/src/ecatslv.c ****                 break;
 3526              		.loc 1 1713 35 is_stmt 0 view .LVU1061
 3527 0464 334B     		ldr	r3, .L305+16
 3528 0466 C822     		movs	r2, #200
 3529 0468 1A80     		strh	r2, [r3]	@ movhi
1714:Lib/ssc/src/ecatslv.c ****         }
 3530              		.loc 1 1714 17 is_stmt 1 view .LVU1062
 3531 046a 55E6     		b	.L267
 3532              	.L263:
1710:Lib/ssc/src/ecatslv.c ****                 break;
 3533              		.loc 1 1710 17 view .LVU1063
1710:Lib/ssc/src/ecatslv.c ****                 break;
 3534              		.loc 1 1710 35 is_stmt 0 view .LVU1064
 3535 046c 314B     		ldr	r3, .L305+16
 3536 046e 42F22832 		movw	r2, #9000
 3537 0472 1A80     		strh	r2, [r3]	@ movhi
1711:Lib/ssc/src/ecatslv.c ****            default:
 3538              		.loc 1 1711 17 is_stmt 1 view .LVU1065
 3539 0474 50E6     		b	.L267
 3540              	.LVL307:
 3541              	.L234:
1436:Lib/ssc/src/ecatslv.c ****         {
 3542              		.loc 1 1436 9 is_stmt 0 view .LVU1066
 3543 0476 4FF01208 		mov	r8, #18
 3544              	.LVL308:
 3545              	.L247:
1717:Lib/ssc/src/ecatslv.c **** 
1718:Lib/ssc/src/ecatslv.c ****     }
1719:Lib/ssc/src/ecatslv.c ****     else if ( alControl != (nAlStatus & STATE_MASK) )
 3546              		.loc 1 1719 10 is_stmt 1 view .LVU1067
 3547              		.loc 1 1719 39 is_stmt 0 view .LVU1068
 3548 047a 2B4B     		ldr	r3, .L305+4
 3549 047c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3550              		.loc 1 1719 13 view .LVU1069
 3551 047e 00F00F03 		and	r3, r0, #15
 3552 0482 9D42     		cmp	r5, r3
 3553 0484 47D0     		beq	.L268
1720:Lib/ssc/src/ecatslv.c ****     {
1721:Lib/ssc/src/ecatslv.c ****         /* The slave state has changed */
1722:Lib/ssc/src/ecatslv.c **** 
1723:Lib/ssc/src/ecatslv.c ****         if ( (result != 0 || alStatusCode != 0) && ((alControl | nAlStatus) & STATE_OP) )
 3554              		.loc 1 1723 9 is_stmt 1 view .LVU1070
 3555              		.loc 1 1723 12 is_stmt 0 view .LVU1071
 3556 0486 B8F1000F 		cmp	r8, #0
ARM GAS  /tmp/ccJBQgIh.s 			page 129


 3557 048a 00D1     		bne	.L269
 3558              		.loc 1 1723 27 discriminator 2 view .LVU1072
 3559 048c 66B1     		cbz	r6, .L270
 3560              	.L269:
 3561              		.loc 1 1723 77 discriminator 3 view .LVU1073
 3562 048e 2843     		orrs	r0, r0, r5
 3563              		.loc 1 1723 49 discriminator 3 view .LVU1074
 3564 0490 10F0080F 		tst	r0, #8
 3565 0494 08D0     		beq	.L270
1724:Lib/ssc/src/ecatslv.c ****         {
1725:Lib/ssc/src/ecatslv.c ****             /* the local application requested to leave the state OP so we have to disable the SM2
1726:Lib/ssc/src/ecatslv.c ****                and make the state change from OP to SAFEOP by calling StopOutputHandler */
1727:Lib/ssc/src/ecatslv.c **** 
1728:Lib/ssc/src/ecatslv.c ****             //only execute StopOutputHandler() if Output update is still running
1729:Lib/ssc/src/ecatslv.c ****             if(bEcatOutputUpdateRunning)
 3566              		.loc 1 1729 13 is_stmt 1 view .LVU1075
 3567              		.loc 1 1729 16 is_stmt 0 view .LVU1076
 3568 0496 284B     		ldr	r3, .L305+20
 3569 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3570              		.loc 1 1729 15 view .LVU1077
 3571 049a 23BB     		cbnz	r3, .L297
 3572              	.L271:
1730:Lib/ssc/src/ecatslv.c ****             {
1731:Lib/ssc/src/ecatslv.c ****                 APPL_StopOutputHandler();
1732:Lib/ssc/src/ecatslv.c **** 
1733:Lib/ssc/src/ecatslv.c ****                 StopOutputHandler();
1734:Lib/ssc/src/ecatslv.c ****             }
1735:Lib/ssc/src/ecatslv.c **** 
1736:Lib/ssc/src/ecatslv.c ****             if(nPdOutputSize > 0)
 3573              		.loc 1 1736 13 is_stmt 1 view .LVU1078
 3574              		.loc 1 1736 30 is_stmt 0 view .LVU1079
 3575 049c 234B     		ldr	r3, .L305+8
 3576 049e 1B88     		ldrh	r3, [r3]
 3577              		.loc 1 1736 15 view .LVU1080
 3578 04a0 33BB     		cbnz	r3, .L298
1737:Lib/ssc/src/ecatslv.c ****             {
1738:Lib/ssc/src/ecatslv.c ****                 /* disable the Sync Manager Channel 2 (outputs) */
1739:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1740:Lib/ssc/src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_OUT);
1741:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1742:Lib/ssc/src/ecatslv.c ****             }
1743:Lib/ssc/src/ecatslv.c ****             else
1744:Lib/ssc/src/ecatslv.c ****                 if(nPdInputSize > 0)
 3579              		.loc 1 1744 17 is_stmt 1 view .LVU1081
 3580              		.loc 1 1744 33 is_stmt 0 view .LVU1082
 3581 04a2 234B     		ldr	r3, .L305+12
 3582 04a4 1B88     		ldrh	r3, [r3]
 3583              		.loc 1 1744 19 view .LVU1083
 3584 04a6 3BBB     		cbnz	r3, .L299
 3585              	.L270:
1745:Lib/ssc/src/ecatslv.c ****             {
1746:Lib/ssc/src/ecatslv.c ****                 /*disable Sync Manager 3 (inputs) if no outputs available*/
1747:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1748:Lib/ssc/src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_IN);
1749:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1750:Lib/ssc/src/ecatslv.c ****             }
1751:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 130


1752:Lib/ssc/src/ecatslv.c ****         }
1753:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 3586              		.loc 1 1753 9 is_stmt 1 view .LVU1084
 3587              		.loc 1 1753 12 is_stmt 0 view .LVU1085
 3588 04a8 B8F1000F 		cmp	r8, #0
 3589 04ac 2CD0     		beq	.L273
1754:Lib/ssc/src/ecatslv.c ****         {
1755:Lib/ssc/src/ecatslv.c ****             if ( nAlStatus == STATE_OP )
 3590              		.loc 1 1755 13 is_stmt 1 view .LVU1086
 3591              		.loc 1 1755 28 is_stmt 0 view .LVU1087
 3592 04ae 1E4B     		ldr	r3, .L305+4
 3593 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3594              		.loc 1 1755 16 view .LVU1088
 3595 04b2 082B     		cmp	r3, #8
 3596 04b4 24D0     		beq	.L300
 3597              	.L274:
1756:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_SAFEOP;
1757:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
1758:Lib/ssc/src/ecatslv.c ****                reset in case of a coming successful state transition */
1759:Lib/ssc/src/ecatslv.c ****             nAlStatus |= STATE_CHANGE;
 3598              		.loc 1 1759 13 is_stmt 1 view .LVU1089
 3599              		.loc 1 1759 23 is_stmt 0 view .LVU1090
 3600 04b6 1C4A     		ldr	r2, .L305+4
 3601 04b8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3602 04ba 43F01003 		orr	r3, r3, #16
 3603 04be 1370     		strb	r3, [r2]
 3604              	.L275:
 3605              	.LVL309:
1760:Lib/ssc/src/ecatslv.c ****         }
1761:Lib/ssc/src/ecatslv.c ****         else
1762:Lib/ssc/src/ecatslv.c ****         {
1763:Lib/ssc/src/ecatslv.c ****             /* state transition was successful */
1764:Lib/ssc/src/ecatslv.c ****             if ( alStatusCode != 0 )
1765:Lib/ssc/src/ecatslv.c ****             {
1766:Lib/ssc/src/ecatslv.c ****                 /* state change request from the user */
1767:Lib/ssc/src/ecatslv.c ****                 result = alStatusCode;
1768:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
1769:Lib/ssc/src/ecatslv.c ****             }
1770:Lib/ssc/src/ecatslv.c ****             /* acknowledge the new state */
1771:Lib/ssc/src/ecatslv.c ****             nAlStatus = alControl;
1772:Lib/ssc/src/ecatslv.c ****         }
1773:Lib/ssc/src/ecatslv.c **** 
1774:Lib/ssc/src/ecatslv.c ****         bEcatWaitForAlControlRes = FALSE;
 3606              		.loc 1 1774 9 is_stmt 1 view .LVU1091
 3607              		.loc 1 1774 34 is_stmt 0 view .LVU1092
 3608 04c0 1E4B     		ldr	r3, .L305+24
 3609 04c2 0022     		movs	r2, #0
 3610 04c4 1A70     		strb	r2, [r3]
1775:Lib/ssc/src/ecatslv.c **** 
1776:Lib/ssc/src/ecatslv.c ****         /* write the AL Status register */
1777:Lib/ssc/src/ecatslv.c ****         SetALStatus(nAlStatus, result);
 3611              		.loc 1 1777 9 is_stmt 1 view .LVU1093
 3612 04c6 4146     		mov	r1, r8
 3613 04c8 174B     		ldr	r3, .L305+4
 3614 04ca 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3615 04cc FFF7FEFF 		bl	SetALStatus
 3616              	.LVL310:
ARM GAS  /tmp/ccJBQgIh.s 			page 131


 3617              	.L220:
1778:Lib/ssc/src/ecatslv.c ****     }
1779:Lib/ssc/src/ecatslv.c ****     else
1780:Lib/ssc/src/ecatslv.c ****     {
1781:Lib/ssc/src/ecatslv.c ****         /* Error acknowledgement without a state transition */
1782:Lib/ssc/src/ecatslv.c **** 
1783:Lib/ssc/src/ecatslv.c ****          bEcatWaitForAlControlRes = FALSE;
1784:Lib/ssc/src/ecatslv.c **** 
1785:Lib/ssc/src/ecatslv.c ****         /* AL-Status has to be updated and AL-Status-Code has to be reset
1786:Lib/ssc/src/ecatslv.c ****            if the the error bit was acknowledged */
1787:Lib/ssc/src/ecatslv.c ****         SetALStatus(nAlStatus, 0);
1788:Lib/ssc/src/ecatslv.c ****     }
1789:Lib/ssc/src/ecatslv.c **** 
1790:Lib/ssc/src/ecatslv.c **** }
 3618              		.loc 1 1790 1 is_stmt 0 view .LVU1094
 3619 04d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3620              	.LVL311:
 3621              	.L279:
1439:Lib/ssc/src/ecatslv.c ****             break;
 3622              		.loc 1 1439 20 view .LVU1095
 3623 04d4 4FF01308 		mov	r8, #19
 3624 04d8 CFE7     		b	.L247
 3625              	.L281:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3626              		.loc 1 1642 20 view .LVU1096
 3627 04da 4FF0FE08 		mov	r8, #254
 3628 04de CCE7     		b	.L247
 3629              	.L282:
 3630 04e0 4FF0FE08 		mov	r8, #254
 3631 04e4 C9E7     		b	.L247
 3632              	.LVL312:
 3633              	.L297:
1731:Lib/ssc/src/ecatslv.c **** 
 3634              		.loc 1 1731 17 is_stmt 1 view .LVU1097
 3635 04e6 FFF7FEFF 		bl	APPL_StopOutputHandler
 3636              	.LVL313:
1733:Lib/ssc/src/ecatslv.c ****             }
 3637              		.loc 1 1733 17 view .LVU1098
 3638 04ea FFF7FEFF 		bl	StopOutputHandler
 3639              	.LVL314:
 3640 04ee D5E7     		b	.L271
 3641              	.L298:
1740:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3642              		.loc 1 1740 17 view .LVU1099
 3643 04f0 0220     		movs	r0, #2
 3644 04f2 FFF7FEFF 		bl	DisableSyncManChannel
 3645              	.LVL315:
 3646 04f6 D7E7     		b	.L270
 3647              	.L299:
1748:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3648              		.loc 1 1748 17 view .LVU1100
 3649 04f8 0320     		movs	r0, #3
 3650 04fa FFF7FEFF 		bl	DisableSyncManChannel
 3651              	.LVL316:
 3652 04fe D3E7     		b	.L270
 3653              	.L300:
1756:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
ARM GAS  /tmp/ccJBQgIh.s 			page 132


 3654              		.loc 1 1756 17 view .LVU1101
1756:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
 3655              		.loc 1 1756 27 is_stmt 0 view .LVU1102
 3656 0500 094B     		ldr	r3, .L305+4
 3657 0502 0422     		movs	r2, #4
 3658 0504 1A70     		strb	r2, [r3]
 3659 0506 D6E7     		b	.L274
 3660              	.L273:
1764:Lib/ssc/src/ecatslv.c ****             {
 3661              		.loc 1 1764 13 is_stmt 1 view .LVU1103
1764:Lib/ssc/src/ecatslv.c ****             {
 3662              		.loc 1 1764 16 is_stmt 0 view .LVU1104
 3663 0508 16B1     		cbz	r6, .L276
1767:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
 3664              		.loc 1 1767 17 is_stmt 1 view .LVU1105
 3665              	.LVL317:
1768:Lib/ssc/src/ecatslv.c ****             }
 3666              		.loc 1 1768 17 view .LVU1106
1768:Lib/ssc/src/ecatslv.c ****             }
 3667              		.loc 1 1768 27 is_stmt 0 view .LVU1107
 3668 050a 45F01005 		orr	r5, r5, #16
 3669              	.LVL318:
1767:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
 3670              		.loc 1 1767 24 view .LVU1108
 3671 050e B046     		mov	r8, r6
 3672              	.LVL319:
 3673              	.L276:
1771:Lib/ssc/src/ecatslv.c ****         }
 3674              		.loc 1 1771 13 is_stmt 1 view .LVU1109
1771:Lib/ssc/src/ecatslv.c ****         }
 3675              		.loc 1 1771 23 is_stmt 0 view .LVU1110
 3676 0510 054B     		ldr	r3, .L305+4
 3677 0512 1D70     		strb	r5, [r3]
 3678 0514 D4E7     		b	.L275
 3679              	.LVL320:
 3680              	.L268:
1783:Lib/ssc/src/ecatslv.c **** 
 3681              		.loc 1 1783 10 is_stmt 1 view .LVU1111
1783:Lib/ssc/src/ecatslv.c **** 
 3682              		.loc 1 1783 35 is_stmt 0 view .LVU1112
 3683 0516 0021     		movs	r1, #0
 3684 0518 084B     		ldr	r3, .L305+24
 3685 051a 1970     		strb	r1, [r3]
1787:Lib/ssc/src/ecatslv.c ****     }
 3686              		.loc 1 1787 9 is_stmt 1 view .LVU1113
 3687 051c FFF7FEFF 		bl	SetALStatus
 3688              	.LVL321:
 3689 0520 D6E7     		b	.L220
 3690              	.L306:
 3691 0522 00BF     		.align	2
 3692              	.L305:
 3693 0524 00000000 		.word	.LANCHOR28
 3694 0528 00000000 		.word	.LANCHOR5
 3695 052c 00000000 		.word	.LANCHOR7
 3696 0530 00000000 		.word	.LANCHOR4
 3697 0534 00000000 		.word	.LANCHOR33
 3698 0538 00000000 		.word	.LANCHOR31
ARM GAS  /tmp/ccJBQgIh.s 			page 133


 3699 053c 00000000 		.word	.LANCHOR36
 3700              		.cfi_endproc
 3701              	.LFE136:
 3703              		.section	.text.AL_ControlRes,"ax",%progbits
 3704              		.align	1
 3705              		.global	AL_ControlRes
 3706              		.syntax unified
 3707              		.thumb
 3708              		.thumb_func
 3710              	AL_ControlRes:
 3711              	.LFB137:
1791:Lib/ssc/src/ecatslv.c **** 
1792:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1793:Lib/ssc/src/ecatslv.c **** /**
1794:Lib/ssc/src/ecatslv.c **** 
1795:Lib/ssc/src/ecatslv.c ****  \brief    This function is called cyclic if a state transition is pending (bEcatWaitForAlControlRe
1796:Lib/ssc/src/ecatslv.c ****  \brief    If the ESM timeout is expired the state transition will be rejected. Otherwise the appli
1797:Lib/ssc/src/ecatslv.c ****  \brief    If the pending state transition is triggered by the application the transition need to b
1798:Lib/ssc/src/ecatslv.c ****   *////////////////////////////////////////////////////////////////////////////////////////
1799:Lib/ssc/src/ecatslv.c **** void AL_ControlRes(void)
1800:Lib/ssc/src/ecatslv.c **** {
 3712              		.loc 1 1800 1 view -0
 3713              		.cfi_startproc
 3714              		@ args = 0, pretend = 0, frame = 0
 3715              		@ frame_needed = 0, uses_anonymous_args = 0
 3716 0000 38B5     		push	{r3, r4, r5, lr}
 3717              		.cfi_def_cfa_offset 16
 3718              		.cfi_offset 3, -16
 3719              		.cfi_offset 4, -12
 3720              		.cfi_offset 5, -8
 3721              		.cfi_offset 14, -4
1801:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 3722              		.loc 1 1801 5 view .LVU1115
 3723              		.loc 1 1801 8 is_stmt 0 view .LVU1116
 3724 0002 784B     		ldr	r3, .L347
 3725 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3726              		.loc 1 1801 7 view .LVU1117
 3727 0006 002B     		cmp	r3, #0
 3728 0008 3BD0     		beq	.L307
 3729              	.LBB25:
1802:Lib/ssc/src/ecatslv.c ****     {
1803:Lib/ssc/src/ecatslv.c ****         UINT16 result = 0;
 3730              		.loc 1 1803 9 is_stmt 1 view .LVU1118
 3731              	.LVL322:
1804:Lib/ssc/src/ecatslv.c ****         UINT8 Status = 0;
 3732              		.loc 1 1804 9 view .LVU1119
1805:Lib/ssc/src/ecatslv.c ****         UINT16 StatusCode = 0;
 3733              		.loc 1 1805 9 view .LVU1120
1806:Lib/ssc/src/ecatslv.c **** 
1807:Lib/ssc/src/ecatslv.c ****         if(EsmTimeoutCounter == 0)
 3734              		.loc 1 1807 9 view .LVU1121
 3735              		.loc 1 1807 30 is_stmt 0 view .LVU1122
 3736 000a 774B     		ldr	r3, .L347+4
 3737 000c B3F90030 		ldrsh	r3, [r3]
 3738              		.loc 1 1807 11 view .LVU1123
 3739 0010 002B     		cmp	r3, #0
 3740 0012 62D1     		bne	.L309
ARM GAS  /tmp/ccJBQgIh.s 			page 134


1808:Lib/ssc/src/ecatslv.c ****         {
1809:Lib/ssc/src/ecatslv.c ****             Status =  (UINT8)(nEcatStateTrans >> 4);
 3741              		.loc 1 1809 13 is_stmt 1 view .LVU1124
 3742              		.loc 1 1809 23 is_stmt 0 view .LVU1125
 3743 0014 754B     		ldr	r3, .L347+8
 3744 0016 1B88     		ldrh	r3, [r3]
 3745              		.loc 1 1809 20 view .LVU1126
 3746 0018 C3F30714 		ubfx	r4, r3, #4, #8
 3747              	.LVL323:
1810:Lib/ssc/src/ecatslv.c **** 
1811:Lib/ssc/src/ecatslv.c ****             /* ESM timeout expired*/
1812:Lib/ssc/src/ecatslv.c ****             switch(nEcatStateTrans)
 3748              		.loc 1 1812 13 is_stmt 1 view .LVU1127
 3749 001c 242B     		cmp	r3, #36
 3750 001e 34D0     		beq	.L310
 3751 0020 11D8     		bhi	.L311
 3752 0022 123B     		subs	r3, r3, #18
 3753 0024 9BB2     		uxth	r3, r3
 3754 0026 012B     		cmp	r3, #1
 3755 0028 00F2D680 		bhi	.L342
1813:Lib/ssc/src/ecatslv.c ****             {
1814:Lib/ssc/src/ecatslv.c ****                 case INIT_2_PREOP:
1815:Lib/ssc/src/ecatslv.c ****                 case INIT_2_BOOT:
1816:Lib/ssc/src/ecatslv.c **** 
1817:Lib/ssc/src/ecatslv.c ****                     if(!bApplEsmPending)
 3756              		.loc 1 1817 21 view .LVU1128
 3757              		.loc 1 1817 24 is_stmt 0 view .LVU1129
 3758 002c 704B     		ldr	r3, .L347+12
 3759 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3760              		.loc 1 1817 23 view .LVU1130
 3761 0030 43B3     		cbz	r3, .L343
 3762              	.L315:
1818:Lib/ssc/src/ecatslv.c ****                         APPL_StopMailboxHandler();
1819:Lib/ssc/src/ecatslv.c **** 
1820:Lib/ssc/src/ecatslv.c ****                     MBX_StopMailboxHandler();
 3763              		.loc 1 1820 21 is_stmt 1 view .LVU1131
 3764 0032 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3765              	.LVL324:
1821:Lib/ssc/src/ecatslv.c ****                     if(bLocalErrorFlag)
 3766              		.loc 1 1821 21 view .LVU1132
 3767              		.loc 1 1821 24 is_stmt 0 view .LVU1133
 3768 0036 6F4B     		ldr	r3, .L347+16
 3769 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3770              		.loc 1 1821 23 view .LVU1134
 3771 003a 002B     		cmp	r3, #0
 3772 003c 00F0CE80 		beq	.L333
1822:Lib/ssc/src/ecatslv.c ****                     {
1823:Lib/ssc/src/ecatslv.c ****                         /*Set application specified error*/
1824:Lib/ssc/src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
 3773              		.loc 1 1824 25 is_stmt 1 view .LVU1135
 3774              		.loc 1 1824 36 is_stmt 0 view .LVU1136
 3775 0040 6D4B     		ldr	r3, .L347+20
 3776 0042 1D88     		ldrh	r5, [r3]
 3777              	.LVL325:
 3778              		.loc 1 1824 36 view .LVU1137
 3779 0044 12E0     		b	.L312
 3780              	.LVL326:
ARM GAS  /tmp/ccJBQgIh.s 			page 135


 3781              	.L311:
1812:Lib/ssc/src/ecatslv.c ****             {
 3782              		.loc 1 1812 13 view .LVU1138
 3783 0046 482B     		cmp	r3, #72
 3784 0048 0FD1     		bne	.L344
1825:Lib/ssc/src/ecatslv.c ****                     }
1826:Lib/ssc/src/ecatslv.c ****                     else
1827:Lib/ssc/src/ecatslv.c ****                     {
1828:Lib/ssc/src/ecatslv.c ****                         /*Set unspecified error*/
1829:Lib/ssc/src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1830:Lib/ssc/src/ecatslv.c ****                     }
1831:Lib/ssc/src/ecatslv.c ****                 break;
1832:Lib/ssc/src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1833:Lib/ssc/src/ecatslv.c ****                     if(!bApplEsmPending)
1834:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
1835:Lib/ssc/src/ecatslv.c **** 
1836:Lib/ssc/src/ecatslv.c ****                     StopInputHandler();
1837:Lib/ssc/src/ecatslv.c ****                     
1838:Lib/ssc/src/ecatslv.c ****                     if(bLocalErrorFlag)
1839:Lib/ssc/src/ecatslv.c ****                     {
1840:Lib/ssc/src/ecatslv.c ****                         /*Set application specified error*/
1841:Lib/ssc/src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
1842:Lib/ssc/src/ecatslv.c ****                     }
1843:Lib/ssc/src/ecatslv.c ****                     else
1844:Lib/ssc/src/ecatslv.c ****                     {
1845:Lib/ssc/src/ecatslv.c ****                         /*Set unspecified error*/
1846:Lib/ssc/src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1847:Lib/ssc/src/ecatslv.c ****                     }
1848:Lib/ssc/src/ecatslv.c ****                 break;
1849:Lib/ssc/src/ecatslv.c ****                 case SAFEOP_2_OP:
1850:Lib/ssc/src/ecatslv.c ****                     if(bDcSyncActive)
 3785              		.loc 1 1850 21 is_stmt 1 view .LVU1139
 3786              		.loc 1 1850 24 is_stmt 0 view .LVU1140
 3787 004a 6C4B     		ldr	r3, .L347+24
 3788 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3789              		.loc 1 1850 23 view .LVU1141
 3790 004e 63B3     		cbz	r3, .L317
1851:Lib/ssc/src/ecatslv.c ****                     {
1852:Lib/ssc/src/ecatslv.c ****                         /*SafeOP to OP timeout expired check which AL status code need to be writte
1853:Lib/ssc/src/ecatslv.c ****                         if(!bDcRunning) //
 3791              		.loc 1 1853 25 is_stmt 1 view .LVU1142
 3792              		.loc 1 1853 28 is_stmt 0 view .LVU1143
 3793 0050 6B4B     		ldr	r3, .L347+28
 3794 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3795              		.loc 1 1853 27 view .LVU1144
 3796 0054 002B     		cmp	r3, #0
 3797 0056 30D0     		beq	.L335
1854:Lib/ssc/src/ecatslv.c ****                         {
1855:Lib/ssc/src/ecatslv.c ****                             /*no Sync0 signal received*/
1856:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_NOSYNCERROR;
1857:Lib/ssc/src/ecatslv.c ****                         }
1858:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1859:Lib/ssc/src/ecatslv.c ****                         else if(!bEcatFirstOutputsReceived && (nPdOutputSize > 0))
 3798              		.loc 1 1859 30 is_stmt 1 view .LVU1145
 3799              		.loc 1 1859 33 is_stmt 0 view .LVU1146
 3800 0058 6A4B     		ldr	r3, .L347+32
 3801 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccJBQgIh.s 			page 136


 3802              		.loc 1 1859 32 view .LVU1147
 3803 005c 002B     		cmp	r3, #0
 3804 005e 33D1     		bne	.L336
 3805              		.loc 1 1859 78 discriminator 1 view .LVU1148
 3806 0060 694B     		ldr	r3, .L347+36
 3807 0062 1B88     		ldrh	r3, [r3]
 3808              		.loc 1 1859 60 discriminator 1 view .LVU1149
 3809 0064 93BB     		cbnz	r3, .L337
1860:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1861:Lib/ssc/src/ecatslv.c ****                         {
1862:Lib/ssc/src/ecatslv.c ****                             /*no process data received*/
1863:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
1864:Lib/ssc/src/ecatslv.c ****                         }
1865:Lib/ssc/src/ecatslv.c ****                         else
1866:Lib/ssc/src/ecatslv.c ****                         {
1867:Lib/ssc/src/ecatslv.c ****                             /*SM/Sync Sequence is not valid*/
1868:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SYNCERROR;
 3810              		.loc 1 1868 40 view .LVU1150
 3811 0066 1A25     		movs	r5, #26
 3812 0068 28E0     		b	.L318
 3813              	.L344:
1812:Lib/ssc/src/ecatslv.c ****             {
 3814              		.loc 1 1812 13 view .LVU1151
 3815 006a 0025     		movs	r5, #0
 3816              	.LVL327:
 3817              	.L312:
1869:Lib/ssc/src/ecatslv.c ****                         }
1870:Lib/ssc/src/ecatslv.c ****                     }
1871:Lib/ssc/src/ecatslv.c ****                     else
1872:Lib/ssc/src/ecatslv.c ****                     {
1873:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1874:Lib/ssc/src/ecatslv.c ****                         if (nPdOutputSize > 0)
1875:Lib/ssc/src/ecatslv.c ****                         {
1876:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
1877:Lib/ssc/src/ecatslv.c ****                         }
1878:Lib/ssc/src/ecatslv.c ****                         else
1879:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1880:Lib/ssc/src/ecatslv.c ****                         {
1881:Lib/ssc/src/ecatslv.c ****                             /*Set valid state transition even if timeout expired*/
1882:Lib/ssc/src/ecatslv.c ****                             Status = STATE_OP;
1883:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
1884:Lib/ssc/src/ecatslv.c ****                             /* Slave is OPERATIONAL */
1885:Lib/ssc/src/ecatslv.c ****                             bEcatOutputUpdateRunning = TRUE;
1886:Lib/ssc/src/ecatslv.c ****                         }
1887:Lib/ssc/src/ecatslv.c ****                     }
1888:Lib/ssc/src/ecatslv.c **** 
1889:Lib/ssc/src/ecatslv.c ****                     /*Stop handler on failed transition*/
1890:Lib/ssc/src/ecatslv.c ****                     if(StatusCode != 0)
1891:Lib/ssc/src/ecatslv.c ****                     {
1892:Lib/ssc/src/ecatslv.c ****                         if(!bApplEsmPending)
1893:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
1894:Lib/ssc/src/ecatslv.c **** 
1895:Lib/ssc/src/ecatslv.c ****                         StopOutputHandler();
1896:Lib/ssc/src/ecatslv.c ****                     }
1897:Lib/ssc/src/ecatslv.c ****                 break;
1898:Lib/ssc/src/ecatslv.c ****             }
1899:Lib/ssc/src/ecatslv.c ****         } //ESM timeout
ARM GAS  /tmp/ccJBQgIh.s 			page 137


1900:Lib/ssc/src/ecatslv.c ****         else
1901:Lib/ssc/src/ecatslv.c ****         {
1902:Lib/ssc/src/ecatslv.c ****             /*Call application specific transition function and complete transition it the function
1903:Lib/ssc/src/ecatslv.c ****             switch(nEcatStateTrans)
1904:Lib/ssc/src/ecatslv.c ****             {
1905:Lib/ssc/src/ecatslv.c ****                 case INIT_2_PREOP:
1906:Lib/ssc/src/ecatslv.c ****                 case INIT_2_BOOT:
1907:Lib/ssc/src/ecatslv.c ****                     if(bApplEsmPending)
1908:Lib/ssc/src/ecatslv.c ****                     {
1909:Lib/ssc/src/ecatslv.c ****                         bApplEsmPending = FALSE;
1910:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
1911:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartMailboxHandler();
1912:Lib/ssc/src/ecatslv.c **** 
1913:Lib/ssc/src/ecatslv.c ****                         if(result == 0)
1914:Lib/ssc/src/ecatslv.c ****                         {
1915:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition was successful => set active mail
1916:Lib/ssc/src/ecatslv.c ****                             bMbxRunning = TRUE;
1917:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
1918:Lib/ssc/src/ecatslv.c ****                         }
1919:Lib/ssc/src/ecatslv.c ****                         else
1920:Lib/ssc/src/ecatslv.c ****                         {
1921:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition failed.
1922:Lib/ssc/src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
1923:Lib/ssc/src/ecatslv.c **** 
1924:Lib/ssc/src/ecatslv.c ****                             if(result != NOERROR_INWORK)
1925:Lib/ssc/src/ecatslv.c ****                             {
1926:Lib/ssc/src/ecatslv.c ****                                 APPL_StopMailboxHandler();
1927:Lib/ssc/src/ecatslv.c ****                                 MBX_StopMailboxHandler();
1928:Lib/ssc/src/ecatslv.c ****                             }
1929:Lib/ssc/src/ecatslv.c ****                         }
1930:Lib/ssc/src/ecatslv.c ****                     }
1931:Lib/ssc/src/ecatslv.c ****                 break;
1932:Lib/ssc/src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1933:Lib/ssc/src/ecatslv.c ****                     if(bApplEsmPending)
1934:Lib/ssc/src/ecatslv.c ****                     {
1935:Lib/ssc/src/ecatslv.c ****                         bApplEsmPending = FALSE;
1936:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
1937:Lib/ssc/src/ecatslv.c **** 
1938:Lib/ssc/src/ecatslv.c ****                         if(result == 0)
1939:Lib/ssc/src/ecatslv.c ****                         {
1940:Lib/ssc/src/ecatslv.c ****                             bEcatInputUpdateRunning = TRUE;
1941:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
1942:Lib/ssc/src/ecatslv.c ****                         }
1943:Lib/ssc/src/ecatslv.c ****                         else
1944:Lib/ssc/src/ecatslv.c ****                         {
1945:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition failed.
1946:Lib/ssc/src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
1947:Lib/ssc/src/ecatslv.c **** 
1948:Lib/ssc/src/ecatslv.c ****                             if(result != NOERROR_INWORK)
1949:Lib/ssc/src/ecatslv.c ****                             {
1950:Lib/ssc/src/ecatslv.c ****                                 APPL_StopInputHandler();
1951:Lib/ssc/src/ecatslv.c ****                                 StopInputHandler();
1952:Lib/ssc/src/ecatslv.c ****                             }
1953:Lib/ssc/src/ecatslv.c ****                         }
1954:Lib/ssc/src/ecatslv.c ****                     }
1955:Lib/ssc/src/ecatslv.c ****                 break;
1956:Lib/ssc/src/ecatslv.c ****                 case SAFEOP_2_OP:
ARM GAS  /tmp/ccJBQgIh.s 			page 138


1957:Lib/ssc/src/ecatslv.c ****                    if(bApplEsmPending)
1958:Lib/ssc/src/ecatslv.c ****                     {
1959:Lib/ssc/src/ecatslv.c ****                         if(bDcSyncActive)
1960:Lib/ssc/src/ecatslv.c ****                         {
1961:Lib/ssc/src/ecatslv.c ****                             if(i16WaitForPllRunningTimeout > 0 && i16WaitForPllRunningTimeout <= i1
1962:Lib/ssc/src/ecatslv.c ****                             {
1963:Lib/ssc/src/ecatslv.c ****                                 /*Pll sequence valid for 200ms (set in APPL_StartOutputHandler() )
1964:Lib/ssc/src/ecatslv.c ****                                 acknowledge state transition to OP */
1965:Lib/ssc/src/ecatslv.c **** 
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningTimeout = 0;
1967:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
1968:Lib/ssc/src/ecatslv.c **** 
1969:Lib/ssc/src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
1970:Lib/ssc/src/ecatslv.c **** 
1971:Lib/ssc/src/ecatslv.c ****                                 if(result == 0)
1972:Lib/ssc/src/ecatslv.c ****                                 {
1973:Lib/ssc/src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1974:Lib/ssc/src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
1975:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
1976:Lib/ssc/src/ecatslv.c ****                                 }
1977:Lib/ssc/src/ecatslv.c ****                                 else
1978:Lib/ssc/src/ecatslv.c ****                                 {
1979:Lib/ssc/src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
1980:Lib/ssc/src/ecatslv.c ****                                     {
1981:Lib/ssc/src/ecatslv.c ****                                         APPL_StopOutputHandler();
1982:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
1983:Lib/ssc/src/ecatslv.c ****                                     }
1984:Lib/ssc/src/ecatslv.c ****                                 }
1985:Lib/ssc/src/ecatslv.c ****                             }
1986:Lib/ssc/src/ecatslv.c ****                         }
1987:Lib/ssc/src/ecatslv.c ****                         else
1988:Lib/ssc/src/ecatslv.c ****                         {
1989:Lib/ssc/src/ecatslv.c ****                             if(nPdOutputSize == 0 || bEcatFirstOutputsReceived)
1990:Lib/ssc/src/ecatslv.c ****                             {
1991:Lib/ssc/src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
1992:Lib/ssc/src/ecatslv.c **** 
1993:Lib/ssc/src/ecatslv.c ****                                 if(result == 0)
1994:Lib/ssc/src/ecatslv.c ****                                 {
1995:Lib/ssc/src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1996:Lib/ssc/src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
1997:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
1998:Lib/ssc/src/ecatslv.c ****                                 }
1999:Lib/ssc/src/ecatslv.c ****                                 else
2000:Lib/ssc/src/ecatslv.c ****                                 {
2001:Lib/ssc/src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
2002:Lib/ssc/src/ecatslv.c ****                                     {
2003:Lib/ssc/src/ecatslv.c ****                                         APPL_StopOutputHandler();
2004:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
2005:Lib/ssc/src/ecatslv.c ****                                     }
2006:Lib/ssc/src/ecatslv.c ****                                 }
2007:Lib/ssc/src/ecatslv.c ****                             }
2008:Lib/ssc/src/ecatslv.c ****                         }       
2009:Lib/ssc/src/ecatslv.c ****                     }             
2010:Lib/ssc/src/ecatslv.c ****                 break;
2011:Lib/ssc/src/ecatslv.c ****             }//Switch - transition
2012:Lib/ssc/src/ecatslv.c ****         }
2013:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 139


2014:Lib/ssc/src/ecatslv.c ****         if(Status != 0)
 3818              		.loc 1 2014 9 is_stmt 1 view .LVU1152
 3819              		.loc 1 2014 11 is_stmt 0 view .LVU1153
 3820 006c 4CB1     		cbz	r4, .L307
 3821              	.LVL328:
 3822              	.L326:
2015:Lib/ssc/src/ecatslv.c ****         {
2016:Lib/ssc/src/ecatslv.c ****             /*Pending state transition finished => write AL Status and AL Status Code*/
2017:Lib/ssc/src/ecatslv.c ****             bEcatWaitForAlControlRes = FALSE;
 3823              		.loc 1 2017 13 is_stmt 1 view .LVU1154
 3824              		.loc 1 2017 38 is_stmt 0 view .LVU1155
 3825 006e 5D4B     		ldr	r3, .L347
 3826 0070 0022     		movs	r2, #0
 3827 0072 1A70     		strb	r2, [r3]
2018:Lib/ssc/src/ecatslv.c **** 
2019:Lib/ssc/src/ecatslv.c ****             if (StatusCode != 0)
 3828              		.loc 1 2019 13 is_stmt 1 view .LVU1156
 3829              		.loc 1 2019 16 is_stmt 0 view .LVU1157
 3830 0074 0DB1     		cbz	r5, .L331
2020:Lib/ssc/src/ecatslv.c ****             {
2021:Lib/ssc/src/ecatslv.c ****                 Status |= STATE_CHANGE;
 3831              		.loc 1 2021 17 is_stmt 1 view .LVU1158
 3832              		.loc 1 2021 24 is_stmt 0 view .LVU1159
 3833 0076 44F01004 		orr	r4, r4, #16
 3834              	.LVL329:
 3835              	.L331:
2022:Lib/ssc/src/ecatslv.c ****             }
2023:Lib/ssc/src/ecatslv.c **** 
2024:Lib/ssc/src/ecatslv.c ****             SetALStatus(Status,StatusCode);
 3836              		.loc 1 2024 13 is_stmt 1 view .LVU1160
 3837 007a 2946     		mov	r1, r5
 3838 007c 2046     		mov	r0, r4
 3839 007e FFF7FEFF 		bl	SetALStatus
 3840              	.LVL330:
 3841              	.L307:
 3842              		.loc 1 2024 13 is_stmt 0 view .LVU1161
 3843              	.LBE25:
2025:Lib/ssc/src/ecatslv.c ****         }
2026:Lib/ssc/src/ecatslv.c ****     }// Pending state transition (bEcatWaitForAlControlRes == true)
2027:Lib/ssc/src/ecatslv.c **** }
 3844              		.loc 1 2027 1 view .LVU1162
 3845 0082 38BD     		pop	{r3, r4, r5, pc}
 3846              	.LVL331:
 3847              	.L343:
 3848              	.LBB26:
1818:Lib/ssc/src/ecatslv.c **** 
 3849              		.loc 1 1818 25 is_stmt 1 view .LVU1163
 3850 0084 FFF7FEFF 		bl	APPL_StopMailboxHandler
 3851              	.LVL332:
 3852 0088 D3E7     		b	.L315
 3853              	.L310:
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3854              		.loc 1 1833 21 view .LVU1164
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3855              		.loc 1 1833 24 is_stmt 0 view .LVU1165
 3856 008a 594B     		ldr	r3, .L347+12
 3857 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccJBQgIh.s 			page 140


1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3858              		.loc 1 1833 23 view .LVU1166
 3859 008e 4BB1     		cbz	r3, .L345
 3860              	.L316:
1836:Lib/ssc/src/ecatslv.c ****                     
 3861              		.loc 1 1836 21 is_stmt 1 view .LVU1167
 3862 0090 FFF7FEFF 		bl	StopInputHandler
 3863              	.LVL333:
1838:Lib/ssc/src/ecatslv.c ****                     {
 3864              		.loc 1 1838 21 view .LVU1168
1838:Lib/ssc/src/ecatslv.c ****                     {
 3865              		.loc 1 1838 24 is_stmt 0 view .LVU1169
 3866 0094 574B     		ldr	r3, .L347+16
 3867 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1838:Lib/ssc/src/ecatslv.c ****                     {
 3868              		.loc 1 1838 23 view .LVU1170
 3869 0098 002B     		cmp	r3, #0
 3870 009a 00F0A180 		beq	.L334
1841:Lib/ssc/src/ecatslv.c ****                     }
 3871              		.loc 1 1841 25 is_stmt 1 view .LVU1171
1841:Lib/ssc/src/ecatslv.c ****                     }
 3872              		.loc 1 1841 36 is_stmt 0 view .LVU1172
 3873 009e 564B     		ldr	r3, .L347+20
 3874 00a0 1D88     		ldrh	r5, [r3]
 3875              	.LVL334:
1841:Lib/ssc/src/ecatslv.c ****                     }
 3876              		.loc 1 1841 36 view .LVU1173
 3877 00a2 E3E7     		b	.L312
 3878              	.LVL335:
 3879              	.L345:
1834:Lib/ssc/src/ecatslv.c **** 
 3880              		.loc 1 1834 25 is_stmt 1 view .LVU1174
 3881 00a4 FFF7FEFF 		bl	APPL_StopInputHandler
 3882              	.LVL336:
 3883 00a8 F2E7     		b	.L316
 3884              	.L317:
1874:Lib/ssc/src/ecatslv.c ****                         {
 3885              		.loc 1 1874 25 view .LVU1175
1874:Lib/ssc/src/ecatslv.c ****                         {
 3886              		.loc 1 1874 43 is_stmt 0 view .LVU1176
 3887 00aa 574B     		ldr	r3, .L347+36
 3888 00ac 1D88     		ldrh	r5, [r3]
1874:Lib/ssc/src/ecatslv.c ****                         {
 3889              		.loc 1 1874 28 view .LVU1177
 3890 00ae 7DB9     		cbnz	r5, .L338
1882:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
 3891              		.loc 1 1882 29 is_stmt 1 view .LVU1178
 3892              	.LVL337:
1883:Lib/ssc/src/ecatslv.c ****                             /* Slave is OPERATIONAL */
 3893              		.loc 1 1883 29 view .LVU1179
1885:Lib/ssc/src/ecatslv.c ****                         }
 3894              		.loc 1 1885 29 view .LVU1180
1885:Lib/ssc/src/ecatslv.c ****                         }
 3895              		.loc 1 1885 54 is_stmt 0 view .LVU1181
 3896 00b0 564B     		ldr	r3, .L347+40
 3897 00b2 0122     		movs	r2, #1
 3898 00b4 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccJBQgIh.s 			page 141


1890:Lib/ssc/src/ecatslv.c ****                     {
 3899              		.loc 1 1890 21 is_stmt 1 view .LVU1182
1882:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
 3900              		.loc 1 1882 36 is_stmt 0 view .LVU1183
 3901 00b6 0824     		movs	r4, #8
 3902 00b8 D8E7     		b	.L312
 3903              	.LVL338:
 3904              	.L335:
1856:Lib/ssc/src/ecatslv.c ****                         }
 3905              		.loc 1 1856 40 view .LVU1184
 3906 00ba 2D25     		movs	r5, #45
 3907              	.L318:
 3908              	.LVL339:
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3909              		.loc 1 1892 25 is_stmt 1 view .LVU1185
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3910              		.loc 1 1892 28 is_stmt 0 view .LVU1186
 3911 00bc 4C4B     		ldr	r3, .L347+12
 3912 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3913              		.loc 1 1892 27 view .LVU1187
 3914 00c0 43B1     		cbz	r3, .L346
 3915              	.L319:
1895:Lib/ssc/src/ecatslv.c ****                     }
 3916              		.loc 1 1895 25 is_stmt 1 view .LVU1188
 3917 00c2 FFF7FEFF 		bl	StopOutputHandler
 3918              	.LVL340:
 3919 00c6 D1E7     		b	.L312
 3920              	.LVL341:
 3921              	.L336:
1868:Lib/ssc/src/ecatslv.c ****                         }
 3922              		.loc 1 1868 40 is_stmt 0 view .LVU1189
 3923 00c8 1A25     		movs	r5, #26
 3924 00ca F7E7     		b	.L318
 3925              	.L337:
1863:Lib/ssc/src/ecatslv.c ****                         }
 3926              		.loc 1 1863 40 view .LVU1190
 3927 00cc 1B25     		movs	r5, #27
 3928 00ce F5E7     		b	.L318
 3929              	.L338:
1876:Lib/ssc/src/ecatslv.c ****                         }
 3930              		.loc 1 1876 40 view .LVU1191
 3931 00d0 1B25     		movs	r5, #27
 3932 00d2 F3E7     		b	.L318
 3933              	.LVL342:
 3934              	.L346:
1893:Lib/ssc/src/ecatslv.c **** 
 3935              		.loc 1 1893 29 is_stmt 1 view .LVU1192
 3936 00d4 FFF7FEFF 		bl	APPL_StopOutputHandler
 3937              	.LVL343:
 3938 00d8 F3E7     		b	.L319
 3939              	.LVL344:
 3940              	.L309:
1903:Lib/ssc/src/ecatslv.c ****             {
 3941              		.loc 1 1903 13 view .LVU1193
 3942 00da 444B     		ldr	r3, .L347+8
 3943 00dc 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/ccJBQgIh.s 			page 142


 3944 00de 242B     		cmp	r3, #36
 3945 00e0 40D0     		beq	.L320
 3946 00e2 16D8     		bhi	.L321
 3947 00e4 123B     		subs	r3, r3, #18
 3948 00e6 9BB2     		uxth	r3, r3
 3949 00e8 012B     		cmp	r3, #1
 3950 00ea CAD8     		bhi	.L307
1907:Lib/ssc/src/ecatslv.c ****                     {
 3951              		.loc 1 1907 21 view .LVU1194
1907:Lib/ssc/src/ecatslv.c ****                     {
 3952              		.loc 1 1907 24 is_stmt 0 view .LVU1195
 3953 00ec 404B     		ldr	r3, .L347+12
 3954 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1907:Lib/ssc/src/ecatslv.c ****                     {
 3955              		.loc 1 1907 23 view .LVU1196
 3956 00f0 002B     		cmp	r3, #0
 3957 00f2 C6D0     		beq	.L307
1909:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
 3958              		.loc 1 1909 25 is_stmt 1 view .LVU1197
1909:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
 3959              		.loc 1 1909 41 is_stmt 0 view .LVU1198
 3960 00f4 3E4B     		ldr	r3, .L347+12
 3961 00f6 0022     		movs	r2, #0
 3962 00f8 1A70     		strb	r2, [r3]
1911:Lib/ssc/src/ecatslv.c **** 
 3963              		.loc 1 1911 25 is_stmt 1 view .LVU1199
1911:Lib/ssc/src/ecatslv.c **** 
 3964              		.loc 1 1911 34 is_stmt 0 view .LVU1200
 3965 00fa FFF7FEFF 		bl	APPL_StartMailboxHandler
 3966              	.LVL345:
1913:Lib/ssc/src/ecatslv.c ****                         {
 3967              		.loc 1 1913 25 is_stmt 1 view .LVU1201
1913:Lib/ssc/src/ecatslv.c ****                         {
 3968              		.loc 1 1913 27 is_stmt 0 view .LVU1202
 3969 00fe 0546     		mov	r5, r0
 3970 0100 48BB     		cbnz	r0, .L324
1916:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 3971              		.loc 1 1916 29 is_stmt 1 view .LVU1203
1916:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 3972              		.loc 1 1916 41 is_stmt 0 view .LVU1204
 3973 0102 434B     		ldr	r3, .L347+44
 3974 0104 0122     		movs	r2, #1
 3975 0106 1A70     		strb	r2, [r3]
1917:Lib/ssc/src/ecatslv.c ****                         }
 3976              		.loc 1 1917 29 is_stmt 1 view .LVU1205
1917:Lib/ssc/src/ecatslv.c ****                         }
 3977              		.loc 1 1917 63 is_stmt 0 view .LVU1206
 3978 0108 384B     		ldr	r3, .L347+8
 3979 010a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
1917:Lib/ssc/src/ecatslv.c ****                         }
 3980              		.loc 1 1917 36 view .LVU1207
 3981 010c 04F00F04 		and	r4, r4, #15
 3982              	.LVL346:
1917:Lib/ssc/src/ecatslv.c ****                         }
 3983              		.loc 1 1917 36 view .LVU1208
 3984 0110 ACE7     		b	.L312
 3985              	.LVL347:
ARM GAS  /tmp/ccJBQgIh.s 			page 143


 3986              	.L321:
1903:Lib/ssc/src/ecatslv.c ****             {
 3987              		.loc 1 1903 13 view .LVU1209
 3988 0112 482B     		cmp	r3, #72
 3989 0114 B5D1     		bne	.L307
1957:Lib/ssc/src/ecatslv.c ****                     {
 3990              		.loc 1 1957 20 is_stmt 1 view .LVU1210
1957:Lib/ssc/src/ecatslv.c ****                     {
 3991              		.loc 1 1957 23 is_stmt 0 view .LVU1211
 3992 0116 364B     		ldr	r3, .L347+12
 3993 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1957:Lib/ssc/src/ecatslv.c ****                     {
 3994              		.loc 1 1957 22 view .LVU1212
 3995 011a 002B     		cmp	r3, #0
 3996 011c B1D0     		beq	.L307
1959:Lib/ssc/src/ecatslv.c ****                         {
 3997              		.loc 1 1959 25 is_stmt 1 view .LVU1213
1959:Lib/ssc/src/ecatslv.c ****                         {
 3998              		.loc 1 1959 28 is_stmt 0 view .LVU1214
 3999 011e 374B     		ldr	r3, .L347+24
 4000 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1959:Lib/ssc/src/ecatslv.c ****                         {
 4001              		.loc 1 1959 27 view .LVU1215
 4002 0122 002B     		cmp	r3, #0
 4003 0124 3FD0     		beq	.L327
1961:Lib/ssc/src/ecatslv.c ****                             {
 4004              		.loc 1 1961 29 is_stmt 1 view .LVU1216
1961:Lib/ssc/src/ecatslv.c ****                             {
 4005              		.loc 1 1961 60 is_stmt 0 view .LVU1217
 4006 0126 3B4B     		ldr	r3, .L347+48
 4007 0128 B3F90030 		ldrsh	r3, [r3]
1961:Lib/ssc/src/ecatslv.c ****                             {
 4008              		.loc 1 1961 31 view .LVU1218
 4009 012c 002B     		cmp	r3, #0
 4010 012e A8DD     		ble	.L307
1961:Lib/ssc/src/ecatslv.c ****                             {
 4011              		.loc 1 1961 95 discriminator 1 view .LVU1219
 4012 0130 394A     		ldr	r2, .L347+52
 4013 0132 B2F90020 		ldrsh	r2, [r2]
1961:Lib/ssc/src/ecatslv.c ****                             {
 4014              		.loc 1 1961 64 discriminator 1 view .LVU1220
 4015 0136 9342     		cmp	r3, r2
 4016 0138 A3DC     		bgt	.L307
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
 4017              		.loc 1 1966 33 is_stmt 1 view .LVU1221
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
 4018              		.loc 1 1966 61 is_stmt 0 view .LVU1222
 4019 013a 0023     		movs	r3, #0
 4020 013c 354A     		ldr	r2, .L347+48
 4021 013e 1380     		strh	r3, [r2]	@ movhi
1967:Lib/ssc/src/ecatslv.c **** 
 4022              		.loc 1 1967 33 is_stmt 1 view .LVU1223
1967:Lib/ssc/src/ecatslv.c **** 
 4023              		.loc 1 1967 57 is_stmt 0 view .LVU1224
 4024 0140 354A     		ldr	r2, .L347+52
 4025 0142 1380     		strh	r3, [r2]	@ movhi
1969:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccJBQgIh.s 			page 144


 4026              		.loc 1 1969 33 is_stmt 1 view .LVU1225
1969:Lib/ssc/src/ecatslv.c **** 
 4027              		.loc 1 1969 42 is_stmt 0 view .LVU1226
 4028 0144 FFF7FEFF 		bl	APPL_StartOutputHandler
 4029              	.LVL348:
1971:Lib/ssc/src/ecatslv.c ****                                 {
 4030              		.loc 1 1971 33 is_stmt 1 view .LVU1227
1971:Lib/ssc/src/ecatslv.c ****                                 {
 4031              		.loc 1 1971 35 is_stmt 0 view .LVU1228
 4032 0148 0546     		mov	r5, r0
 4033 014a 20BB     		cbnz	r0, .L328
1974:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4034              		.loc 1 1974 37 is_stmt 1 view .LVU1229
1974:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4035              		.loc 1 1974 62 is_stmt 0 view .LVU1230
 4036 014c 2F4B     		ldr	r3, .L347+40
 4037 014e 0122     		movs	r2, #1
 4038 0150 1A70     		strb	r2, [r3]
1975:Lib/ssc/src/ecatslv.c ****                                 }
 4039              		.loc 1 1975 37 is_stmt 1 view .LVU1231
 4040              	.LVL349:
2014:Lib/ssc/src/ecatslv.c ****         {
 4041              		.loc 1 2014 9 view .LVU1232
1975:Lib/ssc/src/ecatslv.c ****                                 }
 4042              		.loc 1 1975 44 is_stmt 0 view .LVU1233
 4043 0152 0824     		movs	r4, #8
 4044 0154 8BE7     		b	.L326
 4045              	.LVL350:
 4046              	.L324:
1924:Lib/ssc/src/ecatslv.c ****                             {
 4047              		.loc 1 1924 29 is_stmt 1 view .LVU1234
1924:Lib/ssc/src/ecatslv.c ****                             {
 4048              		.loc 1 1924 31 is_stmt 0 view .LVU1235
 4049 0156 FF28     		cmp	r0, #255
 4050 0158 93D0     		beq	.L307
1926:Lib/ssc/src/ecatslv.c ****                                 MBX_StopMailboxHandler();
 4051              		.loc 1 1926 33 is_stmt 1 view .LVU1236
 4052 015a FFF7FEFF 		bl	APPL_StopMailboxHandler
 4053              	.LVL351:
1927:Lib/ssc/src/ecatslv.c ****                             }
 4054              		.loc 1 1927 33 view .LVU1237
 4055 015e FFF7FEFF 		bl	MBX_StopMailboxHandler
 4056              	.LVL352:
2014:Lib/ssc/src/ecatslv.c ****         {
 4057              		.loc 1 2014 9 view .LVU1238
 4058 0162 8EE7     		b	.L307
 4059              	.LVL353:
 4060              	.L320:
1933:Lib/ssc/src/ecatslv.c ****                     {
 4061              		.loc 1 1933 21 view .LVU1239
1933:Lib/ssc/src/ecatslv.c ****                     {
 4062              		.loc 1 1933 24 is_stmt 0 view .LVU1240
 4063 0164 224B     		ldr	r3, .L347+12
 4064 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1933:Lib/ssc/src/ecatslv.c ****                     {
 4065              		.loc 1 1933 23 view .LVU1241
 4066 0168 002B     		cmp	r3, #0
ARM GAS  /tmp/ccJBQgIh.s 			page 145


 4067 016a 8AD0     		beq	.L307
1935:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
 4068              		.loc 1 1935 25 is_stmt 1 view .LVU1242
1935:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
 4069              		.loc 1 1935 41 is_stmt 0 view .LVU1243
 4070 016c 204B     		ldr	r3, .L347+12
 4071 016e 0022     		movs	r2, #0
 4072 0170 1A70     		strb	r2, [r3]
1936:Lib/ssc/src/ecatslv.c **** 
 4073              		.loc 1 1936 25 is_stmt 1 view .LVU1244
1936:Lib/ssc/src/ecatslv.c **** 
 4074              		.loc 1 1936 34 is_stmt 0 view .LVU1245
 4075 0172 2A48     		ldr	r0, .L347+56
 4076 0174 FFF7FEFF 		bl	APPL_StartInputHandler
 4077              	.LVL354:
1938:Lib/ssc/src/ecatslv.c ****                         {
 4078              		.loc 1 1938 25 is_stmt 1 view .LVU1246
1938:Lib/ssc/src/ecatslv.c ****                         {
 4079              		.loc 1 1938 27 is_stmt 0 view .LVU1247
 4080 0178 0546     		mov	r5, r0
 4081 017a 20B9     		cbnz	r0, .L325
1940:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
 4082              		.loc 1 1940 29 is_stmt 1 view .LVU1248
1940:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
 4083              		.loc 1 1940 53 is_stmt 0 view .LVU1249
 4084 017c 284B     		ldr	r3, .L347+60
 4085 017e 0122     		movs	r2, #1
 4086 0180 1A70     		strb	r2, [r3]
1941:Lib/ssc/src/ecatslv.c ****                         }
 4087              		.loc 1 1941 29 is_stmt 1 view .LVU1250
 4088              	.LVL355:
2014:Lib/ssc/src/ecatslv.c ****         {
 4089              		.loc 1 2014 9 view .LVU1251
1941:Lib/ssc/src/ecatslv.c ****                         }
 4090              		.loc 1 1941 36 is_stmt 0 view .LVU1252
 4091 0182 0424     		movs	r4, #4
 4092 0184 73E7     		b	.L326
 4093              	.LVL356:
 4094              	.L325:
1948:Lib/ssc/src/ecatslv.c ****                             {
 4095              		.loc 1 1948 29 is_stmt 1 view .LVU1253
1948:Lib/ssc/src/ecatslv.c ****                             {
 4096              		.loc 1 1948 31 is_stmt 0 view .LVU1254
 4097 0186 FF28     		cmp	r0, #255
 4098 0188 3FF47BAF 		beq	.L307
1950:Lib/ssc/src/ecatslv.c ****                                 StopInputHandler();
 4099              		.loc 1 1950 33 is_stmt 1 view .LVU1255
 4100 018c FFF7FEFF 		bl	APPL_StopInputHandler
 4101              	.LVL357:
1951:Lib/ssc/src/ecatslv.c ****                             }
 4102              		.loc 1 1951 33 view .LVU1256
 4103 0190 FFF7FEFF 		bl	StopInputHandler
 4104              	.LVL358:
2014:Lib/ssc/src/ecatslv.c ****         {
 4105              		.loc 1 2014 9 view .LVU1257
 4106 0194 75E7     		b	.L307
 4107              	.LVL359:
ARM GAS  /tmp/ccJBQgIh.s 			page 146


 4108              	.L328:
1979:Lib/ssc/src/ecatslv.c ****                                     {
 4109              		.loc 1 1979 37 view .LVU1258
1979:Lib/ssc/src/ecatslv.c ****                                     {
 4110              		.loc 1 1979 39 is_stmt 0 view .LVU1259
 4111 0196 FF28     		cmp	r0, #255
 4112 0198 3FF473AF 		beq	.L307
1981:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
 4113              		.loc 1 1981 41 is_stmt 1 view .LVU1260
 4114 019c FFF7FEFF 		bl	APPL_StopOutputHandler
 4115              	.LVL360:
1982:Lib/ssc/src/ecatslv.c ****                                     }
 4116              		.loc 1 1982 41 view .LVU1261
 4117 01a0 FFF7FEFF 		bl	StopOutputHandler
 4118              	.LVL361:
2014:Lib/ssc/src/ecatslv.c ****         {
 4119              		.loc 1 2014 9 view .LVU1262
 4120 01a4 6DE7     		b	.L307
 4121              	.LVL362:
 4122              	.L327:
1989:Lib/ssc/src/ecatslv.c ****                             {
 4123              		.loc 1 1989 29 view .LVU1263
1989:Lib/ssc/src/ecatslv.c ****                             {
 4124              		.loc 1 1989 46 is_stmt 0 view .LVU1264
 4125 01a6 184B     		ldr	r3, .L347+36
 4126 01a8 1B88     		ldrh	r3, [r3]
1989:Lib/ssc/src/ecatslv.c ****                             {
 4127              		.loc 1 1989 31 view .LVU1265
 4128 01aa 23B1     		cbz	r3, .L329
1989:Lib/ssc/src/ecatslv.c ****                             {
 4129              		.loc 1 1989 51 discriminator 1 view .LVU1266
 4130 01ac 154B     		ldr	r3, .L347+32
 4131 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4132 01b0 002B     		cmp	r3, #0
 4133 01b2 3FF466AF 		beq	.L307
 4134              	.L329:
1991:Lib/ssc/src/ecatslv.c **** 
 4135              		.loc 1 1991 33 is_stmt 1 view .LVU1267
1991:Lib/ssc/src/ecatslv.c **** 
 4136              		.loc 1 1991 42 is_stmt 0 view .LVU1268
 4137 01b6 FFF7FEFF 		bl	APPL_StartOutputHandler
 4138              	.LVL363:
1993:Lib/ssc/src/ecatslv.c ****                                 {
 4139              		.loc 1 1993 33 is_stmt 1 view .LVU1269
1993:Lib/ssc/src/ecatslv.c ****                                 {
 4140              		.loc 1 1993 35 is_stmt 0 view .LVU1270
 4141 01ba 0546     		mov	r5, r0
 4142 01bc 20B9     		cbnz	r0, .L330
1996:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4143              		.loc 1 1996 37 is_stmt 1 view .LVU1271
1996:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4144              		.loc 1 1996 62 is_stmt 0 view .LVU1272
 4145 01be 134B     		ldr	r3, .L347+40
 4146 01c0 0122     		movs	r2, #1
 4147 01c2 1A70     		strb	r2, [r3]
1997:Lib/ssc/src/ecatslv.c ****                                 }
 4148              		.loc 1 1997 37 is_stmt 1 view .LVU1273
ARM GAS  /tmp/ccJBQgIh.s 			page 147


 4149              	.LVL364:
2014:Lib/ssc/src/ecatslv.c ****         {
 4150              		.loc 1 2014 9 view .LVU1274
1997:Lib/ssc/src/ecatslv.c ****                                 }
 4151              		.loc 1 1997 44 is_stmt 0 view .LVU1275
 4152 01c4 0824     		movs	r4, #8
 4153 01c6 52E7     		b	.L326
 4154              	.LVL365:
 4155              	.L330:
2001:Lib/ssc/src/ecatslv.c ****                                     {
 4156              		.loc 1 2001 37 is_stmt 1 view .LVU1276
2001:Lib/ssc/src/ecatslv.c ****                                     {
 4157              		.loc 1 2001 39 is_stmt 0 view .LVU1277
 4158 01c8 FF28     		cmp	r0, #255
 4159 01ca 3FF45AAF 		beq	.L307
2003:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
 4160              		.loc 1 2003 41 is_stmt 1 view .LVU1278
 4161 01ce FFF7FEFF 		bl	APPL_StopOutputHandler
 4162              	.LVL366:
2004:Lib/ssc/src/ecatslv.c ****                                     }
 4163              		.loc 1 2004 41 view .LVU1279
 4164 01d2 FFF7FEFF 		bl	StopOutputHandler
 4165              	.LVL367:
2014:Lib/ssc/src/ecatslv.c ****         {
 4166              		.loc 1 2014 9 view .LVU1280
 4167 01d6 54E7     		b	.L307
 4168              	.LVL368:
 4169              	.L342:
1812:Lib/ssc/src/ecatslv.c ****             {
 4170              		.loc 1 1812 13 is_stmt 0 view .LVU1281
 4171 01d8 0025     		movs	r5, #0
 4172 01da 47E7     		b	.L312
 4173              	.L333:
1829:Lib/ssc/src/ecatslv.c ****                     }
 4174              		.loc 1 1829 36 view .LVU1282
 4175 01dc 0125     		movs	r5, #1
 4176 01de 45E7     		b	.L312
 4177              	.L334:
1846:Lib/ssc/src/ecatslv.c ****                     }
 4178              		.loc 1 1846 36 view .LVU1283
 4179 01e0 0125     		movs	r5, #1
 4180 01e2 43E7     		b	.L312
 4181              	.L348:
 4182              		.align	2
 4183              	.L347:
 4184 01e4 00000000 		.word	.LANCHOR36
 4185 01e8 00000000 		.word	.LANCHOR33
 4186 01ec 00000000 		.word	.LANCHOR35
 4187 01f0 00000000 		.word	.LANCHOR34
 4188 01f4 00000000 		.word	.LANCHOR28
 4189 01f8 00000000 		.word	.LANCHOR29
 4190 01fc 00000000 		.word	.LANCHOR15
 4191 0200 00000000 		.word	.LANCHOR25
 4192 0204 00000000 		.word	.LANCHOR13
 4193 0208 00000000 		.word	.LANCHOR7
 4194 020c 00000000 		.word	.LANCHOR31
 4195 0210 00000000 		.word	bMbxRunning
ARM GAS  /tmp/ccJBQgIh.s 			page 148


 4196 0214 00000000 		.word	.LANCHOR27
 4197 0218 00000000 		.word	.LANCHOR30
 4198 021c 00000000 		.word	.LANCHOR12
 4199 0220 00000000 		.word	.LANCHOR32
 4200              	.LBE26:
 4201              		.cfi_endproc
 4202              	.LFE137:
 4204              		.section	.text.DC_CheckWatchdog,"ax",%progbits
 4205              		.align	1
 4206              		.global	DC_CheckWatchdog
 4207              		.syntax unified
 4208              		.thumb
 4209              		.thumb_func
 4211              	DC_CheckWatchdog:
 4212              	.LFB138:
2028:Lib/ssc/src/ecatslv.c **** 
2029:Lib/ssc/src/ecatslv.c **** 
2030:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2031:Lib/ssc/src/ecatslv.c **** /**
2032:Lib/ssc/src/ecatslv.c **** 
2033:Lib/ssc/src/ecatslv.c ****  \brief    This function checks the current Sync state and set the local flags
2034:Lib/ssc/src/ecatslv.c ****  The analyse of the local flags is handled in "CheckIfEcatError"
2035:Lib/ssc/src/ecatslv.c **** 
2036:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2037:Lib/ssc/src/ecatslv.c **** void DC_CheckWatchdog(void)
2038:Lib/ssc/src/ecatslv.c **** {
 4213              		.loc 1 2038 1 is_stmt 1 view -0
 4214              		.cfi_startproc
 4215              		@ args = 0, pretend = 0, frame = 0
 4216              		@ frame_needed = 0, uses_anonymous_args = 0
 4217              		@ link register save eliminated.
2039:Lib/ssc/src/ecatslv.c ****     if(bDcSyncActive)
 4218              		.loc 1 2039 5 view .LVU1285
 4219              		.loc 1 2039 8 is_stmt 0 view .LVU1286
 4220 0000 2C4B     		ldr	r3, .L358
 4221 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4222              		.loc 1 2039 7 view .LVU1287
 4223 0004 002B     		cmp	r3, #0
 4224 0006 54D0     		beq	.L349
2040:Lib/ssc/src/ecatslv.c ****     {
2041:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM4*/
2042:Lib/ssc/src/ecatslv.c ****         /*If Sync0 watchdog is enabled and expired*/
2043:Lib/ssc/src/ecatslv.c ****         if((Sync0WdValue > 0) && (Sync0WdCounter >= Sync0WdValue))
 4225              		.loc 1 2043 9 is_stmt 1 view .LVU1288
 4226              		.loc 1 2043 26 is_stmt 0 view .LVU1289
 4227 0008 2B4B     		ldr	r3, .L358+4
 4228 000a 1B88     		ldrh	r3, [r3]
 4229              		.loc 1 2043 11 view .LVU1290
 4230 000c 3BB1     		cbz	r3, .L351
 4231              		.loc 1 2043 50 discriminator 1 view .LVU1291
 4232 000e 2B4A     		ldr	r2, .L358+8
 4233 0010 1288     		ldrh	r2, [r2]
 4234              		.loc 1 2043 31 discriminator 1 view .LVU1292
 4235 0012 9342     		cmp	r3, r2
 4236 0014 03D8     		bhi	.L351
2044:Lib/ssc/src/ecatslv.c ****         {
2045:Lib/ssc/src/ecatslv.c ****                 /*Sync0 watchdog expired*/
ARM GAS  /tmp/ccJBQgIh.s 			page 149


2046:Lib/ssc/src/ecatslv.c **** 
2047:Lib/ssc/src/ecatslv.c **** 					bDcRunning = FALSE;        
 4237              		.loc 1 2047 6 is_stmt 1 view .LVU1293
 4238              		.loc 1 2047 17 is_stmt 0 view .LVU1294
 4239 0016 2A4B     		ldr	r3, .L358+12
 4240 0018 0022     		movs	r2, #0
 4241 001a 1A70     		strb	r2, [r3]
 4242 001c 09E0     		b	.L352
 4243              	.L351:
2048:Lib/ssc/src/ecatslv.c ****         }
2049:Lib/ssc/src/ecatslv.c ****         else
2050:Lib/ssc/src/ecatslv.c ****         {
2051:Lib/ssc/src/ecatslv.c ****             if(Sync0WdCounter < Sync0WdValue)
 4244              		.loc 1 2051 13 is_stmt 1 view .LVU1295
 4245              		.loc 1 2051 31 is_stmt 0 view .LVU1296
 4246 001e 274A     		ldr	r2, .L358+8
 4247 0020 1288     		ldrh	r2, [r2]
 4248              		.loc 1 2051 15 view .LVU1297
 4249 0022 9342     		cmp	r3, r2
 4250 0024 02D9     		bls	.L353
2052:Lib/ssc/src/ecatslv.c ****             {
2053:Lib/ssc/src/ecatslv.c ****                 Sync0WdCounter ++;
 4251              		.loc 1 2053 17 is_stmt 1 view .LVU1298
 4252              		.loc 1 2053 32 is_stmt 0 view .LVU1299
 4253 0026 0132     		adds	r2, r2, #1
 4254 0028 244B     		ldr	r3, .L358+8
 4255 002a 1A80     		strh	r2, [r3]	@ movhi
 4256              	.L353:
2054:Lib/ssc/src/ecatslv.c ****             }
2055:Lib/ssc/src/ecatslv.c **** 
2056:Lib/ssc/src/ecatslv.c ****             bDcRunning = TRUE;
 4257              		.loc 1 2056 13 is_stmt 1 view .LVU1300
 4258              		.loc 1 2056 24 is_stmt 0 view .LVU1301
 4259 002c 244B     		ldr	r3, .L358+12
 4260 002e 0122     		movs	r2, #1
 4261 0030 1A70     		strb	r2, [r3]
 4262              	.L352:
2057:Lib/ssc/src/ecatslv.c ****         }
2058:Lib/ssc/src/ecatslv.c **** 
2059:Lib/ssc/src/ecatslv.c ****         if(bDcRunning)
 4263              		.loc 1 2059 9 is_stmt 1 view .LVU1302
 4264              		.loc 1 2059 12 is_stmt 0 view .LVU1303
 4265 0032 234B     		ldr	r3, .L358+12
 4266 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4267              		.loc 1 2059 11 view .LVU1304
 4268 0036 4BB1     		cbz	r3, .L354
2060:Lib/ssc/src/ecatslv.c ****         {
2061:Lib/ssc/src/ecatslv.c ****             /*Check the Sync1 cycle if Sync1 Wd is enabled*/
2062:Lib/ssc/src/ecatslv.c ****             if(Sync1WdValue > 0)
 4269              		.loc 1 2062 13 is_stmt 1 view .LVU1305
 4270              		.loc 1 2062 29 is_stmt 0 view .LVU1306
 4271 0038 224B     		ldr	r3, .L358+16
 4272 003a 1B88     		ldrh	r3, [r3]
 4273              		.loc 1 2062 15 view .LVU1307
 4274 003c 33B1     		cbz	r3, .L354
2063:Lib/ssc/src/ecatslv.c ****             {
2064:Lib/ssc/src/ecatslv.c ****                 if(Sync1WdCounter < Sync1WdValue)
ARM GAS  /tmp/ccJBQgIh.s 			page 150


 4275              		.loc 1 2064 17 is_stmt 1 view .LVU1308
 4276              		.loc 1 2064 35 is_stmt 0 view .LVU1309
 4277 003e 224A     		ldr	r2, .L358+20
 4278 0040 1288     		ldrh	r2, [r2]
 4279              		.loc 1 2064 19 view .LVU1310
 4280 0042 9342     		cmp	r3, r2
 4281 0044 18D9     		bls	.L355
2065:Lib/ssc/src/ecatslv.c ****                 {
2066:Lib/ssc/src/ecatslv.c ****                     Sync1WdCounter ++;
 4282              		.loc 1 2066 21 is_stmt 1 view .LVU1311
 4283              		.loc 1 2066 36 is_stmt 0 view .LVU1312
 4284 0046 0132     		adds	r2, r2, #1
 4285 0048 1F4B     		ldr	r3, .L358+20
 4286 004a 1A80     		strh	r2, [r3]	@ movhi
 4287              	.L354:
2067:Lib/ssc/src/ecatslv.c ****                 }
2068:Lib/ssc/src/ecatslv.c ****                 else
2069:Lib/ssc/src/ecatslv.c ****                 {
2070:Lib/ssc/src/ecatslv.c ****                     /*Sync1 watchdog expired*/
2071:Lib/ssc/src/ecatslv.c ****                     bDcRunning = FALSE;
2072:Lib/ssc/src/ecatslv.c ****                 }
2073:Lib/ssc/src/ecatslv.c ****             }
2074:Lib/ssc/src/ecatslv.c ****         }
2075:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM4*/
2076:Lib/ssc/src/ecatslv.c **** 
2077:Lib/ssc/src/ecatslv.c ****         if(bDcRunning)
 4288              		.loc 1 2077 9 is_stmt 1 view .LVU1313
 4289              		.loc 1 2077 12 is_stmt 0 view .LVU1314
 4290 004c 1C4B     		ldr	r3, .L358+12
 4291 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4292              		.loc 1 2077 11 view .LVU1315
 4293 0050 4BB3     		cbz	r3, .L356
2078:Lib/ssc/src/ecatslv.c ****         {
2079:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) COE3*/
2080:Lib/ssc/src/ecatslv.c ****            if(sSyncManOutPar.u16SmEventMissedCounter < sErrorSettings.u16SyncErrorCounterLimit)
 4294              		.loc 1 2080 12 is_stmt 1 view .LVU1316
 4295              		.loc 1 2080 29 is_stmt 0 view .LVU1317
 4296 0052 1E4B     		ldr	r3, .L358+24
 4297 0054 1A8D     		ldrh	r2, [r3, #40]
 4298              		.loc 1 2080 70 view .LVU1318
 4299 0056 1E4B     		ldr	r3, .L358+28
 4300 0058 1B89     		ldrh	r3, [r3, #8]
 4301              		.loc 1 2080 14 view .LVU1319
 4302 005a 9A42     		cmp	r2, r3
 4303 005c 10D2     		bcs	.L357
2081:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) COE3*/
2082:Lib/ssc/src/ecatslv.c ****             {
2083:Lib/ssc/src/ecatslv.c ****                 bSmSyncSequenceValid = TRUE;
 4304              		.loc 1 2083 17 is_stmt 1 view .LVU1320
 4305              		.loc 1 2083 38 is_stmt 0 view .LVU1321
 4306 005e 1D4B     		ldr	r3, .L358+32
 4307 0060 0122     		movs	r2, #1
 4308 0062 1A70     		strb	r2, [r3]
2084:Lib/ssc/src/ecatslv.c **** 
2085:Lib/ssc/src/ecatslv.c ****                 /*Wait for PLL is active increment the Pll valid counter*/
2086:Lib/ssc/src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
 4309              		.loc 1 2086 17 is_stmt 1 view .LVU1322
ARM GAS  /tmp/ccJBQgIh.s 			page 151


 4310              		.loc 1 2086 48 is_stmt 0 view .LVU1323
 4311 0064 1C4B     		ldr	r3, .L358+36
 4312 0066 B3F90030 		ldrsh	r3, [r3]
 4313              		.loc 1 2086 19 view .LVU1324
 4314 006a 002B     		cmp	r3, #0
 4315 006c 21DD     		ble	.L349
2087:Lib/ssc/src/ecatslv.c ****                 {
2088:Lib/ssc/src/ecatslv.c ****                     i16WaitForPllRunningCnt++;
 4316              		.loc 1 2088 21 is_stmt 1 view .LVU1325
 4317              		.loc 1 2088 44 is_stmt 0 view .LVU1326
 4318 006e 1B4A     		ldr	r2, .L358+40
 4319 0070 1388     		ldrh	r3, [r2]
 4320 0072 0133     		adds	r3, r3, #1
 4321 0074 1380     		strh	r3, [r2]	@ movhi
 4322 0076 7047     		bx	lr
 4323              	.L355:
2071:Lib/ssc/src/ecatslv.c ****                 }
 4324              		.loc 1 2071 21 is_stmt 1 view .LVU1327
2071:Lib/ssc/src/ecatslv.c ****                 }
 4325              		.loc 1 2071 32 is_stmt 0 view .LVU1328
 4326 0078 114B     		ldr	r3, .L358+12
 4327 007a 0022     		movs	r2, #0
 4328 007c 1A70     		strb	r2, [r3]
 4329 007e E5E7     		b	.L354
 4330              	.L357:
2089:Lib/ssc/src/ecatslv.c ****                 }
2090:Lib/ssc/src/ecatslv.c ****             }
2091:Lib/ssc/src/ecatslv.c ****             else if(bSmSyncSequenceValid)
 4331              		.loc 1 2091 18 is_stmt 1 view .LVU1329
 4332              		.loc 1 2091 21 is_stmt 0 view .LVU1330
 4333 0080 144B     		ldr	r3, .L358+32
 4334 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4335              		.loc 1 2091 20 view .LVU1331
 4336 0084 ABB1     		cbz	r3, .L349
2092:Lib/ssc/src/ecatslv.c ****             {
2093:Lib/ssc/src/ecatslv.c ****                 bSmSyncSequenceValid = FALSE;
 4337              		.loc 1 2093 17 is_stmt 1 view .LVU1332
 4338              		.loc 1 2093 38 is_stmt 0 view .LVU1333
 4339 0086 134B     		ldr	r3, .L358+32
 4340 0088 0022     		movs	r2, #0
 4341 008a 1A70     		strb	r2, [r3]
2094:Lib/ssc/src/ecatslv.c ****                 sSyncManOutPar.u8SyncError = 1;
 4342              		.loc 1 2094 17 is_stmt 1 view .LVU1334
 4343              		.loc 1 2094 44 is_stmt 0 view .LVU1335
 4344 008c 0F4B     		ldr	r3, .L358+24
 4345 008e 0122     		movs	r2, #1
 4346 0090 83F84020 		strb	r2, [r3, #64]
2095:Lib/ssc/src/ecatslv.c **** 
2096:Lib/ssc/src/ecatslv.c ****                 /*Wait for PLL is active reset the Pll valid counter*/
2097:Lib/ssc/src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
 4347              		.loc 1 2097 17 is_stmt 1 view .LVU1336
 4348              		.loc 1 2097 48 is_stmt 0 view .LVU1337
 4349 0094 104B     		ldr	r3, .L358+36
 4350 0096 B3F90030 		ldrsh	r3, [r3]
 4351              		.loc 1 2097 19 view .LVU1338
 4352 009a 002B     		cmp	r3, #0
 4353 009c 09DD     		ble	.L349
ARM GAS  /tmp/ccJBQgIh.s 			page 152


2098:Lib/ssc/src/ecatslv.c ****                 {
2099:Lib/ssc/src/ecatslv.c ****                     i16WaitForPllRunningCnt = 0;
 4354              		.loc 1 2099 21 is_stmt 1 view .LVU1339
 4355              		.loc 1 2099 45 is_stmt 0 view .LVU1340
 4356 009e 0F4B     		ldr	r3, .L358+40
 4357 00a0 0022     		movs	r2, #0
 4358 00a2 1A80     		strh	r2, [r3]	@ movhi
 4359 00a4 7047     		bx	lr
 4360              	.L356:
2100:Lib/ssc/src/ecatslv.c ****                 }
2101:Lib/ssc/src/ecatslv.c ****             }
2102:Lib/ssc/src/ecatslv.c ****         }
2103:Lib/ssc/src/ecatslv.c ****         else if(bSmSyncSequenceValid)
 4361              		.loc 1 2103 14 is_stmt 1 view .LVU1341
 4362              		.loc 1 2103 17 is_stmt 0 view .LVU1342
 4363 00a6 0B4B     		ldr	r3, .L358+32
 4364 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4365              		.loc 1 2103 16 view .LVU1343
 4366 00aa 13B1     		cbz	r3, .L349
2104:Lib/ssc/src/ecatslv.c ****         {
2105:Lib/ssc/src/ecatslv.c ****             bSmSyncSequenceValid = FALSE;
 4367              		.loc 1 2105 13 is_stmt 1 view .LVU1344
 4368              		.loc 1 2105 34 is_stmt 0 view .LVU1345
 4369 00ac 094B     		ldr	r3, .L358+32
 4370 00ae 0022     		movs	r2, #0
 4371 00b0 1A70     		strb	r2, [r3]
 4372              	.L349:
2106:Lib/ssc/src/ecatslv.c ****         }
2107:Lib/ssc/src/ecatslv.c **** 
2108:Lib/ssc/src/ecatslv.c ****     }
2109:Lib/ssc/src/ecatslv.c **** }
 4373              		.loc 1 2109 1 view .LVU1346
 4374 00b2 7047     		bx	lr
 4375              	.L359:
 4376              		.align	2
 4377              	.L358:
 4378 00b4 00000000 		.word	.LANCHOR15
 4379 00b8 00000000 		.word	.LANCHOR21
 4380 00bc 00000000 		.word	.LANCHOR22
 4381 00c0 00000000 		.word	.LANCHOR25
 4382 00c4 00000000 		.word	.LANCHOR24
 4383 00c8 00000000 		.word	.LANCHOR23
 4384 00cc 00000000 		.word	sSyncManOutPar
 4385 00d0 00000000 		.word	sErrorSettings
 4386 00d4 00000000 		.word	.LANCHOR26
 4387 00d8 00000000 		.word	.LANCHOR27
 4388 00dc 00000000 		.word	.LANCHOR30
 4389              		.cfi_endproc
 4390              	.LFE138:
 4392              		.section	.text.CheckIfEcatError,"ax",%progbits
 4393              		.align	1
 4394              		.global	CheckIfEcatError
 4395              		.syntax unified
 4396              		.thumb
 4397              		.thumb_func
 4399              	CheckIfEcatError:
 4400              	.LFB139:
ARM GAS  /tmp/ccJBQgIh.s 			page 153


2110:Lib/ssc/src/ecatslv.c **** 
2111:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2112:Lib/ssc/src/ecatslv.c **** /**
2113:Lib/ssc/src/ecatslv.c **** 
2114:Lib/ssc/src/ecatslv.c ****  \brief    Checks communication and synchronisation variables and update AL status / AL status code
2115:Lib/ssc/src/ecatslv.c **** 
2116:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2117:Lib/ssc/src/ecatslv.c **** void CheckIfEcatError(void)
2118:Lib/ssc/src/ecatslv.c **** {
 4401              		.loc 1 2118 1 is_stmt 1 view -0
 4402              		.cfi_startproc
 4403              		@ args = 0, pretend = 0, frame = 8
 4404              		@ frame_needed = 0, uses_anonymous_args = 0
 4405 0000 00B5     		push	{lr}
 4406              		.cfi_def_cfa_offset 4
 4407              		.cfi_offset 14, -4
 4408 0002 83B0     		sub	sp, sp, #12
 4409              		.cfi_def_cfa_offset 16
2119:Lib/ssc/src/ecatslv.c ****    /*if the watchdog is enabled check the the process data watchdog in the ESC
2120:Lib/ssc/src/ecatslv.c ****    and set the AL status code 0x1B if the watchdog expired*/
2121:Lib/ssc/src/ecatslv.c ****    if (EcatWdValue != 0)
 4410              		.loc 1 2121 4 view .LVU1348
 4411              		.loc 1 2121 20 is_stmt 0 view .LVU1349
 4412 0004 1D4B     		ldr	r3, .L371
 4413 0006 1B88     		ldrh	r3, [r3]
 4414              		.loc 1 2121 7 view .LVU1350
 4415 0008 73B9     		cbnz	r3, .L367
 4416              	.L361:
2122:Lib/ssc/src/ecatslv.c ****    {
2123:Lib/ssc/src/ecatslv.c ****       /*watchdog time is set => watchdog is active*/
2124:Lib/ssc/src/ecatslv.c ****       UINT16 WdStatusOK = 0;
2125:Lib/ssc/src/ecatslv.c **** 
2126:Lib/ssc/src/ecatslv.c ****       HW_EscReadWord(WdStatusOK, ESC_PD_WD_STATE);
2127:Lib/ssc/src/ecatslv.c ****       WdStatusOK = SWAPWORD(WdStatusOK);
2128:Lib/ssc/src/ecatslv.c **** 
2129:Lib/ssc/src/ecatslv.c ****       /*ECATCHANGE_START(V5.11) ECAT4*/
2130:Lib/ssc/src/ecatslv.c ****       if (!(WdStatusOK & ESC_PD_WD_TRIGGER_MASK) && (nPdOutputSize > 0))
2131:Lib/ssc/src/ecatslv.c ****       {
2132:Lib/ssc/src/ecatslv.c ****          /*The device is in OP state*/
2133:Lib/ssc/src/ecatslv.c **** 
2134:Lib/ssc/src/ecatslv.c ****          if (bEcatOutputUpdateRunning)
2135:Lib/ssc/src/ecatslv.c ****          {
2136:Lib/ssc/src/ecatslv.c ****             AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SMWATCHDOG);
2137:Lib/ssc/src/ecatslv.c ****             return;
2138:Lib/ssc/src/ecatslv.c ****          }
2139:Lib/ssc/src/ecatslv.c **** 
2140:Lib/ssc/src/ecatslv.c ****          else
2141:Lib/ssc/src/ecatslv.c ****          {
2142:Lib/ssc/src/ecatslv.c ****             bEcatFirstOutputsReceived = FALSE;
2143:Lib/ssc/src/ecatslv.c ****          }
2144:Lib/ssc/src/ecatslv.c ****       }
2145:Lib/ssc/src/ecatslv.c ****       /*ECATCHANGE_END(V5.11) ECAT4*/
2146:Lib/ssc/src/ecatslv.c ****    }
2147:Lib/ssc/src/ecatslv.c ****  
2148:Lib/ssc/src/ecatslv.c ****    if(bDcSyncActive)
 4417              		.loc 1 2148 4 is_stmt 1 view .LVU1351
 4418              		.loc 1 2148 7 is_stmt 0 view .LVU1352
ARM GAS  /tmp/ccJBQgIh.s 			page 154


 4419 000a 1D4B     		ldr	r3, .L371+4
 4420 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4421              		.loc 1 2148 6 view .LVU1353
 4422 000e 43B1     		cbz	r3, .L360
2149:Lib/ssc/src/ecatslv.c ****    {
2150:Lib/ssc/src/ecatslv.c ****        if(bEcatOutputUpdateRunning)
 4423              		.loc 1 2150 8 is_stmt 1 view .LVU1354
 4424              		.loc 1 2150 11 is_stmt 0 view .LVU1355
 4425 0010 1C4B     		ldr	r3, .L371+8
 4426 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4427              		.loc 1 2150 10 view .LVU1356
 4428 0014 2BB1     		cbz	r3, .L360
2151:Lib/ssc/src/ecatslv.c ****        {
2152:Lib/ssc/src/ecatslv.c ****            /*Slave is in OP state*/
2153:Lib/ssc/src/ecatslv.c ****            if(!bDcRunning)
 4429              		.loc 1 2153 12 is_stmt 1 view .LVU1357
 4430              		.loc 1 2153 15 is_stmt 0 view .LVU1358
 4431 0016 1C4B     		ldr	r3, .L371+12
 4432 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4433              		.loc 1 2153 14 view .LVU1359
 4434 001a 23B3     		cbz	r3, .L368
2154:Lib/ssc/src/ecatslv.c ****            {
2155:Lib/ssc/src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_FATALSYNCERROR);
2156:Lib/ssc/src/ecatslv.c ****                return;
2157:Lib/ssc/src/ecatslv.c ****            }
2158:Lib/ssc/src/ecatslv.c ****            else if(!bSmSyncSequenceValid)
 4435              		.loc 1 2158 17 is_stmt 1 view .LVU1360
 4436              		.loc 1 2158 20 is_stmt 0 view .LVU1361
 4437 001c 1B4B     		ldr	r3, .L371+16
 4438 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4439              		.loc 1 2158 19 view .LVU1362
 4440 0020 33B3     		cbz	r3, .L369
 4441              	.L360:
2159:Lib/ssc/src/ecatslv.c ****            {
2160:Lib/ssc/src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SYNCERROR);
2161:Lib/ssc/src/ecatslv.c ****                return;
2162:Lib/ssc/src/ecatslv.c ****            }
2163:Lib/ssc/src/ecatslv.c ****         
2164:Lib/ssc/src/ecatslv.c ****        }
2165:Lib/ssc/src/ecatslv.c ****    }
2166:Lib/ssc/src/ecatslv.c **** }
 4442              		.loc 1 2166 1 view .LVU1363
 4443 0022 03B0     		add	sp, sp, #12
 4444              		.cfi_remember_state
 4445              		.cfi_def_cfa_offset 4
 4446              		@ sp needed
 4447 0024 5DF804FB 		ldr	pc, [sp], #4
 4448              	.L367:
 4449              		.cfi_restore_state
 4450              	.LBB27:
2124:Lib/ssc/src/ecatslv.c **** 
 4451              		.loc 1 2124 7 is_stmt 1 view .LVU1364
2124:Lib/ssc/src/ecatslv.c **** 
 4452              		.loc 1 2124 14 is_stmt 0 view .LVU1365
 4453 0028 0023     		movs	r3, #0
 4454 002a ADF80630 		strh	r3, [sp, #6]	@ movhi
2126:Lib/ssc/src/ecatslv.c ****       WdStatusOK = SWAPWORD(WdStatusOK);
ARM GAS  /tmp/ccJBQgIh.s 			page 155


 4455              		.loc 1 2126 7 is_stmt 1 view .LVU1366
 4456 002e 0222     		movs	r2, #2
 4457 0030 4FF48861 		mov	r1, #1088
 4458 0034 0DF10600 		add	r0, sp, #6
 4459 0038 FFF7FEFF 		bl	HW_EscRead
 4460              	.LVL369:
2127:Lib/ssc/src/ecatslv.c **** 
 4461              		.loc 1 2127 7 view .LVU1367
2127:Lib/ssc/src/ecatslv.c **** 
 4462              		.loc 1 2127 18 is_stmt 0 view .LVU1368
 4463 003c BDF80630 		ldrh	r3, [sp, #6]
2130:Lib/ssc/src/ecatslv.c ****       {
 4464              		.loc 1 2130 7 is_stmt 1 view .LVU1369
2130:Lib/ssc/src/ecatslv.c ****       {
 4465              		.loc 1 2130 10 is_stmt 0 view .LVU1370
 4466 0040 13F0010F 		tst	r3, #1
 4467 0044 E1D1     		bne	.L361
2130:Lib/ssc/src/ecatslv.c ****       {
 4468              		.loc 1 2130 68 discriminator 1 view .LVU1371
 4469 0046 124B     		ldr	r3, .L371+20
 4470 0048 1B88     		ldrh	r3, [r3]
2130:Lib/ssc/src/ecatslv.c ****       {
 4471              		.loc 1 2130 50 discriminator 1 view .LVU1372
 4472 004a 002B     		cmp	r3, #0
 4473 004c DDD0     		beq	.L361
2134:Lib/ssc/src/ecatslv.c ****          {
 4474              		.loc 1 2134 10 is_stmt 1 view .LVU1373
2134:Lib/ssc/src/ecatslv.c ****          {
 4475              		.loc 1 2134 14 is_stmt 0 view .LVU1374
 4476 004e 0D4B     		ldr	r3, .L371+8
 4477 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2134:Lib/ssc/src/ecatslv.c ****          {
 4478              		.loc 1 2134 13 view .LVU1375
 4479 0052 1BB9     		cbnz	r3, .L370
2142:Lib/ssc/src/ecatslv.c ****          }
 4480              		.loc 1 2142 13 is_stmt 1 view .LVU1376
2142:Lib/ssc/src/ecatslv.c ****          }
 4481              		.loc 1 2142 39 is_stmt 0 view .LVU1377
 4482 0054 0F4B     		ldr	r3, .L371+24
 4483 0056 0022     		movs	r2, #0
 4484 0058 1A70     		strb	r2, [r3]
 4485 005a D6E7     		b	.L361
 4486              	.L370:
2136:Lib/ssc/src/ecatslv.c ****             return;
 4487              		.loc 1 2136 13 is_stmt 1 view .LVU1378
 4488 005c 1B21     		movs	r1, #27
 4489 005e 0420     		movs	r0, #4
 4490 0060 FFF7FEFF 		bl	AL_ControlInd
 4491              	.LVL370:
2137:Lib/ssc/src/ecatslv.c ****          }
 4492              		.loc 1 2137 13 view .LVU1379
 4493 0064 DDE7     		b	.L360
 4494              	.L368:
 4495              	.LBE27:
2155:Lib/ssc/src/ecatslv.c ****                return;
 4496              		.loc 1 2155 16 view .LVU1380
 4497 0066 2C21     		movs	r1, #44
ARM GAS  /tmp/ccJBQgIh.s 			page 156


 4498 0068 0420     		movs	r0, #4
 4499 006a FFF7FEFF 		bl	AL_ControlInd
 4500              	.LVL371:
2156:Lib/ssc/src/ecatslv.c ****            }
 4501              		.loc 1 2156 16 view .LVU1381
 4502 006e D8E7     		b	.L360
 4503              	.L369:
2160:Lib/ssc/src/ecatslv.c ****                return;
 4504              		.loc 1 2160 16 view .LVU1382
 4505 0070 1A21     		movs	r1, #26
 4506 0072 0420     		movs	r0, #4
 4507 0074 FFF7FEFF 		bl	AL_ControlInd
 4508              	.LVL372:
2161:Lib/ssc/src/ecatslv.c ****            }
 4509              		.loc 1 2161 16 view .LVU1383
 4510 0078 D3E7     		b	.L360
 4511              	.L372:
 4512 007a 00BF     		.align	2
 4513              	.L371:
 4514 007c 00000000 		.word	.LANCHOR20
 4515 0080 00000000 		.word	.LANCHOR15
 4516 0084 00000000 		.word	.LANCHOR31
 4517 0088 00000000 		.word	.LANCHOR25
 4518 008c 00000000 		.word	.LANCHOR26
 4519 0090 00000000 		.word	.LANCHOR7
 4520 0094 00000000 		.word	.LANCHOR13
 4521              		.cfi_endproc
 4522              	.LFE139:
 4524              		.section	.text.ECAT_StateChange,"ax",%progbits
 4525              		.align	1
 4526              		.global	ECAT_StateChange
 4527              		.syntax unified
 4528              		.thumb
 4529              		.thumb_func
 4531              	ECAT_StateChange:
 4532              	.LVL373:
 4533              	.LFB140:
2167:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2168:Lib/ssc/src/ecatslv.c **** /**
2169:Lib/ssc/src/ecatslv.c ****  \param    alStatus: requested state
2170:Lib/ssc/src/ecatslv.c ****  \param    alStatusCode: value for the AL-Status register
2171:Lib/ssc/src/ecatslv.c ****  
2172:Lib/ssc/src/ecatslv.c ****  \brief    This function changes the state of the EtherCAT slave if the requested state
2173:Lib/ssc/src/ecatslv.c ****              is lower than the actual state, otherwise the error condition will be reset.
2174:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2175:Lib/ssc/src/ecatslv.c **** 
2176:Lib/ssc/src/ecatslv.c **** void ECAT_StateChange(UINT8 alStatus, UINT16 alStatusCode)
2177:Lib/ssc/src/ecatslv.c **** {
 4534              		.loc 1 2177 1 view -0
 4535              		.cfi_startproc
 4536              		@ args = 0, pretend = 0, frame = 0
 4537              		@ frame_needed = 0, uses_anonymous_args = 0
 4538              		.loc 1 2177 1 is_stmt 0 view .LVU1385
 4539 0000 10B5     		push	{r4, lr}
 4540              		.cfi_def_cfa_offset 8
 4541              		.cfi_offset 4, -8
 4542              		.cfi_offset 14, -4
ARM GAS  /tmp/ccJBQgIh.s 			page 157


 4543 0002 0C46     		mov	r4, r1
2178:Lib/ssc/src/ecatslv.c ****     UINT8 Status = alStatus;
 4544              		.loc 1 2178 5 is_stmt 1 view .LVU1386
 4545              	.LVL374:
2179:Lib/ssc/src/ecatslv.c **** 
2180:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 4546              		.loc 1 2180 5 view .LVU1387
 4547              		.loc 1 2180 8 is_stmt 0 view .LVU1388
 4548 0004 434B     		ldr	r3, .L398
 4549 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4550              		.loc 1 2180 7 view .LVU1389
 4551 0008 002B     		cmp	r3, #0
 4552 000a 53D0     		beq	.L374
2181:Lib/ssc/src/ecatslv.c ****     {
2182:Lib/ssc/src/ecatslv.c ****         /*State transition is pending*/
2183:Lib/ssc/src/ecatslv.c **** 
2184:Lib/ssc/src/ecatslv.c ****         if(bApplEsmPending)
 4553              		.loc 1 2184 9 is_stmt 1 view .LVU1390
 4554              		.loc 1 2184 12 is_stmt 0 view .LVU1391
 4555 000c 424B     		ldr	r3, .L398+4
 4556 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4557              		.loc 1 2184 11 view .LVU1392
 4558 0010 4BB1     		cbz	r3, .L375
2185:Lib/ssc/src/ecatslv.c ****         {
2186:Lib/ssc/src/ecatslv.c ****             /*The generic stack has currently control of the state transition.
2187:Lib/ssc/src/ecatslv.c ****             In case on an local error force ESM timeout*/
2188:Lib/ssc/src/ecatslv.c ****             if(alStatusCode != 0)
 4559              		.loc 1 2188 13 is_stmt 1 view .LVU1393
 4560              		.loc 1 2188 15 is_stmt 0 view .LVU1394
 4561 0012 41B3     		cbz	r1, .L373
2189:Lib/ssc/src/ecatslv.c ****             {
2190:Lib/ssc/src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4562              		.loc 1 2190 17 is_stmt 1 view .LVU1395
 4563              		.loc 1 2190 33 is_stmt 0 view .LVU1396
 4564 0014 414B     		ldr	r3, .L398+8
 4565 0016 0122     		movs	r2, #1
 4566 0018 1A70     		strb	r2, [r3]
2191:Lib/ssc/src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4567              		.loc 1 2191 17 is_stmt 1 view .LVU1397
 4568              		.loc 1 2191 35 is_stmt 0 view .LVU1398
 4569 001a 414B     		ldr	r3, .L398+12
 4570 001c 1980     		strh	r1, [r3]	@ movhi
2192:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = 0;
 4571              		.loc 1 2192 17 is_stmt 1 view .LVU1399
 4572              		.loc 1 2192 35 is_stmt 0 view .LVU1400
 4573 001e 414B     		ldr	r3, .L398+16
 4574 0020 0022     		movs	r2, #0
 4575 0022 1A80     		strh	r2, [r3]	@ movhi
 4576 0024 1FE0     		b	.L373
 4577              	.L375:
2193:Lib/ssc/src/ecatslv.c ****             }
2194:Lib/ssc/src/ecatslv.c ****         }
2195:Lib/ssc/src/ecatslv.c ****         else
2196:Lib/ssc/src/ecatslv.c ****         {
2197:Lib/ssc/src/ecatslv.c ****             /*complete the state transition*/
2198:Lib/ssc/src/ecatslv.c **** 
2199:Lib/ssc/src/ecatslv.c ****             if(alStatusCode != 0)
ARM GAS  /tmp/ccJBQgIh.s 			page 158


 4578              		.loc 1 2199 13 is_stmt 1 view .LVU1401
 4579              		.loc 1 2199 15 is_stmt 0 view .LVU1402
 4580 0026 59B3     		cbz	r1, .L377
2200:Lib/ssc/src/ecatslv.c ****             {
2201:Lib/ssc/src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4581              		.loc 1 2201 17 is_stmt 1 view .LVU1403
 4582              		.loc 1 2201 33 is_stmt 0 view .LVU1404
 4583 0028 3C4B     		ldr	r3, .L398+8
 4584 002a 0122     		movs	r2, #1
 4585 002c 1A70     		strb	r2, [r3]
2202:Lib/ssc/src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4586              		.loc 1 2202 17 is_stmt 1 view .LVU1405
 4587              		.loc 1 2202 35 is_stmt 0 view .LVU1406
 4588 002e 3C4B     		ldr	r3, .L398+12
 4589 0030 1980     		strh	r1, [r3]	@ movhi
2203:Lib/ssc/src/ecatslv.c **** 
2204:Lib/ssc/src/ecatslv.c ****                 /*State transition failed due to local application reasons*/
2205:Lib/ssc/src/ecatslv.c ****                 switch(nEcatStateTrans)
 4590              		.loc 1 2205 17 is_stmt 1 view .LVU1407
 4591 0032 3D4B     		ldr	r3, .L398+20
 4592 0034 1B88     		ldrh	r3, [r3]
 4593 0036 242B     		cmp	r3, #36
 4594 0038 1DD0     		beq	.L378
 4595              		.loc 1 2205 17 is_stmt 0 view .LVU1408
 4596 003a 15D8     		bhi	.L379
 4597 003c 123B     		subs	r3, r3, #18
 4598 003e 9BB2     		uxth	r3, r3
 4599 0040 9342     		cmp	r3, r2
 4600 0042 03D8     		bhi	.L380
2206:Lib/ssc/src/ecatslv.c ****                 {
2207:Lib/ssc/src/ecatslv.c ****                     case INIT_2_PREOP:
2208:Lib/ssc/src/ecatslv.c ****                     case INIT_2_BOOT:
2209:Lib/ssc/src/ecatslv.c ****                           APPL_StopMailboxHandler();
 4601              		.loc 1 2209 27 is_stmt 1 view .LVU1409
 4602 0044 FFF7FEFF 		bl	APPL_StopMailboxHandler
 4603              	.LVL375:
2210:Lib/ssc/src/ecatslv.c ****                           MBX_StopMailboxHandler();
 4604              		.loc 1 2210 27 view .LVU1410
 4605 0048 FFF7FEFF 		bl	MBX_StopMailboxHandler
 4606              	.LVL376:
2211:Lib/ssc/src/ecatslv.c ****                     break;
 4607              		.loc 1 2211 21 view .LVU1411
 4608              	.L380:
2212:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2213:Lib/ssc/src/ecatslv.c ****                           APPL_StopInputHandler();
2214:Lib/ssc/src/ecatslv.c ****                           StopInputHandler();
2215:Lib/ssc/src/ecatslv.c ****                     break;
2216:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
2217:Lib/ssc/src/ecatslv.c ****                           APPL_StopOutputHandler();
2218:Lib/ssc/src/ecatslv.c ****                           StopOutputHandler();
2219:Lib/ssc/src/ecatslv.c ****                     break;
2220:Lib/ssc/src/ecatslv.c ****                 }
2221:Lib/ssc/src/ecatslv.c **** 
2222:Lib/ssc/src/ecatslv.c ****                 /*In case of a failed state transition the */
2223:Lib/ssc/src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans >> 4);
 4609              		.loc 1 2223 17 view .LVU1412
 4610              		.loc 1 2223 27 is_stmt 0 view .LVU1413
ARM GAS  /tmp/ccJBQgIh.s 			page 159


 4611 004c 364B     		ldr	r3, .L398+20
 4612 004e 1888     		ldrh	r0, [r3]
 4613              		.loc 1 2223 24 view .LVU1414
 4614 0050 C0F30710 		ubfx	r0, r0, #4, #8
 4615              	.LVL377:
 4616              	.L383:
2224:Lib/ssc/src/ecatslv.c ****             }
2225:Lib/ssc/src/ecatslv.c ****             else
2226:Lib/ssc/src/ecatslv.c ****             {
2227:Lib/ssc/src/ecatslv.c ****                 /*State transition succeed*/
2228:Lib/ssc/src/ecatslv.c ****                  
2229:Lib/ssc/src/ecatslv.c ****                 switch(nEcatStateTrans)
2230:Lib/ssc/src/ecatslv.c ****                 {
2231:Lib/ssc/src/ecatslv.c ****                     case INIT_2_PREOP:
2232:Lib/ssc/src/ecatslv.c ****                     case INIT_2_BOOT:
2233:Lib/ssc/src/ecatslv.c ****                         bMbxRunning = TRUE;
2234:Lib/ssc/src/ecatslv.c ****                     break;
2235:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2236:Lib/ssc/src/ecatslv.c ****                         bEcatInputUpdateRunning = TRUE;
2237:Lib/ssc/src/ecatslv.c ****                     break;
2238:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
2239:Lib/ssc/src/ecatslv.c ****                           bEcatOutputUpdateRunning = TRUE;
2240:Lib/ssc/src/ecatslv.c ****                     break;
2241:Lib/ssc/src/ecatslv.c ****                 }
2242:Lib/ssc/src/ecatslv.c **** 
2243:Lib/ssc/src/ecatslv.c ****                 /*In case of a failed state transition the */
2244:Lib/ssc/src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
2245:Lib/ssc/src/ecatslv.c ****             }
2246:Lib/ssc/src/ecatslv.c ****                 /*Pending state transition finished => write AL Status and AL Status Code*/
2247:Lib/ssc/src/ecatslv.c ****                 bEcatWaitForAlControlRes = FALSE;
 4617              		.loc 1 2247 17 is_stmt 1 view .LVU1415
 4618              		.loc 1 2247 42 is_stmt 0 view .LVU1416
 4619 0054 2F4B     		ldr	r3, .L398
 4620 0056 0022     		movs	r2, #0
 4621 0058 1A70     		strb	r2, [r3]
2248:Lib/ssc/src/ecatslv.c **** 
2249:Lib/ssc/src/ecatslv.c ****                 if(alStatusCode != 0)
 4622              		.loc 1 2249 17 is_stmt 1 view .LVU1417
 4623              		.loc 1 2249 19 is_stmt 0 view .LVU1418
 4624 005a 0CB1     		cbz	r4, .L389
2250:Lib/ssc/src/ecatslv.c ****                     Status |= STATE_CHANGE;
 4625              		.loc 1 2250 21 is_stmt 1 view .LVU1419
 4626              		.loc 1 2250 28 is_stmt 0 view .LVU1420
 4627 005c 40F01000 		orr	r0, r0, #16
 4628              	.LVL378:
 4629              	.L389:
2251:Lib/ssc/src/ecatslv.c **** 
2252:Lib/ssc/src/ecatslv.c ****                 SetALStatus(Status,alStatusCode);
 4630              		.loc 1 2252 17 is_stmt 1 view .LVU1421
 4631 0060 2146     		mov	r1, r4
 4632 0062 FFF7FEFF 		bl	SetALStatus
 4633              	.LVL379:
 4634              	.L373:
2253:Lib/ssc/src/ecatslv.c **** 
2254:Lib/ssc/src/ecatslv.c ****         }// state transition need to be completed by the local application
2255:Lib/ssc/src/ecatslv.c ****     }//State transition pending
2256:Lib/ssc/src/ecatslv.c ****     else
ARM GAS  /tmp/ccJBQgIh.s 			page 160


2257:Lib/ssc/src/ecatslv.c ****     {
2258:Lib/ssc/src/ecatslv.c ****         if ( alStatusCode != 0 )
2259:Lib/ssc/src/ecatslv.c ****         {
2260:Lib/ssc/src/ecatslv.c ****             /* Local error has happened, we change the state if necessary */
2261:Lib/ssc/src/ecatslv.c ****             bLocalErrorFlag = TRUE;
2262:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
2263:Lib/ssc/src/ecatslv.c ****     
2264:Lib/ssc/src/ecatslv.c ****             if ( (alStatus & STATE_MASK) < (nAlStatus & STATE_MASK) )
2265:Lib/ssc/src/ecatslv.c ****             {
2266:Lib/ssc/src/ecatslv.c ****                 AL_ControlInd(alStatus, alStatusCode);
2267:Lib/ssc/src/ecatslv.c ****             }
2268:Lib/ssc/src/ecatslv.c ****         }
2269:Lib/ssc/src/ecatslv.c ****         else if (bLocalErrorFlag)
2270:Lib/ssc/src/ecatslv.c ****         {
2271:Lib/ssc/src/ecatslv.c ****             /*a local error is gone */
2272:Lib/ssc/src/ecatslv.c ****             if ( (nAlStatus & STATE_MASK) == (STATE_SAFEOP | STATE_OP) )
2273:Lib/ssc/src/ecatslv.c ****             {
2274:Lib/ssc/src/ecatslv.c ****                 if(nPdOutputSize > 0)
2275:Lib/ssc/src/ecatslv.c ****                 {
2276:Lib/ssc/src/ecatslv.c ****                     /* we have to enable the output process data SyncManger (default: SM2),
2277:Lib/ssc/src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2278:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2279:Lib/ssc/src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_OUT);
2280:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2281:Lib/ssc/src/ecatslv.c ****                 }
2282:Lib/ssc/src/ecatslv.c ****                 else 
2283:Lib/ssc/src/ecatslv.c ****                     if (nPdInputSize > 0)
2284:Lib/ssc/src/ecatslv.c ****                 {
2285:Lib/ssc/src/ecatslv.c ****                     /* we have to enable the input process data SyncManger (default: SM3),
2286:Lib/ssc/src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2287:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2288:Lib/ssc/src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_IN);
2289:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2290:Lib/ssc/src/ecatslv.c ****                 }
2291:Lib/ssc/src/ecatslv.c ****             }
2292:Lib/ssc/src/ecatslv.c ****             bLocalErrorFlag = FALSE;
2293:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
2294:Lib/ssc/src/ecatslv.c ****         }
2295:Lib/ssc/src/ecatslv.c ****     }
2296:Lib/ssc/src/ecatslv.c **** }
 4635              		.loc 1 2296 1 is_stmt 0 view .LVU1422
 4636 0066 10BD     		pop	{r4, pc}
 4637              	.LVL380:
 4638              	.L379:
2205:Lib/ssc/src/ecatslv.c ****                 {
 4639              		.loc 1 2205 17 view .LVU1423
 4640 0068 482B     		cmp	r3, #72
 4641 006a EFD1     		bne	.L380
2217:Lib/ssc/src/ecatslv.c ****                           StopOutputHandler();
 4642              		.loc 1 2217 27 is_stmt 1 view .LVU1424
 4643 006c FFF7FEFF 		bl	APPL_StopOutputHandler
 4644              	.LVL381:
2218:Lib/ssc/src/ecatslv.c ****                     break;
 4645              		.loc 1 2218 27 view .LVU1425
 4646 0070 FFF7FEFF 		bl	StopOutputHandler
 4647              	.LVL382:
2219:Lib/ssc/src/ecatslv.c ****                 }
ARM GAS  /tmp/ccJBQgIh.s 			page 161


 4648              		.loc 1 2219 21 view .LVU1426
 4649 0074 EAE7     		b	.L380
 4650              	.LVL383:
 4651              	.L378:
2213:Lib/ssc/src/ecatslv.c ****                           StopInputHandler();
 4652              		.loc 1 2213 27 view .LVU1427
 4653 0076 FFF7FEFF 		bl	APPL_StopInputHandler
 4654              	.LVL384:
2214:Lib/ssc/src/ecatslv.c ****                     break;
 4655              		.loc 1 2214 27 view .LVU1428
 4656 007a FFF7FEFF 		bl	StopInputHandler
 4657              	.LVL385:
2215:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
 4658              		.loc 1 2215 21 view .LVU1429
 4659 007e E5E7     		b	.L380
 4660              	.LVL386:
 4661              	.L377:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4662              		.loc 1 2229 17 view .LVU1430
 4663 0080 294B     		ldr	r3, .L398+20
 4664 0082 1888     		ldrh	r0, [r3]
 4665              	.LVL387:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4666              		.loc 1 2229 17 is_stmt 0 view .LVU1431
 4667 0084 2428     		cmp	r0, #36
 4668 0086 11D0     		beq	.L384
 4669 0088 0AD8     		bhi	.L385
 4670 008a A0F11203 		sub	r3, r0, #18
 4671 008e 9BB2     		uxth	r3, r3
 4672 0090 012B     		cmp	r3, #1
 4673 0092 02D8     		bhi	.L386
2233:Lib/ssc/src/ecatslv.c ****                     break;
 4674              		.loc 1 2233 25 is_stmt 1 view .LVU1432
2233:Lib/ssc/src/ecatslv.c ****                     break;
 4675              		.loc 1 2233 37 is_stmt 0 view .LVU1433
 4676 0094 254B     		ldr	r3, .L398+24
 4677 0096 0122     		movs	r2, #1
 4678 0098 1A70     		strb	r2, [r3]
2234:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
 4679              		.loc 1 2234 21 is_stmt 1 view .LVU1434
 4680              	.L386:
2244:Lib/ssc/src/ecatslv.c ****             }
 4681              		.loc 1 2244 17 view .LVU1435
2244:Lib/ssc/src/ecatslv.c ****             }
 4682              		.loc 1 2244 24 is_stmt 0 view .LVU1436
 4683 009a 00F00F00 		and	r0, r0, #15
 4684              	.LVL388:
2244:Lib/ssc/src/ecatslv.c ****             }
 4685              		.loc 1 2244 24 view .LVU1437
 4686 009e D9E7     		b	.L383
 4687              	.LVL389:
 4688              	.L385:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4689              		.loc 1 2229 17 view .LVU1438
 4690 00a0 4828     		cmp	r0, #72
 4691 00a2 FAD1     		bne	.L386
2239:Lib/ssc/src/ecatslv.c ****                     break;
ARM GAS  /tmp/ccJBQgIh.s 			page 162


 4692              		.loc 1 2239 27 is_stmt 1 view .LVU1439
2239:Lib/ssc/src/ecatslv.c ****                     break;
 4693              		.loc 1 2239 52 is_stmt 0 view .LVU1440
 4694 00a4 224B     		ldr	r3, .L398+28
 4695 00a6 0122     		movs	r2, #1
 4696 00a8 1A70     		strb	r2, [r3]
2240:Lib/ssc/src/ecatslv.c ****                 }
 4697              		.loc 1 2240 21 is_stmt 1 view .LVU1441
 4698 00aa F6E7     		b	.L386
 4699              	.L384:
2236:Lib/ssc/src/ecatslv.c ****                     break;
 4700              		.loc 1 2236 25 view .LVU1442
2236:Lib/ssc/src/ecatslv.c ****                     break;
 4701              		.loc 1 2236 49 is_stmt 0 view .LVU1443
 4702 00ac 214B     		ldr	r3, .L398+32
 4703 00ae 0122     		movs	r2, #1
 4704 00b0 1A70     		strb	r2, [r3]
2237:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
 4705              		.loc 1 2237 21 is_stmt 1 view .LVU1444
 4706 00b2 F2E7     		b	.L386
 4707              	.LVL390:
 4708              	.L374:
2258:Lib/ssc/src/ecatslv.c ****         {
 4709              		.loc 1 2258 9 view .LVU1445
2258:Lib/ssc/src/ecatslv.c ****         {
 4710              		.loc 1 2258 12 is_stmt 0 view .LVU1446
 4711 00b4 79B1     		cbz	r1, .L390
2261:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
 4712              		.loc 1 2261 13 is_stmt 1 view .LVU1447
2261:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
 4713              		.loc 1 2261 29 is_stmt 0 view .LVU1448
 4714 00b6 194B     		ldr	r3, .L398+8
 4715 00b8 0122     		movs	r2, #1
 4716 00ba 1A70     		strb	r2, [r3]
2262:Lib/ssc/src/ecatslv.c ****     
 4717              		.loc 1 2262 13 is_stmt 1 view .LVU1449
2262:Lib/ssc/src/ecatslv.c ****     
 4718              		.loc 1 2262 31 is_stmt 0 view .LVU1450
 4719 00bc 184B     		ldr	r3, .L398+12
 4720 00be 1980     		strh	r1, [r3]	@ movhi
2264:Lib/ssc/src/ecatslv.c ****             {
 4721              		.loc 1 2264 13 is_stmt 1 view .LVU1451
2264:Lib/ssc/src/ecatslv.c ****             {
 4722              		.loc 1 2264 55 is_stmt 0 view .LVU1452
 4723 00c0 1D4B     		ldr	r3, .L398+36
 4724 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2264:Lib/ssc/src/ecatslv.c ****             {
 4725              		.loc 1 2264 16 view .LVU1453
 4726 00c4 00F00F02 		and	r2, r0, #15
 4727 00c8 03F00F03 		and	r3, r3, #15
 4728 00cc 9A42     		cmp	r2, r3
 4729 00ce CAD2     		bcs	.L373
2266:Lib/ssc/src/ecatslv.c ****             }
 4730              		.loc 1 2266 17 is_stmt 1 view .LVU1454
 4731 00d0 FFF7FEFF 		bl	AL_ControlInd
 4732              	.LVL391:
2266:Lib/ssc/src/ecatslv.c ****             }
ARM GAS  /tmp/ccJBQgIh.s 			page 163


 4733              		.loc 1 2266 17 is_stmt 0 view .LVU1455
 4734 00d4 C7E7     		b	.L373
 4735              	.LVL392:
 4736              	.L390:
2269:Lib/ssc/src/ecatslv.c ****         {
 4737              		.loc 1 2269 14 is_stmt 1 view .LVU1456
2269:Lib/ssc/src/ecatslv.c ****         {
 4738              		.loc 1 2269 18 is_stmt 0 view .LVU1457
 4739 00d6 114B     		ldr	r3, .L398+8
 4740 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2269:Lib/ssc/src/ecatslv.c ****         {
 4741              		.loc 1 2269 17 view .LVU1458
 4742 00da 002B     		cmp	r3, #0
 4743 00dc C3D0     		beq	.L373
2272:Lib/ssc/src/ecatslv.c ****             {
 4744              		.loc 1 2272 13 is_stmt 1 view .LVU1459
2272:Lib/ssc/src/ecatslv.c ****             {
 4745              		.loc 1 2272 29 is_stmt 0 view .LVU1460
 4746 00de 164B     		ldr	r3, .L398+36
 4747 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2272:Lib/ssc/src/ecatslv.c ****             {
 4748              		.loc 1 2272 16 view .LVU1461
 4749 00e2 03F00F03 		and	r3, r3, #15
 4750 00e6 0C2B     		cmp	r3, #12
 4751 00e8 05D0     		beq	.L396
 4752              	.LVL393:
 4753              	.L391:
2292:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
 4754              		.loc 1 2292 13 is_stmt 1 view .LVU1462
2292:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
 4755              		.loc 1 2292 29 is_stmt 0 view .LVU1463
 4756 00ea 0023     		movs	r3, #0
 4757 00ec 0B4A     		ldr	r2, .L398+8
 4758 00ee 1370     		strb	r3, [r2]
2293:Lib/ssc/src/ecatslv.c ****         }
 4759              		.loc 1 2293 13 is_stmt 1 view .LVU1464
2293:Lib/ssc/src/ecatslv.c ****         }
 4760              		.loc 1 2293 31 is_stmt 0 view .LVU1465
 4761 00f0 0B4A     		ldr	r2, .L398+12
 4762 00f2 1380     		strh	r3, [r2]	@ movhi
 4763              		.loc 1 2296 1 view .LVU1466
 4764 00f4 B7E7     		b	.L373
 4765              	.LVL394:
 4766              	.L396:
2274:Lib/ssc/src/ecatslv.c ****                 {
 4767              		.loc 1 2274 17 is_stmt 1 view .LVU1467
2274:Lib/ssc/src/ecatslv.c ****                 {
 4768              		.loc 1 2274 34 is_stmt 0 view .LVU1468
 4769 00f6 114B     		ldr	r3, .L398+40
 4770 00f8 1B88     		ldrh	r3, [r3]
2274:Lib/ssc/src/ecatslv.c ****                 {
 4771              		.loc 1 2274 19 view .LVU1469
 4772 00fa 3BB9     		cbnz	r3, .L397
2283:Lib/ssc/src/ecatslv.c ****                 {
 4773              		.loc 1 2283 21 is_stmt 1 view .LVU1470
2283:Lib/ssc/src/ecatslv.c ****                 {
 4774              		.loc 1 2283 38 is_stmt 0 view .LVU1471
ARM GAS  /tmp/ccJBQgIh.s 			page 164


 4775 00fc 104B     		ldr	r3, .L398+44
 4776 00fe 1B88     		ldrh	r3, [r3]
2283:Lib/ssc/src/ecatslv.c ****                 {
 4777              		.loc 1 2283 24 view .LVU1472
 4778 0100 002B     		cmp	r3, #0
 4779 0102 F2D0     		beq	.L391
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4780              		.loc 1 2288 21 is_stmt 1 view .LVU1473
 4781 0104 0320     		movs	r0, #3
 4782              	.LVL395:
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4783              		.loc 1 2288 21 is_stmt 0 view .LVU1474
 4784 0106 FFF7FEFF 		bl	EnableSyncManChannel
 4785              	.LVL396:
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4786              		.loc 1 2288 21 view .LVU1475
 4787 010a EEE7     		b	.L391
 4788              	.LVL397:
 4789              	.L397:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4790              		.loc 1 2279 21 is_stmt 1 view .LVU1476
 4791 010c 0220     		movs	r0, #2
 4792              	.LVL398:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4793              		.loc 1 2279 21 is_stmt 0 view .LVU1477
 4794 010e FFF7FEFF 		bl	EnableSyncManChannel
 4795              	.LVL399:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4796              		.loc 1 2279 21 view .LVU1478
 4797 0112 EAE7     		b	.L391
 4798              	.L399:
 4799              		.align	2
 4800              	.L398:
 4801 0114 00000000 		.word	.LANCHOR36
 4802 0118 00000000 		.word	.LANCHOR34
 4803 011c 00000000 		.word	.LANCHOR28
 4804 0120 00000000 		.word	.LANCHOR29
 4805 0124 00000000 		.word	.LANCHOR33
 4806 0128 00000000 		.word	.LANCHOR35
 4807 012c 00000000 		.word	bMbxRunning
 4808 0130 00000000 		.word	.LANCHOR31
 4809 0134 00000000 		.word	.LANCHOR32
 4810 0138 00000000 		.word	.LANCHOR5
 4811 013c 00000000 		.word	.LANCHOR7
 4812 0140 00000000 		.word	.LANCHOR4
 4813              		.cfi_endproc
 4814              	.LFE140:
 4816              		.section	.text.ECAT_Init,"ax",%progbits
 4817              		.align	1
 4818              		.global	ECAT_Init
 4819              		.syntax unified
 4820              		.thumb
 4821              		.thumb_func
 4823              	ECAT_Init:
 4824              	.LFB141:
2297:Lib/ssc/src/ecatslv.c **** 
2298:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
ARM GAS  /tmp/ccJBQgIh.s 			page 165


2299:Lib/ssc/src/ecatslv.c **** /**
2300:Lib/ssc/src/ecatslv.c **** 
2301:Lib/ssc/src/ecatslv.c ****  \brief    This function initialize the EtherCAT Slave Interface.
2302:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2303:Lib/ssc/src/ecatslv.c **** 
2304:Lib/ssc/src/ecatslv.c **** void ECAT_Init(void)
2305:Lib/ssc/src/ecatslv.c **** {
 4825              		.loc 1 2305 1 is_stmt 1 view -0
 4826              		.cfi_startproc
 4827              		@ args = 0, pretend = 0, frame = 8
 4828              		@ frame_needed = 0, uses_anonymous_args = 0
 4829 0000 10B5     		push	{r4, lr}
 4830              		.cfi_def_cfa_offset 8
 4831              		.cfi_offset 4, -8
 4832              		.cfi_offset 14, -4
 4833 0002 82B0     		sub	sp, sp, #8
 4834              		.cfi_def_cfa_offset 16
2306:Lib/ssc/src/ecatslv.c ****     UINT8 i;
 4835              		.loc 1 2306 5 view .LVU1480
 4836              	.LBB28:
2307:Lib/ssc/src/ecatslv.c **** 
2308:Lib/ssc/src/ecatslv.c ****     /*Get Maximum Number of SyncManagers and supported DPRAM size*/
2309:Lib/ssc/src/ecatslv.c ****     {
2310:Lib/ssc/src/ecatslv.c ****     UINT16 TmpVar = 0;
 4837              		.loc 1 2310 5 view .LVU1481
 4838              		.loc 1 2310 12 is_stmt 0 view .LVU1482
 4839 0004 0024     		movs	r4, #0
 4840 0006 ADF80640 		strh	r4, [sp, #6]	@ movhi
2311:Lib/ssc/src/ecatslv.c **** 
2312:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(TmpVar, ESC_COMM_INFO_OFFSET);
 4841              		.loc 1 2312 5 is_stmt 1 view .LVU1483
 4842 000a 0222     		movs	r2, #2
 4843 000c 0421     		movs	r1, #4
 4844 000e 0DF10600 		add	r0, sp, #6
 4845 0012 FFF7FEFF 		bl	HW_EscRead
 4846              	.LVL400:
2313:Lib/ssc/src/ecatslv.c **** 
2314:Lib/ssc/src/ecatslv.c ****     TmpVar = SWAPWORD(TmpVar);
 4847              		.loc 1 2314 5 view .LVU1484
 4848              		.loc 1 2314 12 is_stmt 0 view .LVU1485
 4849 0016 BDF80630 		ldrh	r3, [sp, #6]
2315:Lib/ssc/src/ecatslv.c ****     nMaxSyncMan = (UINT8) ((TmpVar & ESC_SM_CHANNELS_MASK)>> ESC_SM_CHANNELS_SHIFT);
 4850              		.loc 1 2315 5 is_stmt 1 view .LVU1486
 4851              		.loc 1 2315 19 is_stmt 0 view .LVU1487
 4852 001a 1B0A     		lsrs	r3, r3, #8
 4853              		.loc 1 2315 17 view .LVU1488
 4854 001c 274A     		ldr	r2, .L404
 4855 001e 1370     		strb	r3, [r2]
2316:Lib/ssc/src/ecatslv.c **** 
2317:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(TmpVar, ESC_DPRAM_SIZE_OFFSET);
 4856              		.loc 1 2317 5 is_stmt 1 view .LVU1489
 4857 0020 0222     		movs	r2, #2
 4858 0022 0621     		movs	r1, #6
 4859 0024 0DEB0100 		add	r0, sp, r1
 4860 0028 FFF7FEFF 		bl	HW_EscRead
 4861              	.LVL401:
2318:Lib/ssc/src/ecatslv.c ****     TmpVar = SWAPWORD(TmpVar);
ARM GAS  /tmp/ccJBQgIh.s 			page 166


 4862              		.loc 1 2318 5 view .LVU1490
 4863              		.loc 1 2318 12 is_stmt 0 view .LVU1491
 4864 002c BDF80630 		ldrh	r3, [sp, #6]
2319:Lib/ssc/src/ecatslv.c **** 
2320:Lib/ssc/src/ecatslv.c ****     //get max address (register + DPRAM size in Byte (in the register it is stored in KB))
2321:Lib/ssc/src/ecatslv.c ****     /* ECATCHANGE_START(V5.11) ESC1*/
2322:Lib/ssc/src/ecatslv.c ****     nMaxEscAddress = (UINT16) ((TmpVar & ESC_DPRAM_SIZE_MASK) << 10) + 0xFFF;
 4865              		.loc 1 2322 5 is_stmt 1 view .LVU1492
 4866              		.loc 1 2322 22 is_stmt 0 view .LVU1493
 4867 0030 9B02     		lsls	r3, r3, #10
 4868 0032 9BB2     		uxth	r3, r3
 4869              		.loc 1 2322 70 view .LVU1494
 4870 0034 03F6FF73 		addw	r3, r3, #4095
 4871              		.loc 1 2322 20 view .LVU1495
 4872 0038 214A     		ldr	r2, .L404+4
 4873 003a 1380     		strh	r3, [r2]	@ movhi
 4874              	.LBE28:
2323:Lib/ssc/src/ecatslv.c ****     /* ECATCHANGE_END(V5.11) ESC1*/
2324:Lib/ssc/src/ecatslv.c ****     }
2325:Lib/ssc/src/ecatslv.c **** 
2326:Lib/ssc/src/ecatslv.c ****     /* Get EEPROM loaded information */
2327:Lib/ssc/src/ecatslv.c ****     UpdateEEPROMLoadedState();
 4875              		.loc 1 2327 5 is_stmt 1 view .LVU1496
 4876 003c FFF7FEFF 		bl	UpdateEEPROMLoadedState
 4877              	.LVL402:
2328:Lib/ssc/src/ecatslv.c **** 
2329:Lib/ssc/src/ecatslv.c ****     /* disable all Sync Manager channels */
2330:Lib/ssc/src/ecatslv.c ****     for (i = 0; i < nMaxSyncMan; i++)
 4878              		.loc 1 2330 5 view .LVU1497
 4879              		.loc 1 2330 5 is_stmt 0 view .LVU1498
 4880 0040 04E0     		b	.L401
 4881              	.LVL403:
 4882              	.L402:
2331:Lib/ssc/src/ecatslv.c ****     {
2332:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2333:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(i);
 4883              		.loc 1 2333 9 is_stmt 1 discriminator 3 view .LVU1499
 4884 0042 2046     		mov	r0, r4
 4885 0044 FFF7FEFF 		bl	DisableSyncManChannel
 4886              	.LVL404:
2330:Lib/ssc/src/ecatslv.c ****     {
 4887              		.loc 1 2330 34 discriminator 3 view .LVU1500
2330:Lib/ssc/src/ecatslv.c ****     {
 4888              		.loc 1 2330 35 is_stmt 0 discriminator 3 view .LVU1501
 4889 0048 0134     		adds	r4, r4, #1
 4890              	.LVL405:
2330:Lib/ssc/src/ecatslv.c ****     {
 4891              		.loc 1 2330 35 discriminator 3 view .LVU1502
 4892 004a E4B2     		uxtb	r4, r4
 4893              	.LVL406:
 4894              	.L401:
2330:Lib/ssc/src/ecatslv.c ****     {
 4895              		.loc 1 2330 17 is_stmt 1 discriminator 1 view .LVU1503
2330:Lib/ssc/src/ecatslv.c ****     {
 4896              		.loc 1 2330 19 is_stmt 0 discriminator 1 view .LVU1504
 4897 004c 1B4B     		ldr	r3, .L404
 4898 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccJBQgIh.s 			page 167


2330:Lib/ssc/src/ecatslv.c ****     {
 4899              		.loc 1 2330 5 discriminator 1 view .LVU1505
 4900 0050 A342     		cmp	r3, r4
 4901 0052 F6D8     		bhi	.L402
2334:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2335:Lib/ssc/src/ecatslv.c ****     }
2336:Lib/ssc/src/ecatslv.c **** 
2337:Lib/ssc/src/ecatslv.c ****     /* initialize the mailbox handler */
2338:Lib/ssc/src/ecatslv.c ****     MBX_Init();
 4902              		.loc 1 2338 5 is_stmt 1 view .LVU1506
 4903 0054 FFF7FEFF 		bl	MBX_Init
 4904              	.LVL407:
2339:Lib/ssc/src/ecatslv.c **** 
2340:Lib/ssc/src/ecatslv.c ****     /* initialize variables */
2341:Lib/ssc/src/ecatslv.c ****     bApplEsmPending = FALSE;
 4905              		.loc 1 2341 5 view .LVU1507
 4906              		.loc 1 2341 21 is_stmt 0 view .LVU1508
 4907 0058 0024     		movs	r4, #0
 4908              	.LVL408:
 4909              		.loc 1 2341 21 view .LVU1509
 4910 005a 1A4B     		ldr	r3, .L404+8
 4911 005c 1C70     		strb	r4, [r3]
2342:Lib/ssc/src/ecatslv.c ****     bEcatWaitForAlControlRes = FALSE;
 4912              		.loc 1 2342 5 is_stmt 1 view .LVU1510
 4913              		.loc 1 2342 30 is_stmt 0 view .LVU1511
 4914 005e 1A4B     		ldr	r3, .L404+12
 4915 0060 1C70     		strb	r4, [r3]
2343:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 4916              		.loc 1 2343 5 is_stmt 1 view .LVU1512
 4917              		.loc 1 2343 31 is_stmt 0 view .LVU1513
 4918 0062 1A4B     		ldr	r3, .L404+16
 4919 0064 1C70     		strb	r4, [r3]
2344:Lib/ssc/src/ecatslv.c ****      bEcatOutputUpdateRunning = FALSE;
 4920              		.loc 1 2344 6 is_stmt 1 view .LVU1514
 4921              		.loc 1 2344 31 is_stmt 0 view .LVU1515
 4922 0066 1A4B     		ldr	r3, .L404+20
 4923 0068 1C70     		strb	r4, [r3]
2345:Lib/ssc/src/ecatslv.c ****      bEcatInputUpdateRunning = FALSE;
 4924              		.loc 1 2345 6 is_stmt 1 view .LVU1516
 4925              		.loc 1 2345 30 is_stmt 0 view .LVU1517
 4926 006a 1A4B     		ldr	r3, .L404+24
 4927 006c 1C70     		strb	r4, [r3]
2346:Lib/ssc/src/ecatslv.c ****     bWdTrigger = FALSE;
 4928              		.loc 1 2346 5 is_stmt 1 view .LVU1518
 4929              		.loc 1 2346 16 is_stmt 0 view .LVU1519
 4930 006e 1A4B     		ldr	r3, .L404+28
 4931 0070 1C70     		strb	r4, [r3]
2347:Lib/ssc/src/ecatslv.c ****     EcatWdValue = 0;
 4932              		.loc 1 2347 5 is_stmt 1 view .LVU1520
 4933              		.loc 1 2347 17 is_stmt 0 view .LVU1521
 4934 0072 1A4B     		ldr	r3, .L404+32
 4935 0074 1C80     		strh	r4, [r3]	@ movhi
2348:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 4936              		.loc 1 2348 5 is_stmt 1 view .LVU1522
 4937              		.loc 1 2348 20 is_stmt 0 view .LVU1523
 4938 0076 1A4B     		ldr	r3, .L404+36
 4939 0078 1C80     		strh	r4, [r3]	@ movhi
ARM GAS  /tmp/ccJBQgIh.s 			page 168


2349:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 4940              		.loc 1 2349 5 is_stmt 1 view .LVU1524
 4941              		.loc 1 2349 18 is_stmt 0 view .LVU1525
 4942 007a 1A4B     		ldr	r3, .L404+40
 4943 007c 1C80     		strh	r4, [r3]	@ movhi
2350:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 4944              		.loc 1 2350 5 is_stmt 1 view .LVU1526
 4945              		.loc 1 2350 20 is_stmt 0 view .LVU1527
 4946 007e 1A4B     		ldr	r3, .L404+44
 4947 0080 1C80     		strh	r4, [r3]	@ movhi
2351:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 4948              		.loc 1 2351 5 is_stmt 1 view .LVU1528
 4949              		.loc 1 2351 18 is_stmt 0 view .LVU1529
 4950 0082 1A4B     		ldr	r3, .L404+48
 4951 0084 1C80     		strh	r4, [r3]	@ movhi
2352:Lib/ssc/src/ecatslv.c ****     bDcSyncActive = FALSE;
 4952              		.loc 1 2352 5 is_stmt 1 view .LVU1530
 4953              		.loc 1 2352 19 is_stmt 0 view .LVU1531
 4954 0086 1A4B     		ldr	r3, .L404+52
 4955 0088 1C70     		strb	r4, [r3]
2353:Lib/ssc/src/ecatslv.c ****     bLocalErrorFlag = FALSE;
 4956              		.loc 1 2353 5 is_stmt 1 view .LVU1532
 4957              		.loc 1 2353 21 is_stmt 0 view .LVU1533
 4958 008a 1A4B     		ldr	r3, .L404+56
 4959 008c 1C70     		strb	r4, [r3]
2354:Lib/ssc/src/ecatslv.c ****     u16LocalErrorCode = 0x00;
 4960              		.loc 1 2354 5 is_stmt 1 view .LVU1534
 4961              		.loc 1 2354 23 is_stmt 0 view .LVU1535
 4962 008e 1A4B     		ldr	r3, .L404+60
 4963 0090 1C80     		strh	r4, [r3]	@ movhi
2355:Lib/ssc/src/ecatslv.c **** 
2356:Lib/ssc/src/ecatslv.c ****     u16ALEventMask = 0;
 4964              		.loc 1 2356 5 is_stmt 1 view .LVU1536
 4965              		.loc 1 2356 20 is_stmt 0 view .LVU1537
 4966 0092 1A4B     		ldr	r3, .L404+64
 4967 0094 1C80     		strh	r4, [r3]	@ movhi
2357:Lib/ssc/src/ecatslv.c ****     nPdOutputSize = 0;
 4968              		.loc 1 2357 5 is_stmt 1 view .LVU1538
 4969              		.loc 1 2357 19 is_stmt 0 view .LVU1539
 4970 0096 1A4B     		ldr	r3, .L404+68
 4971 0098 1C80     		strh	r4, [r3]	@ movhi
2358:Lib/ssc/src/ecatslv.c ****     nPdInputSize = 0;
 4972              		.loc 1 2358 5 is_stmt 1 view .LVU1540
 4973              		.loc 1 2358 18 is_stmt 0 view .LVU1541
 4974 009a 1A4B     		ldr	r3, .L404+72
 4975 009c 1C80     		strh	r4, [r3]	@ movhi
2359:Lib/ssc/src/ecatslv.c **** 
2360:Lib/ssc/src/ecatslv.c ****     /* initialize the AL Status register */
2361:Lib/ssc/src/ecatslv.c ****     nAlStatus    = STATE_INIT;
 4976              		.loc 1 2361 5 is_stmt 1 view .LVU1542
 4977              		.loc 1 2361 18 is_stmt 0 view .LVU1543
 4978 009e 0120     		movs	r0, #1
 4979 00a0 194B     		ldr	r3, .L404+76
 4980 00a2 1870     		strb	r0, [r3]
2362:Lib/ssc/src/ecatslv.c ****     SetALStatus(nAlStatus, 0);
 4981              		.loc 1 2362 5 is_stmt 1 view .LVU1544
 4982 00a4 2146     		mov	r1, r4
ARM GAS  /tmp/ccJBQgIh.s 			page 169


 4983 00a6 FFF7FEFF 		bl	SetALStatus
 4984              	.LVL409:
2363:Lib/ssc/src/ecatslv.c ****     nEcatStateTrans = 0;
 4985              		.loc 1 2363 5 view .LVU1545
 4986              		.loc 1 2363 21 is_stmt 0 view .LVU1546
 4987 00aa 184B     		ldr	r3, .L404+80
 4988 00ac 1C80     		strh	r4, [r3]	@ movhi
2364:Lib/ssc/src/ecatslv.c **** 
2365:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT5*/
2366:Lib/ssc/src/ecatslv.c ****     bEscIntEnabled = FALSE;
 4989              		.loc 1 2366 5 is_stmt 1 view .LVU1547
 4990              		.loc 1 2366 20 is_stmt 0 view .LVU1548
 4991 00ae 184B     		ldr	r3, .L404+84
 4992 00b0 1C70     		strb	r4, [r3]
2367:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT5*/
2368:Lib/ssc/src/ecatslv.c **** 
2369:Lib/ssc/src/ecatslv.c ****     /* initialize the COE part */
2370:Lib/ssc/src/ecatslv.c ****     COE_Init();
 4993              		.loc 1 2370 5 is_stmt 1 view .LVU1549
 4994 00b2 FFF7FEFF 		bl	COE_Init
 4995              	.LVL410:
2371:Lib/ssc/src/ecatslv.c **** }
 4996              		.loc 1 2371 1 is_stmt 0 view .LVU1550
 4997 00b6 02B0     		add	sp, sp, #8
 4998              		.cfi_def_cfa_offset 8
 4999              		@ sp needed
 5000 00b8 10BD     		pop	{r4, pc}
 5001              	.L405:
 5002 00ba 00BF     		.align	2
 5003              	.L404:
 5004 00bc 00000000 		.word	.LANCHOR11
 5005 00c0 00000000 		.word	.LANCHOR2
 5006 00c4 00000000 		.word	.LANCHOR34
 5007 00c8 00000000 		.word	.LANCHOR36
 5008 00cc 00000000 		.word	.LANCHOR13
 5009 00d0 00000000 		.word	.LANCHOR31
 5010 00d4 00000000 		.word	.LANCHOR32
 5011 00d8 00000000 		.word	.LANCHOR9
 5012 00dc 00000000 		.word	.LANCHOR20
 5013 00e0 00000000 		.word	.LANCHOR22
 5014 00e4 00000000 		.word	.LANCHOR21
 5015 00e8 00000000 		.word	.LANCHOR23
 5016 00ec 00000000 		.word	.LANCHOR24
 5017 00f0 00000000 		.word	.LANCHOR15
 5018 00f4 00000000 		.word	.LANCHOR28
 5019 00f8 00000000 		.word	.LANCHOR29
 5020 00fc 00000000 		.word	.LANCHOR12
 5021 0100 00000000 		.word	.LANCHOR7
 5022 0104 00000000 		.word	.LANCHOR4
 5023 0108 00000000 		.word	.LANCHOR5
 5024 010c 00000000 		.word	.LANCHOR35
 5025 0110 00000000 		.word	.LANCHOR14
 5026              		.cfi_endproc
 5027              	.LFE141:
 5029              		.section	.text.ECAT_Main,"ax",%progbits
 5030              		.align	1
 5031              		.global	ECAT_Main
ARM GAS  /tmp/ccJBQgIh.s 			page 170


 5032              		.syntax unified
 5033              		.thumb
 5034              		.thumb_func
 5036              	ECAT_Main:
 5037              	.LFB142:
2372:Lib/ssc/src/ecatslv.c **** 
2373:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2374:Lib/ssc/src/ecatslv.c **** /**
2375:Lib/ssc/src/ecatslv.c ****  \brief        This function has to be called cyclically.
2376:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2377:Lib/ssc/src/ecatslv.c **** 
2378:Lib/ssc/src/ecatslv.c **** void ECAT_Main(void)
2379:Lib/ssc/src/ecatslv.c **** {
 5038              		.loc 1 2379 1 is_stmt 1 view -0
 5039              		.cfi_startproc
 5040              		@ args = 0, pretend = 0, frame = 8
 5041              		@ frame_needed = 0, uses_anonymous_args = 0
 5042 0000 10B5     		push	{r4, lr}
 5043              		.cfi_def_cfa_offset 8
 5044              		.cfi_offset 4, -8
 5045              		.cfi_offset 14, -4
 5046 0002 82B0     		sub	sp, sp, #8
 5047              		.cfi_def_cfa_offset 16
2380:Lib/ssc/src/ecatslv.c ****     UINT16 ALEventReg;
 5048              		.loc 1 2380 5 view .LVU1552
2381:Lib/ssc/src/ecatslv.c ****     UINT16 EscAlControl = 0x0000;
 5049              		.loc 1 2381 5 view .LVU1553
 5050              		.loc 1 2381 12 is_stmt 0 view .LVU1554
 5051 0004 0023     		movs	r3, #0
 5052 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
2382:Lib/ssc/src/ecatslv.c ****     UINT16 sm1Activate = SM_SETTING_ENABLE_VALUE;
 5053              		.loc 1 2382 5 is_stmt 1 view .LVU1555
 5054              		.loc 1 2382 12 is_stmt 0 view .LVU1556
 5055 000a 0123     		movs	r3, #1
 5056 000c ADF80430 		strh	r3, [sp, #4]	@ movhi
2383:Lib/ssc/src/ecatslv.c **** 
2384:Lib/ssc/src/ecatslv.c ****     /* check if services are stored in the mailbox */
2385:Lib/ssc/src/ecatslv.c ****     MBX_Main();
 5057              		.loc 1 2385 5 is_stmt 1 view .LVU1557
 5058 0010 FFF7FEFF 		bl	MBX_Main
 5059              	.LVL411:
2386:Lib/ssc/src/ecatslv.c **** 
2387:Lib/ssc/src/ecatslv.c **** 
2388:Lib/ssc/src/ecatslv.c ****     if ( bMbxRunning )
 5060              		.loc 1 2388 5 view .LVU1558
 5061              		.loc 1 2388 10 is_stmt 0 view .LVU1559
 5062 0014 484B     		ldr	r3, .L427
 5063 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5064              		.loc 1 2388 8 view .LVU1560
 5065 0018 002B     		cmp	r3, #0
 5066 001a 4CD1     		bne	.L420
 5067              	.L407:
2389:Lib/ssc/src/ecatslv.c ****     {
2390:Lib/ssc/src/ecatslv.c ****         /* Slave is at least in PREOP, Mailbox is running */
2391:Lib/ssc/src/ecatslv.c ****         /* get the Activate-Byte of SM 1 (Register 0x80E) to check if a mailbox repeat request was 
2392:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(sm1Activate,(ESC_SYNCMAN_ACTIVE_OFFSET + SIZEOF_SM_REGISTER));
2393:Lib/ssc/src/ecatslv.c ****         sm1Activate = SWAPWORD(sm1Activate);
ARM GAS  /tmp/ccJBQgIh.s 			page 171


2394:Lib/ssc/src/ecatslv.c ****     }
2395:Lib/ssc/src/ecatslv.c **** 
2396:Lib/ssc/src/ecatslv.c ****     /* Read AL Event-Register from ESC */
2397:Lib/ssc/src/ecatslv.c ****     ALEventReg = HW_GetALEventRegister();
 5068              		.loc 1 2397 5 is_stmt 1 view .LVU1561
 5069              		.loc 1 2397 18 is_stmt 0 view .LVU1562
 5070 001c FFF7FEFF 		bl	HW_GetALEventRegister
 5071              	.LVL412:
 5072 0020 0446     		mov	r4, r0
 5073              	.LVL413:
2398:Lib/ssc/src/ecatslv.c ****     ALEventReg = SWAPWORD(ALEventReg);
 5074              		.loc 1 2398 5 is_stmt 1 view .LVU1563
2399:Lib/ssc/src/ecatslv.c **** 
2400:Lib/ssc/src/ecatslv.c **** 
2401:Lib/ssc/src/ecatslv.c ****     if ((ALEventReg & AL_CONTROL_EVENT) && !bEcatWaitForAlControlRes)
 5075              		.loc 1 2401 5 view .LVU1564
 5076              		.loc 1 2401 8 is_stmt 0 view .LVU1565
 5077 0022 10F0010F 		tst	r0, #1
 5078 0026 03D0     		beq	.L408
 5079              		.loc 1 2401 44 discriminator 1 view .LVU1566
 5080 0028 444B     		ldr	r3, .L427+4
 5081 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5082              		.loc 1 2401 41 discriminator 1 view .LVU1567
 5083 002c 002B     		cmp	r3, #0
 5084 002e 49D0     		beq	.L421
 5085              	.L408:
2402:Lib/ssc/src/ecatslv.c ****     {
2403:Lib/ssc/src/ecatslv.c ****         /* AL Control event is set, get the AL Control register sent by the Master to acknowledge t
2404:Lib/ssc/src/ecatslv.c ****           (that the corresponding bit in the AL Event register will be reset) */
2405:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord( EscAlControl, ESC_AL_CONTROL_OFFSET);
2406:Lib/ssc/src/ecatslv.c ****         EscAlControl = SWAPWORD(EscAlControl);
2407:Lib/ssc/src/ecatslv.c **** 
2408:Lib/ssc/src/ecatslv.c **** 
2409:Lib/ssc/src/ecatslv.c ****         /* reset AL Control event and the SM Change event (because the Sync Manager settings will b
2410:Lib/ssc/src/ecatslv.c ****            in AL_ControlInd, too)*/
2411:Lib/ssc/src/ecatslv.c ****         ALEventReg &= ~((AL_CONTROL_EVENT) | (SM_CHANGE_EVENT));
2412:Lib/ssc/src/ecatslv.c **** 
2413:Lib/ssc/src/ecatslv.c ****         AL_ControlInd((UINT8)EscAlControl, 0); /* in AL_ControlInd the state transition will be che
2414:Lib/ssc/src/ecatslv.c ****         
2415:Lib/ssc/src/ecatslv.c ****         /* SM-Change-Event was handled too */
2416:Lib/ssc/src/ecatslv.c ****     }
2417:Lib/ssc/src/ecatslv.c **** 
2418:Lib/ssc/src/ecatslv.c ****     if ( (ALEventReg & SM_CHANGE_EVENT) && !bEcatWaitForAlControlRes && (nAlStatus & STATE_CHANGE) 
 5086              		.loc 1 2418 5 is_stmt 1 view .LVU1568
 5087              		.loc 1 2418 8 is_stmt 0 view .LVU1569
 5088 0030 14F0100F 		tst	r4, #16
 5089 0034 0BD0     		beq	.L409
 5090              		.loc 1 2418 44 discriminator 1 view .LVU1570
 5091 0036 414B     		ldr	r3, .L427+4
 5092 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5093              		.loc 1 2418 41 discriminator 1 view .LVU1571
 5094 003a 43B9     		cbnz	r3, .L409
 5095              		.loc 1 2418 84 discriminator 2 view .LVU1572
 5096 003c 404B     		ldr	r3, .L427+8
 5097 003e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5098              		.loc 1 2418 70 discriminator 2 view .LVU1573
 5099 0040 10F0100F 		tst	r0, #16
ARM GAS  /tmp/ccJBQgIh.s 			page 172


 5100 0044 03D1     		bne	.L409
 5101              		.loc 1 2418 119 discriminator 3 view .LVU1574
 5102 0046 20F01003 		bic	r3, r0, #16
 5103              		.loc 1 2418 105 discriminator 3 view .LVU1575
 5104 004a 012B     		cmp	r3, #1
 5105 004c 4AD1     		bne	.L422
 5106              	.L409:
2419:Lib/ssc/src/ecatslv.c ****     {
2420:Lib/ssc/src/ecatslv.c ****         /* the SM Change event is set (Bit 4 of Register 0x220), when the Byte 6 (Enable, Lo-Byte o
2421:Lib/ssc/src/ecatslv.c ****            of a Sync Manager channel was written */
2422:Lib/ssc/src/ecatslv.c ****         ALEventReg &= ~(SM_CHANGE_EVENT);
2423:Lib/ssc/src/ecatslv.c **** 
2424:Lib/ssc/src/ecatslv.c ****         /* AL_ControlInd is called with the actual state, so that the correct SM settings will be c
2425:Lib/ssc/src/ecatslv.c ****         AL_ControlInd(nAlStatus & STATE_MASK, 0);
2426:Lib/ssc/src/ecatslv.c ****     }
2427:Lib/ssc/src/ecatslv.c **** 
2428:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 5107              		.loc 1 2428 5 is_stmt 1 view .LVU1576
 5108              		.loc 1 2428 8 is_stmt 0 view .LVU1577
 5109 004e 3B4B     		ldr	r3, .L427+4
 5110 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5111              		.loc 1 2428 7 view .LVU1578
 5112 0052 002B     		cmp	r3, #0
 5113 0054 4FD1     		bne	.L423
 5114              	.L410:
2429:Lib/ssc/src/ecatslv.c ****     {
2430:Lib/ssc/src/ecatslv.c ****         AL_ControlRes();
2431:Lib/ssc/src/ecatslv.c ****     }
2432:Lib/ssc/src/ecatslv.c **** 	
2433:Lib/ssc/src/ecatslv.c ****     /*The order of mailbox event processing was changed to prevent race condition errors.
2434:Lib/ssc/src/ecatslv.c ****         The SM1 activate Byte (Register 0x80E) was read before reading AL Event register.
2435:Lib/ssc/src/ecatslv.c ****         1. Handle Mailbox Read event
2436:Lib/ssc/src/ecatslv.c ****         2. Handle repeat toggle request
2437:Lib/ssc/src/ecatslv.c ****         3. Handle Mailbox write event
2438:Lib/ssc/src/ecatslv.c ****     */
2439:Lib/ssc/src/ecatslv.c ****     if ( bMbxRunning )
 5115              		.loc 1 2439 5 is_stmt 1 view .LVU1579
 5116              		.loc 1 2439 10 is_stmt 0 view .LVU1580
 5117 0056 384B     		ldr	r3, .L427
 5118 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5119              		.loc 1 2439 8 view .LVU1581
 5120 005a 53B3     		cbz	r3, .L406
2440:Lib/ssc/src/ecatslv.c ****     {
2441:Lib/ssc/src/ecatslv.c ****         /*SnycManger change event (0x220:4) could be acknowledged by reading the SM1 control regist
2442:Lib/ssc/src/ecatslv.c ****         => check if the SyncManger 1 is still enabled*/
2443:Lib/ssc/src/ecatslv.c ****         if(!(sm1Activate & SM_SETTING_ENABLE_VALUE))
 5121              		.loc 1 2443 9 is_stmt 1 view .LVU1582
 5122              		.loc 1 2443 26 is_stmt 0 view .LVU1583
 5123 005c BDF80430 		ldrh	r3, [sp, #4]
 5124              		.loc 1 2443 11 view .LVU1584
 5125 0060 13F0010F 		tst	r3, #1
 5126 0064 4AD0     		beq	.L424
 5127              	.L412:
2444:Lib/ssc/src/ecatslv.c ****             AL_ControlInd(nAlStatus & STATE_MASK, 0);
2445:Lib/ssc/src/ecatslv.c **** 
2446:Lib/ssc/src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_READ_EVENT) )
 5128              		.loc 1 2446 9 is_stmt 1 view .LVU1585
ARM GAS  /tmp/ccJBQgIh.s 			page 173


 5129              		.loc 1 2446 12 is_stmt 0 view .LVU1586
 5130 0066 14F4007F 		tst	r4, #512
 5131 006a 4FD1     		bne	.L425
 5132              	.L413:
2447:Lib/ssc/src/ecatslv.c ****         {
2448:Lib/ssc/src/ecatslv.c ****             /* SM 1 (Mailbox Read) event is set, when the mailbox was read from the master,
2449:Lib/ssc/src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be written,
2450:Lib/ssc/src/ecatslv.c ****                by writing the first byte the mailbox is locked, too */
2451:Lib/ssc/src/ecatslv.c ****             u16dummy = 0;
2452:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
2453:Lib/ssc/src/ecatslv.c **** 
2454:Lib/ssc/src/ecatslv.c ****             /* the Mailbox Read event in the variable ALEventReg shall be reset before calling
2455:Lib/ssc/src/ecatslv.c ****                MBX_MailboxReadInd, where a new mailbox datagram (if available) could be stored in t
2456:Lib/ssc/src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_READ_EVENT);
2457:Lib/ssc/src/ecatslv.c ****             MBX_MailboxReadInd();
2458:Lib/ssc/src/ecatslv.c ****         }
2459:Lib/ssc/src/ecatslv.c **** 
2460:Lib/ssc/src/ecatslv.c ****         DISABLE_MBX_INT;
 5133              		.loc 1 2460 24 is_stmt 1 view .LVU1587
2461:Lib/ssc/src/ecatslv.c ****         /* bMbxRepeatToggle holds the last state of the Repeat Bit (Bit 1) */
2462:Lib/ssc/src/ecatslv.c **** 
2463:Lib/ssc/src/ecatslv.c ****         if ( ( (sm1Activate & SM_SETTING_REPAET_REQ_MASK) && !bMbxRepeatToggle )
 5134              		.loc 1 2463 9 view .LVU1588
 5135              		.loc 1 2463 29 is_stmt 0 view .LVU1589
 5136 006c BDF80430 		ldrh	r3, [sp, #4]
 5137              		.loc 1 2463 12 view .LVU1590
 5138 0070 13F00203 		ands	r3, r3, #2
 5139 0074 02D0     		beq	.L414
 5140              		.loc 1 2463 62 discriminator 1 view .LVU1591
 5141 0076 334A     		ldr	r2, .L427+12
 5142 0078 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5143              		.loc 1 2463 59 discriminator 1 view .LVU1592
 5144 007a 1AB1     		cbz	r2, .L415
 5145              	.L414:
2464:Lib/ssc/src/ecatslv.c ****             ||( !(sm1Activate & SM_SETTING_REPAET_REQ_MASK) && bMbxRepeatToggle ))
 5146              		.loc 1 2464 13 view .LVU1593
 5147 007c A3B9     		cbnz	r3, .L416
 5148              		.loc 1 2464 61 discriminator 1 view .LVU1594
 5149 007e 314B     		ldr	r3, .L427+12
 5150 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5151 0082 8BB1     		cbz	r3, .L416
 5152              	.L415:
2465:Lib/ssc/src/ecatslv.c ****         {
2466:Lib/ssc/src/ecatslv.c ****             /* Repeat Bit (Bit 1) has toggled, there is a repeat request, in MBX_MailboxRepeatReq t
2467:Lib/ssc/src/ecatslv.c ****                response will put in the send mailbox again */
2468:Lib/ssc/src/ecatslv.c ****             MBX_MailboxRepeatReq();
 5153              		.loc 1 2468 13 is_stmt 1 view .LVU1595
 5154 0084 FFF7FEFF 		bl	MBX_MailboxRepeatReq
 5155              	.LVL414:
2469:Lib/ssc/src/ecatslv.c ****             /* acknowledge the repeat request after the send mailbox was updated by writing the Rep
2470:Lib/ssc/src/ecatslv.c ****                in the Repeat Ack Bit (Bit 1) of the PDI Ctrl-Byte of SM 1 (Register 0x80F) */
2471:Lib/ssc/src/ecatslv.c ****             if(bMbxRepeatToggle)
 5156              		.loc 1 2471 13 view .LVU1596
 5157              		.loc 1 2471 16 is_stmt 0 view .LVU1597
 5158 0088 2E4B     		ldr	r3, .L427+12
 5159 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5160              		.loc 1 2471 15 view .LVU1598
ARM GAS  /tmp/ccJBQgIh.s 			page 174


 5161 008c 002B     		cmp	r3, #0
 5162 008e 48D0     		beq	.L417
2472:Lib/ssc/src/ecatslv.c ****                 sm1Activate |= SM_SETTING_REPEAT_ACK; //set repeat acknowledge bit (bit 9)
 5163              		.loc 1 2472 17 is_stmt 1 view .LVU1599
 5164              		.loc 1 2472 29 is_stmt 0 view .LVU1600
 5165 0090 BDF80430 		ldrh	r3, [sp, #4]
 5166 0094 43F40073 		orr	r3, r3, #512
 5167 0098 ADF80430 		strh	r3, [sp, #4]	@ movhi
 5168              	.L418:
2473:Lib/ssc/src/ecatslv.c ****             else
2474:Lib/ssc/src/ecatslv.c ****                 sm1Activate &= ~SM_SETTING_REPEAT_ACK; //clear repeat acknowledge bit (bit 9)
2475:Lib/ssc/src/ecatslv.c **** 
2476:Lib/ssc/src/ecatslv.c ****             sm1Activate = SWAPWORD(sm1Activate);
 5169              		.loc 1 2476 13 is_stmt 1 view .LVU1601
2477:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(sm1Activate,(ESC_SYNCMAN_ACTIVE_OFFSET + SIZEOF_SM_REGISTER));
 5170              		.loc 1 2477 13 view .LVU1602
 5171 009c 0222     		movs	r2, #2
 5172 009e 40F60E01 		movw	r1, #2062
 5173 00a2 01A8     		add	r0, sp, #4
 5174 00a4 FFF7FEFF 		bl	HW_EscWrite
 5175              	.LVL415:
 5176              	.L416:
2478:Lib/ssc/src/ecatslv.c ****         }
2479:Lib/ssc/src/ecatslv.c ****         ENABLE_MBX_INT;
 5177              		.loc 1 2479 23 view .LVU1603
2480:Lib/ssc/src/ecatslv.c **** 
2481:Lib/ssc/src/ecatslv.c ****         /* Reload the AlEvent because it may be changed due to a SM disable, enable in case of an r
2482:Lib/ssc/src/ecatslv.c ****         ALEventReg = HW_GetALEventRegister();
 5178              		.loc 1 2482 9 view .LVU1604
 5179              		.loc 1 2482 22 is_stmt 0 view .LVU1605
 5180 00a8 FFF7FEFF 		bl	HW_GetALEventRegister
 5181              	.LVL416:
2483:Lib/ssc/src/ecatslv.c ****         ALEventReg = SWAPWORD(ALEventReg);
 5182              		.loc 1 2483 9 is_stmt 1 view .LVU1606
2484:Lib/ssc/src/ecatslv.c **** 
2485:Lib/ssc/src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_WRITE_EVENT) )
 5183              		.loc 1 2485 9 view .LVU1607
 5184              		.loc 1 2485 12 is_stmt 0 view .LVU1608
 5185 00ac 10F4807F 		tst	r0, #256
 5186 00b0 3ED1     		bne	.L426
 5187              	.LVL417:
 5188              	.L406:
2486:Lib/ssc/src/ecatslv.c ****         {
2487:Lib/ssc/src/ecatslv.c ****             /* SM 0 (Mailbox Write) event is set, when the mailbox was written from the master,
2488:Lib/ssc/src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be read,
2489:Lib/ssc/src/ecatslv.c ****                which will be done in MBX_CheckAndCopyMailbox */
2490:Lib/ssc/src/ecatslv.c ****             /* the Mailbox Write event in the variable ALEventReg shall be reset before calling
2491:Lib/ssc/src/ecatslv.c ****                MBX_CheckAndCopyMailbox, where the received mailbox datagram will be processed */
2492:Lib/ssc/src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_WRITE_EVENT);
2493:Lib/ssc/src/ecatslv.c ****             MBX_CheckAndCopyMailbox();
2494:Lib/ssc/src/ecatslv.c **** 
2495:Lib/ssc/src/ecatslv.c ****         }
2496:Lib/ssc/src/ecatslv.c ****     }
2497:Lib/ssc/src/ecatslv.c **** }
 5189              		.loc 1 2497 1 view .LVU1609
 5190 00b2 02B0     		add	sp, sp, #8
 5191              		.cfi_remember_state
ARM GAS  /tmp/ccJBQgIh.s 			page 175


 5192              		.cfi_def_cfa_offset 8
 5193              		@ sp needed
 5194 00b4 10BD     		pop	{r4, pc}
 5195              	.L420:
 5196              		.cfi_restore_state
2392:Lib/ssc/src/ecatslv.c ****         sm1Activate = SWAPWORD(sm1Activate);
 5197              		.loc 1 2392 9 is_stmt 1 view .LVU1610
 5198 00b6 0222     		movs	r2, #2
 5199 00b8 40F60E01 		movw	r1, #2062
 5200 00bc 01A8     		add	r0, sp, #4
 5201 00be FFF7FEFF 		bl	HW_EscRead
 5202              	.LVL418:
2393:Lib/ssc/src/ecatslv.c ****     }
 5203              		.loc 1 2393 9 view .LVU1611
 5204 00c2 ABE7     		b	.L407
 5205              	.L421:
2405:Lib/ssc/src/ecatslv.c ****         EscAlControl = SWAPWORD(EscAlControl);
 5206              		.loc 1 2405 9 view .LVU1612
 5207 00c4 0222     		movs	r2, #2
 5208 00c6 4FF49071 		mov	r1, #288
 5209 00ca 0DF10600 		add	r0, sp, #6
 5210 00ce FFF7FEFF 		bl	HW_EscRead
 5211              	.LVL419:
2406:Lib/ssc/src/ecatslv.c **** 
 5212              		.loc 1 2406 9 view .LVU1613
2411:Lib/ssc/src/ecatslv.c **** 
 5213              		.loc 1 2411 9 view .LVU1614
2411:Lib/ssc/src/ecatslv.c **** 
 5214              		.loc 1 2411 20 is_stmt 0 view .LVU1615
 5215 00d2 24F01104 		bic	r4, r4, #17
 5216              	.LVL420:
2411:Lib/ssc/src/ecatslv.c **** 
 5217              		.loc 1 2411 20 view .LVU1616
 5218 00d6 A4B2     		uxth	r4, r4
2413:Lib/ssc/src/ecatslv.c ****         
 5219              		.loc 1 2413 9 is_stmt 1 view .LVU1617
 5220 00d8 0021     		movs	r1, #0
 5221 00da 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 5222 00de FFF7FEFF 		bl	AL_ControlInd
 5223              	.LVL421:
 5224 00e2 A5E7     		b	.L408
 5225              	.LVL422:
 5226              	.L422:
2422:Lib/ssc/src/ecatslv.c **** 
 5227              		.loc 1 2422 9 view .LVU1618
2422:Lib/ssc/src/ecatslv.c **** 
 5228              		.loc 1 2422 20 is_stmt 0 view .LVU1619
 5229 00e4 24F01004 		bic	r4, r4, #16
 5230              	.LVL423:
2422:Lib/ssc/src/ecatslv.c **** 
 5231              		.loc 1 2422 20 view .LVU1620
 5232 00e8 A4B2     		uxth	r4, r4
2425:Lib/ssc/src/ecatslv.c ****     }
 5233              		.loc 1 2425 9 is_stmt 1 view .LVU1621
 5234 00ea 0021     		movs	r1, #0
 5235 00ec 00F00F00 		and	r0, r0, #15
 5236 00f0 FFF7FEFF 		bl	AL_ControlInd
ARM GAS  /tmp/ccJBQgIh.s 			page 176


 5237              	.LVL424:
 5238 00f4 ABE7     		b	.L409
 5239              	.LVL425:
 5240              	.L423:
2430:Lib/ssc/src/ecatslv.c ****     }
 5241              		.loc 1 2430 9 view .LVU1622
 5242 00f6 FFF7FEFF 		bl	AL_ControlRes
 5243              	.LVL426:
 5244 00fa ACE7     		b	.L410
 5245              	.L424:
2444:Lib/ssc/src/ecatslv.c **** 
 5246              		.loc 1 2444 13 view .LVU1623
 5247 00fc 104B     		ldr	r3, .L427+8
 5248 00fe 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5249 0100 0021     		movs	r1, #0
 5250 0102 00F00F00 		and	r0, r0, #15
 5251 0106 FFF7FEFF 		bl	AL_ControlInd
 5252              	.LVL427:
 5253 010a ACE7     		b	.L412
 5254              	.L425:
2451:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
 5255              		.loc 1 2451 13 view .LVU1624
2451:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
 5256              		.loc 1 2451 22 is_stmt 0 view .LVU1625
 5257 010c 0E48     		ldr	r0, .L427+16
 5258 010e 0023     		movs	r3, #0
 5259 0110 0380     		strh	r3, [r0]	@ movhi
2452:Lib/ssc/src/ecatslv.c **** 
 5260              		.loc 1 2452 13 is_stmt 1 view .LVU1626
 5261 0112 0222     		movs	r2, #2
 5262 0114 0D4B     		ldr	r3, .L427+20
 5263 0116 1988     		ldrh	r1, [r3]
 5264 0118 FFF7FEFF 		bl	HW_EscWrite
 5265              	.LVL428:
2456:Lib/ssc/src/ecatslv.c ****             MBX_MailboxReadInd();
 5266              		.loc 1 2456 13 view .LVU1627
2457:Lib/ssc/src/ecatslv.c ****         }
 5267              		.loc 1 2457 13 view .LVU1628
 5268 011c FFF7FEFF 		bl	MBX_MailboxReadInd
 5269              	.LVL429:
 5270 0120 A4E7     		b	.L413
 5271              	.L417:
2474:Lib/ssc/src/ecatslv.c **** 
 5272              		.loc 1 2474 17 view .LVU1629
2474:Lib/ssc/src/ecatslv.c **** 
 5273              		.loc 1 2474 29 is_stmt 0 view .LVU1630
 5274 0122 BDF80430 		ldrh	r3, [sp, #4]
 5275 0126 23F40073 		bic	r3, r3, #512
 5276 012a ADF80430 		strh	r3, [sp, #4]	@ movhi
 5277 012e B5E7     		b	.L418
 5278              	.LVL430:
 5279              	.L426:
2492:Lib/ssc/src/ecatslv.c ****             MBX_CheckAndCopyMailbox();
 5280              		.loc 1 2492 13 is_stmt 1 view .LVU1631
2493:Lib/ssc/src/ecatslv.c **** 
 5281              		.loc 1 2493 13 view .LVU1632
 5282 0130 FFF7FEFF 		bl	MBX_CheckAndCopyMailbox
ARM GAS  /tmp/ccJBQgIh.s 			page 177


 5283              	.LVL431:
 5284              		.loc 1 2497 1 is_stmt 0 view .LVU1633
 5285 0134 BDE7     		b	.L406
 5286              	.L428:
 5287 0136 00BF     		.align	2
 5288              	.L427:
 5289 0138 00000000 		.word	bMbxRunning
 5290 013c 00000000 		.word	.LANCHOR36
 5291 0140 00000000 		.word	.LANCHOR5
 5292 0144 00000000 		.word	bMbxRepeatToggle
 5293 0148 00000000 		.word	.LANCHOR37
 5294 014c 00000000 		.word	u16EscAddrSendMbx
 5295              		.cfi_endproc
 5296              	.LFE142:
 5298              		.global	EepromLoaded
 5299              		.global	SyncManInfo
 5300              		.global	SMActivate
 5301              		.global	u16dummy
 5302              		.global	u16ALEventMask
 5303              		.global	nEscAddrInputData
 5304              		.global	nEscAddrOutputData
 5305              		.global	EcatWdValue
 5306              		.global	nAlStatus
 5307              		.global	nMaxEscAddress
 5308              		.global	nMaxSyncMan
 5309              		.global	nPdOutputSize
 5310              		.global	nPdInputSize
 5311              		.global	nEcatStateTrans
 5312              		.global	bEcatWaitForAlControlRes
 5313              		.global	bApplEsmPending
 5314              		.global	u16LocalErrorCode
 5315              		.global	bLocalErrorFlag
 5316              		.global	b3BufferMode
 5317              		.global	bEscIntEnabled
 5318              		.global	LatchInputSync0Counter
 5319              		.global	LatchInputSync0Value
 5320              		.global	Sync1WdValue
 5321              		.global	Sync1WdCounter
 5322              		.global	Sync0WdValue
 5323              		.global	Sync0WdCounter
 5324              		.global	i16WaitForPllRunningCnt
 5325              		.global	i16WaitForPllRunningTimeout
 5326              		.global	bSmSyncSequenceValid
 5327              		.global	u16SmSync0Value
 5328              		.global	u16SmSync0Counter
 5329              		.global	bDcRunning
 5330              		.global	EsmTimeoutCounter
 5331              		.global	bDcSyncActive
 5332              		.global	bWdTrigger
 5333              		.global	bEcatFirstOutputsReceived
 5334              		.global	bEcatInputUpdateRunning
 5335              		.global	bEcatOutputUpdateRunning
 5336              		.section	.bss.EcatWdValue,"aw",%nobits
 5337              		.align	1
 5338              		.set	.LANCHOR20,. + 0
 5341              	EcatWdValue:
 5342 0000 0000     		.space	2
ARM GAS  /tmp/ccJBQgIh.s 			page 178


 5343              		.section	.bss.EepromLoaded,"aw",%nobits
 5344              		.set	.LANCHOR0,. + 0
 5347              	EepromLoaded:
 5348 0000 00       		.space	1
 5349              		.section	.bss.EsmTimeoutCounter,"aw",%nobits
 5350              		.align	1
 5351              		.set	.LANCHOR33,. + 0
 5354              	EsmTimeoutCounter:
 5355 0000 0000     		.space	2
 5356              		.section	.bss.LatchInputSync0Counter,"aw",%nobits
 5357              		.align	1
 5358              		.set	.LANCHOR17,. + 0
 5361              	LatchInputSync0Counter:
 5362 0000 0000     		.space	2
 5363              		.section	.bss.LatchInputSync0Value,"aw",%nobits
 5364              		.align	1
 5365              		.set	.LANCHOR16,. + 0
 5368              	LatchInputSync0Value:
 5369 0000 0000     		.space	2
 5370              		.section	.bss.SMActivate,"aw",%nobits
 5371              		.align	1
 5372              		.set	.LANCHOR10,. + 0
 5375              	SMActivate:
 5376 0000 0000     		.space	2
 5377              		.section	.bss.Sync0WdCounter,"aw",%nobits
 5378              		.align	1
 5379              		.set	.LANCHOR22,. + 0
 5382              	Sync0WdCounter:
 5383 0000 0000     		.space	2
 5384              		.section	.bss.Sync0WdValue,"aw",%nobits
 5385              		.align	1
 5386              		.set	.LANCHOR21,. + 0
 5389              	Sync0WdValue:
 5390 0000 0000     		.space	2
 5391              		.section	.bss.Sync1WdCounter,"aw",%nobits
 5392              		.align	1
 5393              		.set	.LANCHOR23,. + 0
 5396              	Sync1WdCounter:
 5397 0000 0000     		.space	2
 5398              		.section	.bss.Sync1WdValue,"aw",%nobits
 5399              		.align	1
 5400              		.set	.LANCHOR24,. + 0
 5403              	Sync1WdValue:
 5404 0000 0000     		.space	2
 5405              		.section	.bss.SyncManInfo,"aw",%nobits
 5406              		.align	2
 5407              		.set	.LANCHOR1,. + 0
 5410              	SyncManInfo:
 5411 0000 00000000 		.space	8
 5411      00000000 
 5412              		.section	.bss.b3BufferMode,"aw",%nobits
 5413              		.set	.LANCHOR3,. + 0
 5416              	b3BufferMode:
 5417 0000 00       		.space	1
 5418              		.section	.bss.bApplEsmPending,"aw",%nobits
 5419              		.set	.LANCHOR34,. + 0
 5422              	bApplEsmPending:
ARM GAS  /tmp/ccJBQgIh.s 			page 179


 5423 0000 00       		.space	1
 5424              		.section	.bss.bDcRunning,"aw",%nobits
 5425              		.set	.LANCHOR25,. + 0
 5428              	bDcRunning:
 5429 0000 00       		.space	1
 5430              		.section	.bss.bDcSyncActive,"aw",%nobits
 5431              		.set	.LANCHOR15,. + 0
 5434              	bDcSyncActive:
 5435 0000 00       		.space	1
 5436              		.section	.bss.bEcatFirstOutputsReceived,"aw",%nobits
 5437              		.set	.LANCHOR13,. + 0
 5440              	bEcatFirstOutputsReceived:
 5441 0000 00       		.space	1
 5442              		.section	.bss.bEcatInputUpdateRunning,"aw",%nobits
 5443              		.set	.LANCHOR32,. + 0
 5446              	bEcatInputUpdateRunning:
 5447 0000 00       		.space	1
 5448              		.section	.bss.bEcatOutputUpdateRunning,"aw",%nobits
 5449              		.set	.LANCHOR31,. + 0
 5452              	bEcatOutputUpdateRunning:
 5453 0000 00       		.space	1
 5454              		.section	.bss.bEcatWaitForAlControlRes,"aw",%nobits
 5455              		.set	.LANCHOR36,. + 0
 5458              	bEcatWaitForAlControlRes:
 5459 0000 00       		.space	1
 5460              		.section	.bss.bEscIntEnabled,"aw",%nobits
 5461              		.set	.LANCHOR14,. + 0
 5464              	bEscIntEnabled:
 5465 0000 00       		.space	1
 5466              		.section	.bss.bLocalErrorFlag,"aw",%nobits
 5467              		.set	.LANCHOR28,. + 0
 5470              	bLocalErrorFlag:
 5471 0000 00       		.space	1
 5472              		.section	.bss.bSmSyncSequenceValid,"aw",%nobits
 5473              		.set	.LANCHOR26,. + 0
 5476              	bSmSyncSequenceValid:
 5477 0000 00       		.space	1
 5478              		.section	.bss.bWdTrigger,"aw",%nobits
 5479              		.set	.LANCHOR9,. + 0
 5482              	bWdTrigger:
 5483 0000 00       		.space	1
 5484              		.section	.bss.i16WaitForPllRunningCnt,"aw",%nobits
 5485              		.align	1
 5486              		.set	.LANCHOR30,. + 0
 5489              	i16WaitForPllRunningCnt:
 5490 0000 0000     		.space	2
 5491              		.section	.bss.i16WaitForPllRunningTimeout,"aw",%nobits
 5492              		.align	1
 5493              		.set	.LANCHOR27,. + 0
 5496              	i16WaitForPllRunningTimeout:
 5497 0000 0000     		.space	2
 5498              		.section	.bss.nAlStatus,"aw",%nobits
 5499              		.set	.LANCHOR5,. + 0
 5502              	nAlStatus:
 5503 0000 00       		.space	1
 5504              		.section	.bss.nEcatStateTrans,"aw",%nobits
 5505              		.align	1
ARM GAS  /tmp/ccJBQgIh.s 			page 180


 5506              		.set	.LANCHOR35,. + 0
 5509              	nEcatStateTrans:
 5510 0000 0000     		.space	2
 5511              		.section	.bss.nEscAddrInputData,"aw",%nobits
 5512              		.align	1
 5513              		.set	.LANCHOR6,. + 0
 5516              	nEscAddrInputData:
 5517 0000 0000     		.space	2
 5518              		.section	.bss.nEscAddrOutputData,"aw",%nobits
 5519              		.align	1
 5520              		.set	.LANCHOR8,. + 0
 5523              	nEscAddrOutputData:
 5524 0000 0000     		.space	2
 5525              		.section	.bss.nMaxEscAddress,"aw",%nobits
 5526              		.align	1
 5527              		.set	.LANCHOR2,. + 0
 5530              	nMaxEscAddress:
 5531 0000 0000     		.space	2
 5532              		.section	.bss.nMaxSyncMan,"aw",%nobits
 5533              		.set	.LANCHOR11,. + 0
 5536              	nMaxSyncMan:
 5537 0000 00       		.space	1
 5538              		.section	.bss.nPdInputSize,"aw",%nobits
 5539              		.align	1
 5540              		.set	.LANCHOR4,. + 0
 5543              	nPdInputSize:
 5544 0000 0000     		.space	2
 5545              		.section	.bss.nPdOutputSize,"aw",%nobits
 5546              		.align	1
 5547              		.set	.LANCHOR7,. + 0
 5550              	nPdOutputSize:
 5551 0000 0000     		.space	2
 5552              		.section	.bss.u16ALEventMask,"aw",%nobits
 5553              		.align	1
 5554              		.set	.LANCHOR12,. + 0
 5557              	u16ALEventMask:
 5558 0000 0000     		.space	2
 5559              		.section	.bss.u16LocalErrorCode,"aw",%nobits
 5560              		.align	1
 5561              		.set	.LANCHOR29,. + 0
 5564              	u16LocalErrorCode:
 5565 0000 0000     		.space	2
 5566              		.section	.bss.u16SmSync0Counter,"aw",%nobits
 5567              		.align	1
 5568              		.set	.LANCHOR19,. + 0
 5571              	u16SmSync0Counter:
 5572 0000 0000     		.space	2
 5573              		.section	.bss.u16SmSync0Value,"aw",%nobits
 5574              		.align	1
 5575              		.set	.LANCHOR18,. + 0
 5578              	u16SmSync0Value:
 5579 0000 0000     		.space	2
 5580              		.section	.bss.u16dummy,"aw",%nobits
 5581              		.align	1
 5582              		.set	.LANCHOR37,. + 0
 5585              	u16dummy:
 5586 0000 0000     		.space	2
ARM GAS  /tmp/ccJBQgIh.s 			page 181


 5587              		.text
 5588              	.Letext0:
 5589              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 5590              		.file 4 "Lib/ssc/include/esc.h"
 5591              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 5592              		.file 6 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 5593              		.file 7 "Lib/ssc/include/ecatslv.h"
 5594              		.file 8 "Lib/ssc/include/mailbox.h"
 5595              		.file 9 "Lib/ssc/include/objdef.h"
 5596              		.file 10 "Lib/ssc/include/el9800hw.h"
 5597              		.file 11 "Lib/ssc/include/ecatcoe.h"
 5598              		.file 12 "Lib/ssc_app/include/el9800appl.h"
 5599              		.file 13 "Lib/ssc_app/include/ecatappl.h"
ARM GAS  /tmp/ccJBQgIh.s 			page 182


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ecatslv.c
     /tmp/ccJBQgIh.s:20     .text.ResetALEventMask:0000000000000000 $t
     /tmp/ccJBQgIh.s:26     .text.ResetALEventMask:0000000000000000 ResetALEventMask
     /tmp/ccJBQgIh.s:99     .text.ResetALEventMask:000000000000003c $d
     /tmp/ccJBQgIh.s:104    .text.SetALEventMask:0000000000000000 $t
     /tmp/ccJBQgIh.s:110    .text.SetALEventMask:0000000000000000 SetALEventMask
     /tmp/ccJBQgIh.s:181    .text.SetALEventMask:000000000000003c $d
     /tmp/ccJBQgIh.s:186    .text.UpdateEEPROMLoadedState:0000000000000000 $t
     /tmp/ccJBQgIh.s:192    .text.UpdateEEPROMLoadedState:0000000000000000 UpdateEEPROMLoadedState
     /tmp/ccJBQgIh.s:252    .text.UpdateEEPROMLoadedState:000000000000003c $d
     /tmp/ccJBQgIh.s:257    .text.GetSyncMan:0000000000000000 $t
     /tmp/ccJBQgIh.s:263    .text.GetSyncMan:0000000000000000 GetSyncMan
     /tmp/ccJBQgIh.s:294    .text.GetSyncMan:0000000000000018 $d
     /tmp/ccJBQgIh.s:299    .text.DisableSyncManChannel:0000000000000000 $t
     /tmp/ccJBQgIh.s:305    .text.DisableSyncManChannel:0000000000000000 DisableSyncManChannel
     /tmp/ccJBQgIh.s:362    .text.EnableSyncManChannel:0000000000000000 $t
     /tmp/ccJBQgIh.s:368    .text.EnableSyncManChannel:0000000000000000 EnableSyncManChannel
     /tmp/ccJBQgIh.s:425    .text.CheckSmSettings:0000000000000000 $t
     /tmp/ccJBQgIh.s:431    .text.CheckSmSettings:0000000000000000 CheckSmSettings
     /tmp/ccJBQgIh.s:1062   .text.CheckSmSettings:000000000000027c $d
     /tmp/ccJBQgIh.s:1075   .text.CheckSmSettings:00000000000002a4 $t
     /tmp/ccJBQgIh.s:1125   .text.StartInputHandler:0000000000000000 $t
     /tmp/ccJBQgIh.s:1131   .text.StartInputHandler:0000000000000000 StartInputHandler
     /tmp/ccJBQgIh.s:1496   .text.StartInputHandler:00000000000001b4 $d
     /tmp/ccJBQgIh.s:1513   .text.StartInputHandler:00000000000001ec $t
     /tmp/ccJBQgIh.s:2050   .text.StartInputHandler:0000000000000434 $d
     /tmp/ccJBQgIh.s:2077   .text.StartInputHandler:0000000000000494 $t
     /tmp/ccJBQgIh.s:2297   .text.StartInputHandler:000000000000057c $d
     /tmp/ccJBQgIh.s:2308   .text.StartOutputHandler:0000000000000000 $t
     /tmp/ccJBQgIh.s:2314   .text.StartOutputHandler:0000000000000000 StartOutputHandler
     /tmp/ccJBQgIh.s:2362   .text.StartOutputHandler:0000000000000028 $d
     /tmp/ccJBQgIh.s:2371   .text.StopOutputHandler:0000000000000000 $t
     /tmp/ccJBQgIh.s:2377   .text.StopOutputHandler:0000000000000000 StopOutputHandler
     /tmp/ccJBQgIh.s:2398   .text.StopOutputHandler:000000000000000c $d
     /tmp/ccJBQgIh.s:2404   .text.StopInputHandler:0000000000000000 $t
     /tmp/ccJBQgIh.s:2410   .text.StopInputHandler:0000000000000000 StopInputHandler
     /tmp/ccJBQgIh.s:2537   .text.StopInputHandler:0000000000000078 $d
     /tmp/ccJBQgIh.s:2561   .text.BackToInitTransition:0000000000000000 $t
     /tmp/ccJBQgIh.s:2567   .text.BackToInitTransition:0000000000000000 BackToInitTransition
     /tmp/ccJBQgIh.s:2584   .text.BackToInitTransition:0000000000000008 $d
     /tmp/ccJBQgIh.s:2589   .text.SetALStatus:0000000000000000 $t
     /tmp/ccJBQgIh.s:2595   .text.SetALStatus:0000000000000000 SetALStatus
     /tmp/ccJBQgIh.s:2667   .text.SetALStatus:0000000000000048 $d
     /tmp/ccJBQgIh.s:2672   .text.AL_ControlInd:0000000000000000 $t
     /tmp/ccJBQgIh.s:2678   .text.AL_ControlInd:0000000000000000 AL_ControlInd
     /tmp/ccJBQgIh.s:2758   .text.AL_ControlInd:000000000000004a $d
     /tmp/ccJBQgIh.s:2925   .text.AL_ControlInd:0000000000000124 $d
     /tmp/ccJBQgIh.s:2936   .text.AL_ControlInd:0000000000000144 $t
     /tmp/ccJBQgIh.s:2950   .text.AL_ControlInd:000000000000015c $d
     /tmp/ccJBQgIh.s:3071   .text.AL_ControlInd:000000000000024c $t
     /tmp/ccJBQgIh.s:3403   .text.AL_ControlInd:00000000000003c0 $d
     /tmp/ccJBQgIh.s:3413   .text.AL_ControlInd:00000000000003dc $t
     /tmp/ccJBQgIh.s:3693   .text.AL_ControlInd:0000000000000524 $d
     /tmp/ccJBQgIh.s:3704   .text.AL_ControlRes:0000000000000000 $t
     /tmp/ccJBQgIh.s:3710   .text.AL_ControlRes:0000000000000000 AL_ControlRes
     /tmp/ccJBQgIh.s:4184   .text.AL_ControlRes:00000000000001e4 $d
ARM GAS  /tmp/ccJBQgIh.s 			page 183


     /tmp/ccJBQgIh.s:4205   .text.DC_CheckWatchdog:0000000000000000 $t
     /tmp/ccJBQgIh.s:4211   .text.DC_CheckWatchdog:0000000000000000 DC_CheckWatchdog
     /tmp/ccJBQgIh.s:4378   .text.DC_CheckWatchdog:00000000000000b4 $d
     /tmp/ccJBQgIh.s:4393   .text.CheckIfEcatError:0000000000000000 $t
     /tmp/ccJBQgIh.s:4399   .text.CheckIfEcatError:0000000000000000 CheckIfEcatError
     /tmp/ccJBQgIh.s:4514   .text.CheckIfEcatError:000000000000007c $d
     /tmp/ccJBQgIh.s:4525   .text.ECAT_StateChange:0000000000000000 $t
     /tmp/ccJBQgIh.s:4531   .text.ECAT_StateChange:0000000000000000 ECAT_StateChange
     /tmp/ccJBQgIh.s:4801   .text.ECAT_StateChange:0000000000000114 $d
     /tmp/ccJBQgIh.s:4817   .text.ECAT_Init:0000000000000000 $t
     /tmp/ccJBQgIh.s:4823   .text.ECAT_Init:0000000000000000 ECAT_Init
     /tmp/ccJBQgIh.s:5004   .text.ECAT_Init:00000000000000bc $d
     /tmp/ccJBQgIh.s:5030   .text.ECAT_Main:0000000000000000 $t
     /tmp/ccJBQgIh.s:5036   .text.ECAT_Main:0000000000000000 ECAT_Main
     /tmp/ccJBQgIh.s:5289   .text.ECAT_Main:0000000000000138 $d
     /tmp/ccJBQgIh.s:5347   .bss.EepromLoaded:0000000000000000 EepromLoaded
     /tmp/ccJBQgIh.s:5410   .bss.SyncManInfo:0000000000000000 SyncManInfo
     /tmp/ccJBQgIh.s:5375   .bss.SMActivate:0000000000000000 SMActivate
     /tmp/ccJBQgIh.s:5585   .bss.u16dummy:0000000000000000 u16dummy
     /tmp/ccJBQgIh.s:5557   .bss.u16ALEventMask:0000000000000000 u16ALEventMask
     /tmp/ccJBQgIh.s:5516   .bss.nEscAddrInputData:0000000000000000 nEscAddrInputData
     /tmp/ccJBQgIh.s:5523   .bss.nEscAddrOutputData:0000000000000000 nEscAddrOutputData
     /tmp/ccJBQgIh.s:5341   .bss.EcatWdValue:0000000000000000 EcatWdValue
     /tmp/ccJBQgIh.s:5502   .bss.nAlStatus:0000000000000000 nAlStatus
     /tmp/ccJBQgIh.s:5530   .bss.nMaxEscAddress:0000000000000000 nMaxEscAddress
     /tmp/ccJBQgIh.s:5536   .bss.nMaxSyncMan:0000000000000000 nMaxSyncMan
     /tmp/ccJBQgIh.s:5550   .bss.nPdOutputSize:0000000000000000 nPdOutputSize
     /tmp/ccJBQgIh.s:5543   .bss.nPdInputSize:0000000000000000 nPdInputSize
     /tmp/ccJBQgIh.s:5509   .bss.nEcatStateTrans:0000000000000000 nEcatStateTrans
     /tmp/ccJBQgIh.s:5458   .bss.bEcatWaitForAlControlRes:0000000000000000 bEcatWaitForAlControlRes
     /tmp/ccJBQgIh.s:5422   .bss.bApplEsmPending:0000000000000000 bApplEsmPending
     /tmp/ccJBQgIh.s:5564   .bss.u16LocalErrorCode:0000000000000000 u16LocalErrorCode
     /tmp/ccJBQgIh.s:5470   .bss.bLocalErrorFlag:0000000000000000 bLocalErrorFlag
     /tmp/ccJBQgIh.s:5416   .bss.b3BufferMode:0000000000000000 b3BufferMode
     /tmp/ccJBQgIh.s:5464   .bss.bEscIntEnabled:0000000000000000 bEscIntEnabled
     /tmp/ccJBQgIh.s:5361   .bss.LatchInputSync0Counter:0000000000000000 LatchInputSync0Counter
     /tmp/ccJBQgIh.s:5368   .bss.LatchInputSync0Value:0000000000000000 LatchInputSync0Value
     /tmp/ccJBQgIh.s:5403   .bss.Sync1WdValue:0000000000000000 Sync1WdValue
     /tmp/ccJBQgIh.s:5396   .bss.Sync1WdCounter:0000000000000000 Sync1WdCounter
     /tmp/ccJBQgIh.s:5389   .bss.Sync0WdValue:0000000000000000 Sync0WdValue
     /tmp/ccJBQgIh.s:5382   .bss.Sync0WdCounter:0000000000000000 Sync0WdCounter
     /tmp/ccJBQgIh.s:5489   .bss.i16WaitForPllRunningCnt:0000000000000000 i16WaitForPllRunningCnt
     /tmp/ccJBQgIh.s:5496   .bss.i16WaitForPllRunningTimeout:0000000000000000 i16WaitForPllRunningTimeout
     /tmp/ccJBQgIh.s:5476   .bss.bSmSyncSequenceValid:0000000000000000 bSmSyncSequenceValid
     /tmp/ccJBQgIh.s:5578   .bss.u16SmSync0Value:0000000000000000 u16SmSync0Value
     /tmp/ccJBQgIh.s:5571   .bss.u16SmSync0Counter:0000000000000000 u16SmSync0Counter
     /tmp/ccJBQgIh.s:5428   .bss.bDcRunning:0000000000000000 bDcRunning
     /tmp/ccJBQgIh.s:5354   .bss.EsmTimeoutCounter:0000000000000000 EsmTimeoutCounter
     /tmp/ccJBQgIh.s:5434   .bss.bDcSyncActive:0000000000000000 bDcSyncActive
     /tmp/ccJBQgIh.s:5482   .bss.bWdTrigger:0000000000000000 bWdTrigger
     /tmp/ccJBQgIh.s:5440   .bss.bEcatFirstOutputsReceived:0000000000000000 bEcatFirstOutputsReceived
     /tmp/ccJBQgIh.s:5446   .bss.bEcatInputUpdateRunning:0000000000000000 bEcatInputUpdateRunning
     /tmp/ccJBQgIh.s:5452   .bss.bEcatOutputUpdateRunning:0000000000000000 bEcatOutputUpdateRunning
     /tmp/ccJBQgIh.s:5337   .bss.EcatWdValue:0000000000000000 $d
     /tmp/ccJBQgIh.s:5348   .bss.EepromLoaded:0000000000000000 $d
     /tmp/ccJBQgIh.s:5350   .bss.EsmTimeoutCounter:0000000000000000 $d
     /tmp/ccJBQgIh.s:5357   .bss.LatchInputSync0Counter:0000000000000000 $d
ARM GAS  /tmp/ccJBQgIh.s 			page 184


     /tmp/ccJBQgIh.s:5364   .bss.LatchInputSync0Value:0000000000000000 $d
     /tmp/ccJBQgIh.s:5371   .bss.SMActivate:0000000000000000 $d
     /tmp/ccJBQgIh.s:5378   .bss.Sync0WdCounter:0000000000000000 $d
     /tmp/ccJBQgIh.s:5385   .bss.Sync0WdValue:0000000000000000 $d
     /tmp/ccJBQgIh.s:5392   .bss.Sync1WdCounter:0000000000000000 $d
     /tmp/ccJBQgIh.s:5399   .bss.Sync1WdValue:0000000000000000 $d
     /tmp/ccJBQgIh.s:5406   .bss.SyncManInfo:0000000000000000 $d
     /tmp/ccJBQgIh.s:5417   .bss.b3BufferMode:0000000000000000 $d
     /tmp/ccJBQgIh.s:5423   .bss.bApplEsmPending:0000000000000000 $d
     /tmp/ccJBQgIh.s:5429   .bss.bDcRunning:0000000000000000 $d
     /tmp/ccJBQgIh.s:5435   .bss.bDcSyncActive:0000000000000000 $d
     /tmp/ccJBQgIh.s:5441   .bss.bEcatFirstOutputsReceived:0000000000000000 $d
     /tmp/ccJBQgIh.s:5447   .bss.bEcatInputUpdateRunning:0000000000000000 $d
     /tmp/ccJBQgIh.s:5453   .bss.bEcatOutputUpdateRunning:0000000000000000 $d
     /tmp/ccJBQgIh.s:5459   .bss.bEcatWaitForAlControlRes:0000000000000000 $d
     /tmp/ccJBQgIh.s:5465   .bss.bEscIntEnabled:0000000000000000 $d
     /tmp/ccJBQgIh.s:5471   .bss.bLocalErrorFlag:0000000000000000 $d
     /tmp/ccJBQgIh.s:5477   .bss.bSmSyncSequenceValid:0000000000000000 $d
     /tmp/ccJBQgIh.s:5483   .bss.bWdTrigger:0000000000000000 $d
     /tmp/ccJBQgIh.s:5485   .bss.i16WaitForPllRunningCnt:0000000000000000 $d
     /tmp/ccJBQgIh.s:5492   .bss.i16WaitForPllRunningTimeout:0000000000000000 $d
     /tmp/ccJBQgIh.s:5503   .bss.nAlStatus:0000000000000000 $d
     /tmp/ccJBQgIh.s:5505   .bss.nEcatStateTrans:0000000000000000 $d
     /tmp/ccJBQgIh.s:5512   .bss.nEscAddrInputData:0000000000000000 $d
     /tmp/ccJBQgIh.s:5519   .bss.nEscAddrOutputData:0000000000000000 $d
     /tmp/ccJBQgIh.s:5526   .bss.nMaxEscAddress:0000000000000000 $d
     /tmp/ccJBQgIh.s:5537   .bss.nMaxSyncMan:0000000000000000 $d
     /tmp/ccJBQgIh.s:5539   .bss.nPdInputSize:0000000000000000 $d
     /tmp/ccJBQgIh.s:5546   .bss.nPdOutputSize:0000000000000000 $d
     /tmp/ccJBQgIh.s:5553   .bss.u16ALEventMask:0000000000000000 $d
     /tmp/ccJBQgIh.s:5560   .bss.u16LocalErrorCode:0000000000000000 $d
     /tmp/ccJBQgIh.s:5567   .bss.u16SmSync0Counter:0000000000000000 $d
     /tmp/ccJBQgIh.s:5574   .bss.u16SmSync0Value:0000000000000000 $d
     /tmp/ccJBQgIh.s:5581   .bss.u16dummy:0000000000000000 $d
     /tmp/ccJBQgIh.s:2798   .text.AL_ControlInd:0000000000000071 $d
     /tmp/ccJBQgIh.s:2798   .text.AL_ControlInd:0000000000000072 $t

UNDEFINED SYMBOLS
HW_EscRead
HW_EscWrite
sSyncManOutPar
sSyncManInPar
u16EscAddrSendMbx
u16SendMbxSize
u16EscAddrReceiveMbx
u16ReceiveMbxSize
bSyncSetByUser
PDO_InputMapping
sCycleDiag
APPL_GenerateMapping
MBX_StartMailboxHandler
MBX_StopMailboxHandler
APPL_StartMailboxHandler
APPL_StopMailboxHandler
APPL_StartInputHandler
APPL_StopInputHandler
APPL_StartOutputHandler
ARM GAS  /tmp/ccJBQgIh.s 			page 185


APPL_StopOutputHandler
bMbxRunning
APPL_AckErrorInd
sErrorSettings
MBX_Init
COE_Init
MBX_Main
HW_GetALEventRegister
MBX_MailboxRepeatReq
MBX_MailboxReadInd
MBX_CheckAndCopyMailbox
bMbxRepeatToggle
