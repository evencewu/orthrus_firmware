ARM GAS  /tmp/ccNGqKDM.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccNGqKDM.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  59:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan2;
  60:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_tx;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_rx;
  65:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /**
  73:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32f4xx_it.c ****   */
  75:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f4xx_it.c **** 
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  /tmp/ccNGqKDM.s 			page 3


  81:Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 81 4 discriminator 1 view .LVU1
  82:Core/Src/stm32f4xx_it.c ****   {
  83:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 83 3 discriminator 1 view .LVU2
  81:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 81 10 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE130:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB131:
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c **** }
  86:Core/Src/stm32f4xx_it.c **** 
  87:Core/Src/stm32f4xx_it.c **** /**
  88:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32f4xx_it.c ****   */
  90:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 91 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  92:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c **** 
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 95 3 discriminator 1 view .LVU5
  96:Core/Src/stm32f4xx_it.c ****   {
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 99 3 discriminator 1 view .LVU6
  95:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 95 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE131:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB132:
 100:Core/Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccNGqKDM.s 			page 4


 101:Core/Src/stm32f4xx_it.c **** 
 102:Core/Src/stm32f4xx_it.c **** /**
 103:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32f4xx_it.c ****   */
 105:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 106 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 107:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c **** 
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 110 3 discriminator 1 view .LVU9
 111:Core/Src/stm32f4xx_it.c ****   {
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 114 3 discriminator 1 view .LVU10
 110:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 110 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE132:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB133:
 115:Core/Src/stm32f4xx_it.c **** }
 116:Core/Src/stm32f4xx_it.c **** 
 117:Core/Src/stm32f4xx_it.c **** /**
 118:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 119:Core/Src/stm32f4xx_it.c ****   */
 120:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 121 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 122:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c **** 
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 125 3 discriminator 1 view .LVU13
 126:Core/Src/stm32f4xx_it.c ****   {
 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccNGqKDM.s 			page 5


 128:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 129 3 discriminator 1 view .LVU14
 125:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 125 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE133:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB134:
 130:Core/Src/stm32f4xx_it.c **** }
 131:Core/Src/stm32f4xx_it.c **** 
 132:Core/Src/stm32f4xx_it.c **** /**
 133:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32f4xx_it.c ****   */
 135:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 136 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 137:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c **** 
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 140 3 discriminator 1 view .LVU17
 141:Core/Src/stm32f4xx_it.c ****   {
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 144 3 discriminator 1 view .LVU18
 140:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 140 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE134:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB135:
 145:Core/Src/stm32f4xx_it.c **** }
 146:Core/Src/stm32f4xx_it.c **** 
 147:Core/Src/stm32f4xx_it.c **** /**
 148:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccNGqKDM.s 			page 6


 149:Core/Src/stm32f4xx_it.c ****   */
 150:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 151:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 151 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 158 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE135:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB136:
 159:Core/Src/stm32f4xx_it.c **** 
 160:Core/Src/stm32f4xx_it.c **** /**
 161:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 162:Core/Src/stm32f4xx_it.c ****   */
 163:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 164:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 164 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 165:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 169:Core/Src/stm32f4xx_it.c **** 
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 171:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 171 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE136:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB137:
ARM GAS  /tmp/ccNGqKDM.s 			page 7


 172:Core/Src/stm32f4xx_it.c **** 
 173:Core/Src/stm32f4xx_it.c **** /**
 174:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 175:Core/Src/stm32f4xx_it.c ****   */
 176:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 177:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 177 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 184 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE137:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB138:
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c **** /**
 187:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 188:Core/Src/stm32f4xx_it.c ****   */
 189:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 190:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 190 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 194:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 209              		.loc 1 194 3 view .LVU27
 210 0002 FFF7FEFF 		bl	HAL_IncTick
 211              	.LVL0:
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 196:Core/Src/stm32f4xx_it.c **** 
 197:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 198:Core/Src/stm32f4xx_it.c **** }
 212              		.loc 1 198 1 is_stmt 0 view .LVU28
 213 0006 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccNGqKDM.s 			page 8


 214              		.cfi_endproc
 215              	.LFE138:
 217              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.global	EXTI0_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	EXTI0_IRQHandler:
 225              	.LFB139:
 199:Core/Src/stm32f4xx_it.c **** 
 200:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 202:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 203:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 204:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 205:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 206:Core/Src/stm32f4xx_it.c **** 
 207:Core/Src/stm32f4xx_it.c **** /**
 208:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 209:Core/Src/stm32f4xx_it.c ****   */
 210:Core/Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 211:Core/Src/stm32f4xx_it.c **** {
 226              		.loc 1 211 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 212:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 213:Core/Src/stm32f4xx_it.c **** 
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 234              		.loc 1 215 3 view .LVU30
 235 0002 0120     		movs	r0, #1
 236 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 237              	.LVL1:
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** }
 238              		.loc 1 219 1 is_stmt 0 view .LVU31
 239 0008 08BD     		pop	{r3, pc}
 240              		.cfi_endproc
 241              	.LFE139:
 243              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 244              		.align	1
 245              		.global	EXTI3_IRQHandler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	EXTI3_IRQHandler:
 251              	.LFB140:
 220:Core/Src/stm32f4xx_it.c **** 
 221:Core/Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccNGqKDM.s 			page 9


 222:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 223:Core/Src/stm32f4xx_it.c ****   */
 224:Core/Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 225:Core/Src/stm32f4xx_it.c **** {
 252              		.loc 1 225 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 226:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 227:Core/Src/stm32f4xx_it.c **** 
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(DRDY_IST8310_Pin);
 260              		.loc 1 229 3 view .LVU33
 261 0002 0820     		movs	r0, #8
 262 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 263              	.LVL2:
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** }
 264              		.loc 1 233 1 is_stmt 0 view .LVU34
 265 0008 08BD     		pop	{r3, pc}
 266              		.cfi_endproc
 267              	.LFE140:
 269              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 270              		.align	1
 271              		.global	EXTI4_IRQHandler
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	EXTI4_IRQHandler:
 277              	.LFB141:
 234:Core/Src/stm32f4xx_it.c **** 
 235:Core/Src/stm32f4xx_it.c **** /**
 236:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 237:Core/Src/stm32f4xx_it.c ****   */
 238:Core/Src/stm32f4xx_it.c **** void EXTI4_IRQHandler(void)
 239:Core/Src/stm32f4xx_it.c **** {
 278              		.loc 1 239 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 08B5     		push	{r3, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 240:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 241:Core/Src/stm32f4xx_it.c **** 
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 243:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(INT1_Accel_Pin);
 286              		.loc 1 243 3 view .LVU36
 287 0002 1020     		movs	r0, #16
 288 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
ARM GAS  /tmp/ccNGqKDM.s 			page 10


 289              	.LVL3:
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 245:Core/Src/stm32f4xx_it.c **** 
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** }
 290              		.loc 1 247 1 is_stmt 0 view .LVU37
 291 0008 08BD     		pop	{r3, pc}
 292              		.cfi_endproc
 293              	.LFE141:
 295              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 296              		.align	1
 297              		.global	CAN1_RX0_IRQHandler
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	CAN1_RX0_IRQHandler:
 303              	.LFB142:
 248:Core/Src/stm32f4xx_it.c **** 
 249:Core/Src/stm32f4xx_it.c **** /**
 250:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupts.
 251:Core/Src/stm32f4xx_it.c ****   */
 252:Core/Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 253:Core/Src/stm32f4xx_it.c **** {
 304              		.loc 1 253 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 08B5     		push	{r3, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 3, -8
 311              		.cfi_offset 14, -4
 254:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 255:Core/Src/stm32f4xx_it.c **** 
 256:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 257:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 312              		.loc 1 257 3 view .LVU39
 313 0002 0248     		ldr	r0, .L24
 314 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 315              	.LVL4:
 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 259:Core/Src/stm32f4xx_it.c **** 
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 261:Core/Src/stm32f4xx_it.c **** }
 316              		.loc 1 261 1 is_stmt 0 view .LVU40
 317 0008 08BD     		pop	{r3, pc}
 318              	.L25:
 319 000a 00BF     		.align	2
 320              	.L24:
 321 000c 00000000 		.word	hcan1
 322              		.cfi_endproc
 323              	.LFE142:
 325              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
 326              		.align	1
 327              		.global	CAN1_RX1_IRQHandler
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
ARM GAS  /tmp/ccNGqKDM.s 			page 11


 332              	CAN1_RX1_IRQHandler:
 333              	.LFB143:
 262:Core/Src/stm32f4xx_it.c **** 
 263:Core/Src/stm32f4xx_it.c **** /**
 264:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX1 interrupt.
 265:Core/Src/stm32f4xx_it.c ****   */
 266:Core/Src/stm32f4xx_it.c **** void CAN1_RX1_IRQHandler(void)
 267:Core/Src/stm32f4xx_it.c **** {
 334              		.loc 1 267 1 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 08B5     		push	{r3, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 3, -8
 341              		.cfi_offset 14, -4
 268:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 0 */
 269:Core/Src/stm32f4xx_it.c **** 
 270:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 0 */
 271:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 342              		.loc 1 271 3 view .LVU42
 343 0002 0248     		ldr	r0, .L28
 344 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 345              	.LVL5:
 272:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 1 */
 273:Core/Src/stm32f4xx_it.c **** 
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 1 */
 275:Core/Src/stm32f4xx_it.c **** }
 346              		.loc 1 275 1 is_stmt 0 view .LVU43
 347 0008 08BD     		pop	{r3, pc}
 348              	.L29:
 349 000a 00BF     		.align	2
 350              	.L28:
 351 000c 00000000 		.word	hcan1
 352              		.cfi_endproc
 353              	.LFE143:
 355              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 356              		.align	1
 357              		.global	EXTI9_5_IRQHandler
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	EXTI9_5_IRQHandler:
 363              	.LFB144:
 276:Core/Src/stm32f4xx_it.c **** 
 277:Core/Src/stm32f4xx_it.c **** /**
 278:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 279:Core/Src/stm32f4xx_it.c ****   */
 280:Core/Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 281:Core/Src/stm32f4xx_it.c **** {
 364              		.loc 1 281 1 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 08B5     		push	{r3, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 3, -8
ARM GAS  /tmp/ccNGqKDM.s 			page 12


 371              		.cfi_offset 14, -4
 282:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 283:Core/Src/stm32f4xx_it.c **** 
 284:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 285:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(INT1_Gyro_Pin);
 372              		.loc 1 285 3 view .LVU45
 373 0002 2020     		movs	r0, #32
 374 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 375              	.LVL6:
 286:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 287:Core/Src/stm32f4xx_it.c **** 
 288:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 289:Core/Src/stm32f4xx_it.c **** }
 376              		.loc 1 289 1 is_stmt 0 view .LVU46
 377 0008 08BD     		pop	{r3, pc}
 378              		.cfi_endproc
 379              	.LFE144:
 381              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 382              		.align	1
 383              		.global	TIM4_IRQHandler
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	TIM4_IRQHandler:
 389              	.LFB145:
 290:Core/Src/stm32f4xx_it.c **** 
 291:Core/Src/stm32f4xx_it.c **** /**
 292:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 293:Core/Src/stm32f4xx_it.c ****   */
 294:Core/Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 295:Core/Src/stm32f4xx_it.c **** {
 390              		.loc 1 295 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 08B5     		push	{r3, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 3, -8
 397              		.cfi_offset 14, -4
 296:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 297:Core/Src/stm32f4xx_it.c **** 
 298:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 299:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 398              		.loc 1 299 3 view .LVU48
 399 0002 0248     		ldr	r0, .L34
 400 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 401              	.LVL7:
 300:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 301:Core/Src/stm32f4xx_it.c **** 
 302:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 303:Core/Src/stm32f4xx_it.c **** }
 402              		.loc 1 303 1 is_stmt 0 view .LVU49
 403 0008 08BD     		pop	{r3, pc}
 404              	.L35:
 405 000a 00BF     		.align	2
 406              	.L34:
 407 000c 00000000 		.word	htim4
ARM GAS  /tmp/ccNGqKDM.s 			page 13


 408              		.cfi_endproc
 409              	.LFE145:
 411              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 412              		.align	1
 413              		.global	DMA2_Stream1_IRQHandler
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 418              	DMA2_Stream1_IRQHandler:
 419              	.LFB146:
 304:Core/Src/stm32f4xx_it.c **** 
 305:Core/Src/stm32f4xx_it.c **** /**
 306:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 307:Core/Src/stm32f4xx_it.c ****   */
 308:Core/Src/stm32f4xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 309:Core/Src/stm32f4xx_it.c **** {
 420              		.loc 1 309 1 is_stmt 1 view -0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424 0000 08B5     		push	{r3, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 3, -8
 427              		.cfi_offset 14, -4
 310:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 311:Core/Src/stm32f4xx_it.c **** 
 312:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 313:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_rx);
 428              		.loc 1 313 3 view .LVU51
 429 0002 0248     		ldr	r0, .L38
 430 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 431              	.LVL8:
 314:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 315:Core/Src/stm32f4xx_it.c **** 
 316:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 317:Core/Src/stm32f4xx_it.c **** }
 432              		.loc 1 317 1 is_stmt 0 view .LVU52
 433 0008 08BD     		pop	{r3, pc}
 434              	.L39:
 435 000a 00BF     		.align	2
 436              	.L38:
 437 000c 00000000 		.word	hdma_usart6_rx
 438              		.cfi_endproc
 439              	.LFE146:
 441              		.section	.text.CAN2_RX0_IRQHandler,"ax",%progbits
 442              		.align	1
 443              		.global	CAN2_RX0_IRQHandler
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	CAN2_RX0_IRQHandler:
 449              	.LFB147:
 318:Core/Src/stm32f4xx_it.c **** 
 319:Core/Src/stm32f4xx_it.c **** /**
 320:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX0 interrupts.
 321:Core/Src/stm32f4xx_it.c ****   */
 322:Core/Src/stm32f4xx_it.c **** void CAN2_RX0_IRQHandler(void)
ARM GAS  /tmp/ccNGqKDM.s 			page 14


 323:Core/Src/stm32f4xx_it.c **** {
 450              		.loc 1 323 1 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454 0000 08B5     		push	{r3, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 3, -8
 457              		.cfi_offset 14, -4
 324:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 0 */
 325:Core/Src/stm32f4xx_it.c **** 
 326:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 0 */
 327:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 458              		.loc 1 327 3 view .LVU54
 459 0002 0248     		ldr	r0, .L42
 460 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 461              	.LVL9:
 328:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 1 */
 329:Core/Src/stm32f4xx_it.c **** 
 330:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 1 */
 331:Core/Src/stm32f4xx_it.c **** }
 462              		.loc 1 331 1 is_stmt 0 view .LVU55
 463 0008 08BD     		pop	{r3, pc}
 464              	.L43:
 465 000a 00BF     		.align	2
 466              	.L42:
 467 000c 00000000 		.word	hcan2
 468              		.cfi_endproc
 469              	.LFE147:
 471              		.section	.text.CAN2_RX1_IRQHandler,"ax",%progbits
 472              		.align	1
 473              		.global	CAN2_RX1_IRQHandler
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	CAN2_RX1_IRQHandler:
 479              	.LFB148:
 332:Core/Src/stm32f4xx_it.c **** 
 333:Core/Src/stm32f4xx_it.c **** /**
 334:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX1 interrupt.
 335:Core/Src/stm32f4xx_it.c ****   */
 336:Core/Src/stm32f4xx_it.c **** void CAN2_RX1_IRQHandler(void)
 337:Core/Src/stm32f4xx_it.c **** {
 480              		.loc 1 337 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484 0000 08B5     		push	{r3, lr}
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 3, -8
 487              		.cfi_offset 14, -4
 338:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX1_IRQn 0 */
 339:Core/Src/stm32f4xx_it.c **** 
 340:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX1_IRQn 0 */
 341:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 488              		.loc 1 341 3 view .LVU57
 489 0002 0248     		ldr	r0, .L46
ARM GAS  /tmp/ccNGqKDM.s 			page 15


 490 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 491              	.LVL10:
 342:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX1_IRQn 1 */
 343:Core/Src/stm32f4xx_it.c **** 
 344:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX1_IRQn 1 */
 345:Core/Src/stm32f4xx_it.c **** }
 492              		.loc 1 345 1 is_stmt 0 view .LVU58
 493 0008 08BD     		pop	{r3, pc}
 494              	.L47:
 495 000a 00BF     		.align	2
 496              	.L46:
 497 000c 00000000 		.word	hcan2
 498              		.cfi_endproc
 499              	.LFE148:
 501              		.section	.text.DMA2_Stream5_IRQHandler,"ax",%progbits
 502              		.align	1
 503              		.global	DMA2_Stream5_IRQHandler
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 508              	DMA2_Stream5_IRQHandler:
 509              	.LFB149:
 346:Core/Src/stm32f4xx_it.c **** 
 347:Core/Src/stm32f4xx_it.c **** /**
 348:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream5 global interrupt.
 349:Core/Src/stm32f4xx_it.c ****   */
 350:Core/Src/stm32f4xx_it.c **** void DMA2_Stream5_IRQHandler(void)
 351:Core/Src/stm32f4xx_it.c **** {
 510              		.loc 1 351 1 is_stmt 1 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514 0000 08B5     		push	{r3, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 3, -8
 517              		.cfi_offset 14, -4
 352:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */
 353:Core/Src/stm32f4xx_it.c **** 
 354:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 0 */
 355:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 518              		.loc 1 355 3 view .LVU60
 519 0002 0248     		ldr	r0, .L50
 520 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 521              	.LVL11:
 356:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */
 357:Core/Src/stm32f4xx_it.c **** 
 358:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 1 */
 359:Core/Src/stm32f4xx_it.c **** }
 522              		.loc 1 359 1 is_stmt 0 view .LVU61
 523 0008 08BD     		pop	{r3, pc}
 524              	.L51:
 525 000a 00BF     		.align	2
 526              	.L50:
 527 000c 00000000 		.word	hdma_usart1_rx
 528              		.cfi_endproc
 529              	.LFE149:
 531              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccNGqKDM.s 			page 16


 532              		.align	1
 533              		.global	DMA2_Stream6_IRQHandler
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	DMA2_Stream6_IRQHandler:
 539              	.LFB150:
 360:Core/Src/stm32f4xx_it.c **** 
 361:Core/Src/stm32f4xx_it.c **** /**
 362:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream6 global interrupt.
 363:Core/Src/stm32f4xx_it.c ****   */
 364:Core/Src/stm32f4xx_it.c **** void DMA2_Stream6_IRQHandler(void)
 365:Core/Src/stm32f4xx_it.c **** {
 540              		.loc 1 365 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 08B5     		push	{r3, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 3, -8
 547              		.cfi_offset 14, -4
 366:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
 367:Core/Src/stm32f4xx_it.c **** 
 368:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 0 */
 369:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_tx);
 548              		.loc 1 369 3 view .LVU63
 549 0002 0248     		ldr	r0, .L54
 550 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 551              	.LVL12:
 370:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
 371:Core/Src/stm32f4xx_it.c **** 
 372:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 1 */
 373:Core/Src/stm32f4xx_it.c **** }
 552              		.loc 1 373 1 is_stmt 0 view .LVU64
 553 0008 08BD     		pop	{r3, pc}
 554              	.L55:
 555 000a 00BF     		.align	2
 556              	.L54:
 557 000c 00000000 		.word	hdma_usart6_tx
 558              		.cfi_endproc
 559              	.LFE150:
 561              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 562              		.align	1
 563              		.global	DMA2_Stream7_IRQHandler
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 568              	DMA2_Stream7_IRQHandler:
 569              	.LFB151:
 374:Core/Src/stm32f4xx_it.c **** 
 375:Core/Src/stm32f4xx_it.c **** /**
 376:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 377:Core/Src/stm32f4xx_it.c ****   */
 378:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 379:Core/Src/stm32f4xx_it.c **** {
 570              		.loc 1 379 1 is_stmt 1 view -0
 571              		.cfi_startproc
ARM GAS  /tmp/ccNGqKDM.s 			page 17


 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574 0000 08B5     		push	{r3, lr}
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 3, -8
 577              		.cfi_offset 14, -4
 380:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 381:Core/Src/stm32f4xx_it.c **** 
 382:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 383:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 578              		.loc 1 383 3 view .LVU66
 579 0002 0248     		ldr	r0, .L58
 580 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 581              	.LVL13:
 384:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 385:Core/Src/stm32f4xx_it.c **** 
 386:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 387:Core/Src/stm32f4xx_it.c **** }
 582              		.loc 1 387 1 is_stmt 0 view .LVU67
 583 0008 08BD     		pop	{r3, pc}
 584              	.L59:
 585 000a 00BF     		.align	2
 586              	.L58:
 587 000c 00000000 		.word	hdma_usart1_tx
 588              		.cfi_endproc
 589              	.LFE151:
 591              		.text
 592              	.Letext0:
 593              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 594              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 595              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 596              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 597              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 598              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 599              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 600              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 601              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 602              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccNGqKDM.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccNGqKDM.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccNGqKDM.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccNGqKDM.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccNGqKDM.s:90     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:96     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccNGqKDM.s:113    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccNGqKDM.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:142    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccNGqKDM.s:155    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:161    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccNGqKDM.s:174    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:180    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccNGqKDM.s:193    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccNGqKDM.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccNGqKDM.s:218    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:224    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccNGqKDM.s:244    .text.EXTI3_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:250    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
     /tmp/ccNGqKDM.s:270    .text.EXTI4_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:276    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
     /tmp/ccNGqKDM.s:296    .text.CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:302    .text.CAN1_RX0_IRQHandler:0000000000000000 CAN1_RX0_IRQHandler
     /tmp/ccNGqKDM.s:321    .text.CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:326    .text.CAN1_RX1_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:332    .text.CAN1_RX1_IRQHandler:0000000000000000 CAN1_RX1_IRQHandler
     /tmp/ccNGqKDM.s:351    .text.CAN1_RX1_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:356    .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:362    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
     /tmp/ccNGqKDM.s:382    .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:388    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/ccNGqKDM.s:407    .text.TIM4_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:412    .text.DMA2_Stream1_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:418    .text.DMA2_Stream1_IRQHandler:0000000000000000 DMA2_Stream1_IRQHandler
     /tmp/ccNGqKDM.s:437    .text.DMA2_Stream1_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:442    .text.CAN2_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:448    .text.CAN2_RX0_IRQHandler:0000000000000000 CAN2_RX0_IRQHandler
     /tmp/ccNGqKDM.s:467    .text.CAN2_RX0_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:472    .text.CAN2_RX1_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:478    .text.CAN2_RX1_IRQHandler:0000000000000000 CAN2_RX1_IRQHandler
     /tmp/ccNGqKDM.s:497    .text.CAN2_RX1_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:502    .text.DMA2_Stream5_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:508    .text.DMA2_Stream5_IRQHandler:0000000000000000 DMA2_Stream5_IRQHandler
     /tmp/ccNGqKDM.s:527    .text.DMA2_Stream5_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:532    .text.DMA2_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:538    .text.DMA2_Stream6_IRQHandler:0000000000000000 DMA2_Stream6_IRQHandler
     /tmp/ccNGqKDM.s:557    .text.DMA2_Stream6_IRQHandler:000000000000000c $d
     /tmp/ccNGqKDM.s:562    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccNGqKDM.s:568    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccNGqKDM.s:587    .text.DMA2_Stream7_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccNGqKDM.s 			page 19


HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_CAN_IRQHandler
hcan1
HAL_TIM_IRQHandler
htim4
HAL_DMA_IRQHandler
hdma_usart6_rx
hcan2
hdma_usart1_rx
hdma_usart6_tx
hdma_usart1_tx
