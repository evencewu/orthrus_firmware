ARM GAS  /tmp/cchHRLll.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB135:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** #define F_LEG 0
  19:Core/Src/main.c **** #define B_LEG 1
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* USER CODE END Header */
  22:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  23:Core/Src/main.c **** #include "main.h"
  24:Core/Src/main.c **** #include "can.h"
  25:Core/Src/main.c **** #include "dma.h"
  26:Core/Src/main.c **** #include "tim.h"
  27:Core/Src/main.c **** #include "usart.h"
  28:Core/Src/main.c **** #include "gpio.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /tmp/cchHRLll.s 			page 2


  31:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** #include "unitreeA1_cmd.h"
  34:Core/Src/main.c **** #include <string.h>
  35:Core/Src/main.c **** #include <stdio.h>
  36:Core/Src/main.c **** #include "bsp_can.h"
  37:Core/Src/main.c **** #include "struct_typedef.h"
  38:Core/Src/main.c **** #include "RC.h"
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END Includes */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PTD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****  * @brief  The application entry point.
  76:Core/Src/main.c ****  * @retval int
  77:Core/Src/main.c ****  */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/cchHRLll.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   MX_DMA_Init();
 103:Core/Src/main.c ****   MX_CAN1_Init();
 104:Core/Src/main.c ****   MX_CAN2_Init();
 105:Core/Src/main.c ****   MX_USART1_UART_Init();
 106:Core/Src/main.c ****   MX_USART6_UART_Init();
 107:Core/Src/main.c ****   MX_TIM10_Init();
 108:Core/Src/main.c ****   MX_TIM4_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   remote_control_init();
 112:Core/Src/main.c ****   CAN_InitArgument();
 113:Core/Src/main.c ****   MX_TIM4_Init();
 114:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   int i = 0;
 122:Core/Src/main.c ****   while (1)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     uint8_t byte[8];
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     if (i == 0)
 127:Core/Src/main.c ****     {
 128:Core/Src/main.c ****       Float_to_Byte(data_motor[0][0].T, data_motor[0][0].Pos, byte); // ËΩ¨Êç¢Êï∞ÊçÆ
 129:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x40, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 130:Core/Src/main.c ****       Float_to_Byte(data_motor[0][0].W, data_motor[0][0].Acc, byte);
 131:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x41, byte);
 132:Core/Src/main.c ****     }
 133:Core/Src/main.c ****     else if (i == 1)
 134:Core/Src/main.c ****     {
 135:Core/Src/main.c ****       Float_to_Byte(data_motor[0][1].T, data_motor[0][1].Pos, byte); // ËΩ¨Êç¢Êï∞ÊçÆ
 136:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x42, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 137:Core/Src/main.c ****       Float_to_Byte(data_motor[0][1].W, data_motor[0][1].Acc, byte);
 138:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x43, byte);
 139:Core/Src/main.c ****     }
 140:Core/Src/main.c ****     else if (i == 2)
 141:Core/Src/main.c ****     {
 142:Core/Src/main.c ****       Float_to_Byte(data_motor[0][2].T, data_motor[0][2].Pos, byte); // ËΩ¨Êç¢Êï∞ÊçÆ
 143:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x44, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 144:Core/Src/main.c ****       Float_to_Byte(data_motor[0][2].W, data_motor[0][2].Acc, byte);
ARM GAS  /tmp/cchHRLll.s 			page 4


 145:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x45, byte);
 146:Core/Src/main.c ****     }
 147:Core/Src/main.c ****     else if (i == 3)
 148:Core/Src/main.c ****     {
 149:Core/Src/main.c ****       Float_to_Byte(data_motor[1][0].T, data_motor[1][0].Pos, byte); // ËΩ¨Êç¢Êï∞ÊçÆ
 150:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x46, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 151:Core/Src/main.c ****       Float_to_Byte(data_motor[1][0].W, data_motor[1][0].Acc, byte);
 152:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x47, byte);
 153:Core/Src/main.c ****     }
 154:Core/Src/main.c ****     else if (i == 4)
 155:Core/Src/main.c ****     {
 156:Core/Src/main.c ****       Float_to_Byte(data_motor[1][1].T, data_motor[1][1].Pos, byte); // ËΩ¨Êç¢Êï∞ÊçÆ
 157:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x48, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 158:Core/Src/main.c ****       Float_to_Byte(data_motor[1][1].W, data_motor[1][1].Acc, byte);
 159:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x49, byte);
 160:Core/Src/main.c ****     }
 161:Core/Src/main.c ****     else if (i == 5)
 162:Core/Src/main.c ****     {
 163:Core/Src/main.c ****       Float_to_Byte(data_motor[1][2].T, data_motor[1][2].Pos, byte); // ËΩ¨Êç¢Êï∞ÊçÆ
 164:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x4A, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 165:Core/Src/main.c ****       Float_to_Byte(data_motor[1][2].W, data_motor[1][2].Acc, byte);
 166:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x4B, byte);
 167:Core/Src/main.c ****     }
 168:Core/Src/main.c ****     else
 169:Core/Src/main.c ****     {
 170:Core/Src/main.c ****       i = -1;
 171:Core/Src/main.c ****     }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     i++;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****     /* USER CODE END WHILE */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c ****   /* USER CODE END 3 */
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****  * @brief System Clock Configuration
 184:Core/Src/main.c ****  * @retval None
 185:Core/Src/main.c ****  */
 186:Core/Src/main.c **** void SystemClock_Config(void)
 187:Core/Src/main.c **** {
 188:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 192:Core/Src/main.c ****    */
 193:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 194:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 197:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 198:Core/Src/main.c ****    */
 199:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/cchHRLll.s 			page 5


 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 207:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 213:Core/Src/main.c ****    */
 214:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 215:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* USER CODE END 4 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /**
 231:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 232:Core/Src/main.c ****  * @retval None
 233:Core/Src/main.c ****  */
 234:Core/Src/main.c **** void Error_Handler(void)
 235:Core/Src/main.c **** {
  29              		.loc 1 235 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 236:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 237:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 238:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 238 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /tmp/cchHRLll.s 			page 6


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /tmp/cchHRLll.s 			page 7


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cchHRLll.s 			page 8


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 239:Core/Src/main.c ****   while (1)
  51              		.loc 1 239 3 discriminator 1 view .LVU4
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****   }
  52              		.loc 1 241 3 discriminator 1 view .LVU5
 239:Core/Src/main.c ****   while (1)
  53              		.loc 1 239 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE135:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB134:
 187:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 187 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 95B0     		sub	sp, sp, #84
ARM GAS  /tmp/cchHRLll.s 			page 9


  75              		.cfi_def_cfa_offset 88
 188:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 188 3 view .LVU8
 188:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 188 22 is_stmt 0 view .LVU9
  78 0004 3022     		movs	r2, #48
  79 0006 0021     		movs	r1, #0
  80 0008 08A8     		add	r0, sp, #32
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 189:Core/Src/main.c **** 
  83              		.loc 1 189 3 is_stmt 1 view .LVU10
 189:Core/Src/main.c **** 
  84              		.loc 1 189 22 is_stmt 0 view .LVU11
  85 000e 0023     		movs	r3, #0
  86 0010 0393     		str	r3, [sp, #12]
  87 0012 0493     		str	r3, [sp, #16]
  88 0014 0593     		str	r3, [sp, #20]
  89 0016 0693     		str	r3, [sp, #24]
  90 0018 0793     		str	r3, [sp, #28]
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  91              		.loc 1 193 3 is_stmt 1 view .LVU12
  92              	.LBB6:
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  93              		.loc 1 193 3 view .LVU13
  94 001a 0193     		str	r3, [sp, #4]
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  95              		.loc 1 193 3 view .LVU14
  96 001c 204A     		ldr	r2, .L9
  97 001e 116C     		ldr	r1, [r2, #64]
  98 0020 41F08051 		orr	r1, r1, #268435456
  99 0024 1164     		str	r1, [r2, #64]
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 100              		.loc 1 193 3 view .LVU15
 101 0026 126C     		ldr	r2, [r2, #64]
 102 0028 02F08052 		and	r2, r2, #268435456
 103 002c 0192     		str	r2, [sp, #4]
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 104              		.loc 1 193 3 view .LVU16
 105 002e 019A     		ldr	r2, [sp, #4]
 106              	.LBE6:
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 107              		.loc 1 193 3 view .LVU17
 194:Core/Src/main.c **** 
 108              		.loc 1 194 3 view .LVU18
 109              	.LBB7:
 194:Core/Src/main.c **** 
 110              		.loc 1 194 3 view .LVU19
 111 0030 0293     		str	r3, [sp, #8]
 194:Core/Src/main.c **** 
 112              		.loc 1 194 3 view .LVU20
 113 0032 1C4B     		ldr	r3, .L9+4
 114 0034 1A68     		ldr	r2, [r3]
 115 0036 42F48042 		orr	r2, r2, #16384
 116 003a 1A60     		str	r2, [r3]
 194:Core/Src/main.c **** 
 117              		.loc 1 194 3 view .LVU21
ARM GAS  /tmp/cchHRLll.s 			page 10


 118 003c 1B68     		ldr	r3, [r3]
 119 003e 03F48043 		and	r3, r3, #16384
 120 0042 0293     		str	r3, [sp, #8]
 194:Core/Src/main.c **** 
 121              		.loc 1 194 3 view .LVU22
 122 0044 029B     		ldr	r3, [sp, #8]
 123              	.LBE7:
 194:Core/Src/main.c **** 
 124              		.loc 1 194 3 view .LVU23
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 125              		.loc 1 199 3 view .LVU24
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 126              		.loc 1 199 36 is_stmt 0 view .LVU25
 127 0046 0123     		movs	r3, #1
 128 0048 0893     		str	r3, [sp, #32]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 129              		.loc 1 200 3 is_stmt 1 view .LVU26
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130              		.loc 1 200 30 is_stmt 0 view .LVU27
 131 004a 4FF48033 		mov	r3, #65536
 132 004e 0993     		str	r3, [sp, #36]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 133              		.loc 1 201 3 is_stmt 1 view .LVU28
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 134              		.loc 1 201 34 is_stmt 0 view .LVU29
 135 0050 0223     		movs	r3, #2
 136 0052 0E93     		str	r3, [sp, #56]
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 137              		.loc 1 202 3 is_stmt 1 view .LVU30
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 138              		.loc 1 202 35 is_stmt 0 view .LVU31
 139 0054 4FF48002 		mov	r2, #4194304
 140 0058 0F92     		str	r2, [sp, #60]
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 141              		.loc 1 203 3 is_stmt 1 view .LVU32
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 142              		.loc 1 203 30 is_stmt 0 view .LVU33
 143 005a 0622     		movs	r2, #6
 144 005c 1092     		str	r2, [sp, #64]
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 145              		.loc 1 204 3 is_stmt 1 view .LVU34
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 146              		.loc 1 204 30 is_stmt 0 view .LVU35
 147 005e A822     		movs	r2, #168
 148 0060 1192     		str	r2, [sp, #68]
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 149              		.loc 1 205 3 is_stmt 1 view .LVU36
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 150              		.loc 1 205 30 is_stmt 0 view .LVU37
 151 0062 1293     		str	r3, [sp, #72]
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152              		.loc 1 206 3 is_stmt 1 view .LVU38
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 153              		.loc 1 206 30 is_stmt 0 view .LVU39
 154 0064 0423     		movs	r3, #4
 155 0066 1393     		str	r3, [sp, #76]
 207:Core/Src/main.c ****   {
ARM GAS  /tmp/cchHRLll.s 			page 11


 156              		.loc 1 207 3 is_stmt 1 view .LVU40
 207:Core/Src/main.c ****   {
 157              		.loc 1 207 7 is_stmt 0 view .LVU41
 158 0068 08A8     		add	r0, sp, #32
 159 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 160              	.LVL1:
 207:Core/Src/main.c ****   {
 161              		.loc 1 207 6 view .LVU42
 162 006e 98B9     		cbnz	r0, .L7
 214:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 163              		.loc 1 214 3 is_stmt 1 view .LVU43
 214:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164              		.loc 1 214 31 is_stmt 0 view .LVU44
 165 0070 0F23     		movs	r3, #15
 166 0072 0393     		str	r3, [sp, #12]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167              		.loc 1 215 3 is_stmt 1 view .LVU45
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168              		.loc 1 215 34 is_stmt 0 view .LVU46
 169 0074 0223     		movs	r3, #2
 170 0076 0493     		str	r3, [sp, #16]
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 171              		.loc 1 216 3 is_stmt 1 view .LVU47
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 172              		.loc 1 216 35 is_stmt 0 view .LVU48
 173 0078 0023     		movs	r3, #0
 174 007a 0593     		str	r3, [sp, #20]
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 175              		.loc 1 217 3 is_stmt 1 view .LVU49
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 176              		.loc 1 217 36 is_stmt 0 view .LVU50
 177 007c 4FF4A053 		mov	r3, #5120
 178 0080 0693     		str	r3, [sp, #24]
 218:Core/Src/main.c **** 
 179              		.loc 1 218 3 is_stmt 1 view .LVU51
 218:Core/Src/main.c **** 
 180              		.loc 1 218 36 is_stmt 0 view .LVU52
 181 0082 4FF48053 		mov	r3, #4096
 182 0086 0793     		str	r3, [sp, #28]
 220:Core/Src/main.c ****   {
 183              		.loc 1 220 3 is_stmt 1 view .LVU53
 220:Core/Src/main.c ****   {
 184              		.loc 1 220 7 is_stmt 0 view .LVU54
 185 0088 0521     		movs	r1, #5
 186 008a 03A8     		add	r0, sp, #12
 187 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 188              	.LVL2:
 220:Core/Src/main.c ****   {
 189              		.loc 1 220 6 view .LVU55
 190 0090 20B9     		cbnz	r0, .L8
 224:Core/Src/main.c **** 
 191              		.loc 1 224 1 view .LVU56
 192 0092 15B0     		add	sp, sp, #84
 193              		.cfi_remember_state
 194              		.cfi_def_cfa_offset 4
 195              		@ sp needed
 196 0094 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/cchHRLll.s 			page 12


 197              	.L7:
 198              		.cfi_restore_state
 209:Core/Src/main.c ****   }
 199              		.loc 1 209 5 is_stmt 1 view .LVU57
 200 0098 FFF7FEFF 		bl	Error_Handler
 201              	.LVL3:
 202              	.L8:
 222:Core/Src/main.c ****   }
 203              		.loc 1 222 5 view .LVU58
 204 009c FFF7FEFF 		bl	Error_Handler
 205              	.LVL4:
 206              	.L10:
 207              		.align	2
 208              	.L9:
 209 00a0 00380240 		.word	1073887232
 210 00a4 00700040 		.word	1073770496
 211              		.cfi_endproc
 212              	.LFE134:
 214              		.section	.text.main,"ax",%progbits
 215              		.align	1
 216              		.global	main
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	main:
 222              	.LFB133:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 223              		.loc 1 79 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227 0000 70B5     		push	{r4, r5, r6, lr}
 228              		.cfi_def_cfa_offset 16
 229              		.cfi_offset 4, -16
 230              		.cfi_offset 5, -12
 231              		.cfi_offset 6, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              		.cfi_def_cfa_offset 24
  87:Core/Src/main.c **** 
 235              		.loc 1 87 3 view .LVU60
 236 0004 FFF7FEFF 		bl	HAL_Init
 237              	.LVL5:
  94:Core/Src/main.c **** 
 238              		.loc 1 94 3 view .LVU61
 239 0008 FFF7FEFF 		bl	SystemClock_Config
 240              	.LVL6:
 101:Core/Src/main.c ****   MX_DMA_Init();
 241              		.loc 1 101 3 view .LVU62
 242 000c FFF7FEFF 		bl	MX_GPIO_Init
 243              	.LVL7:
 102:Core/Src/main.c ****   MX_CAN1_Init();
 244              		.loc 1 102 3 view .LVU63
 245 0010 FFF7FEFF 		bl	MX_DMA_Init
 246              	.LVL8:
 103:Core/Src/main.c ****   MX_CAN2_Init();
 247              		.loc 1 103 3 view .LVU64
ARM GAS  /tmp/cchHRLll.s 			page 13


 248 0014 FFF7FEFF 		bl	MX_CAN1_Init
 249              	.LVL9:
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 250              		.loc 1 104 3 view .LVU65
 251 0018 FFF7FEFF 		bl	MX_CAN2_Init
 252              	.LVL10:
 105:Core/Src/main.c ****   MX_USART6_UART_Init();
 253              		.loc 1 105 3 view .LVU66
 254 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 255              	.LVL11:
 106:Core/Src/main.c ****   MX_TIM10_Init();
 256              		.loc 1 106 3 view .LVU67
 257 0020 FFF7FEFF 		bl	MX_USART6_UART_Init
 258              	.LVL12:
 107:Core/Src/main.c ****   MX_TIM4_Init();
 259              		.loc 1 107 3 view .LVU68
 260 0024 FFF7FEFF 		bl	MX_TIM10_Init
 261              	.LVL13:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 262              		.loc 1 108 3 view .LVU69
 263 0028 FFF7FEFF 		bl	MX_TIM4_Init
 264              	.LVL14:
 111:Core/Src/main.c ****   CAN_InitArgument();
 265              		.loc 1 111 3 view .LVU70
 266 002c FFF7FEFF 		bl	remote_control_init
 267              	.LVL15:
 112:Core/Src/main.c ****   MX_TIM4_Init();
 268              		.loc 1 112 3 view .LVU71
 269 0030 FFF7FEFF 		bl	CAN_InitArgument
 270              	.LVL16:
 113:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 271              		.loc 1 113 3 view .LVU72
 272 0034 FFF7FEFF 		bl	MX_TIM4_Init
 273              	.LVL17:
 114:Core/Src/main.c **** 
 274              		.loc 1 114 3 view .LVU73
 275 0038 7748     		ldr	r0, .L27
 276 003a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 277              	.LVL18:
 121:Core/Src/main.c ****   while (1)
 278              		.loc 1 121 3 view .LVU74
 121:Core/Src/main.c ****   while (1)
 279              		.loc 1 121 7 is_stmt 0 view .LVU75
 280 003e 0024     		movs	r4, #0
 281 0040 20E0     		b	.L18
 282              	.LVL19:
 283              	.L21:
 284              	.LBB8:
 128:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x40, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 285              		.loc 1 128 7 is_stmt 1 view .LVU76
 286 0042 764D     		ldr	r5, .L27+4
 287 0044 6B6E     		ldr	r3, [r5, #100]	@ unaligned
 288 0046 00EE903A 		vmov	s1, r3	@ int
 289 004a EB6D     		ldr	r3, [r5, #92]	@ unaligned
 290 004c 00EE103A 		vmov	s0, r3	@ int
 291 0050 6846     		mov	r0, sp
 292 0052 FFF7FEFF 		bl	Float_to_Byte
ARM GAS  /tmp/cchHRLll.s 			page 14


 293              	.LVL20:
 129:Core/Src/main.c ****       Float_to_Byte(data_motor[0][0].W, data_motor[0][0].Acc, byte);
 294              		.loc 1 129 7 view .LVU77
 295 0056 724E     		ldr	r6, .L27+8
 296 0058 6A46     		mov	r2, sp
 297 005a 4021     		movs	r1, #64
 298 005c 3046     		mov	r0, r6
 299 005e FFF7FEFF 		bl	CAN_send_data
 300              	.LVL21:
 130:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x41, byte);
 301              		.loc 1 130 7 view .LVU78
 130:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x41, byte);
 302              		.loc 1 130 57 is_stmt 0 view .LVU79
 303 0062 EB6E     		ldr	r3, [r5, #108]	@ unaligned
 304 0064 00EE903A 		vmov	s1, r3	@ int
 130:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x41, byte);
 305              		.loc 1 130 7 view .LVU80
 306 0068 2B6E     		ldr	r3, [r5, #96]	@ unaligned
 307 006a 00EE103A 		vmov	s0, r3	@ int
 308 006e 6846     		mov	r0, sp
 309 0070 F8EEE00A 		vcvt.f32.s32	s1, s1
 310 0074 FFF7FEFF 		bl	Float_to_Byte
 311              	.LVL22:
 131:Core/Src/main.c ****     }
 312              		.loc 1 131 7 is_stmt 1 view .LVU81
 313 0078 6A46     		mov	r2, sp
 314 007a 4121     		movs	r1, #65
 315 007c 3046     		mov	r0, r6
 316 007e FFF7FEFF 		bl	CAN_send_data
 317              	.LVL23:
 318              	.L13:
 173:Core/Src/main.c **** 
 319              		.loc 1 173 5 view .LVU82
 173:Core/Src/main.c **** 
 320              		.loc 1 173 6 is_stmt 0 view .LVU83
 321 0082 0134     		adds	r4, r4, #1
 322              	.LVL24:
 173:Core/Src/main.c **** 
 323              		.loc 1 173 6 view .LVU84
 324              	.LBE8:
 122:Core/Src/main.c ****   {
 325              		.loc 1 122 9 is_stmt 1 view .LVU85
 326              	.L18:
 122:Core/Src/main.c ****   {
 327              		.loc 1 122 3 view .LVU86
 328              	.LBB9:
 124:Core/Src/main.c **** 
 329              		.loc 1 124 5 view .LVU87
 126:Core/Src/main.c ****     {
 330              		.loc 1 126 5 view .LVU88
 126:Core/Src/main.c ****     {
 331              		.loc 1 126 8 is_stmt 0 view .LVU89
 332 0084 002C     		cmp	r4, #0
 333 0086 DCD0     		beq	.L21
 133:Core/Src/main.c ****     {
 334              		.loc 1 133 10 is_stmt 1 view .LVU90
 133:Core/Src/main.c ****     {
ARM GAS  /tmp/cchHRLll.s 			page 15


 335              		.loc 1 133 13 is_stmt 0 view .LVU91
 336 0088 012C     		cmp	r4, #1
 337 008a 0BD0     		beq	.L22
 140:Core/Src/main.c ****     {
 338              		.loc 1 140 10 is_stmt 1 view .LVU92
 140:Core/Src/main.c ****     {
 339              		.loc 1 140 13 is_stmt 0 view .LVU93
 340 008c 022C     		cmp	r4, #2
 341 008e 2ED0     		beq	.L23
 147:Core/Src/main.c ****     {
 342              		.loc 1 147 10 is_stmt 1 view .LVU94
 147:Core/Src/main.c ****     {
 343              		.loc 1 147 13 is_stmt 0 view .LVU95
 344 0090 032C     		cmp	r4, #3
 345 0092 51D0     		beq	.L24
 154:Core/Src/main.c ****     {
 346              		.loc 1 154 10 is_stmt 1 view .LVU96
 154:Core/Src/main.c ****     {
 347              		.loc 1 154 13 is_stmt 0 view .LVU97
 348 0094 042C     		cmp	r4, #4
 349 0096 74D0     		beq	.L25
 161:Core/Src/main.c ****     {
 350              		.loc 1 161 10 is_stmt 1 view .LVU98
 161:Core/Src/main.c ****     {
 351              		.loc 1 161 13 is_stmt 0 view .LVU99
 352 0098 052C     		cmp	r4, #5
 353 009a 00F09780 		beq	.L26
 170:Core/Src/main.c ****     }
 354              		.loc 1 170 9 view .LVU100
 355 009e 4FF0FF34 		mov	r4, #-1
 356              	.LVL25:
 170:Core/Src/main.c ****     }
 357              		.loc 1 170 9 view .LVU101
 358 00a2 EEE7     		b	.L13
 359              	.LVL26:
 360              	.L22:
 135:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x42, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 361              		.loc 1 135 7 is_stmt 1 view .LVU102
 362 00a4 5D4D     		ldr	r5, .L27+4
 363 00a6 D5F8EC30 		ldr	r3, [r5, #236]	@ unaligned
 364 00aa 00EE903A 		vmov	s1, r3	@ int
 365 00ae D5F8E430 		ldr	r3, [r5, #228]	@ unaligned
 366 00b2 00EE103A 		vmov	s0, r3	@ int
 367 00b6 6846     		mov	r0, sp
 368 00b8 FFF7FEFF 		bl	Float_to_Byte
 369              	.LVL27:
 136:Core/Src/main.c ****       Float_to_Byte(data_motor[0][1].W, data_motor[0][1].Acc, byte);
 370              		.loc 1 136 7 view .LVU103
 371 00bc 584E     		ldr	r6, .L27+8
 372 00be 6A46     		mov	r2, sp
 373 00c0 4221     		movs	r1, #66
 374 00c2 3046     		mov	r0, r6
 375 00c4 FFF7FEFF 		bl	CAN_send_data
 376              	.LVL28:
 137:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x43, byte);
 377              		.loc 1 137 7 view .LVU104
 137:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x43, byte);
ARM GAS  /tmp/cchHRLll.s 			page 16


 378              		.loc 1 137 57 is_stmt 0 view .LVU105
 379 00c8 D5F8F430 		ldr	r3, [r5, #244]	@ unaligned
 380 00cc 00EE903A 		vmov	s1, r3	@ int
 137:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x43, byte);
 381              		.loc 1 137 7 view .LVU106
 382 00d0 D5F8E830 		ldr	r3, [r5, #232]	@ unaligned
 383 00d4 00EE103A 		vmov	s0, r3	@ int
 384 00d8 6846     		mov	r0, sp
 385 00da F8EEE00A 		vcvt.f32.s32	s1, s1
 386 00de FFF7FEFF 		bl	Float_to_Byte
 387              	.LVL29:
 138:Core/Src/main.c ****     }
 388              		.loc 1 138 7 is_stmt 1 view .LVU107
 389 00e2 6A46     		mov	r2, sp
 390 00e4 4321     		movs	r1, #67
 391 00e6 3046     		mov	r0, r6
 392 00e8 FFF7FEFF 		bl	CAN_send_data
 393              	.LVL30:
 394 00ec C9E7     		b	.L13
 395              	.L23:
 142:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x44, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 396              		.loc 1 142 7 view .LVU108
 397 00ee 4B4D     		ldr	r5, .L27+4
 398 00f0 D5F87431 		ldr	r3, [r5, #372]	@ unaligned
 399 00f4 00EE903A 		vmov	s1, r3	@ int
 400 00f8 D5F86C31 		ldr	r3, [r5, #364]	@ unaligned
 401 00fc 00EE103A 		vmov	s0, r3	@ int
 402 0100 6846     		mov	r0, sp
 403 0102 FFF7FEFF 		bl	Float_to_Byte
 404              	.LVL31:
 143:Core/Src/main.c ****       Float_to_Byte(data_motor[0][2].W, data_motor[0][2].Acc, byte);
 405              		.loc 1 143 7 view .LVU109
 406 0106 464E     		ldr	r6, .L27+8
 407 0108 6A46     		mov	r2, sp
 408 010a 4421     		movs	r1, #68
 409 010c 3046     		mov	r0, r6
 410 010e FFF7FEFF 		bl	CAN_send_data
 411              	.LVL32:
 144:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x45, byte);
 412              		.loc 1 144 7 view .LVU110
 144:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x45, byte);
 413              		.loc 1 144 57 is_stmt 0 view .LVU111
 414 0112 D5F87C31 		ldr	r3, [r5, #380]	@ unaligned
 415 0116 00EE903A 		vmov	s1, r3	@ int
 144:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x45, byte);
 416              		.loc 1 144 7 view .LVU112
 417 011a D5F87031 		ldr	r3, [r5, #368]	@ unaligned
 418 011e 00EE103A 		vmov	s0, r3	@ int
 419 0122 6846     		mov	r0, sp
 420 0124 F8EEE00A 		vcvt.f32.s32	s1, s1
 421 0128 FFF7FEFF 		bl	Float_to_Byte
 422              	.LVL33:
 145:Core/Src/main.c ****     }
 423              		.loc 1 145 7 is_stmt 1 view .LVU113
 424 012c 6A46     		mov	r2, sp
 425 012e 4521     		movs	r1, #69
 426 0130 3046     		mov	r0, r6
ARM GAS  /tmp/cchHRLll.s 			page 17


 427 0132 FFF7FEFF 		bl	CAN_send_data
 428              	.LVL34:
 429 0136 A4E7     		b	.L13
 430              	.L24:
 149:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x46, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 431              		.loc 1 149 7 view .LVU114
 432 0138 384D     		ldr	r5, .L27+4
 433 013a D5F8FC31 		ldr	r3, [r5, #508]	@ unaligned
 434 013e 00EE903A 		vmov	s1, r3	@ int
 435 0142 D5F8F431 		ldr	r3, [r5, #500]	@ unaligned
 436 0146 00EE103A 		vmov	s0, r3	@ int
 437 014a 6846     		mov	r0, sp
 438 014c FFF7FEFF 		bl	Float_to_Byte
 439              	.LVL35:
 150:Core/Src/main.c ****       Float_to_Byte(data_motor[1][0].W, data_motor[1][0].Acc, byte);
 440              		.loc 1 150 7 view .LVU115
 441 0150 334E     		ldr	r6, .L27+8
 442 0152 6A46     		mov	r2, sp
 443 0154 4621     		movs	r1, #70
 444 0156 3046     		mov	r0, r6
 445 0158 FFF7FEFF 		bl	CAN_send_data
 446              	.LVL36:
 151:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x47, byte);
 447              		.loc 1 151 7 view .LVU116
 151:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x47, byte);
 448              		.loc 1 151 57 is_stmt 0 view .LVU117
 449 015c D5F80432 		ldr	r3, [r5, #516]	@ unaligned
 450 0160 00EE903A 		vmov	s1, r3	@ int
 151:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x47, byte);
 451              		.loc 1 151 7 view .LVU118
 452 0164 D5F8F831 		ldr	r3, [r5, #504]	@ unaligned
 453 0168 00EE103A 		vmov	s0, r3	@ int
 454 016c 6846     		mov	r0, sp
 455 016e F8EEE00A 		vcvt.f32.s32	s1, s1
 456 0172 FFF7FEFF 		bl	Float_to_Byte
 457              	.LVL37:
 152:Core/Src/main.c ****     }
 458              		.loc 1 152 7 is_stmt 1 view .LVU119
 459 0176 6A46     		mov	r2, sp
 460 0178 4721     		movs	r1, #71
 461 017a 3046     		mov	r0, r6
 462 017c FFF7FEFF 		bl	CAN_send_data
 463              	.LVL38:
 464 0180 7FE7     		b	.L13
 465              	.L25:
 156:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x48, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 466              		.loc 1 156 7 view .LVU120
 467 0182 264D     		ldr	r5, .L27+4
 468 0184 D5F88432 		ldr	r3, [r5, #644]	@ unaligned
 469 0188 00EE903A 		vmov	s1, r3	@ int
 470 018c D5F87C32 		ldr	r3, [r5, #636]	@ unaligned
 471 0190 00EE103A 		vmov	s0, r3	@ int
 472 0194 6846     		mov	r0, sp
 473 0196 FFF7FEFF 		bl	Float_to_Byte
 474              	.LVL39:
 157:Core/Src/main.c ****       Float_to_Byte(data_motor[1][1].W, data_motor[1][1].Acc, byte);
 475              		.loc 1 157 7 view .LVU121
ARM GAS  /tmp/cchHRLll.s 			page 18


 476 019a 214E     		ldr	r6, .L27+8
 477 019c 6A46     		mov	r2, sp
 478 019e 4821     		movs	r1, #72
 479 01a0 3046     		mov	r0, r6
 480 01a2 FFF7FEFF 		bl	CAN_send_data
 481              	.LVL40:
 158:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x49, byte);
 482              		.loc 1 158 7 view .LVU122
 158:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x49, byte);
 483              		.loc 1 158 57 is_stmt 0 view .LVU123
 484 01a6 D5F88C32 		ldr	r3, [r5, #652]	@ unaligned
 485 01aa 00EE903A 		vmov	s1, r3	@ int
 158:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x49, byte);
 486              		.loc 1 158 7 view .LVU124
 487 01ae D5F88032 		ldr	r3, [r5, #640]	@ unaligned
 488 01b2 00EE103A 		vmov	s0, r3	@ int
 489 01b6 6846     		mov	r0, sp
 490 01b8 F8EEE00A 		vcvt.f32.s32	s1, s1
 491 01bc FFF7FEFF 		bl	Float_to_Byte
 492              	.LVL41:
 159:Core/Src/main.c ****     }
 493              		.loc 1 159 7 is_stmt 1 view .LVU125
 494 01c0 6A46     		mov	r2, sp
 495 01c2 4921     		movs	r1, #73
 496 01c4 3046     		mov	r0, r6
 497 01c6 FFF7FEFF 		bl	CAN_send_data
 498              	.LVL42:
 499 01ca 5AE7     		b	.L13
 500              	.L26:
 163:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x4A, byte);                             // ÂèëÈÄÅÊï∞ÊçÆÂåÖAÔºàÂÜÖÂê´tÔ
 501              		.loc 1 163 7 view .LVU126
 502 01cc 134D     		ldr	r5, .L27+4
 503 01ce D5F80C33 		ldr	r3, [r5, #780]	@ unaligned
 504 01d2 00EE903A 		vmov	s1, r3	@ int
 505 01d6 D5F80433 		ldr	r3, [r5, #772]	@ unaligned
 506 01da 00EE103A 		vmov	s0, r3	@ int
 507 01de 6846     		mov	r0, sp
 508 01e0 FFF7FEFF 		bl	Float_to_Byte
 509              	.LVL43:
 164:Core/Src/main.c ****       Float_to_Byte(data_motor[1][2].W, data_motor[1][2].Acc, byte);
 510              		.loc 1 164 7 view .LVU127
 511 01e4 0E4E     		ldr	r6, .L27+8
 512 01e6 6A46     		mov	r2, sp
 513 01e8 4A21     		movs	r1, #74
 514 01ea 3046     		mov	r0, r6
 515 01ec FFF7FEFF 		bl	CAN_send_data
 516              	.LVL44:
 165:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x4B, byte);
 517              		.loc 1 165 7 view .LVU128
 165:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x4B, byte);
 518              		.loc 1 165 57 is_stmt 0 view .LVU129
 519 01f0 D5F81433 		ldr	r3, [r5, #788]	@ unaligned
 520 01f4 00EE903A 		vmov	s1, r3	@ int
 165:Core/Src/main.c ****       CAN_send_data(&hcan1, 0x4B, byte);
 521              		.loc 1 165 7 view .LVU130
 522 01f8 D5F80833 		ldr	r3, [r5, #776]	@ unaligned
 523 01fc 00EE103A 		vmov	s0, r3	@ int
ARM GAS  /tmp/cchHRLll.s 			page 19


 524 0200 6846     		mov	r0, sp
 525 0202 F8EEE00A 		vcvt.f32.s32	s1, s1
 526 0206 FFF7FEFF 		bl	Float_to_Byte
 527              	.LVL45:
 166:Core/Src/main.c ****     }
 528              		.loc 1 166 7 is_stmt 1 view .LVU131
 529 020a 6A46     		mov	r2, sp
 530 020c 4B21     		movs	r1, #75
 531 020e 3046     		mov	r0, r6
 532 0210 FFF7FEFF 		bl	CAN_send_data
 533              	.LVL46:
 534 0214 35E7     		b	.L13
 535              	.L28:
 536 0216 00BF     		.align	2
 537              	.L27:
 538 0218 00000000 		.word	htim4
 539 021c 00000000 		.word	data_motor
 540 0220 00000000 		.word	hcan1
 541              	.LBE9:
 542              		.cfi_endproc
 543              	.LFE133:
 545              		.text
 546              	.Letext0:
 547              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 548              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 549              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 550              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 551              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 552              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 553              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 554              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 555              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 556              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 557              		.file 13 "Core/Inc/can.h"
 558              		.file 14 "Core/Inc/tim.h"
 559              		.file 15 "Lib/modules/unitreeMotor/include/motor_msg.h"
 560              		.file 16 "Lib/modules/unitreeMotor/include/unitreeA1_cmd.h"
 561              		.file 17 "Lib/bsp/include/bsp_can.h"
 562              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 563              		.file 19 "Core/Inc/gpio.h"
 564              		.file 20 "Core/Inc/dma.h"
 565              		.file 21 "Core/Inc/usart.h"
 566              		.file 22 "Lib/app/include/RC.h"
 567              		.file 23 "<built-in>"
ARM GAS  /tmp/cchHRLll.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cchHRLll.s:20     .text.Error_Handler:0000000000000000 $t
     /tmp/cchHRLll.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cchHRLll.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cchHRLll.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cchHRLll.s:209    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/cchHRLll.s:215    .text.main:0000000000000000 $t
     /tmp/cchHRLll.s:221    .text.main:0000000000000000 main
     /tmp/cchHRLll.s:538    .text.main:0000000000000218 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_CAN1_Init
MX_CAN2_Init
MX_USART1_UART_Init
MX_USART6_UART_Init
MX_TIM10_Init
MX_TIM4_Init
remote_control_init
CAN_InitArgument
HAL_TIM_Base_Start_IT
Float_to_Byte
CAN_send_data
htim4
data_motor
hcan1
