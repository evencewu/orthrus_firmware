ARM GAS  /tmp/ccekCAnU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"el9800hw.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.AddressingEsc,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	AddressingEsc:
  26              	.LVL0:
  27              	.LFB136:
  28              		.file 1 "Lib/ssc_app/src/el9800hw.c"
   1:Lib/ssc_app/src/el9800hw.c **** #include "ecat_def.h"
   2:Lib/ssc_app/src/el9800hw.c **** #if EL9800_HW
   3:Lib/ssc_app/src/el9800hw.c **** #include "ecatslv.h"
   4:Lib/ssc_app/src/el9800hw.c **** 
   5:Lib/ssc_app/src/el9800hw.c **** #define _EL9800HW_ 1
   6:Lib/ssc_app/src/el9800hw.c **** #include "el9800hw.h"
   7:Lib/ssc_app/src/el9800hw.c **** #undef _EL9800HW_
   8:Lib/ssc_app/src/el9800hw.c **** /* ECATCHANGE_START(V5.11) ECAT10*/
   9:Lib/ssc_app/src/el9800hw.c **** /*remove definition of _EL9800HW_ (#ifdef is used in el9800hw.h)*/
  10:Lib/ssc_app/src/el9800hw.c **** /* ECATCHANGE_END(V5.11) ECAT10*/
  11:Lib/ssc_app/src/el9800hw.c **** 
  12:Lib/ssc_app/src/el9800hw.c **** #include "ecatappl.h"
  13:Lib/ssc_app/src/el9800hw.c **** 
  14:Lib/ssc_app/src/el9800hw.c **** #include "ecat_spi.h"
  15:Lib/ssc_app/src/el9800hw.c **** #include "main.h"
  16:Lib/ssc_app/src/el9800hw.c **** #include "stm32f4xx_it.h"
  17:Lib/ssc_app/src/el9800hw.c **** 
  18:Lib/ssc_app/src/el9800hw.c **** extern TIM_HandleTypeDef htim2;
  19:Lib/ssc_app/src/el9800hw.c **** 
  20:Lib/ssc_app/src/el9800hw.c **** /*--------------------------------------------------------------------------------------
  21:Lib/ssc_app/src/el9800hw.c **** ------
  22:Lib/ssc_app/src/el9800hw.c **** ------    internal Types and Defines
  23:Lib/ssc_app/src/el9800hw.c **** ------
  24:Lib/ssc_app/src/el9800hw.c **** --------------------------------------------------------------------------------------*/
  25:Lib/ssc_app/src/el9800hw.c **** 
  26:Lib/ssc_app/src/el9800hw.c **** typedef union
  27:Lib/ssc_app/src/el9800hw.c **** {
  28:Lib/ssc_app/src/el9800hw.c ****     unsigned short Word;
  29:Lib/ssc_app/src/el9800hw.c ****     unsigned char Byte[2];
  30:Lib/ssc_app/src/el9800hw.c **** } UBYTETOWORD;
ARM GAS  /tmp/ccekCAnU.s 			page 2


  31:Lib/ssc_app/src/el9800hw.c **** 
  32:Lib/ssc_app/src/el9800hw.c **** typedef union
  33:Lib/ssc_app/src/el9800hw.c **** {
  34:Lib/ssc_app/src/el9800hw.c ****     UINT8 Byte[2];
  35:Lib/ssc_app/src/el9800hw.c ****     UINT16 Word;
  36:Lib/ssc_app/src/el9800hw.c **** } UALEVENT;
  37:Lib/ssc_app/src/el9800hw.c **** 
  38:Lib/ssc_app/src/el9800hw.c **** /*-----------------------------------------------------------------------------------------
  39:Lib/ssc_app/src/el9800hw.c **** ------
  40:Lib/ssc_app/src/el9800hw.c **** ------    SPI defines/macros
  41:Lib/ssc_app/src/el9800hw.c **** ------
  42:Lib/ssc_app/src/el9800hw.c **** -----------------------------------------------------------------------------------------*/
  43:Lib/ssc_app/src/el9800hw.c **** #define SPI_DEACTIVE 1
  44:Lib/ssc_app/src/el9800hw.c **** #define SPI_ACTIVE 0
  45:Lib/ssc_app/src/el9800hw.c **** 
  46:Lib/ssc_app/src/el9800hw.c **** #if INTERRUPTS_SUPPORTED
  47:Lib/ssc_app/src/el9800hw.c **** /*-----------------------------------------------------------------------------------------
  48:Lib/ssc_app/src/el9800hw.c **** ------
  49:Lib/ssc_app/src/el9800hw.c **** ------    Global Interrupt setting
  50:Lib/ssc_app/src/el9800hw.c **** ------
  51:Lib/ssc_app/src/el9800hw.c **** -----------------------------------------------------------------------------------------*/
  52:Lib/ssc_app/src/el9800hw.c **** 
  53:Lib/ssc_app/src/el9800hw.c **** #define DISABLE_GLOBAL_INT __disable_irq()
  54:Lib/ssc_app/src/el9800hw.c **** #define ENABLE_GLOBAL_INT __enable_irq()
  55:Lib/ssc_app/src/el9800hw.c **** #define DISABLE_AL_EVENT_INT DISABLE_GLOBAL_INT
  56:Lib/ssc_app/src/el9800hw.c **** #define ENABLE_AL_EVENT_INT ENABLE_GLOBAL_INT
  57:Lib/ssc_app/src/el9800hw.c **** 
  58:Lib/ssc_app/src/el9800hw.c **** /*-----------------------------------------------------------------------------------------
  59:Lib/ssc_app/src/el9800hw.c **** ------
  60:Lib/ssc_app/src/el9800hw.c **** ------    ESC Interrupt
  61:Lib/ssc_app/src/el9800hw.c **** ------
  62:Lib/ssc_app/src/el9800hw.c **** -----------------------------------------------------------------------------------------*/
  63:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
  64:Lib/ssc_app/src/el9800hw.c **** #define INIT_ESC_INT 
  65:Lib/ssc_app/src/el9800hw.c **** #define EcatIsr EXTI9_5_IRQHandler_null
  66:Lib/ssc_app/src/el9800hw.c **** #define ACK_ESC_INT HAL_GPIO_EXTI_IRQHandler(ECAT_SPI_IRQ_Pin);
  67:Lib/ssc_app/src/el9800hw.c **** 
  68:Lib/ssc_app/src/el9800hw.c **** #endif // #if AL_EVENT_ENABLED
  69:Lib/ssc_app/src/el9800hw.c **** 
  70:Lib/ssc_app/src/el9800hw.c **** /*-----------------------------------------------------------------------------------------
  71:Lib/ssc_app/src/el9800hw.c **** ------
  72:Lib/ssc_app/src/el9800hw.c **** ------    SYNC0 Interrupt
  73:Lib/ssc_app/src/el9800hw.c **** ------
  74:Lib/ssc_app/src/el9800hw.c **** -----------------------------------------------------------------------------------------*/
  75:Lib/ssc_app/src/el9800hw.c **** #if DC_SUPPORTED && _STM32_IO8
  76:Lib/ssc_app/src/el9800hw.c **** #define INIT_SYNC0_INT                  // EXTI1_Configuration--EXTI0_Configuration
  77:Lib/ssc_app/src/el9800hw.c **** #define Sync0Isr EXTI0_IRQHandler_null                        // primary interrupt vector name
  78:Lib/ssc_app/src/el9800hw.c **** #define DISABLE_SYNC0_INT HAL_NVIC_DisableIRQ(EXTI0_IRQn);    // {(_INT3IE)=0;}//disable interrupt 
  79:Lib/ssc_app/src/el9800hw.c **** #define ENABLE_SYNC0_INT HAL_NVIC_EnableIRQ(EXTI0_IRQn);      // {(_INT3IE) = 1;} //enable interrup
  80:Lib/ssc_app/src/el9800hw.c **** #define ACK_SYNC0_INT HAL_GPIO_EXTI_IRQHandler(ECAT_SYNC0_Pin); //  {(SYNC0_INT_REQ) = 0;}
  81:Lib/ssc_app/src/el9800hw.c **** 
  82:Lib/ssc_app/src/el9800hw.c **** /*ECATCHANGE_START(V5.10) HW3*/
  83:Lib/ssc_app/src/el9800hw.c **** 
  84:Lib/ssc_app/src/el9800hw.c **** #define INIT_SYNC1_INT 
  85:Lib/ssc_app/src/el9800hw.c **** #define Sync1Isr EXTI1_IRQHandler_null
  86:Lib/ssc_app/src/el9800hw.c **** #define DISABLE_SYNC1_INT HAL_NVIC_DisableIRQ(EXTI1_IRQn);    // {(_INT4IE)=0;}//disable interrupt 
  87:Lib/ssc_app/src/el9800hw.c **** #define ENABLE_SYNC1_INT HAL_NVIC_EnableIRQ(EXTI1_IRQn);      //{(_INT4IE) = 1;} //enable interrupt
ARM GAS  /tmp/ccekCAnU.s 			page 3


  88:Lib/ssc_app/src/el9800hw.c **** #define ACK_SYNC1_INT HAL_GPIO_EXTI_IRQHandler(ECAT_SYNC1_Pin); // {(SYNC1_INT_REQ) = 0;}
  89:Lib/ssc_app/src/el9800hw.c **** 
  90:Lib/ssc_app/src/el9800hw.c **** /*ECATCHANGE_END(V5.10) HW3*/
  91:Lib/ssc_app/src/el9800hw.c **** 
  92:Lib/ssc_app/src/el9800hw.c **** #endif // #if DC_SUPPORTED && _STM32_IO8
  93:Lib/ssc_app/src/el9800hw.c **** 
  94:Lib/ssc_app/src/el9800hw.c **** #endif // #if INTERRUPTS_SUPPORTED
  95:Lib/ssc_app/src/el9800hw.c **** /*-----------------------------------------------------------------------------------------
  96:Lib/ssc_app/src/el9800hw.c **** ------
  97:Lib/ssc_app/src/el9800hw.c **** ------    Hardware timer
  98:Lib/ssc_app/src/el9800hw.c **** ------
  99:Lib/ssc_app/src/el9800hw.c **** -----------------------------------------------------------------------------------------*/
 100:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO8
 101:Lib/ssc_app/src/el9800hw.c **** #if ECAT_TIMER_INT
 102:Lib/ssc_app/src/el9800hw.c **** #define ECAT_TIMER_INT_STATE
 103:Lib/ssc_app/src/el9800hw.c **** #define ECAT_TIMER_ACK_INT HAL_TIM_IRQHandler(&htim2);
 104:Lib/ssc_app/src/el9800hw.c **** #define TimerIsr TIM2_IRQHandler_null                           //	SysTick_Handler//
 105:Lib/ssc_app/src/el9800hw.c **** #define ENABLE_ECAT_TIMER_INT HAL_NVIC_EnableIRQ(TIM2_IRQn);   // SysTick->CTRL |= SysTick_CTRL_TIC
 106:Lib/ssc_app/src/el9800hw.c **** #define DISABLE_ECAT_TIMER_INT HAL_NVIC_DisableIRQ(TIM2_IRQn); // SysTick->CTRL &= ~SysTick_CTRL_TI
 107:Lib/ssc_app/src/el9800hw.c **** 
 108:Lib/ssc_app/src/el9800hw.c **** #define INIT_ECAT_TIMER  // SysTick_Config(SystemCoreClock/1000);
 109:Lib/ssc_app/src/el9800hw.c **** 
 110:Lib/ssc_app/src/el9800hw.c **** #define STOP_ECAT_TIMER DISABLE_ECAT_TIMER_INT; /*disable timer interrupt*/
 111:Lib/ssc_app/src/el9800hw.c **** 
 112:Lib/ssc_app/src/el9800hw.c **** #define START_ECAT_TIMER ENABLE_ECAT_TIMER_INT
 113:Lib/ssc_app/src/el9800hw.c **** 
 114:Lib/ssc_app/src/el9800hw.c **** #else // #if ECAT_TIMER_INT
 115:Lib/ssc_app/src/el9800hw.c **** 
 116:Lib/ssc_app/src/el9800hw.c **** #define INIT_ECAT_TIMER TIM_Configuration(10)   //SysTick_Config(SystemCoreClock/1000);//          
 117:Lib/ssc_app/src/el9800hw.c **** 
 118:Lib/ssc_app/src/el9800hw.c **** #define STOP_ECAT_TIMER TIM_Cmd(TIM2, DISABLE); // SysTick->CTRL  &=  ~SysTick_CTRL_ENABLE_Msk;    
 119:Lib/ssc_app/src/el9800hw.c **** 
 120:Lib/ssc_app/src/el9800hw.c **** #define START_ECAT_TIMER TIM_Cmd(TIM2, ENABLE); // SysTick->CTRL  |=  SysTick_CTRL_ENABLE_Msk;
 121:Lib/ssc_app/src/el9800hw.c **** 
 122:Lib/ssc_app/src/el9800hw.c **** #endif // #else #if ECAT_TIMER_INT
 123:Lib/ssc_app/src/el9800hw.c **** 
 124:Lib/ssc_app/src/el9800hw.c **** #elif _STM32_IO4
 125:Lib/ssc_app/src/el9800hw.c **** 
 126:Lib/ssc_app/src/el9800hw.c **** #if !ECAT_TIMER_INT
 127:Lib/ssc_app/src/el9800hw.c **** #define ENABLE_ECAT_TIMER_INT NVIC_EnableIRQ(TIM2_IRQn);   // SysTick->CTRL |= SysTick_CTRL_TICKINT
 128:Lib/ssc_app/src/el9800hw.c **** #define DISABLE_ECAT_TIMER_INT NVIC_DisableIRQ(TIM2_IRQn); // SysTick->CTRL &= ~SysTick_CTRL_TICKIN
 129:Lib/ssc_app/src/el9800hw.c **** #define INIT_ECAT_TIMER TIM_Configuration(10);             //	SysTick_Config(SystemCoreClock/1000);
 130:Lib/ssc_app/src/el9800hw.c **** #define STOP_ECAT_TIMER TIM_Cmd(TIM2, DISABLE);            //	SysTick->CTRL  &=  ~SysTick_CTRL_ENAB
 131:Lib/ssc_app/src/el9800hw.c **** #define START_ECAT_TIMER TIM_Cmd(TIM2, ENABLE);            //	SysTick->CTRL  |=  SysTick_CTRL_ENABL
 132:Lib/ssc_app/src/el9800hw.c **** 
 133:Lib/ssc_app/src/el9800hw.c **** #else // #if !ECAT_TIMER_INT
 134:Lib/ssc_app/src/el9800hw.c **** 
 135:Lib/ssc_app/src/el9800hw.c **** #warning "define Timer Interrupt Macros"
 136:Lib/ssc_app/src/el9800hw.c **** 
 137:Lib/ssc_app/src/el9800hw.c **** #endif // #else #if !ECAT_TIMER_INT
 138:Lib/ssc_app/src/el9800hw.c **** #endif // #elif _STM32_IO4
 139:Lib/ssc_app/src/el9800hw.c **** 
 140:Lib/ssc_app/src/el9800hw.c **** /*-----------------------------------------------------------------------------------------
 141:Lib/ssc_app/src/el9800hw.c **** ------
 142:Lib/ssc_app/src/el9800hw.c **** ------    Configuration Bits
 143:Lib/ssc_app/src/el9800hw.c **** ------
 144:Lib/ssc_app/src/el9800hw.c **** -----------------------------------------------------------------------------------------*/
ARM GAS  /tmp/ccekCAnU.s 			page 4


 145:Lib/ssc_app/src/el9800hw.c **** 
 146:Lib/ssc_app/src/el9800hw.c **** /*-----------------------------------------------------------------------------------------
 147:Lib/ssc_app/src/el9800hw.c **** ------
 148:Lib/ssc_app/src/el9800hw.c **** ------    LED defines
 149:Lib/ssc_app/src/el9800hw.c **** ------
 150:Lib/ssc_app/src/el9800hw.c **** -----------------------------------------------------------------------------------------*/
 151:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO8
 152:Lib/ssc_app/src/el9800hw.c **** // EtherCAT Status LEDs -> StateMachine
 153:Lib/ssc_app/src/el9800hw.c **** #define LED_ECATGREEN
 154:Lib/ssc_app/src/el9800hw.c **** #define LED_ECATRED
 155:Lib/ssc_app/src/el9800hw.c **** #endif //_STM32_IO8
 156:Lib/ssc_app/src/el9800hw.c **** 
 157:Lib/ssc_app/src/el9800hw.c **** /*--------------------------------------------------------------------------------------
 158:Lib/ssc_app/src/el9800hw.c **** ------
 159:Lib/ssc_app/src/el9800hw.c **** ------    internal Variables
 160:Lib/ssc_app/src/el9800hw.c **** ------
 161:Lib/ssc_app/src/el9800hw.c **** --------------------------------------------------------------------------------------*/
 162:Lib/ssc_app/src/el9800hw.c **** UALEVENT EscALEvent; // contains the content of the ALEvent register (0x220), this variable is upda
 163:Lib/ssc_app/src/el9800hw.c **** 
 164:Lib/ssc_app/src/el9800hw.c **** /*--------------------------------------------------------------------------------------
 165:Lib/ssc_app/src/el9800hw.c **** ------
 166:Lib/ssc_app/src/el9800hw.c **** ------    internal functions
 167:Lib/ssc_app/src/el9800hw.c **** ------
 168:Lib/ssc_app/src/el9800hw.c **** --------------------------------------------------------------------------------------*/
 169:Lib/ssc_app/src/el9800hw.c **** 
 170:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 171:Lib/ssc_app/src/el9800hw.c **** /**
 172:Lib/ssc_app/src/el9800hw.c ****  \brief  The function operates a SPI access without addressing.
 173:Lib/ssc_app/src/el9800hw.c **** 
 174:Lib/ssc_app/src/el9800hw.c ****         The first two bytes of an access to the EtherCAT ASIC always deliver the AL_Event register 
 175:Lib/ssc_app/src/el9800hw.c ****         It will be saved in the global "EscALEvent"
 176:Lib/ssc_app/src/el9800hw.c **** */
 177:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 178:Lib/ssc_app/src/el9800hw.c **** static void GetInterruptRegister(void)
 179:Lib/ssc_app/src/el9800hw.c **** {
 180:Lib/ssc_app/src/el9800hw.c **** 
 181:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 182:Lib/ssc_app/src/el9800hw.c ****     DISABLE_AL_EVENT_INT;
 183:Lib/ssc_app/src/el9800hw.c **** #endif
 184:Lib/ssc_app/src/el9800hw.c **** 
 185:Lib/ssc_app/src/el9800hw.c ****     /* select the SPI */
 186:Lib/ssc_app/src/el9800hw.c ****     SELECT_SPI;
 187:Lib/ssc_app/src/el9800hw.c **** 
 188:Lib/ssc_app/src/el9800hw.c ****     HW_EscReadIsr((MEM_ADDR *)&EscALEvent.Word, 0x220, 2);
 189:Lib/ssc_app/src/el9800hw.c ****     /* if the SPI transmission rate is higher than 15 MBaud, the Busy detection shall be
 190:Lib/ssc_app/src/el9800hw.c ****        done here */
 191:Lib/ssc_app/src/el9800hw.c **** 
 192:Lib/ssc_app/src/el9800hw.c ****     DESELECT_SPI;
 193:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 194:Lib/ssc_app/src/el9800hw.c ****     ENABLE_AL_EVENT_INT;
 195:Lib/ssc_app/src/el9800hw.c **** #endif
 196:Lib/ssc_app/src/el9800hw.c **** }
 197:Lib/ssc_app/src/el9800hw.c **** 
 198:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 199:Lib/ssc_app/src/el9800hw.c **** /**
 200:Lib/ssc_app/src/el9800hw.c ****  \brief  The function operates a SPI access without addressing.
 201:Lib/ssc_app/src/el9800hw.c ****         Shall be implemented if interrupts are supported else this function is equal to "GetInterru
ARM GAS  /tmp/ccekCAnU.s 			page 5


 202:Lib/ssc_app/src/el9800hw.c **** 
 203:Lib/ssc_app/src/el9800hw.c ****         The first two bytes of an access to the EtherCAT ASIC always deliver the AL_Event register 
 204:Lib/ssc_app/src/el9800hw.c ****         It will be saved in the global "EscALEvent"
 205:Lib/ssc_app/src/el9800hw.c **** */
 206:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 207:Lib/ssc_app/src/el9800hw.c **** #if !INTERRUPTS_SUPPORTED
 208:Lib/ssc_app/src/el9800hw.c **** #define ISR_GetInterruptRegister GetInterruptRegister
 209:Lib/ssc_app/src/el9800hw.c **** #else
 210:Lib/ssc_app/src/el9800hw.c **** static void ISR_GetInterruptRegister(void)
 211:Lib/ssc_app/src/el9800hw.c **** {
 212:Lib/ssc_app/src/el9800hw.c ****     /* SPI should be deactivated to interrupt a possible transmission */
 213:Lib/ssc_app/src/el9800hw.c ****     DESELECT_SPI;
 214:Lib/ssc_app/src/el9800hw.c **** 
 215:Lib/ssc_app/src/el9800hw.c ****     /* select the SPI */
 216:Lib/ssc_app/src/el9800hw.c ****     SELECT_SPI;
 217:Lib/ssc_app/src/el9800hw.c **** 
 218:Lib/ssc_app/src/el9800hw.c ****     HW_EscReadIsr((MEM_ADDR *)&EscALEvent.Word, 0x220, 2);
 219:Lib/ssc_app/src/el9800hw.c **** 
 220:Lib/ssc_app/src/el9800hw.c ****     /* if the SPI transmission rate is higher than 15 MBaud, the Busy detection shall be
 221:Lib/ssc_app/src/el9800hw.c ****          done here */
 222:Lib/ssc_app/src/el9800hw.c **** 
 223:Lib/ssc_app/src/el9800hw.c ****     DESELECT_SPI;
 224:Lib/ssc_app/src/el9800hw.c **** }
 225:Lib/ssc_app/src/el9800hw.c **** #endif // #else #if !INTERRUPTS_SUPPORTED
 226:Lib/ssc_app/src/el9800hw.c **** 
 227:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 228:Lib/ssc_app/src/el9800hw.c **** /**
 229:Lib/ssc_app/src/el9800hw.c ****  \brief The function addresses the EtherCAT ASIC via SPI for a following SPI access.
 230:Lib/ssc_app/src/el9800hw.c **** */
 231:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 232:Lib/ssc_app/src/el9800hw.c **** static void AddressingEsc(UINT16 Address, UINT8 Command)
 233:Lib/ssc_app/src/el9800hw.c **** {
  29              		.loc 1 233 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 233 1 is_stmt 0 view .LVU1
  34 0000 30B5     		push	{r4, r5, lr}
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              		.cfi_def_cfa_offset 24
 234:Lib/ssc_app/src/el9800hw.c ****     UBYTETOWORD tmp;
  41              		.loc 1 234 5 is_stmt 1 view .LVU2
 235:Lib/ssc_app/src/el9800hw.c ****     VARVOLATILE UINT8 dummy;
  42              		.loc 1 235 5 view .LVU3
 236:Lib/ssc_app/src/el9800hw.c ****     tmp.Word = (Address << 3) | Command;
  43              		.loc 1 236 5 view .LVU4
  44              		.loc 1 236 31 is_stmt 0 view .LVU5
  45 0004 41EAC000 		orr	r0, r1, r0, lsl #3
  46              	.LVL1:
  47              		.loc 1 236 31 view .LVU6
  48 0008 05B2     		sxth	r5, r0
  49 000a 84B2     		uxth	r4, r0
 237:Lib/ssc_app/src/el9800hw.c ****     /* select the SPI */
ARM GAS  /tmp/ccekCAnU.s 			page 6


 238:Lib/ssc_app/src/el9800hw.c ****     SELECT_SPI;
  50              		.loc 1 238 5 is_stmt 1 view .LVU7
  51 000c 0022     		movs	r2, #0
  52 000e 4FF48051 		mov	r1, #4096
  53              	.LVL2:
  54              		.loc 1 238 5 is_stmt 0 view .LVU8
  55 0012 0748     		ldr	r0, .L3
  56 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL3:
  58              		.loc 1 238 15 is_stmt 1 view .LVU9
 239:Lib/ssc_app/src/el9800hw.c **** 
 240:Lib/ssc_app/src/el9800hw.c ****     /* there have to be at least 15 ns after the SPI1_SEL signal was active (0) before
 241:Lib/ssc_app/src/el9800hw.c ****         the transmission shall be started */
 242:Lib/ssc_app/src/el9800hw.c ****     /* send the first address/command byte to the ESC */
 243:Lib/ssc_app/src/el9800hw.c **** 
 244:Lib/ssc_app/src/el9800hw.c ****     dummy = WR_CMD(tmp.Byte[1]);
  59              		.loc 1 244 5 view .LVU10
  60              		.loc 1 244 13 is_stmt 0 view .LVU11
  61 0018 200A     		lsrs	r0, r4, #8
  62 001a FFF7FEFF 		bl	WR_CMD
  63              	.LVL4:
  64              		.loc 1 244 11 view .LVU12
  65 001e 8DF80700 		strb	r0, [sp, #7]
 245:Lib/ssc_app/src/el9800hw.c **** 
 246:Lib/ssc_app/src/el9800hw.c ****     /* send the second address/command byte to the ESC */
 247:Lib/ssc_app/src/el9800hw.c **** 
 248:Lib/ssc_app/src/el9800hw.c ****     dummy = WR_CMD(tmp.Byte[0]);
  66              		.loc 1 248 5 is_stmt 1 view .LVU13
  67              		.loc 1 248 13 is_stmt 0 view .LVU14
  68 0022 E8B2     		uxtb	r0, r5
  69 0024 FFF7FEFF 		bl	WR_CMD
  70              	.LVL5:
  71              		.loc 1 248 11 view .LVU15
  72 0028 8DF80700 		strb	r0, [sp, #7]
 249:Lib/ssc_app/src/el9800hw.c **** 
 250:Lib/ssc_app/src/el9800hw.c ****     /* if the SPI transmission rate is higher than 15 MBaud, the Busy detection shall be
 251:Lib/ssc_app/src/el9800hw.c ****        done here */
 252:Lib/ssc_app/src/el9800hw.c **** }
  73              		.loc 1 252 1 view .LVU16
  74 002c 03B0     		add	sp, sp, #12
  75              		.cfi_def_cfa_offset 12
  76              		@ sp needed
  77 002e 30BD     		pop	{r4, r5, pc}
  78              	.L4:
  79              		.align	2
  80              	.L3:
  81 0030 00040240 		.word	1073873920
  82              		.cfi_endproc
  83              	.LFE136:
  85              		.section	.text.ISR_AddressingEsc,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	ISR_AddressingEsc:
  92              	.LVL6:
  93              	.LFB137:
ARM GAS  /tmp/ccekCAnU.s 			page 7


 253:Lib/ssc_app/src/el9800hw.c **** 
 254:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 255:Lib/ssc_app/src/el9800hw.c **** /**
 256:Lib/ssc_app/src/el9800hw.c ****  \param Address     EtherCAT ASIC address ( upper limit is 0x1FFF )    for access.
 257:Lib/ssc_app/src/el9800hw.c ****  \param Command    ESC_WR performs a write access; ESC_RD performs a read access.
 258:Lib/ssc_app/src/el9800hw.c **** 
 259:Lib/ssc_app/src/el9800hw.c ****  \brief The function addresses the EtherCAT ASIC via SPI for a following SPI access.
 260:Lib/ssc_app/src/el9800hw.c ****         Shall be implemented if interrupts are supported else this function is equal to "Addressing
 261:Lib/ssc_app/src/el9800hw.c **** */
 262:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 263:Lib/ssc_app/src/el9800hw.c **** 
 264:Lib/ssc_app/src/el9800hw.c **** #if !INTERRUPTS_SUPPORTED
 265:Lib/ssc_app/src/el9800hw.c **** #define ISR_AddressingEsc AddressingEsc
 266:Lib/ssc_app/src/el9800hw.c **** #else
 267:Lib/ssc_app/src/el9800hw.c **** static void ISR_AddressingEsc(UINT16 Address, UINT8 Command)
 268:Lib/ssc_app/src/el9800hw.c **** {
  94              		.loc 1 268 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		.loc 1 268 1 is_stmt 0 view .LVU18
  99 0000 30B5     		push	{r4, r5, lr}
 100              		.cfi_def_cfa_offset 12
 101              		.cfi_offset 4, -12
 102              		.cfi_offset 5, -8
 103              		.cfi_offset 14, -4
 104 0002 83B0     		sub	sp, sp, #12
 105              		.cfi_def_cfa_offset 24
 269:Lib/ssc_app/src/el9800hw.c ****     VARVOLATILE UINT8 dummy;
 106              		.loc 1 269 5 is_stmt 1 view .LVU19
 270:Lib/ssc_app/src/el9800hw.c ****     UBYTETOWORD tmp;
 107              		.loc 1 270 5 view .LVU20
 271:Lib/ssc_app/src/el9800hw.c ****     tmp.Word = (Address << 3) | Command;
 108              		.loc 1 271 5 view .LVU21
 109              		.loc 1 271 31 is_stmt 0 view .LVU22
 110 0004 41EAC000 		orr	r0, r1, r0, lsl #3
 111              	.LVL7:
 112              		.loc 1 271 31 view .LVU23
 113 0008 05B2     		sxth	r5, r0
 114 000a 84B2     		uxth	r4, r0
 272:Lib/ssc_app/src/el9800hw.c **** 
 273:Lib/ssc_app/src/el9800hw.c ****     /* select the SPI */
 274:Lib/ssc_app/src/el9800hw.c ****     SELECT_SPI;
 115              		.loc 1 274 5 is_stmt 1 view .LVU24
 116 000c 0022     		movs	r2, #0
 117 000e 4FF48051 		mov	r1, #4096
 118              	.LVL8:
 119              		.loc 1 274 5 is_stmt 0 view .LVU25
 120 0012 0748     		ldr	r0, .L7
 121 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL9:
 123              		.loc 1 274 15 is_stmt 1 view .LVU26
 275:Lib/ssc_app/src/el9800hw.c **** 
 276:Lib/ssc_app/src/el9800hw.c ****     /* there have to be at least 15 ns after the SPI1_SEL signal was active (0) before
 277:Lib/ssc_app/src/el9800hw.c ****       the transmission shall be started */
 278:Lib/ssc_app/src/el9800hw.c **** 
 279:Lib/ssc_app/src/el9800hw.c ****     /* send the first address/command byte to the ESC */
ARM GAS  /tmp/ccekCAnU.s 			page 8


 280:Lib/ssc_app/src/el9800hw.c ****     dummy = WR_CMD(tmp.Byte[1]);
 124              		.loc 1 280 5 view .LVU27
 125              		.loc 1 280 13 is_stmt 0 view .LVU28
 126 0018 200A     		lsrs	r0, r4, #8
 127 001a FFF7FEFF 		bl	WR_CMD
 128              	.LVL10:
 129              		.loc 1 280 11 view .LVU29
 130 001e 8DF80700 		strb	r0, [sp, #7]
 281:Lib/ssc_app/src/el9800hw.c **** 
 282:Lib/ssc_app/src/el9800hw.c ****     /* send the second address/command byte to the ESC */
 283:Lib/ssc_app/src/el9800hw.c **** 
 284:Lib/ssc_app/src/el9800hw.c ****     dummy = WR_CMD(tmp.Byte[0]);
 131              		.loc 1 284 5 is_stmt 1 view .LVU30
 132              		.loc 1 284 13 is_stmt 0 view .LVU31
 133 0022 E8B2     		uxtb	r0, r5
 134 0024 FFF7FEFF 		bl	WR_CMD
 135              	.LVL11:
 136              		.loc 1 284 11 view .LVU32
 137 0028 8DF80700 		strb	r0, [sp, #7]
 285:Lib/ssc_app/src/el9800hw.c ****     /* if the SPI transmission rate is higher than 15 MBaud, the Busy detection shall be
 286:Lib/ssc_app/src/el9800hw.c ****        done here */
 287:Lib/ssc_app/src/el9800hw.c **** }
 138              		.loc 1 287 1 view .LVU33
 139 002c 03B0     		add	sp, sp, #12
 140              		.cfi_def_cfa_offset 12
 141              		@ sp needed
 142 002e 30BD     		pop	{r4, r5, pc}
 143              	.L8:
 144              		.align	2
 145              	.L7:
 146 0030 00040240 		.word	1073873920
 147              		.cfi_endproc
 148              	.LFE137:
 150              		.section	.text.HW_Release,"ax",%progbits
 151              		.align	1
 152              		.global	HW_Release
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	HW_Release:
 158              	.LFB139:
 288:Lib/ssc_app/src/el9800hw.c **** #endif // #else #if !INTERRUPTS_SUPPORTED
 289:Lib/ssc_app/src/el9800hw.c **** /*--------------------------------------------------------------------------------------
 290:Lib/ssc_app/src/el9800hw.c **** ------
 291:Lib/ssc_app/src/el9800hw.c **** ------    exported hardware access functions
 292:Lib/ssc_app/src/el9800hw.c **** ------
 293:Lib/ssc_app/src/el9800hw.c **** --------------------------------------------------------------------------------------*/
 294:Lib/ssc_app/src/el9800hw.c **** /*******************************************************************************
 295:Lib/ssc_app/src/el9800hw.c ****  * Function Name  : GPIO_Config
 296:Lib/ssc_app/src/el9800hw.c ****  * Description    : init the led and swtich port
 297:Lib/ssc_app/src/el9800hw.c ****  * Input          : None
 298:Lib/ssc_app/src/el9800hw.c ****  * Output         : None
 299:Lib/ssc_app/src/el9800hw.c ****  * Return         : None
 300:Lib/ssc_app/src/el9800hw.c ****  * Attention		 : None
 301:Lib/ssc_app/src/el9800hw.c ****  *******************************************************************************/
 302:Lib/ssc_app/src/el9800hw.c **** 
 303:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
ARM GAS  /tmp/ccekCAnU.s 			page 9


 304:Lib/ssc_app/src/el9800hw.c **** /**
 305:Lib/ssc_app/src/el9800hw.c **** \return     0 if initialization was successful
 306:Lib/ssc_app/src/el9800hw.c **** 
 307:Lib/ssc_app/src/el9800hw.c ****  \brief    This function intialize the Process Data Interface (PDI) and the host controller.
 308:Lib/ssc_app/src/el9800hw.c **** */
 309:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 310:Lib/ssc_app/src/el9800hw.c **** UINT8 HW_Init(void)
 311:Lib/ssc_app/src/el9800hw.c **** {
 312:Lib/ssc_app/src/el9800hw.c ****     UINT16 intMask;
 313:Lib/ssc_app/src/el9800hw.c ****     /* initialize the SSP registers for the ESC SPI */
 314:Lib/ssc_app/src/el9800hw.c **** 
 315:Lib/ssc_app/src/el9800hw.c ****     do
 316:Lib/ssc_app/src/el9800hw.c ****     {
 317:Lib/ssc_app/src/el9800hw.c ****         intMask = 0x93;
 318:Lib/ssc_app/src/el9800hw.c ****         HW_EscWriteWord(intMask, ESC_AL_EVENTMASK_OFFSET);
 319:Lib/ssc_app/src/el9800hw.c ****         intMask = 0;
 320:Lib/ssc_app/src/el9800hw.c ****         HW_EscReadWord(intMask, ESC_AL_EVENTMASK_OFFSET);
 321:Lib/ssc_app/src/el9800hw.c ****     } while (intMask != 0x93);
 322:Lib/ssc_app/src/el9800hw.c **** 
 323:Lib/ssc_app/src/el9800hw.c ****     intMask = 0x00;
 324:Lib/ssc_app/src/el9800hw.c **** 
 325:Lib/ssc_app/src/el9800hw.c ****     HW_EscWriteDWord(intMask, ESC_AL_EVENTMASK_OFFSET);
 326:Lib/ssc_app/src/el9800hw.c **** 
 327:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 328:Lib/ssc_app/src/el9800hw.c ****     INIT_ESC_INT;
 329:Lib/ssc_app/src/el9800hw.c ****     ENABLE_ESC_INT();
 330:Lib/ssc_app/src/el9800hw.c **** #endif
 331:Lib/ssc_app/src/el9800hw.c **** 
 332:Lib/ssc_app/src/el9800hw.c **** #if DC_SUPPORTED && _STM32_IO8
 333:Lib/ssc_app/src/el9800hw.c ****     INIT_SYNC0_INT
 334:Lib/ssc_app/src/el9800hw.c ****     INIT_SYNC1_INT
 335:Lib/ssc_app/src/el9800hw.c **** 
 336:Lib/ssc_app/src/el9800hw.c ****     ENABLE_SYNC0_INT;
 337:Lib/ssc_app/src/el9800hw.c ****     ENABLE_SYNC1_INT;
 338:Lib/ssc_app/src/el9800hw.c **** #endif
 339:Lib/ssc_app/src/el9800hw.c **** 
 340:Lib/ssc_app/src/el9800hw.c ****     INIT_ECAT_TIMER;
 341:Lib/ssc_app/src/el9800hw.c ****     START_ECAT_TIMER;
 342:Lib/ssc_app/src/el9800hw.c **** 
 343:Lib/ssc_app/src/el9800hw.c **** #if INTERRUPTS_SUPPORTED
 344:Lib/ssc_app/src/el9800hw.c ****     /* enable all interrupts */
 345:Lib/ssc_app/src/el9800hw.c ****     ENABLE_GLOBAL_INT;
 346:Lib/ssc_app/src/el9800hw.c **** #endif
 347:Lib/ssc_app/src/el9800hw.c **** 
 348:Lib/ssc_app/src/el9800hw.c ****     return 0;
 349:Lib/ssc_app/src/el9800hw.c **** }
 350:Lib/ssc_app/src/el9800hw.c **** 
 351:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 352:Lib/ssc_app/src/el9800hw.c **** /**
 353:Lib/ssc_app/src/el9800hw.c ****  \brief    This function shall be implemented if hardware resources need to be release
 354:Lib/ssc_app/src/el9800hw.c ****         when the sample application stops
 355:Lib/ssc_app/src/el9800hw.c **** */
 356:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 357:Lib/ssc_app/src/el9800hw.c **** void HW_Release(void)
 358:Lib/ssc_app/src/el9800hw.c **** {
 159              		.loc 1 358 1 is_stmt 1 view -0
 160              		.cfi_startproc
ARM GAS  /tmp/ccekCAnU.s 			page 10


 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 359:Lib/ssc_app/src/el9800hw.c **** }
 164              		.loc 1 359 1 view .LVU35
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE139:
 169              		.section	.text.HW_EscRead,"ax",%progbits
 170              		.align	1
 171              		.global	HW_EscRead
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 176              	HW_EscRead:
 177              	.LVL12:
 178              	.LFB142:
 360:Lib/ssc_app/src/el9800hw.c **** 
 361:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 362:Lib/ssc_app/src/el9800hw.c **** /**
 363:Lib/ssc_app/src/el9800hw.c ****  \return    first two Bytes of ALEvent register (0x220)
 364:Lib/ssc_app/src/el9800hw.c **** 
 365:Lib/ssc_app/src/el9800hw.c ****  \brief  This function gets the current content of ALEvent register
 366:Lib/ssc_app/src/el9800hw.c **** */
 367:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 368:Lib/ssc_app/src/el9800hw.c **** UINT16 HW_GetALEventRegister(void)
 369:Lib/ssc_app/src/el9800hw.c **** {
 370:Lib/ssc_app/src/el9800hw.c ****     GetInterruptRegister();
 371:Lib/ssc_app/src/el9800hw.c ****     return EscALEvent.Word;
 372:Lib/ssc_app/src/el9800hw.c **** }
 373:Lib/ssc_app/src/el9800hw.c **** #if INTERRUPTS_SUPPORTED
 374:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 375:Lib/ssc_app/src/el9800hw.c **** /**
 376:Lib/ssc_app/src/el9800hw.c ****  \return    first two Bytes of ALEvent register (0x220)
 377:Lib/ssc_app/src/el9800hw.c **** 
 378:Lib/ssc_app/src/el9800hw.c ****  \brief  The SPI PDI requires an extra ESC read access functions from interrupts service routines.
 379:Lib/ssc_app/src/el9800hw.c ****         The behaviour is equal to "HW_GetALEventRegister()"
 380:Lib/ssc_app/src/el9800hw.c **** */
 381:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 382:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO4 && AL_EVENT_ENABLED
 383:Lib/ssc_app/src/el9800hw.c **** /* the pragma interrupt_level is used to tell the compiler that these functions will not
 384:Lib/ssc_app/src/el9800hw.c ****    be called at the same time from the main function and the interrupt routine */
 385:Lib/ssc_app/src/el9800hw.c **** // #pragma interrupt_level 1
 386:Lib/ssc_app/src/el9800hw.c **** #endif
 387:Lib/ssc_app/src/el9800hw.c **** UINT16 HW_GetALEventRegister_Isr(void)
 388:Lib/ssc_app/src/el9800hw.c **** {
 389:Lib/ssc_app/src/el9800hw.c ****     ISR_GetInterruptRegister();
 390:Lib/ssc_app/src/el9800hw.c ****     return EscALEvent.Word;
 391:Lib/ssc_app/src/el9800hw.c **** }
 392:Lib/ssc_app/src/el9800hw.c **** #endif
 393:Lib/ssc_app/src/el9800hw.c **** 
 394:Lib/ssc_app/src/el9800hw.c **** #if UC_SET_ECAT_LED
 395:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 396:Lib/ssc_app/src/el9800hw.c **** /**
 397:Lib/ssc_app/src/el9800hw.c ****  \param RunLed            desired EtherCAT Run led state
 398:Lib/ssc_app/src/el9800hw.c ****  \param ErrLed            desired EtherCAT Error led state
 399:Lib/ssc_app/src/el9800hw.c **** 
ARM GAS  /tmp/ccekCAnU.s 			page 11


 400:Lib/ssc_app/src/el9800hw.c ****   \brief    This function updates the EtherCAT run and error led
 401:Lib/ssc_app/src/el9800hw.c **** */
 402:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 403:Lib/ssc_app/src/el9800hw.c **** void HW_SetLed(UINT8 RunLed, UINT8 ErrLed)
 404:Lib/ssc_app/src/el9800hw.c **** {
 405:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO8
 406:Lib/ssc_app/src/el9800hw.c ****     //     LED_ECATGREEN = RunLed;
 407:Lib/ssc_app/src/el9800hw.c **** //      LED_ECATRED   = ErrLed;
 408:Lib/ssc_app/src/el9800hw.c **** #endif
 409:Lib/ssc_app/src/el9800hw.c **** }
 410:Lib/ssc_app/src/el9800hw.c **** #endif // #if UC_SET_ECAT_LED
 411:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 412:Lib/ssc_app/src/el9800hw.c **** /**
 413:Lib/ssc_app/src/el9800hw.c ****  \param pData        Pointer to a byte array which holds data to write or saves read data.
 414:Lib/ssc_app/src/el9800hw.c ****  \param Address     EtherCAT ASIC address ( upper limit is 0x1FFF )    for access.
 415:Lib/ssc_app/src/el9800hw.c ****  \param Len            Access size in Bytes.
 416:Lib/ssc_app/src/el9800hw.c **** 
 417:Lib/ssc_app/src/el9800hw.c ****  \brief  This function operates the SPI read access to the EtherCAT ASIC.
 418:Lib/ssc_app/src/el9800hw.c **** */
 419:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 420:Lib/ssc_app/src/el9800hw.c **** void HW_EscRead(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 421:Lib/ssc_app/src/el9800hw.c **** {
 179              		.loc 1 421 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		.loc 1 421 1 is_stmt 0 view .LVU37
 184 0000 70B5     		push	{r4, r5, r6, lr}
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 4, -16
 187              		.cfi_offset 5, -12
 188              		.cfi_offset 6, -8
 189              		.cfi_offset 14, -4
 190 0002 0446     		mov	r4, r0
 191 0004 0D46     		mov	r5, r1
 422:Lib/ssc_app/src/el9800hw.c ****     /* HBu 24.01.06: if the SPI will be read by an interrupt routine too the
 423:Lib/ssc_app/src/el9800hw.c ****                      mailbox reading may be interrupted but an interrupted
 424:Lib/ssc_app/src/el9800hw.c ****                      reading will remain in a SPI transmission fault that will
 425:Lib/ssc_app/src/el9800hw.c ****                      reset the internal Sync Manager status. Therefore the reading
 426:Lib/ssc_app/src/el9800hw.c ****                      will be divided in 1-byte reads with disabled interrupt */
 427:Lib/ssc_app/src/el9800hw.c ****     UINT16 i = Len;
 192              		.loc 1 427 5 is_stmt 1 view .LVU38
 193              	.LVL13:
 428:Lib/ssc_app/src/el9800hw.c ****     UINT8 *pTmpData = (UINT8 *)pData;
 194              		.loc 1 428 5 view .LVU39
 429:Lib/ssc_app/src/el9800hw.c **** 
 430:Lib/ssc_app/src/el9800hw.c ****     /* loop for all bytes to be read */
 431:Lib/ssc_app/src/el9800hw.c ****     while (i-- > 0)
 195              		.loc 1 431 5 view .LVU40
 196              		.loc 1 431 11 is_stmt 0 view .LVU41
 197 0006 13E0     		b	.L11
 198              	.LVL14:
 199              	.L12:
 432:Lib/ssc_app/src/el9800hw.c ****     {
 433:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 434:Lib/ssc_app/src/el9800hw.c ****         /* the reading of data from the ESC can be interrupted by the
 435:Lib/ssc_app/src/el9800hw.c ****            AL Event ISR, in that case the address has to be reinitialized,
ARM GAS  /tmp/ccekCAnU.s 			page 12


 436:Lib/ssc_app/src/el9800hw.c ****            in that case the status flag will indicate an error because
 437:Lib/ssc_app/src/el9800hw.c ****            the reading operation was interrupted without setting the last
 438:Lib/ssc_app/src/el9800hw.c ****            sent byte to 0xFF */
 439:Lib/ssc_app/src/el9800hw.c ****         DISABLE_AL_EVENT_INT;
 200              		.loc 1 439 9 is_stmt 1 view .LVU42
 201              	.LBB16:
 202              	.LBI16:
 203              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
ARM GAS  /tmp/ccekCAnU.s 			page 13


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/ccekCAnU.s 			page 14


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
ARM GAS  /tmp/ccekCAnU.s 			page 15


 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
ARM GAS  /tmp/ccekCAnU.s 			page 16


 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
ARM GAS  /tmp/ccekCAnU.s 			page 17


 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/ccekCAnU.s 			page 18


 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
ARM GAS  /tmp/ccekCAnU.s 			page 19


 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccekCAnU.s 			page 20


 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/ccekCAnU.s 			page 21


 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
ARM GAS  /tmp/ccekCAnU.s 			page 22


 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccekCAnU.s 			page 23


 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/ccekCAnU.s 			page 24


 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccekCAnU.s 			page 25


 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
ARM GAS  /tmp/ccekCAnU.s 			page 26


 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  /tmp/ccekCAnU.s 			page 27


 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /tmp/ccekCAnU.s 			page 28


 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 204              		.loc 2 960 27 view .LVU43
ARM GAS  /tmp/ccekCAnU.s 			page 29


 205              	.LBB17:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 206              		.loc 2 962 3 view .LVU44
 207              		.syntax unified
 208              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 209 0008 72B6     		cpsid i
 210              	@ 0 "" 2
 211              		.thumb
 212              		.syntax unified
 213              	.LBE17:
 214              	.LBE16:
 440:Lib/ssc_app/src/el9800hw.c **** #endif
 441:Lib/ssc_app/src/el9800hw.c ****         AddressingEsc(Address, ESC_RD);
 215              		.loc 1 441 9 view .LVU45
 216 000a 0221     		movs	r1, #2
 217 000c 2846     		mov	r0, r5
 218 000e FFF7FEFF 		bl	AddressingEsc
 219              	.LVL15:
 442:Lib/ssc_app/src/el9800hw.c **** 
 443:Lib/ssc_app/src/el9800hw.c ****         /* when reading the last byte the DI pin shall be 1 */
 444:Lib/ssc_app/src/el9800hw.c ****         *pTmpData++ = WR_CMD(0xFF);
 220              		.loc 1 444 9 view .LVU46
 221              		.loc 1 444 23 is_stmt 0 view .LVU47
 222 0012 FF20     		movs	r0, #255
 223 0014 FFF7FEFF 		bl	WR_CMD
 224              	.LVL16:
 225              		.loc 1 444 21 view .LVU48
 226 0018 04F8010B 		strb	r0, [r4], #1
 227              	.LVL17:
 445:Lib/ssc_app/src/el9800hw.c ****         /* enable the ESC interrupt to get the AL Event ISR the chance to interrupt,
 446:Lib/ssc_app/src/el9800hw.c ****            if the next byte is the last the transmission shall not be interrupted,
 447:Lib/ssc_app/src/el9800hw.c ****            otherwise a sync manager could unlock the buffer, because the last was
 448:Lib/ssc_app/src/el9800hw.c ****            read internally */
 449:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 450:Lib/ssc_app/src/el9800hw.c ****         ENABLE_AL_EVENT_INT;
 228              		.loc 1 450 9 is_stmt 1 view .LVU49
 229              	.LBB18:
 230              	.LBI18:
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 231              		.loc 2 949 27 view .LVU50
 232              	.LBB19:
 951:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 233              		.loc 2 951 3 view .LVU51
 234              		.syntax unified
 235              	@ 951 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 236 001c 62B6     		cpsie i
 237              	@ 0 "" 2
 238              		.thumb
 239              		.syntax unified
 240              	.LBE19:
 241              	.LBE18:
 451:Lib/ssc_app/src/el9800hw.c **** #endif
 452:Lib/ssc_app/src/el9800hw.c ****         /* there has to be at least 15 ns + CLK/2 after the transmission is finished
 453:Lib/ssc_app/src/el9800hw.c ****            before the SPI1_SEL signal shall be 1 */
 454:Lib/ssc_app/src/el9800hw.c ****         DESELECT_SPI;
 242              		.loc 1 454 9 view .LVU52
ARM GAS  /tmp/ccekCAnU.s 			page 30


 243 001e 0122     		movs	r2, #1
 244 0020 4FF48051 		mov	r1, #4096
 245 0024 0548     		ldr	r0, .L14
 246 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 247              	.LVL18:
 248              		.loc 1 454 21 view .LVU53
 455:Lib/ssc_app/src/el9800hw.c ****         /* next address */
 456:Lib/ssc_app/src/el9800hw.c ****         Address++;
 249              		.loc 1 456 9 view .LVU54
 250              		.loc 1 456 16 is_stmt 0 view .LVU55
 251 002a 0135     		adds	r5, r5, #1
 252              	.LVL19:
 253              		.loc 1 456 16 view .LVU56
 254 002c ADB2     		uxth	r5, r5
 255              	.LVL20:
 431:Lib/ssc_app/src/el9800hw.c ****     {
 256              		.loc 1 431 13 view .LVU57
 257 002e 3246     		mov	r2, r6
 258              	.LVL21:
 259              	.L11:
 431:Lib/ssc_app/src/el9800hw.c ****     {
 260              		.loc 1 431 11 is_stmt 1 view .LVU58
 431:Lib/ssc_app/src/el9800hw.c ****     {
 261              		.loc 1 431 13 is_stmt 0 view .LVU59
 262 0030 531E     		subs	r3, r2, #1
 263 0032 9EB2     		uxth	r6, r3
 264              	.LVL22:
 431:Lib/ssc_app/src/el9800hw.c ****     {
 265              		.loc 1 431 11 view .LVU60
 266 0034 002A     		cmp	r2, #0
 267 0036 E7D1     		bne	.L12
 457:Lib/ssc_app/src/el9800hw.c ****         //        /* reset transmission flag */
 458:Lib/ssc_app/src/el9800hw.c ****         //        SPI1_IF = 0;
 459:Lib/ssc_app/src/el9800hw.c ****     }
 460:Lib/ssc_app/src/el9800hw.c **** }
 268              		.loc 1 460 1 view .LVU61
 269 0038 70BD     		pop	{r4, r5, r6, pc}
 270              	.LVL23:
 271              	.L15:
 272              		.loc 1 460 1 view .LVU62
 273 003a 00BF     		.align	2
 274              	.L14:
 275 003c 00040240 		.word	1073873920
 276              		.cfi_endproc
 277              	.LFE142:
 279              		.section	.text.HW_EscReadIsr,"ax",%progbits
 280              		.align	1
 281              		.global	HW_EscReadIsr
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	HW_EscReadIsr:
 287              	.LVL24:
 288              	.LFB143:
 461:Lib/ssc_app/src/el9800hw.c **** #if INTERRUPTS_SUPPORTED
 462:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 463:Lib/ssc_app/src/el9800hw.c **** /**
ARM GAS  /tmp/ccekCAnU.s 			page 31


 464:Lib/ssc_app/src/el9800hw.c ****  \param pData        Pointer to a byte array which holds data to write or saves read data.
 465:Lib/ssc_app/src/el9800hw.c ****  \param Address     EtherCAT ASIC address ( upper limit is 0x1FFF )    for access.
 466:Lib/ssc_app/src/el9800hw.c ****  \param Len            Access size in Bytes.
 467:Lib/ssc_app/src/el9800hw.c **** 
 468:Lib/ssc_app/src/el9800hw.c **** \brief  The SPI PDI requires an extra ESC read access functions from interrupts service routines.
 469:Lib/ssc_app/src/el9800hw.c ****         The behaviour is equal to "HW_EscRead()"
 470:Lib/ssc_app/src/el9800hw.c **** */
 471:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 472:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO4 && AL_EVENT_ENABLED
 473:Lib/ssc_app/src/el9800hw.c **** /* the pragma interrupt_level is used to tell the compiler that these functions will not
 474:Lib/ssc_app/src/el9800hw.c ****    be called at the same time from the main function and the interrupt routine */
 475:Lib/ssc_app/src/el9800hw.c **** // #pragma interrupt_level 1
 476:Lib/ssc_app/src/el9800hw.c **** #endif
 477:Lib/ssc_app/src/el9800hw.c **** void HW_EscReadIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 478:Lib/ssc_app/src/el9800hw.c **** {
 289              		.loc 1 478 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		.loc 1 478 1 is_stmt 0 view .LVU64
 294 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 295              		.cfi_def_cfa_offset 24
 296              		.cfi_offset 3, -24
 297              		.cfi_offset 4, -20
 298              		.cfi_offset 5, -16
 299              		.cfi_offset 6, -12
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 0446     		mov	r4, r0
 303 0004 0846     		mov	r0, r1
 304              	.LVL25:
 305              		.loc 1 478 1 view .LVU65
 306 0006 1646     		mov	r6, r2
 479:Lib/ssc_app/src/el9800hw.c ****     UINT16 i = Len;
 307              		.loc 1 479 5 is_stmt 1 view .LVU66
 308              	.LVL26:
 480:Lib/ssc_app/src/el9800hw.c ****     UINT8 data = 0;
 309              		.loc 1 480 5 view .LVU67
 481:Lib/ssc_app/src/el9800hw.c **** 
 482:Lib/ssc_app/src/el9800hw.c ****     UINT8 *pTmpData = (UINT8 *)pData;
 310              		.loc 1 482 5 view .LVU68
 483:Lib/ssc_app/src/el9800hw.c **** 
 484:Lib/ssc_app/src/el9800hw.c ****     /* send the address and command to the ESC */
 485:Lib/ssc_app/src/el9800hw.c ****     ISR_AddressingEsc(Address, ESC_RD);
 311              		.loc 1 485 5 view .LVU69
 312 0008 0221     		movs	r1, #2
 313              	.LVL27:
 314              		.loc 1 485 5 is_stmt 0 view .LVU70
 315 000a FFF7FEFF 		bl	ISR_AddressingEsc
 316              	.LVL28:
 486:Lib/ssc_app/src/el9800hw.c ****     /* loop for all bytes to be read */
 487:Lib/ssc_app/src/el9800hw.c ****     while (i-- > 0)
 317              		.loc 1 487 5 is_stmt 1 view .LVU71
 480:Lib/ssc_app/src/el9800hw.c **** 
 318              		.loc 1 480 11 is_stmt 0 view .LVU72
 319 000e 0027     		movs	r7, #0
 320              		.loc 1 487 11 view .LVU73
ARM GAS  /tmp/ccekCAnU.s 			page 32


 321 0010 05E0     		b	.L17
 322              	.LVL29:
 323              	.L18:
 488:Lib/ssc_app/src/el9800hw.c ****     {
 489:Lib/ssc_app/src/el9800hw.c ****         if (i == 0)
 490:Lib/ssc_app/src/el9800hw.c ****         {
 491:Lib/ssc_app/src/el9800hw.c ****             /* when reading the last byte the DI pin shall be 1 */
 492:Lib/ssc_app/src/el9800hw.c ****             data = 0xFF;
 493:Lib/ssc_app/src/el9800hw.c ****         }
 494:Lib/ssc_app/src/el9800hw.c **** 
 495:Lib/ssc_app/src/el9800hw.c ****         *pTmpData++ = WR_CMD(data);
 324              		.loc 1 495 9 is_stmt 1 view .LVU74
 325              		.loc 1 495 23 is_stmt 0 view .LVU75
 326 0012 3846     		mov	r0, r7
 327 0014 FFF7FEFF 		bl	WR_CMD
 328              	.LVL30:
 329              		.loc 1 495 21 view .LVU76
 330 0018 04F8010B 		strb	r0, [r4], #1
 331              	.LVL31:
 487:Lib/ssc_app/src/el9800hw.c ****     {
 332              		.loc 1 487 13 view .LVU77
 333 001c 2E46     		mov	r6, r5
 334              	.LVL32:
 335              	.L17:
 487:Lib/ssc_app/src/el9800hw.c ****     {
 336              		.loc 1 487 11 is_stmt 1 view .LVU78
 487:Lib/ssc_app/src/el9800hw.c ****     {
 337              		.loc 1 487 13 is_stmt 0 view .LVU79
 338 001e 751E     		subs	r5, r6, #1
 339 0020 ADB2     		uxth	r5, r5
 340              	.LVL33:
 487:Lib/ssc_app/src/el9800hw.c ****     {
 341              		.loc 1 487 11 view .LVU80
 342 0022 1EB1     		cbz	r6, .L22
 489:Lib/ssc_app/src/el9800hw.c ****         {
 343              		.loc 1 489 9 is_stmt 1 view .LVU81
 489:Lib/ssc_app/src/el9800hw.c ****         {
 344              		.loc 1 489 12 is_stmt 0 view .LVU82
 345 0024 002D     		cmp	r5, #0
 346 0026 F4D1     		bne	.L18
 492:Lib/ssc_app/src/el9800hw.c ****         }
 347              		.loc 1 492 18 view .LVU83
 348 0028 FF27     		movs	r7, #255
 349              	.LVL34:
 492:Lib/ssc_app/src/el9800hw.c ****         }
 350              		.loc 1 492 18 view .LVU84
 351 002a F2E7     		b	.L18
 352              	.LVL35:
 353              	.L22:
 496:Lib/ssc_app/src/el9800hw.c ****     }
 497:Lib/ssc_app/src/el9800hw.c **** 
 498:Lib/ssc_app/src/el9800hw.c ****     /* there has to be at least 15 ns + CLK/2 after the transmission is finished
 499:Lib/ssc_app/src/el9800hw.c ****        before the SPI1_SEL signal shall be 1 */
 500:Lib/ssc_app/src/el9800hw.c ****     DESELECT_SPI;
 354              		.loc 1 500 5 is_stmt 1 view .LVU85
 355 002c 0122     		movs	r2, #1
 356 002e 4FF48051 		mov	r1, #4096
ARM GAS  /tmp/ccekCAnU.s 			page 33


 357 0032 0248     		ldr	r0, .L23
 358 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 359              	.LVL36:
 360              		.loc 1 500 17 view .LVU86
 501:Lib/ssc_app/src/el9800hw.c **** }
 361              		.loc 1 501 1 is_stmt 0 view .LVU87
 362 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 363              	.LVL37:
 364              	.L24:
 365              		.loc 1 501 1 view .LVU88
 366 003a 00BF     		.align	2
 367              	.L23:
 368 003c 00040240 		.word	1073873920
 369              		.cfi_endproc
 370              	.LFE143:
 372              		.section	.text.GetInterruptRegister,"ax",%progbits
 373              		.align	1
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	GetInterruptRegister:
 379              	.LFB134:
 179:Lib/ssc_app/src/el9800hw.c **** 
 380              		.loc 1 179 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 10B5     		push	{r4, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 4, -8
 387              		.cfi_offset 14, -4
 182:Lib/ssc_app/src/el9800hw.c **** #endif
 388              		.loc 1 182 5 view .LVU90
 389              	.LBB20:
 390              	.LBI20:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 391              		.loc 2 960 27 view .LVU91
 392              	.LBB21:
 393              		.loc 2 962 3 view .LVU92
 394              		.syntax unified
 395              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 396 0002 72B6     		cpsid i
 397              	@ 0 "" 2
 398              		.thumb
 399              		.syntax unified
 400              	.LBE21:
 401              	.LBE20:
 186:Lib/ssc_app/src/el9800hw.c **** 
 402              		.loc 1 186 5 view .LVU93
 403 0004 0A4C     		ldr	r4, .L27
 404 0006 0022     		movs	r2, #0
 405 0008 4FF48051 		mov	r1, #4096
 406 000c 2046     		mov	r0, r4
 407 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 408              	.LVL38:
 186:Lib/ssc_app/src/el9800hw.c **** 
 409              		.loc 1 186 15 view .LVU94
ARM GAS  /tmp/ccekCAnU.s 			page 34


 188:Lib/ssc_app/src/el9800hw.c ****     /* if the SPI transmission rate is higher than 15 MBaud, the Busy detection shall be
 410              		.loc 1 188 5 view .LVU95
 411 0012 0222     		movs	r2, #2
 412 0014 4FF40871 		mov	r1, #544
 413 0018 0648     		ldr	r0, .L27+4
 414 001a FFF7FEFF 		bl	HW_EscReadIsr
 415              	.LVL39:
 192:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 416              		.loc 1 192 5 view .LVU96
 417 001e 0122     		movs	r2, #1
 418 0020 4FF48051 		mov	r1, #4096
 419 0024 2046     		mov	r0, r4
 420 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 421              	.LVL40:
 192:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 422              		.loc 1 192 17 view .LVU97
 194:Lib/ssc_app/src/el9800hw.c **** #endif
 423              		.loc 1 194 5 view .LVU98
 424              	.LBB22:
 425              	.LBI22:
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426              		.loc 2 949 27 view .LVU99
 427              	.LBB23:
 951:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428              		.loc 2 951 3 view .LVU100
 429              		.syntax unified
 430              	@ 951 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 431 002a 62B6     		cpsie i
 432              	@ 0 "" 2
 433              		.thumb
 434              		.syntax unified
 435              	.LBE23:
 436              	.LBE22:
 196:Lib/ssc_app/src/el9800hw.c **** 
 437              		.loc 1 196 1 is_stmt 0 view .LVU101
 438 002c 10BD     		pop	{r4, pc}
 439              	.L28:
 440 002e 00BF     		.align	2
 441              	.L27:
 442 0030 00040240 		.word	1073873920
 443 0034 00000000 		.word	.LANCHOR0
 444              		.cfi_endproc
 445              	.LFE134:
 447              		.section	.text.HW_GetALEventRegister,"ax",%progbits
 448              		.align	1
 449              		.global	HW_GetALEventRegister
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	HW_GetALEventRegister:
 455              	.LFB140:
 369:Lib/ssc_app/src/el9800hw.c ****     GetInterruptRegister();
 456              		.loc 1 369 1 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccekCAnU.s 			page 35


 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 3, -8
 463              		.cfi_offset 14, -4
 370:Lib/ssc_app/src/el9800hw.c ****     return EscALEvent.Word;
 464              		.loc 1 370 5 view .LVU103
 465 0002 FFF7FEFF 		bl	GetInterruptRegister
 466              	.LVL41:
 371:Lib/ssc_app/src/el9800hw.c **** }
 467              		.loc 1 371 5 view .LVU104
 372:Lib/ssc_app/src/el9800hw.c **** #if INTERRUPTS_SUPPORTED
 468              		.loc 1 372 1 is_stmt 0 view .LVU105
 469 0006 014B     		ldr	r3, .L31
 470 0008 1888     		ldrh	r0, [r3]
 471 000a 08BD     		pop	{r3, pc}
 472              	.L32:
 473              		.align	2
 474              	.L31:
 475 000c 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE140:
 479              		.section	.text.ISR_GetInterruptRegister,"ax",%progbits
 480              		.align	1
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 485              	ISR_GetInterruptRegister:
 486              	.LFB135:
 211:Lib/ssc_app/src/el9800hw.c ****     /* SPI should be deactivated to interrupt a possible transmission */
 487              		.loc 1 211 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 10B5     		push	{r4, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 4, -8
 494              		.cfi_offset 14, -4
 213:Lib/ssc_app/src/el9800hw.c **** 
 495              		.loc 1 213 5 view .LVU107
 496 0002 0D4C     		ldr	r4, .L35
 497 0004 0122     		movs	r2, #1
 498 0006 4FF48051 		mov	r1, #4096
 499 000a 2046     		mov	r0, r4
 500 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 501              	.LVL42:
 213:Lib/ssc_app/src/el9800hw.c **** 
 502              		.loc 1 213 17 view .LVU108
 216:Lib/ssc_app/src/el9800hw.c **** 
 503              		.loc 1 216 5 view .LVU109
 504 0010 0022     		movs	r2, #0
 505 0012 4FF48051 		mov	r1, #4096
 506 0016 2046     		mov	r0, r4
 507 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 508              	.LVL43:
 216:Lib/ssc_app/src/el9800hw.c **** 
 509              		.loc 1 216 15 view .LVU110
 218:Lib/ssc_app/src/el9800hw.c **** 
 510              		.loc 1 218 5 view .LVU111
ARM GAS  /tmp/ccekCAnU.s 			page 36


 511 001c 0222     		movs	r2, #2
 512 001e 4FF40871 		mov	r1, #544
 513 0022 0648     		ldr	r0, .L35+4
 514 0024 FFF7FEFF 		bl	HW_EscReadIsr
 515              	.LVL44:
 223:Lib/ssc_app/src/el9800hw.c **** }
 516              		.loc 1 223 5 view .LVU112
 517 0028 0122     		movs	r2, #1
 518 002a 4FF48051 		mov	r1, #4096
 519 002e 2046     		mov	r0, r4
 520 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 521              	.LVL45:
 223:Lib/ssc_app/src/el9800hw.c **** }
 522              		.loc 1 223 17 view .LVU113
 224:Lib/ssc_app/src/el9800hw.c **** #endif // #else #if !INTERRUPTS_SUPPORTED
 523              		.loc 1 224 1 is_stmt 0 view .LVU114
 524 0034 10BD     		pop	{r4, pc}
 525              	.L36:
 526 0036 00BF     		.align	2
 527              	.L35:
 528 0038 00040240 		.word	1073873920
 529 003c 00000000 		.word	.LANCHOR0
 530              		.cfi_endproc
 531              	.LFE135:
 533              		.section	.text.HW_GetALEventRegister_Isr,"ax",%progbits
 534              		.align	1
 535              		.global	HW_GetALEventRegister_Isr
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	HW_GetALEventRegister_Isr:
 541              	.LFB141:
 388:Lib/ssc_app/src/el9800hw.c ****     ISR_GetInterruptRegister();
 542              		.loc 1 388 1 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546 0000 08B5     		push	{r3, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 3, -8
 549              		.cfi_offset 14, -4
 389:Lib/ssc_app/src/el9800hw.c ****     return EscALEvent.Word;
 550              		.loc 1 389 5 view .LVU116
 551 0002 FFF7FEFF 		bl	ISR_GetInterruptRegister
 552              	.LVL46:
 390:Lib/ssc_app/src/el9800hw.c **** }
 553              		.loc 1 390 5 view .LVU117
 391:Lib/ssc_app/src/el9800hw.c **** #endif
 554              		.loc 1 391 1 is_stmt 0 view .LVU118
 555 0006 014B     		ldr	r3, .L39
 556 0008 1888     		ldrh	r0, [r3]
 557 000a 08BD     		pop	{r3, pc}
 558              	.L40:
 559              		.align	2
 560              	.L39:
 561 000c 00000000 		.word	.LANCHOR0
 562              		.cfi_endproc
ARM GAS  /tmp/ccekCAnU.s 			page 37


 563              	.LFE141:
 565              		.section	.text.HW_EscWrite,"ax",%progbits
 566              		.align	1
 567              		.global	HW_EscWrite
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	HW_EscWrite:
 573              	.LVL47:
 574              	.LFB144:
 502:Lib/ssc_app/src/el9800hw.c **** #endif // #if INTERRUPTS_SUPPORTED
 503:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 504:Lib/ssc_app/src/el9800hw.c **** /**
 505:Lib/ssc_app/src/el9800hw.c ****  \param pData        Pointer to a byte array which holds data to write or saves write data.
 506:Lib/ssc_app/src/el9800hw.c ****  \param Address     EtherCAT ASIC address ( upper limit is 0x1FFF )    for access.
 507:Lib/ssc_app/src/el9800hw.c ****  \param Len            Access size in Bytes.
 508:Lib/ssc_app/src/el9800hw.c **** 
 509:Lib/ssc_app/src/el9800hw.c ****   \brief  This function operates the SPI write access to the EtherCAT ASIC.
 510:Lib/ssc_app/src/el9800hw.c **** */
 511:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 512:Lib/ssc_app/src/el9800hw.c **** void HW_EscWrite(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 513:Lib/ssc_app/src/el9800hw.c **** {
 575              		.loc 1 513 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 8
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		.loc 1 513 1 is_stmt 0 view .LVU120
 580 0000 70B5     		push	{r4, r5, r6, lr}
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 4, -16
 583              		.cfi_offset 5, -12
 584              		.cfi_offset 6, -8
 585              		.cfi_offset 14, -4
 586 0002 82B0     		sub	sp, sp, #8
 587              		.cfi_def_cfa_offset 24
 588 0004 0446     		mov	r4, r0
 589 0006 0D46     		mov	r5, r1
 514:Lib/ssc_app/src/el9800hw.c ****     UINT16 i = Len;
 590              		.loc 1 514 5 is_stmt 1 view .LVU121
 591              	.LVL48:
 515:Lib/ssc_app/src/el9800hw.c ****     VARVOLATILE UINT8 dummy;
 592              		.loc 1 515 5 view .LVU122
 516:Lib/ssc_app/src/el9800hw.c **** 
 517:Lib/ssc_app/src/el9800hw.c ****     UINT8 *pTmpData = (UINT8 *)pData;
 593              		.loc 1 517 5 view .LVU123
 518:Lib/ssc_app/src/el9800hw.c **** 
 519:Lib/ssc_app/src/el9800hw.c ****     /* loop for all bytes to be written */
 520:Lib/ssc_app/src/el9800hw.c ****     while (i-- > 0)
 594              		.loc 1 520 5 view .LVU124
 595              		.loc 1 520 11 is_stmt 0 view .LVU125
 596 0008 14E0     		b	.L42
 597              	.LVL49:
 598              	.L43:
 521:Lib/ssc_app/src/el9800hw.c ****     {
 522:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 523:Lib/ssc_app/src/el9800hw.c ****         /* the reading of data from the ESC can be interrupted by the
 524:Lib/ssc_app/src/el9800hw.c ****            AL Event ISR, so every byte will be written separate */
ARM GAS  /tmp/ccekCAnU.s 			page 38


 525:Lib/ssc_app/src/el9800hw.c ****         DISABLE_AL_EVENT_INT;
 599              		.loc 1 525 9 is_stmt 1 view .LVU126
 600              	.LBB24:
 601              	.LBI24:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 602              		.loc 2 960 27 view .LVU127
 603              	.LBB25:
 604              		.loc 2 962 3 view .LVU128
 605              		.syntax unified
 606              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 607 000a 72B6     		cpsid i
 608              	@ 0 "" 2
 609              		.thumb
 610              		.syntax unified
 611              	.LBE25:
 612              	.LBE24:
 526:Lib/ssc_app/src/el9800hw.c **** #endif
 527:Lib/ssc_app/src/el9800hw.c ****         /* HBu 24.01.06: wrong parameter ESC_RD */
 528:Lib/ssc_app/src/el9800hw.c ****         AddressingEsc(Address, ESC_WR);
 613              		.loc 1 528 9 view .LVU129
 614 000c 0421     		movs	r1, #4
 615 000e 2846     		mov	r0, r5
 616 0010 FFF7FEFF 		bl	AddressingEsc
 617              	.LVL50:
 529:Lib/ssc_app/src/el9800hw.c **** 
 530:Lib/ssc_app/src/el9800hw.c ****         /* enable the ESC interrupt to get the AL Event ISR the chance to interrupt */
 531:Lib/ssc_app/src/el9800hw.c ****         /* SPI1_BUF must be read, otherwise the module will not transfer the next received data fro
 532:Lib/ssc_app/src/el9800hw.c ****         dummy = WR_CMD(*pTmpData++);
 618              		.loc 1 532 9 view .LVU130
 619              		.loc 1 532 17 is_stmt 0 view .LVU131
 620 0014 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 621              	.LVL51:
 622              		.loc 1 532 17 view .LVU132
 623 0018 FFF7FEFF 		bl	WR_CMD
 624              	.LVL52:
 625              		.loc 1 532 15 view .LVU133
 626 001c 8DF80700 		strb	r0, [sp, #7]
 533:Lib/ssc_app/src/el9800hw.c **** 
 534:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 535:Lib/ssc_app/src/el9800hw.c ****         ENABLE_AL_EVENT_INT;
 627              		.loc 1 535 9 is_stmt 1 view .LVU134
 628              	.LBB26:
 629              	.LBI26:
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 630              		.loc 2 949 27 view .LVU135
 631              	.LBB27:
 951:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 632              		.loc 2 951 3 view .LVU136
 633              		.syntax unified
 634              	@ 951 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 635 0020 62B6     		cpsie i
 636              	@ 0 "" 2
 637              		.thumb
 638              		.syntax unified
 639              	.LBE27:
 640              	.LBE26:
 536:Lib/ssc_app/src/el9800hw.c **** #endif
ARM GAS  /tmp/ccekCAnU.s 			page 39


 537:Lib/ssc_app/src/el9800hw.c **** 
 538:Lib/ssc_app/src/el9800hw.c ****         DESELECT_SPI;
 641              		.loc 1 538 9 view .LVU137
 642 0022 0122     		movs	r2, #1
 643 0024 4FF48051 		mov	r1, #4096
 644 0028 0548     		ldr	r0, .L45
 645 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 646              	.LVL53:
 647              		.loc 1 538 21 view .LVU138
 539:Lib/ssc_app/src/el9800hw.c ****         /* next address */
 540:Lib/ssc_app/src/el9800hw.c ****         Address++;
 648              		.loc 1 540 9 view .LVU139
 649              		.loc 1 540 16 is_stmt 0 view .LVU140
 650 002e 0135     		adds	r5, r5, #1
 651              	.LVL54:
 652              		.loc 1 540 16 view .LVU141
 653 0030 ADB2     		uxth	r5, r5
 654              	.LVL55:
 520:Lib/ssc_app/src/el9800hw.c ****     {
 655              		.loc 1 520 13 view .LVU142
 656 0032 3246     		mov	r2, r6
 657              	.LVL56:
 658              	.L42:
 520:Lib/ssc_app/src/el9800hw.c ****     {
 659              		.loc 1 520 11 is_stmt 1 view .LVU143
 520:Lib/ssc_app/src/el9800hw.c ****     {
 660              		.loc 1 520 13 is_stmt 0 view .LVU144
 661 0034 531E     		subs	r3, r2, #1
 662 0036 9EB2     		uxth	r6, r3
 663              	.LVL57:
 520:Lib/ssc_app/src/el9800hw.c ****     {
 664              		.loc 1 520 11 view .LVU145
 665 0038 002A     		cmp	r2, #0
 666 003a E6D1     		bne	.L43
 541:Lib/ssc_app/src/el9800hw.c ****     }
 542:Lib/ssc_app/src/el9800hw.c **** }
 667              		.loc 1 542 1 view .LVU146
 668 003c 02B0     		add	sp, sp, #8
 669              		.cfi_def_cfa_offset 16
 670              		@ sp needed
 671 003e 70BD     		pop	{r4, r5, r6, pc}
 672              	.LVL58:
 673              	.L46:
 674              		.loc 1 542 1 view .LVU147
 675              		.align	2
 676              	.L45:
 677 0040 00040240 		.word	1073873920
 678              		.cfi_endproc
 679              	.LFE144:
 681              		.section	.text.HW_Init,"ax",%progbits
 682              		.align	1
 683              		.global	HW_Init
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 688              	HW_Init:
 689              	.LFB138:
ARM GAS  /tmp/ccekCAnU.s 			page 40


 311:Lib/ssc_app/src/el9800hw.c ****     UINT16 intMask;
 690              		.loc 1 311 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 8
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694 0000 10B5     		push	{r4, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 14, -4
 698 0002 82B0     		sub	sp, sp, #8
 699              		.cfi_def_cfa_offset 16
 700              	.L48:
 312:Lib/ssc_app/src/el9800hw.c ****     /* initialize the SSP registers for the ESC SPI */
 701              		.loc 1 312 5 discriminator 1 view .LVU149
 315:Lib/ssc_app/src/el9800hw.c ****     {
 702              		.loc 1 315 5 discriminator 1 view .LVU150
 317:Lib/ssc_app/src/el9800hw.c ****         HW_EscWriteWord(intMask, ESC_AL_EVENTMASK_OFFSET);
 703              		.loc 1 317 9 discriminator 1 view .LVU151
 317:Lib/ssc_app/src/el9800hw.c ****         HW_EscWriteWord(intMask, ESC_AL_EVENTMASK_OFFSET);
 704              		.loc 1 317 17 is_stmt 0 discriminator 1 view .LVU152
 705 0004 9323     		movs	r3, #147
 706 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
 318:Lib/ssc_app/src/el9800hw.c ****         intMask = 0;
 707              		.loc 1 318 9 is_stmt 1 discriminator 1 view .LVU153
 708 000a 0222     		movs	r2, #2
 709 000c 4FF40171 		mov	r1, #516
 710 0010 0DF10600 		add	r0, sp, #6
 711 0014 FFF7FEFF 		bl	HW_EscWrite
 712              	.LVL59:
 319:Lib/ssc_app/src/el9800hw.c ****         HW_EscReadWord(intMask, ESC_AL_EVENTMASK_OFFSET);
 713              		.loc 1 319 9 discriminator 1 view .LVU154
 319:Lib/ssc_app/src/el9800hw.c ****         HW_EscReadWord(intMask, ESC_AL_EVENTMASK_OFFSET);
 714              		.loc 1 319 17 is_stmt 0 discriminator 1 view .LVU155
 715 0018 0023     		movs	r3, #0
 716 001a ADF80630 		strh	r3, [sp, #6]	@ movhi
 320:Lib/ssc_app/src/el9800hw.c ****     } while (intMask != 0x93);
 717              		.loc 1 320 9 is_stmt 1 discriminator 1 view .LVU156
 718 001e 0222     		movs	r2, #2
 719 0020 4FF40171 		mov	r1, #516
 720 0024 0DF10600 		add	r0, sp, #6
 721 0028 FFF7FEFF 		bl	HW_EscRead
 722              	.LVL60:
 321:Lib/ssc_app/src/el9800hw.c **** 
 723              		.loc 1 321 13 discriminator 1 view .LVU157
 321:Lib/ssc_app/src/el9800hw.c **** 
 724              		.loc 1 321 22 is_stmt 0 discriminator 1 view .LVU158
 725 002c BDF80630 		ldrh	r3, [sp, #6]
 321:Lib/ssc_app/src/el9800hw.c **** 
 726              		.loc 1 321 5 discriminator 1 view .LVU159
 727 0030 932B     		cmp	r3, #147
 728 0032 E7D1     		bne	.L48
 323:Lib/ssc_app/src/el9800hw.c **** 
 729              		.loc 1 323 5 is_stmt 1 view .LVU160
 323:Lib/ssc_app/src/el9800hw.c **** 
 730              		.loc 1 323 13 is_stmt 0 view .LVU161
 731 0034 0024     		movs	r4, #0
 732 0036 ADF80640 		strh	r4, [sp, #6]	@ movhi
ARM GAS  /tmp/ccekCAnU.s 			page 41


 325:Lib/ssc_app/src/el9800hw.c **** 
 733              		.loc 1 325 5 is_stmt 1 view .LVU162
 734 003a 0422     		movs	r2, #4
 735 003c 4FF40171 		mov	r1, #516
 736 0040 0DF10600 		add	r0, sp, #6
 737 0044 FFF7FEFF 		bl	HW_EscWrite
 738              	.LVL61:
 328:Lib/ssc_app/src/el9800hw.c ****     ENABLE_ESC_INT();
 739              		.loc 1 328 17 view .LVU163
 329:Lib/ssc_app/src/el9800hw.c **** #endif
 740              		.loc 1 329 5 view .LVU164
 741 0048 1720     		movs	r0, #23
 742 004a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 743              	.LVL62:
 336:Lib/ssc_app/src/el9800hw.c ****     ENABLE_SYNC1_INT;
 744              		.loc 1 336 5 view .LVU165
 745 004e 0620     		movs	r0, #6
 746 0050 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 747              	.LVL63:
 336:Lib/ssc_app/src/el9800hw.c ****     ENABLE_SYNC1_INT;
 748              		.loc 1 336 21 view .LVU166
 337:Lib/ssc_app/src/el9800hw.c **** #endif
 749              		.loc 1 337 5 view .LVU167
 750 0054 0720     		movs	r0, #7
 751 0056 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 752              	.LVL64:
 337:Lib/ssc_app/src/el9800hw.c **** #endif
 753              		.loc 1 337 21 view .LVU168
 340:Lib/ssc_app/src/el9800hw.c ****     START_ECAT_TIMER;
 754              		.loc 1 340 20 view .LVU169
 341:Lib/ssc_app/src/el9800hw.c **** 
 755              		.loc 1 341 5 view .LVU170
 756 005a 1C20     		movs	r0, #28
 757 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 758              	.LVL65:
 341:Lib/ssc_app/src/el9800hw.c **** 
 759              		.loc 1 341 21 view .LVU171
 345:Lib/ssc_app/src/el9800hw.c **** #endif
 760              		.loc 1 345 5 view .LVU172
 761              	.LBB28:
 762              	.LBI28:
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 763              		.loc 2 949 27 view .LVU173
 764              	.LBB29:
 951:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 765              		.loc 2 951 3 view .LVU174
 766              		.syntax unified
 767              	@ 951 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 768 0060 62B6     		cpsie i
 769              	@ 0 "" 2
 770              		.thumb
 771              		.syntax unified
 772              	.LBE29:
 773              	.LBE28:
 348:Lib/ssc_app/src/el9800hw.c **** }
 774              		.loc 1 348 5 view .LVU175
 349:Lib/ssc_app/src/el9800hw.c **** 
ARM GAS  /tmp/ccekCAnU.s 			page 42


 775              		.loc 1 349 1 is_stmt 0 view .LVU176
 776 0062 2046     		mov	r0, r4
 777 0064 02B0     		add	sp, sp, #8
 778              		.cfi_def_cfa_offset 8
 779              		@ sp needed
 780 0066 10BD     		pop	{r4, pc}
 781              		.cfi_endproc
 782              	.LFE138:
 784              		.section	.text.HW_EscWriteIsr,"ax",%progbits
 785              		.align	1
 786              		.global	HW_EscWriteIsr
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 791              	HW_EscWriteIsr:
 792              	.LVL66:
 793              	.LFB145:
 543:Lib/ssc_app/src/el9800hw.c **** #if INTERRUPTS_SUPPORTED
 544:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 545:Lib/ssc_app/src/el9800hw.c **** /**
 546:Lib/ssc_app/src/el9800hw.c ****  \param pData        Pointer to a byte array which holds data to write or saves write data.
 547:Lib/ssc_app/src/el9800hw.c ****  \param Address     EtherCAT ASIC address ( upper limit is 0x1FFF )    for access.
 548:Lib/ssc_app/src/el9800hw.c ****  \param Len            Access size in Bytes.
 549:Lib/ssc_app/src/el9800hw.c **** 
 550:Lib/ssc_app/src/el9800hw.c ****  \brief  The SPI PDI requires an extra ESC write access functions from interrupts service routines.
 551:Lib/ssc_app/src/el9800hw.c ****         The behaviour is equal to "HW_EscWrite()"
 552:Lib/ssc_app/src/el9800hw.c **** */
 553:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 554:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO4 && AL_EVENT_ENABLED
 555:Lib/ssc_app/src/el9800hw.c **** /* the pragma interrupt_level is used to tell the compiler that these functions will not
 556:Lib/ssc_app/src/el9800hw.c ****    be called at the same time from the main function and the interrupt routine */
 557:Lib/ssc_app/src/el9800hw.c **** // #pragma interrupt_level 1
 558:Lib/ssc_app/src/el9800hw.c **** #endif
 559:Lib/ssc_app/src/el9800hw.c **** void HW_EscWriteIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 560:Lib/ssc_app/src/el9800hw.c **** {
 794              		.loc 1 560 1 is_stmt 1 view -0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		.loc 1 560 1 is_stmt 0 view .LVU178
 799 0000 70B5     		push	{r4, r5, r6, lr}
 800              		.cfi_def_cfa_offset 16
 801              		.cfi_offset 4, -16
 802              		.cfi_offset 5, -12
 803              		.cfi_offset 6, -8
 804              		.cfi_offset 14, -4
 805 0002 82B0     		sub	sp, sp, #8
 806              		.cfi_def_cfa_offset 24
 807 0004 0646     		mov	r6, r0
 808 0006 0846     		mov	r0, r1
 809              	.LVL67:
 810              		.loc 1 560 1 view .LVU179
 811 0008 1546     		mov	r5, r2
 561:Lib/ssc_app/src/el9800hw.c ****     UINT16 i = Len;
 812              		.loc 1 561 5 is_stmt 1 view .LVU180
 813              	.LVL68:
 562:Lib/ssc_app/src/el9800hw.c ****     VARVOLATILE UINT16 dummy;
ARM GAS  /tmp/ccekCAnU.s 			page 43


 814              		.loc 1 562 5 view .LVU181
 563:Lib/ssc_app/src/el9800hw.c ****     UINT8 *pTmpData = (UINT8 *)pData;
 815              		.loc 1 563 5 view .LVU182
 564:Lib/ssc_app/src/el9800hw.c **** 
 565:Lib/ssc_app/src/el9800hw.c ****     /* send the address and command to the ESC */
 566:Lib/ssc_app/src/el9800hw.c ****     ISR_AddressingEsc(Address, ESC_WR);
 816              		.loc 1 566 5 view .LVU183
 817 000a 0421     		movs	r1, #4
 818              	.LVL69:
 819              		.loc 1 566 5 is_stmt 0 view .LVU184
 820 000c FFF7FEFF 		bl	ISR_AddressingEsc
 821              	.LVL70:
 567:Lib/ssc_app/src/el9800hw.c ****     /* loop for all bytes to be written */
 568:Lib/ssc_app/src/el9800hw.c ****     while (i-- > 0)
 822              		.loc 1 568 5 is_stmt 1 view .LVU185
 823              		.loc 1 568 11 is_stmt 0 view .LVU186
 824 0010 07E0     		b	.L51
 825              	.LVL71:
 826              	.L52:
 569:Lib/ssc_app/src/el9800hw.c ****     {
 570:Lib/ssc_app/src/el9800hw.c ****         /* start transmission */
 571:Lib/ssc_app/src/el9800hw.c ****         dummy = WR_CMD(*pTmpData);
 827              		.loc 1 571 9 is_stmt 1 view .LVU187
 828              		.loc 1 571 17 is_stmt 0 view .LVU188
 829 0012 16F8010B 		ldrb	r0, [r6], #1	@ zero_extendqisi2
 830              	.LVL72:
 831              		.loc 1 571 17 view .LVU189
 832 0016 FFF7FEFF 		bl	WR_CMD
 833              	.LVL73:
 834 001a 80B2     		uxth	r0, r0
 835              		.loc 1 571 15 view .LVU190
 836 001c ADF80600 		strh	r0, [sp, #6]	@ movhi
 572:Lib/ssc_app/src/el9800hw.c ****         /* increment data pointer */
 573:Lib/ssc_app/src/el9800hw.c ****         pTmpData++;
 837              		.loc 1 573 9 is_stmt 1 view .LVU191
 838              	.LVL74:
 568:Lib/ssc_app/src/el9800hw.c ****     {
 839              		.loc 1 568 13 is_stmt 0 view .LVU192
 840 0020 2546     		mov	r5, r4
 841              	.LVL75:
 842              	.L51:
 568:Lib/ssc_app/src/el9800hw.c ****     {
 843              		.loc 1 568 11 is_stmt 1 view .LVU193
 568:Lib/ssc_app/src/el9800hw.c ****     {
 844              		.loc 1 568 13 is_stmt 0 view .LVU194
 845 0022 6B1E     		subs	r3, r5, #1
 846 0024 9CB2     		uxth	r4, r3
 847              	.LVL76:
 568:Lib/ssc_app/src/el9800hw.c ****     {
 848              		.loc 1 568 11 view .LVU195
 849 0026 002D     		cmp	r5, #0
 850 0028 F3D1     		bne	.L52
 574:Lib/ssc_app/src/el9800hw.c ****     }
 575:Lib/ssc_app/src/el9800hw.c **** 
 576:Lib/ssc_app/src/el9800hw.c ****     /* there has to be at least 15 ns + CLK/2 after the transmission is finished
 577:Lib/ssc_app/src/el9800hw.c ****        before the SPI1_SEL signal shall be 1 */
 578:Lib/ssc_app/src/el9800hw.c ****     DESELECT_SPI;
ARM GAS  /tmp/ccekCAnU.s 			page 44


 851              		.loc 1 578 5 is_stmt 1 view .LVU196
 852 002a 0122     		movs	r2, #1
 853 002c 4FF48051 		mov	r1, #4096
 854 0030 0248     		ldr	r0, .L54
 855 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 856              	.LVL77:
 857              		.loc 1 578 17 view .LVU197
 579:Lib/ssc_app/src/el9800hw.c **** }
 858              		.loc 1 579 1 is_stmt 0 view .LVU198
 859 0036 02B0     		add	sp, sp, #8
 860              		.cfi_def_cfa_offset 16
 861              		@ sp needed
 862 0038 70BD     		pop	{r4, r5, r6, pc}
 863              	.LVL78:
 864              	.L55:
 865              		.loc 1 579 1 view .LVU199
 866 003a 00BF     		.align	2
 867              	.L54:
 868 003c 00040240 		.word	1073873920
 869              		.cfi_endproc
 870              	.LFE145:
 872              		.section	.text.EXTI9_5_IRQHandler_null,"ax",%progbits
 873              		.align	1
 874              		.global	EXTI9_5_IRQHandler_null
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	EXTI9_5_IRQHandler_null:
 880              	.LFB146:
 580:Lib/ssc_app/src/el9800hw.c **** #endif // #if INTERRUPTS_SUPPORTED
 581:Lib/ssc_app/src/el9800hw.c **** 
 582:Lib/ssc_app/src/el9800hw.c **** #if BOOTSTRAPMODE_SUPPORTED
 583:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 584:Lib/ssc_app/src/el9800hw.c **** /**
 585:Lib/ssc_app/src/el9800hw.c ****  \brief    This function resets the hardware
 586:Lib/ssc_app/src/el9800hw.c **** */
 587:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 588:Lib/ssc_app/src/el9800hw.c **** 
 589:Lib/ssc_app/src/el9800hw.c **** void HW_RestartTarget(void)
 590:Lib/ssc_app/src/el9800hw.c **** {
 591:Lib/ssc_app/src/el9800hw.c **** }
 592:Lib/ssc_app/src/el9800hw.c **** #endif
 593:Lib/ssc_app/src/el9800hw.c **** 
 594:Lib/ssc_app/src/el9800hw.c **** #if ESC_EEPROM_EMULATION
 595:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 596:Lib/ssc_app/src/el9800hw.c **** /**
 597:Lib/ssc_app/src/el9800hw.c **** \return     0 if reload was successful
 598:Lib/ssc_app/src/el9800hw.c **** 
 599:Lib/ssc_app/src/el9800hw.c ****  \brief    This function is called when the master has request an EEPROM reload during EEPROM emula
 600:Lib/ssc_app/src/el9800hw.c **** 
 601:Lib/ssc_app/src/el9800hw.c **** */
 602:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 603:Lib/ssc_app/src/el9800hw.c **** UINT16 HW_EepromReload(void)
 604:Lib/ssc_app/src/el9800hw.c **** {
 605:Lib/ssc_app/src/el9800hw.c ****     return 0;
 606:Lib/ssc_app/src/el9800hw.c **** }
 607:Lib/ssc_app/src/el9800hw.c **** #endif
ARM GAS  /tmp/ccekCAnU.s 			page 45


 608:Lib/ssc_app/src/el9800hw.c **** 
 609:Lib/ssc_app/src/el9800hw.c **** #if AL_EVENT_ENABLED
 610:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 611:Lib/ssc_app/src/el9800hw.c **** /**
 612:Lib/ssc_app/src/el9800hw.c ****  \brief    Interrupt service routine for the PDI interrupt from the EtherCAT Slave Controller
 613:Lib/ssc_app/src/el9800hw.c **** */
 614:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 615:Lib/ssc_app/src/el9800hw.c **** 
 616:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO4
 617:Lib/ssc_app/src/el9800hw.c **** /* the pragma interrupt_level is used to tell the compiler that these functions will not
 618:Lib/ssc_app/src/el9800hw.c ****    be called at the same time from the main function and the interrupt routine */
 619:Lib/ssc_app/src/el9800hw.c **** // #pragma interrupt_level 1
 620:Lib/ssc_app/src/el9800hw.c **** 
 621:Lib/ssc_app/src/el9800hw.c **** // interrupt
 622:Lib/ssc_app/src/el9800hw.c **** // void HWISR_EcatIsr(void)
 623:Lib/ssc_app/src/el9800hw.c **** void EcatIsr(void)
 624:Lib/ssc_app/src/el9800hw.c **** #else
 625:Lib/ssc_app/src/el9800hw.c **** void EcatIsr(void) // void __attribute__ ((__interrupt__, no_auto_psv)) EscIsr(void)
 626:Lib/ssc_app/src/el9800hw.c **** #endif
 627:Lib/ssc_app/src/el9800hw.c **** {
 881              		.loc 1 627 1 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 08B5     		push	{r3, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 3, -8
 888              		.cfi_offset 14, -4
 628:Lib/ssc_app/src/el9800hw.c **** 
 629:Lib/ssc_app/src/el9800hw.c ****     PDI_Isr();
 889              		.loc 1 629 5 view .LVU201
 890 0002 FFF7FEFF 		bl	PDI_Isr
 891              	.LVL79:
 630:Lib/ssc_app/src/el9800hw.c **** 
 631:Lib/ssc_app/src/el9800hw.c ****     /* reset the interrupt flag */
 632:Lib/ssc_app/src/el9800hw.c ****     ACK_ESC_INT;
 892              		.loc 1 632 5 view .LVU202
 893 0006 4FF48070 		mov	r0, #256
 894 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 895              	.LVL80:
 896              		.loc 1 632 16 view .LVU203
 633:Lib/ssc_app/src/el9800hw.c **** }
 897              		.loc 1 633 1 is_stmt 0 view .LVU204
 898 000e 08BD     		pop	{r3, pc}
 899              		.cfi_endproc
 900              	.LFE146:
 902              		.section	.text.EXTI0_IRQHandler_null,"ax",%progbits
 903              		.align	1
 904              		.global	EXTI0_IRQHandler_null
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 909              	EXTI0_IRQHandler_null:
 910              	.LFB147:
 634:Lib/ssc_app/src/el9800hw.c **** #endif // AL_EVENT_ENABLED
 635:Lib/ssc_app/src/el9800hw.c **** 
 636:Lib/ssc_app/src/el9800hw.c **** #if DC_SUPPORTED && _STM32_IO8
ARM GAS  /tmp/ccekCAnU.s 			page 46


 637:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 638:Lib/ssc_app/src/el9800hw.c **** /**
 639:Lib/ssc_app/src/el9800hw.c ****  \brief    Interrupt service routine for the interrupts from SYNC0
 640:Lib/ssc_app/src/el9800hw.c **** */
 641:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 642:Lib/ssc_app/src/el9800hw.c **** 
 643:Lib/ssc_app/src/el9800hw.c **** void Sync0Isr(void)
 644:Lib/ssc_app/src/el9800hw.c **** {
 911              		.loc 1 644 1 is_stmt 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915 0000 08B5     		push	{r3, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 3, -8
 918              		.cfi_offset 14, -4
 645:Lib/ssc_app/src/el9800hw.c ****     Sync0_Isr();
 919              		.loc 1 645 5 view .LVU206
 920 0002 FFF7FEFF 		bl	Sync0_Isr
 921              	.LVL81:
 646:Lib/ssc_app/src/el9800hw.c ****     /* reset the interrupt flag */
 647:Lib/ssc_app/src/el9800hw.c **** 
 648:Lib/ssc_app/src/el9800hw.c ****     ACK_SYNC0_INT;
 922              		.loc 1 648 5 view .LVU207
 923 0006 0120     		movs	r0, #1
 924 0008 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 925              	.LVL82:
 926              		.loc 1 648 18 view .LVU208
 649:Lib/ssc_app/src/el9800hw.c **** }
 927              		.loc 1 649 1 is_stmt 0 view .LVU209
 928 000c 08BD     		pop	{r3, pc}
 929              		.cfi_endproc
 930              	.LFE147:
 932              		.section	.text.EXTI1_IRQHandler_null,"ax",%progbits
 933              		.align	1
 934              		.global	EXTI1_IRQHandler_null
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 939              	EXTI1_IRQHandler_null:
 940              	.LFB148:
 650:Lib/ssc_app/src/el9800hw.c **** /*ECATCHANGE_START(V5.10) HW3*/
 651:Lib/ssc_app/src/el9800hw.c **** /////////////////////////////////////////////////////////////////////////////////////////
 652:Lib/ssc_app/src/el9800hw.c **** /**
 653:Lib/ssc_app/src/el9800hw.c ****  \brief    Interrupt service routine for the interrupts from SYNC1
 654:Lib/ssc_app/src/el9800hw.c **** */
 655:Lib/ssc_app/src/el9800hw.c **** ///////////////////////////////////////////////////////////////////////////////////////
 656:Lib/ssc_app/src/el9800hw.c **** 
 657:Lib/ssc_app/src/el9800hw.c **** void Sync1Isr(void)
 658:Lib/ssc_app/src/el9800hw.c **** {
 941              		.loc 1 658 1 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 08B5     		push	{r3, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 3, -8
ARM GAS  /tmp/ccekCAnU.s 			page 47


 948              		.cfi_offset 14, -4
 659:Lib/ssc_app/src/el9800hw.c ****     Sync1_Isr();
 949              		.loc 1 659 5 view .LVU211
 950 0002 FFF7FEFF 		bl	Sync1_Isr
 951              	.LVL83:
 660:Lib/ssc_app/src/el9800hw.c ****     /* reset the interrupt flag */
 661:Lib/ssc_app/src/el9800hw.c **** 
 662:Lib/ssc_app/src/el9800hw.c ****     ACK_SYNC1_INT;
 952              		.loc 1 662 5 view .LVU212
 953 0006 0220     		movs	r0, #2
 954 0008 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 955              	.LVL84:
 956              		.loc 1 662 18 view .LVU213
 663:Lib/ssc_app/src/el9800hw.c **** }
 957              		.loc 1 663 1 is_stmt 0 view .LVU214
 958 000c 08BD     		pop	{r3, pc}
 959              		.cfi_endproc
 960              	.LFE148:
 962              		.section	.text.TIM2_IRQHandler_null,"ax",%progbits
 963              		.align	1
 964              		.global	TIM2_IRQHandler_null
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 969              	TIM2_IRQHandler_null:
 970              	.LFB149:
 664:Lib/ssc_app/src/el9800hw.c **** /*ECATCHANGE_END(V5.10) HW3*/
 665:Lib/ssc_app/src/el9800hw.c **** #endif
 666:Lib/ssc_app/src/el9800hw.c **** 
 667:Lib/ssc_app/src/el9800hw.c **** #if _STM32_IO8 && ECAT_TIMER_INT
 668:Lib/ssc_app/src/el9800hw.c **** // Timer 2 ISR (0.1ms)
 669:Lib/ssc_app/src/el9800hw.c **** void TimerIsr(void)
 670:Lib/ssc_app/src/el9800hw.c **** {
 971              		.loc 1 670 1 is_stmt 1 view -0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975 0000 08B5     		push	{r3, lr}
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 3, -8
 978              		.cfi_offset 14, -4
 671:Lib/ssc_app/src/el9800hw.c ****     DISABLE_ESC_INT();
 979              		.loc 1 671 5 view .LVU216
 980 0002 1720     		movs	r0, #23
 981 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 982              	.LVL85:
 672:Lib/ssc_app/src/el9800hw.c **** 
 673:Lib/ssc_app/src/el9800hw.c ****     ECAT_CheckTimer();
 983              		.loc 1 673 5 view .LVU217
 984 0008 FFF7FEFF 		bl	ECAT_CheckTimer
 985              	.LVL86:
 674:Lib/ssc_app/src/el9800hw.c **** 
 675:Lib/ssc_app/src/el9800hw.c ****     ECAT_TIMER_ACK_INT;
 986              		.loc 1 675 5 view .LVU218
 987 000c 0348     		ldr	r0, .L64
 988 000e FFF7FEFF 		bl	HAL_TIM_IRQHandler
 989              	.LVL87:
ARM GAS  /tmp/ccekCAnU.s 			page 48


 990              		.loc 1 675 23 view .LVU219
 676:Lib/ssc_app/src/el9800hw.c **** 
 677:Lib/ssc_app/src/el9800hw.c ****     ENABLE_ESC_INT();
 991              		.loc 1 677 5 view .LVU220
 992 0012 1720     		movs	r0, #23
 993 0014 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 994              	.LVL88:
 678:Lib/ssc_app/src/el9800hw.c **** }
 995              		.loc 1 678 1 is_stmt 0 view .LVU221
 996 0018 08BD     		pop	{r3, pc}
 997              	.L65:
 998 001a 00BF     		.align	2
 999              	.L64:
 1000 001c 00000000 		.word	htim2
 1001              		.cfi_endproc
 1002              	.LFE149:
 1004              		.global	EscALEvent
 1005              		.section	.bss.EscALEvent,"aw",%nobits
 1006              		.align	2
 1007              		.set	.LANCHOR0,. + 0
 1010              	EscALEvent:
 1011 0000 0000     		.space	2
 1012              		.text
 1013              	.Letext0:
 1014              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1015              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1016              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
 1017              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1018              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1019              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1020              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1021              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1022              		.file 11 "Lib/ssc_app/include/ecatappl.h"
 1023              		.file 12 "Lib/ecat_bsp/include/ecat_spi.h"
ARM GAS  /tmp/ccekCAnU.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 el9800hw.c
     /tmp/ccekCAnU.s:20     .text.AddressingEsc:0000000000000000 $t
     /tmp/ccekCAnU.s:25     .text.AddressingEsc:0000000000000000 AddressingEsc
     /tmp/ccekCAnU.s:81     .text.AddressingEsc:0000000000000030 $d
     /tmp/ccekCAnU.s:86     .text.ISR_AddressingEsc:0000000000000000 $t
     /tmp/ccekCAnU.s:91     .text.ISR_AddressingEsc:0000000000000000 ISR_AddressingEsc
     /tmp/ccekCAnU.s:146    .text.ISR_AddressingEsc:0000000000000030 $d
     /tmp/ccekCAnU.s:151    .text.HW_Release:0000000000000000 $t
     /tmp/ccekCAnU.s:157    .text.HW_Release:0000000000000000 HW_Release
     /tmp/ccekCAnU.s:170    .text.HW_EscRead:0000000000000000 $t
     /tmp/ccekCAnU.s:176    .text.HW_EscRead:0000000000000000 HW_EscRead
     /tmp/ccekCAnU.s:275    .text.HW_EscRead:000000000000003c $d
     /tmp/ccekCAnU.s:280    .text.HW_EscReadIsr:0000000000000000 $t
     /tmp/ccekCAnU.s:286    .text.HW_EscReadIsr:0000000000000000 HW_EscReadIsr
     /tmp/ccekCAnU.s:368    .text.HW_EscReadIsr:000000000000003c $d
     /tmp/ccekCAnU.s:373    .text.GetInterruptRegister:0000000000000000 $t
     /tmp/ccekCAnU.s:378    .text.GetInterruptRegister:0000000000000000 GetInterruptRegister
     /tmp/ccekCAnU.s:442    .text.GetInterruptRegister:0000000000000030 $d
     /tmp/ccekCAnU.s:448    .text.HW_GetALEventRegister:0000000000000000 $t
     /tmp/ccekCAnU.s:454    .text.HW_GetALEventRegister:0000000000000000 HW_GetALEventRegister
     /tmp/ccekCAnU.s:475    .text.HW_GetALEventRegister:000000000000000c $d
     /tmp/ccekCAnU.s:480    .text.ISR_GetInterruptRegister:0000000000000000 $t
     /tmp/ccekCAnU.s:485    .text.ISR_GetInterruptRegister:0000000000000000 ISR_GetInterruptRegister
     /tmp/ccekCAnU.s:528    .text.ISR_GetInterruptRegister:0000000000000038 $d
     /tmp/ccekCAnU.s:534    .text.HW_GetALEventRegister_Isr:0000000000000000 $t
     /tmp/ccekCAnU.s:540    .text.HW_GetALEventRegister_Isr:0000000000000000 HW_GetALEventRegister_Isr
     /tmp/ccekCAnU.s:561    .text.HW_GetALEventRegister_Isr:000000000000000c $d
     /tmp/ccekCAnU.s:566    .text.HW_EscWrite:0000000000000000 $t
     /tmp/ccekCAnU.s:572    .text.HW_EscWrite:0000000000000000 HW_EscWrite
     /tmp/ccekCAnU.s:677    .text.HW_EscWrite:0000000000000040 $d
     /tmp/ccekCAnU.s:682    .text.HW_Init:0000000000000000 $t
     /tmp/ccekCAnU.s:688    .text.HW_Init:0000000000000000 HW_Init
     /tmp/ccekCAnU.s:785    .text.HW_EscWriteIsr:0000000000000000 $t
     /tmp/ccekCAnU.s:791    .text.HW_EscWriteIsr:0000000000000000 HW_EscWriteIsr
     /tmp/ccekCAnU.s:868    .text.HW_EscWriteIsr:000000000000003c $d
     /tmp/ccekCAnU.s:873    .text.EXTI9_5_IRQHandler_null:0000000000000000 $t
     /tmp/ccekCAnU.s:879    .text.EXTI9_5_IRQHandler_null:0000000000000000 EXTI9_5_IRQHandler_null
     /tmp/ccekCAnU.s:903    .text.EXTI0_IRQHandler_null:0000000000000000 $t
     /tmp/ccekCAnU.s:909    .text.EXTI0_IRQHandler_null:0000000000000000 EXTI0_IRQHandler_null
     /tmp/ccekCAnU.s:933    .text.EXTI1_IRQHandler_null:0000000000000000 $t
     /tmp/ccekCAnU.s:939    .text.EXTI1_IRQHandler_null:0000000000000000 EXTI1_IRQHandler_null
     /tmp/ccekCAnU.s:963    .text.TIM2_IRQHandler_null:0000000000000000 $t
     /tmp/ccekCAnU.s:969    .text.TIM2_IRQHandler_null:0000000000000000 TIM2_IRQHandler_null
     /tmp/ccekCAnU.s:1000   .text.TIM2_IRQHandler_null:000000000000001c $d
     /tmp/ccekCAnU.s:1010   .bss.EscALEvent:0000000000000000 EscALEvent
     /tmp/ccekCAnU.s:1006   .bss.EscALEvent:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
WR_CMD
HAL_NVIC_EnableIRQ
PDI_Isr
HAL_GPIO_EXTI_IRQHandler
Sync0_Isr
Sync1_Isr
HAL_NVIC_DisableIRQ
ARM GAS  /tmp/ccekCAnU.s 			page 50


ECAT_CheckTimer
HAL_TIM_IRQHandler
htim2
