ARM GAS  /tmp/ccd2INFf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ecatslv.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ResetALEventMask,"ax",%progbits
  20              		.align	1
  21              		.global	ResetALEventMask
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ResetALEventMask:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "Lib/ssc/src/ecatslv.c"
   1:Lib/ssc/src/ecatslv.c **** /**
   2:Lib/ssc/src/ecatslv.c **** \addtogroup ESM EtherCAT State Machine
   3:Lib/ssc/src/ecatslv.c **** @{
   4:Lib/ssc/src/ecatslv.c **** */
   5:Lib/ssc/src/ecatslv.c **** 
   6:Lib/ssc/src/ecatslv.c **** /**
   7:Lib/ssc/src/ecatslv.c **** \file ecatslv.c
   8:Lib/ssc/src/ecatslv.c **** \author EthercatSSC@beckhoff.com
   9:Lib/ssc/src/ecatslv.c **** \brief Implementation
  10:Lib/ssc/src/ecatslv.c **** This file contains the EtherCAT State Machine.
  11:Lib/ssc/src/ecatslv.c **** 
  12:Lib/ssc/src/ecatslv.c **** \version 5.11
  13:Lib/ssc/src/ecatslv.c **** 
  14:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.10:<br>
  15:Lib/ssc/src/ecatslv.c **** V5.11 COE3: change 0x10F3.2 (Sync Error limit) from UINT32 to UINT16 (according to the ETG.1020)<br
  16:Lib/ssc/src/ecatslv.c **** V5.11 DIAG4: change parameter handling in DIAG_CreateNewMessage()<br>
  17:Lib/ssc/src/ecatslv.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  18:Lib/ssc/src/ecatslv.c **** V5.11 ECAT4: enhance SM/Sync monitoring for input/output only slaves<br>
  19:Lib/ssc/src/ecatslv.c **** V5.11 ECAT5: "Add missing ""bEscAlEventEnbaled"" initialization if ""AL_EVENT_ENBALED"" is 0"""<br>
  20:Lib/ssc/src/ecatslv.c **** V5.11 ECAT7: add missing big endian swapping<br>
  21:Lib/ssc/src/ecatslv.c **** V5.11 ESC1: update max address calculation<br>
  22:Lib/ssc/src/ecatslv.c **** V5.11 ESM1: update calculation of subordinated cycles<br>
  23:Lib/ssc/src/ecatslv.c **** V5.11 ESM2: DC_SUPPORTED, Sync0 is not supported and Sync0 is generated according register values t
  24:Lib/ssc/src/ecatslv.c **** V5.11 ESM3: update checking of the user configured sync type<br>
  25:Lib/ssc/src/ecatslv.c **** V5.11 ESM4: prevent to go from ErrSafeOP to OP without re enabling Sync0/1<br>
  26:Lib/ssc/src/ecatslv.c **** V5.11 ESM5: DPRAM range was double checked<br>
  27:Lib/ssc/src/ecatslv.c **** V5.11 ESM6: in the SO transition wait by default until the master has send process data<br>
  28:Lib/ssc/src/ecatslv.c **** V5.11 HW1: "move hardware independent functions ""HW_DisableSyncManChannel()"", ""HW_EnableSyncManC
  29:Lib/ssc/src/ecatslv.c **** V5.11 HW2: check during ESM handling if the SM address and length is aligned according the ESC acce
ARM GAS  /tmp/ccd2INFf.s 			page 2


  30:Lib/ssc/src/ecatslv.c **** V5.11 TEST9: "add behaviour 0x2020.7 (SDO requests on 0x3006.0 are set to pending until an FoE read
  31:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.01:<br>
  32:Lib/ssc/src/ecatslv.c **** V5.10 COE1: Define one entry description for all 0x1C3x objects and change data type of SI11,12,13 
  33:Lib/ssc/src/ecatslv.c **** V5.10 DIAG1: Define diagmessage textIDs<br>
  34:Lib/ssc/src/ecatslv.c **** V5.10 ECAT13: Update Synchronisation handling (FreeRun,SM Sync, Sync0, Sync1)<br>
  35:Lib/ssc/src/ecatslv.c ****               Compare DC UINT configuration (by ESC Config data) vs. DC activation register setting
  36:Lib/ssc/src/ecatslv.c ****               Update 0x1C3x entries<br>
  37:Lib/ssc/src/ecatslv.c **** V5.10 ESC2: Check if defined SM settings do not exceed the available DPRAM range (in error case AL 
  38:Lib/ssc/src/ecatslv.c **** V5.10 ESC3: Handle DC cControl register values in case of 32Bit ESC access (a Sync activation mask 
  39:Lib/ssc/src/ecatslv.c **** V5.10 ESC4: Mask lower 4 Bit of AL status to get Run led value<br>
  40:Lib/ssc/src/ecatslv.c ****             Invalid RunLed code was calculated if ESC set ECAT Run Led<br>
  41:Lib/ssc/src/ecatslv.c **** V5.10 ESC5: Add missing swapping<br>
  42:Lib/ssc/src/ecatslv.c **** V5.10 ESM2: Update "bApplEsmPending" flag during a transition to a lower state<br>
  43:Lib/ssc/src/ecatslv.c **** V5.10 ESM3: Add "volatile" directive for ESM dummy variables<br>
  44:Lib/ssc/src/ecatslv.c **** V5.10 HW5: Block ESC interrupts during Timer ISR<br>
  45:Lib/ssc/src/ecatslv.c **** V5.10 TEST9: Add option to prevent SM3 unlock during PS<br>
  46:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.0:<br>
  47:Lib/ssc/src/ecatslv.c **** V5.01 APPL3: Include library demo application<br>
  48:Lib/ssc/src/ecatslv.c **** V5.01 ESC2: Add missed value swapping<br>
  49:Lib/ssc/src/ecatslv.c **** V5.01 ESM1: Don't overwrite the error reason in case of an failed PS transition<br>
  50:Lib/ssc/src/ecatslv.c **** V5.01 ESM2: Don't check the "appl trigger" flag in case on an regular transition to a lower state (
  51:Lib/ssc/src/ecatslv.c **** V5.01 ESM3: Call Error acknowledge indication only if error was acknowledged by the master<br>
  52:Lib/ssc/src/ecatslv.c **** V5.01 HW3: Update blink code of an SM watchdog error<br>
  53:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.42:<br>
  54:Lib/ssc/src/ecatslv.c **** V5.0 ECAT1: Support Explicit Device ID.<br>
  55:Lib/ssc/src/ecatslv.c **** V5.0 ECAT2: Application specific functions are moved to application files.<br>
  56:Lib/ssc/src/ecatslv.c **** V5.0 ECAT3: Global dummy variables used for dummy ESC operations.<br>
  57:Lib/ssc/src/ecatslv.c **** V5.0 ESC1: ESC 32Bit Access added.<br>
  58:Lib/ssc/src/ecatslv.c **** V5.0 ESC2: Support ESC EtherCAT LED Indication.<br>
  59:Lib/ssc/src/ecatslv.c **** V5.0 ESC3: Support EEPROM Emulation.<br>
  60:Lib/ssc/src/ecatslv.c **** V5.0 ESM1: Update "LocalErrorFlag" handling.<br>
  61:Lib/ssc/src/ecatslv.c **** V5.0 ESM2: Update Error Acknowledge by ALControl INIT (without error acknowledge)<br>
  62:Lib/ssc/src/ecatslv.c **** V5.0 ESM3: Handle pending ESM transition<br>
  63:Lib/ssc/src/ecatslv.c **** V5.0 ESM4: ECAT_StateChange() will only be called form application. In case of an communication err
  64:Lib/ssc/src/ecatslv.c **** V5.0 MBX1: Support configuration without mailbox protocol support.<br>
  65:Lib/ssc/src/ecatslv.c **** V5.0 TEST1: Add test application. See Application Note ET9300 for more details.<br>
  66:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.40:<br>
  67:Lib/ssc/src/ecatslv.c **** V4.42 ESM1: Reset local error flag if master set the acknowledge bit (0x120.4)<br>
  68:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.30:<br>
  69:Lib/ssc/src/ecatslv.c **** V4.40 ESM5: Enable output SyncManager if local error acknowledged<br>
  70:Lib/ssc/src/ecatslv.c **** V4.40 HW0: Use common hardware access functions<br>
  71:Lib/ssc/src/ecatslv.c **** V4.40 PDO3: Add support if only input process data is used<br>
  72:Lib/ssc/src/ecatslv.c **** V4.40 ECAT4: Add read SM activation register to acknowledge SM Change event<br>
  73:Lib/ssc/src/ecatslv.c **** V4.40 PDO2: Check if max process data size was exceed<br>
  74:Lib/ssc/src/ecatslv.c **** V4.40 DIAG1: add diagnosis message support<br>
  75:Lib/ssc/src/ecatslv.c **** V4.40 ESM4: Change Check WD setup; add define OP_PD_REQUIRED (defines if process data required in s
  76:Lib/ssc/src/ecatslv.c **** V4.40 WD1: change WD behaviour depending if process data required in OP state<br>
  77:Lib/ssc/src/ecatslv.c **** V4.40 MBX4: Change processing order of mailbox SyncManager flags<br>
  78:Lib/ssc/src/ecatslv.c **** V4.40 ECAT1: Merge content of HW_Main (spihw.c /mcihw.c) to ECAT_Main<br>
  79:Lib/ssc/src/ecatslv.c **** V4.40 ECAT2: Added CheckIfLocalError() to check local flags and set ALStatus /Al Status code if req
  80:Lib/ssc/src/ecatslv.c **** V4.40 ESM2: Add AL_ControlRes() to complete pending state requests. Change SafeOP to OP state respo
  81:Lib/ssc/src/ecatslv.c **** V4.40 ESM1: Prevent double call of StopOutputHandler()<br>
  82:Lib/ssc/src/ecatslv.c **** V4.40 BOOT1: Enable Mailbox SyncManger on state change to BOOT state (to enable FoE)<br>
  83:Lib/ssc/src/ecatslv.c **** V4.40 ESM3: Change State machine behaviour according to ETG.1000 V1.0.2 (state change #26)<br>
  84:Lib/ssc/src/ecatslv.c **** V4.40 LED1: Set error blink code<br>
  85:Lib/ssc/src/ecatslv.c **** V4.40 TIMER1: Added DC_CheckWatchdog() triggered from ECAT_CheckTimer(). Change local Sync0 watchdo
  86:Lib/ssc/src/ecatslv.c **** V4.40 WD1: Change check process data watchdog settings<br>
ARM GAS  /tmp/ccd2INFf.s 			page 3


  87:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.20:<br>
  88:Lib/ssc/src/ecatslv.c **** V4.30 OBJ 3: initialize the object dictionary in state change INIT->PREOP; clear object dictionary 
  89:Lib/ssc/src/ecatslv.c **** V4.30 SYNC: add 0x1C32:10; 0x1C33:10 (Sync0 cycle), change synchronisation control functionality<br
  90:Lib/ssc/src/ecatslv.c **** V4.30 CiA402: add CiA402_Init() call in state change from PREOP to SAFEOP if DC synchronisation is 
  91:Lib/ssc/src/ecatslv.c ****                    else the Init function is called when bus cycle time is calculated [CalcSMCycleT
  92:Lib/ssc/src/ecatslv.c ****                    trigger error handling if the EtherCAT state machine gets a transition from OP t
  93:Lib/ssc/src/ecatslv.c **** V4.20 ECAT 1: add LEGACY_MODE behaviour in ECAT_CheckWatchdog()<br>
  94:Lib/ssc/src/ecatslv.c **** V4.20 DC 1: Add DC pending state machine handling and Dc watchdog functionality<br>
  95:Lib/ssc/src/ecatslv.c **** V4.20 ESM 2: Add State transition from BOOT to INIT<br>
  96:Lib/ssc/src/ecatslv.c **** V4.20 ESM 1: Non LEGACY_MODE State change handling<br>
  97:Lib/ssc/src/ecatslv.c **** V4.11 Renamed the function parameter "code" of Function "SendSmFailedEmergency() to avoid<br>
  98:Lib/ssc/src/ecatslv.c **** problems with some compilers"<br>
  99:Lib/ssc/src/ecatslv.c **** V4.11 ECAT 1: Fixed a possible problem with state change Init -> SafeOP. The output syncmanager<br>
 100:Lib/ssc/src/ecatslv.c **** was enabled by the state change-flag and not by the actual state<br>
 101:Lib/ssc/src/ecatslv.c **** V4.11 LED 1: Clear the error LED during error acknowledgement<br>
 102:Lib/ssc/src/ecatslv.c **** V4.11 ESC 1: fixed size of MBXHEADER in the TFOEMBX struct <br>
 103:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.08:<br>
 104:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 1: clear bEcatOutputsReceived in startMailboxhandler()<br>
 105:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 2: clear bEcatOutputsReceived in stopMailboxhandler()<br>
 106:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 3: when switching from INIT to BOOT the SM settings shall be checked<br>
 107:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 4: APPL_StartInputHandler shall always be called and bEcatInputUpdateRunning shall alway
 108:Lib/ssc/src/ecatslv.c ****               in StartInputHandler independent of the input size<br>
 109:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 5: AL_ControlInd: the error acknowledge behaviour was changed<br>
 110:Lib/ssc/src/ecatslv.c ****               according to the protocol enhancements and the conformance test<br>
 111:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 6: AL_ControlInd: if a state transitions failed the corresponding stop function is<br>
 112:Lib/ssc/src/ecatslv.c ****               called to get a consistent set of variables<br>
 113:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 7: the local application requested to leave the state OP so we have to disable the SM2<b
 114:Lib/ssc/src/ecatslv.c ****                    and make the state change from OP to SAFEOP by calling StopOutputHandler<br>
 115:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 8: the AL Status Code has to be reset if the error was acknowledged by the master<br>
 116:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 9: ECAT_StateChange: when waiting for a State Change response from the application the<b
 117:Lib/ssc/src/ecatslv.c ****               AL Status shall only be written if the final state was reached<br>
 118:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.07:<br>
 119:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 1: The watchdog value was not rounded up<br>
 120:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 2: The value of u16WdValue was not set 0 if the register 0x420 is 0<br>
 121:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 3: The AlStatusCode is changed as parameter of the function AL_ControlInd<br>
 122:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 4: In a state transition OP2PREOP, SAFEOP2INIT or OP2INIT is requested,<br>
 123:Lib/ssc/src/ecatslv.c ****               this was not working correctly if one of the application functions<br>
 124:Lib/ssc/src/ecatslv.c ****               APPL_StopInputHandler or APPL_StopOutputHandler were returning NOERROR_INWORK<br>
 125:Lib/ssc/src/ecatslv.c ****               (because only the first state transition was made in that case)<br>
 126:Lib/ssc/src/ecatslv.c **** V4.08 AOE 1:    AoE was added<br>
 127:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.06:<br>
 128:Lib/ssc/src/ecatslv.c **** V4.07 ECAT 1: The sources for SPI and MCI were merged (in ecat_def.h<br>
 129:Lib/ssc/src/ecatslv.c ****                    set the switch MCI_HW to 1 when using the MCI,<br>
 130:Lib/ssc/src/ecatslv.c ****                    set the switch SPI_HW to 1 when using the SPI<br>
 131:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.00:<br>
 132:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 1: The Output sync Manager was not disabled when the state OP was left<br>
 133:Lib/ssc/src/ecatslv.c ****               by a local request (watchdog or io error)<br>
 134:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 2: APPL_StopOutputHandler returns an UINT16<br>
 135:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 3: TwinCAT compatibility mode: The state transition to OP is allowed when the<br>
 136:Lib/ssc/src/ecatslv.c ****                     WD-Trigger-Bit of the SM2-Control-Byte (0x814.6) is FALSE, in that case the<br>
 137:Lib/ssc/src/ecatslv.c ****                     watchdog will not be started before the outputs were received the first time<br
 138:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 4: "else" was too much<br>
 139:Lib/ssc/src/ecatslv.c **** <br>Changes to version V3.20:<br>
 140:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 1: The handling of the Sync Manager Parameter was included according to<br>
 141:Lib/ssc/src/ecatslv.c ****               the EtherCAT Guidelines and Protocol Enhancements Specification<br>
 142:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 2: The output sync manager is initialized during the state transition<br>
 143:Lib/ssc/src/ecatslv.c ****               from PREOP to SAFEOP that the master can check if the slave could update<br>
ARM GAS  /tmp/ccd2INFf.s 			page 4


 144:Lib/ssc/src/ecatslv.c ****               inputs and outputs before switching the slave to OP<br>
 145:Lib/ssc/src/ecatslv.c ****               behaviour according to the EtherCAT Guidelines and Protocol Enhancements Specificatio
 146:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 3: The watchdog will be enabled in SAFE-OP that it can be checked if the last SM event<b
 147:Lib/ssc/src/ecatslv.c ****               was received during the watchdog time before switching to OP<br>
 148:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 4: The function CheckSmChannelParameters is included in the function<br>
 149:Lib/ssc/src/ecatslv.c ****               CheckSmSettings to get a better overview<br>
 150:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 5: In synchronous mode the slave should support 1- and 3-buffer mode, 3-buffer mode<br>
 151:Lib/ssc/src/ecatslv.c ****               should be the standard setting, because the controlling if the process data was updat
 152:Lib/ssc/src/ecatslv.c ****               should be done with the TxPDO Toggle, but the 1-buffer mode should be setable too,<br
 153:Lib/ssc/src/ecatslv.c ****               that the master could easily check if all slaves are synchronous by checking the<br>
 154:Lib/ssc/src/ecatslv.c ****               the working counter (if the outputs were not read or the inputs were not written<br>
 155:Lib/ssc/src/ecatslv.c ****               the ESC of the slave would not increment the working counter with expected value<br>
 156:Lib/ssc/src/ecatslv.c ****               if the 1-buffer mode is running)<br>
 157:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 6: The function ECAT_StateChange was added, which the application should call if a local
 158:Lib/ssc/src/ecatslv.c ****                    is detected (with the parameters alStatus = STATE_SAFEOP, alStatusCode = error c
 159:Lib/ssc/src/ecatslv.c ****                    or gone (with the parameters alStatus = STATE_OP, alStatusCode = 0)<br>
 160:Lib/ssc/src/ecatslv.c ****                    or if one of the functions APPL_StartMailboxHandler, APPL_StopMailboxHandler, AP
 161:Lib/ssc/src/ecatslv.c ****                    APPL_StopInputHandler, APPL_StartOutputHandler, APPL_StopOutputHandler has retur
 162:Lib/ssc/src/ecatslv.c ****                    to acknowledge the last state transition (with the parameters alStatus = new AL-
 163:Lib/ssc/src/ecatslv.c ****                    new AL-Status-Code)<br>
 164:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 7: The return values for the AL-StatusCode were changed to UINT16
 165:Lib/ssc/src/ecatslv.c **** */
 166:Lib/ssc/src/ecatslv.c **** 
 167:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 168:Lib/ssc/src/ecatslv.c **** ------
 169:Lib/ssc/src/ecatslv.c **** ------    Includes
 170:Lib/ssc/src/ecatslv.c **** ------
 171:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 172:Lib/ssc/src/ecatslv.c **** 
 173:Lib/ssc/src/ecatslv.c **** #define    _ECATSLV_    1
 174:Lib/ssc/src/ecatslv.c **** #include "ecatslv.h"
 175:Lib/ssc/src/ecatslv.c **** #undef    _ECATSLV_
 176:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT10*/
 177:Lib/ssc/src/ecatslv.c **** /*remove definition of _ECATSLV_ (#ifdef is used in ecatslv.h)*/
 178:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT10*/
 179:Lib/ssc/src/ecatslv.c **** 
 180:Lib/ssc/src/ecatslv.c **** #include "ecatappl.h"
 181:Lib/ssc/src/ecatslv.c **** 
 182:Lib/ssc/src/ecatslv.c **** 
 183:Lib/ssc/src/ecatslv.c **** 
 184:Lib/ssc/src/ecatslv.c **** 
 185:Lib/ssc/src/ecatslv.c **** #include "mailbox.h"
 186:Lib/ssc/src/ecatslv.c **** 
 187:Lib/ssc/src/ecatslv.c **** #include "ecatcoe.h"
 188:Lib/ssc/src/ecatslv.c **** #include "objdef.h"
 189:Lib/ssc/src/ecatslv.c **** 
 190:Lib/ssc/src/ecatslv.c **** 
 191:Lib/ssc/src/ecatslv.c **** 
 192:Lib/ssc/src/ecatslv.c **** #include "el9800appl.h"
 193:Lib/ssc/src/ecatslv.c **** 
 194:Lib/ssc/src/ecatslv.c **** /*--------------------------------------------------------------------------------------
 195:Lib/ssc/src/ecatslv.c **** ------
 196:Lib/ssc/src/ecatslv.c **** ------    local Types and Defines
 197:Lib/ssc/src/ecatslv.c **** ------
 198:Lib/ssc/src/ecatslv.c **** --------------------------------------------------------------------------------------*/
 199:Lib/ssc/src/ecatslv.c **** 
 200:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 5


 201:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 202:Lib/ssc/src/ecatslv.c **** ------
 203:Lib/ssc/src/ecatslv.c **** ------    local variables and constants
 204:Lib/ssc/src/ecatslv.c **** ------
 205:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 206:Lib/ssc/src/ecatslv.c **** UINT16    u16ALEventMask;                      // Value which will be written to the 0x204 register
 207:Lib/ssc/src/ecatslv.c **** 
 208:Lib/ssc/src/ecatslv.c **** /*Dummy variable to trigger read or writes events in the ESC*/
 209:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16    u16dummy;
 210:Lib/ssc/src/ecatslv.c **** 
 211:Lib/ssc/src/ecatslv.c **** 
 212:Lib/ssc/src/ecatslv.c ****         VARVOLATILE UINT16 SMActivate = 0;
 213:Lib/ssc/src/ecatslv.c **** 
 214:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 215:Lib/ssc/src/ecatslv.c **** TSYNCMAN		SyncManInfo;
 216:Lib/ssc/src/ecatslv.c **** 
 217:Lib/ssc/src/ecatslv.c **** //indicates if the EEPORM was loaded correct
 218:Lib/ssc/src/ecatslv.c **** BOOL EepromLoaded = FALSE;
 219:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 220:Lib/ssc/src/ecatslv.c **** ------
 221:Lib/ssc/src/ecatslv.c **** ------    local functions
 222:Lib/ssc/src/ecatslv.c **** ------
 223:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 224:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 225:Lib/ssc/src/ecatslv.c **** /**
 226:Lib/ssc/src/ecatslv.c ****  \param    intMask        interrupt mask (disabled interrupt shall be zero)
 227:Lib/ssc/src/ecatslv.c **** 
 228:Lib/ssc/src/ecatslv.c ****  \brief    This function makes an logical and with the AL Event Mask register (0x204)
 229:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 230:Lib/ssc/src/ecatslv.c **** void ResetALEventMask(UINT16 intMask)
 231:Lib/ssc/src/ecatslv.c **** {
  30              		.loc 1 231 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 231 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              		.cfi_def_cfa_offset 16
  41 0004 0446     		mov	r4, r0
 232:Lib/ssc/src/ecatslv.c ****     UINT16 mask;
  42              		.loc 1 232 5 is_stmt 1 view .LVU2
 233:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
  43              		.loc 1 233 5 view .LVU3
  44 0006 0222     		movs	r2, #2
  45 0008 4FF40171 		mov	r1, #516
  46 000c 0DF10600 		add	r0, sp, #6
  47              	.LVL1:
  48              		.loc 1 233 5 is_stmt 0 view .LVU4
  49 0010 FFF7FEFF 		bl	HW_EscRead
  50              	.LVL2:
 234:Lib/ssc/src/ecatslv.c ****     
 235:Lib/ssc/src/ecatslv.c ****     mask &= intMask;
  51              		.loc 1 235 5 is_stmt 1 view .LVU5
ARM GAS  /tmp/ccd2INFf.s 			page 6


  52              		.loc 1 235 10 is_stmt 0 view .LVU6
  53 0014 BDF80600 		ldrh	r0, [sp, #6]
  54 0018 0440     		ands	r4, r4, r0
  55 001a ADF80640 		strh	r4, [sp, #6]	@ movhi
 236:Lib/ssc/src/ecatslv.c **** 
 237:Lib/ssc/src/ecatslv.c ****     DISABLE_ESC_INT();
  56              		.loc 1 237 5 is_stmt 1 view .LVU7
  57 001e 1720     		movs	r0, #23
  58 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
  59              	.LVL3:
 238:Lib/ssc/src/ecatslv.c **** 
 239:Lib/ssc/src/ecatslv.c **** 
 240:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
  60              		.loc 1 240 5 view .LVU8
  61 0024 0222     		movs	r2, #2
  62 0026 4FF40171 		mov	r1, #516
  63 002a 0DF10600 		add	r0, sp, #6
  64 002e FFF7FEFF 		bl	HW_EscWrite
  65              	.LVL4:
 241:Lib/ssc/src/ecatslv.c ****     ENABLE_ESC_INT();
  66              		.loc 1 241 5 view .LVU9
  67 0032 1720     		movs	r0, #23
  68 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  69              	.LVL5:
 242:Lib/ssc/src/ecatslv.c **** }
  70              		.loc 1 242 1 is_stmt 0 view .LVU10
  71 0038 02B0     		add	sp, sp, #8
  72              		.cfi_def_cfa_offset 8
  73              		@ sp needed
  74 003a 10BD     		pop	{r4, pc}
  75              		.cfi_endproc
  76              	.LFE134:
  78              		.section	.text.SetALEventMask,"ax",%progbits
  79              		.align	1
  80              		.global	SetALEventMask
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	SetALEventMask:
  86              	.LVL6:
  87              	.LFB135:
 243:Lib/ssc/src/ecatslv.c **** 
 244:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 245:Lib/ssc/src/ecatslv.c **** /**
 246:Lib/ssc/src/ecatslv.c ****  \param    intMask        interrupt mask (enabled interrupt shall be one)
 247:Lib/ssc/src/ecatslv.c **** 
 248:Lib/ssc/src/ecatslv.c ****   \brief    This function makes an logical or with the AL Event Mask register (0x204)
 249:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 250:Lib/ssc/src/ecatslv.c **** void SetALEventMask(UINT16 intMask)
 251:Lib/ssc/src/ecatslv.c **** {
  88              		.loc 1 251 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 8
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		.loc 1 251 1 is_stmt 0 view .LVU12
  93 0000 10B5     		push	{r4, lr}
  94              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccd2INFf.s 			page 7


  95              		.cfi_offset 4, -8
  96              		.cfi_offset 14, -4
  97 0002 82B0     		sub	sp, sp, #8
  98              		.cfi_def_cfa_offset 16
  99 0004 0446     		mov	r4, r0
 252:Lib/ssc/src/ecatslv.c ****     UINT16 mask;
 100              		.loc 1 252 5 is_stmt 1 view .LVU13
 253:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
 101              		.loc 1 253 5 view .LVU14
 102 0006 0222     		movs	r2, #2
 103 0008 4FF40171 		mov	r1, #516
 104 000c 0DF10600 		add	r0, sp, #6
 105              	.LVL7:
 106              		.loc 1 253 5 is_stmt 0 view .LVU15
 107 0010 FFF7FEFF 		bl	HW_EscRead
 108              	.LVL8:
 254:Lib/ssc/src/ecatslv.c ****     
 255:Lib/ssc/src/ecatslv.c ****     mask |= intMask;
 109              		.loc 1 255 5 is_stmt 1 view .LVU16
 110              		.loc 1 255 10 is_stmt 0 view .LVU17
 111 0014 BDF80600 		ldrh	r0, [sp, #6]
 112 0018 0443     		orrs	r4, r4, r0
 113 001a ADF80640 		strh	r4, [sp, #6]	@ movhi
 256:Lib/ssc/src/ecatslv.c **** 
 257:Lib/ssc/src/ecatslv.c ****     DISABLE_ESC_INT();
 114              		.loc 1 257 5 is_stmt 1 view .LVU18
 115 001e 1720     		movs	r0, #23
 116 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 117              	.LVL9:
 258:Lib/ssc/src/ecatslv.c **** 
 259:Lib/ssc/src/ecatslv.c **** 
 260:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
 118              		.loc 1 260 5 view .LVU19
 119 0024 0222     		movs	r2, #2
 120 0026 4FF40171 		mov	r1, #516
 121 002a 0DF10600 		add	r0, sp, #6
 122 002e FFF7FEFF 		bl	HW_EscWrite
 123              	.LVL10:
 261:Lib/ssc/src/ecatslv.c ****     ENABLE_ESC_INT();
 124              		.loc 1 261 5 view .LVU20
 125 0032 1720     		movs	r0, #23
 126 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 127              	.LVL11:
 262:Lib/ssc/src/ecatslv.c **** }
 128              		.loc 1 262 1 is_stmt 0 view .LVU21
 129 0038 02B0     		add	sp, sp, #8
 130              		.cfi_def_cfa_offset 8
 131              		@ sp needed
 132 003a 10BD     		pop	{r4, pc}
 133              		.cfi_endproc
 134              	.LFE135:
 136              		.section	.text.UpdateEEPROMLoadedState,"ax",%progbits
 137              		.align	1
 138              		.global	UpdateEEPROMLoadedState
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
ARM GAS  /tmp/ccd2INFf.s 			page 8


 143              	UpdateEEPROMLoadedState:
 144              	.LFB136:
 263:Lib/ssc/src/ecatslv.c **** 
 264:Lib/ssc/src/ecatslv.c **** 
 265:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 266:Lib/ssc/src/ecatslv.c **** /**
 267:Lib/ssc/src/ecatslv.c **** 
 268:Lib/ssc/src/ecatslv.c **** \brief    This function reads the EEPROM loaded state
 269:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 270:Lib/ssc/src/ecatslv.c **** void UpdateEEPROMLoadedState(void)
 271:Lib/ssc/src/ecatslv.c **** {
 145              		.loc 1 271 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 00B5     		push	{lr}
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 14, -4
 152 0002 83B0     		sub	sp, sp, #12
 153              		.cfi_def_cfa_offset 16
 154              	.LBB2:
 272:Lib/ssc/src/ecatslv.c ****     {
 273:Lib/ssc/src/ecatslv.c ****        UINT16 TmpVar = 0;
 155              		.loc 1 273 8 view .LVU23
 156              		.loc 1 273 15 is_stmt 0 view .LVU24
 157 0004 0023     		movs	r3, #0
 158 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
 274:Lib/ssc/src/ecatslv.c ****        //read EEPROM loaded information
 275:Lib/ssc/src/ecatslv.c ****        HW_EscReadWord(TmpVar, ESC_EEPROM_CONTROL_OFFSET);
 159              		.loc 1 275 8 is_stmt 1 view .LVU25
 160 000a 0222     		movs	r2, #2
 161 000c 40F20251 		movw	r1, #1282
 162 0010 0DF10600 		add	r0, sp, #6
 163 0014 FFF7FEFF 		bl	HW_EscRead
 164              	.LVL12:
 276:Lib/ssc/src/ecatslv.c ****        TmpVar = SWAPWORD(TmpVar);
 165              		.loc 1 276 8 view .LVU26
 166              		.loc 1 276 15 is_stmt 0 view .LVU27
 167 0018 BDF80630 		ldrh	r3, [sp, #6]
 277:Lib/ssc/src/ecatslv.c **** 
 278:Lib/ssc/src/ecatslv.c ****        if (((TmpVar & ESC_EEPROM_ERROR_CRC) > 0)
 168              		.loc 1 278 8 is_stmt 1 view .LVU28
 169              		.loc 1 278 11 is_stmt 0 view .LVU29
 170 001c 13F4006F 		tst	r3, #2048
 171 0020 02D1     		bne	.L6
 279:Lib/ssc/src/ecatslv.c ****           || ((TmpVar & ESC_EEPROM_ERROR_LOAD) > 0))
 172              		.loc 1 279 11 view .LVU30
 173 0022 13F4805F 		tst	r3, #4096
 174 0026 05D0     		beq	.L7
 175              	.L6:
 280:Lib/ssc/src/ecatslv.c ****        {
 281:Lib/ssc/src/ecatslv.c ****           EepromLoaded = FALSE;
 176              		.loc 1 281 11 is_stmt 1 view .LVU31
 177              		.loc 1 281 24 is_stmt 0 view .LVU32
 178 0028 044B     		ldr	r3, .L10
 179 002a 0022     		movs	r2, #0
 180 002c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccd2INFf.s 			page 9


 181              	.L5:
 182              	.LBE2:
 282:Lib/ssc/src/ecatslv.c ****        }
 283:Lib/ssc/src/ecatslv.c ****        else
 284:Lib/ssc/src/ecatslv.c ****        {
 285:Lib/ssc/src/ecatslv.c ****           EepromLoaded = TRUE;
 286:Lib/ssc/src/ecatslv.c ****        }
 287:Lib/ssc/src/ecatslv.c ****     }
 288:Lib/ssc/src/ecatslv.c **** }
 183              		.loc 1 288 1 view .LVU33
 184 002e 03B0     		add	sp, sp, #12
 185              		.cfi_remember_state
 186              		.cfi_def_cfa_offset 4
 187              		@ sp needed
 188 0030 5DF804FB 		ldr	pc, [sp], #4
 189              	.L7:
 190              		.cfi_restore_state
 191              	.LBB3:
 285:Lib/ssc/src/ecatslv.c ****        }
 192              		.loc 1 285 11 is_stmt 1 view .LVU34
 285:Lib/ssc/src/ecatslv.c ****        }
 193              		.loc 1 285 24 is_stmt 0 view .LVU35
 194 0034 014B     		ldr	r3, .L10
 195 0036 0122     		movs	r2, #1
 196 0038 1A70     		strb	r2, [r3]
 197              	.LBE3:
 198              		.loc 1 288 1 view .LVU36
 199 003a F8E7     		b	.L5
 200              	.L11:
 201              		.align	2
 202              	.L10:
 203 003c 00000000 		.word	.LANCHOR0
 204              		.cfi_endproc
 205              	.LFE136:
 207              		.section	.text.GetSyncMan,"ax",%progbits
 208              		.align	1
 209              		.global	GetSyncMan
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	GetSyncMan:
 215              	.LVL13:
 216              	.LFB137:
 289:Lib/ssc/src/ecatslv.c **** 
 290:Lib/ssc/src/ecatslv.c **** 
 291:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 292:Lib/ssc/src/ecatslv.c **** ------
 293:Lib/ssc/src/ecatslv.c **** ------    functions
 294:Lib/ssc/src/ecatslv.c **** ------
 295:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 296:Lib/ssc/src/ecatslv.c **** 
 297:Lib/ssc/src/ecatslv.c **** 
 298:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 299:Lib/ssc/src/ecatslv.c **** /**
 300:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 301:Lib/ssc/src/ecatslv.c **** 
 302:Lib/ssc/src/ecatslv.c ****  \return     pPdSyncMan        Pointer to the settings of requested SYNC Manager channel
ARM GAS  /tmp/ccd2INFf.s 			page 10


 303:Lib/ssc/src/ecatslv.c **** 
 304:Lib/ssc/src/ecatslv.c ****  \brief    This function is called to read the SYNC Manager channel descriptions of the
 305:Lib/ssc/src/ecatslv.c ****              process data SYNC Managers.
 306:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 307:Lib/ssc/src/ecatslv.c **** 
 308:Lib/ssc/src/ecatslv.c **** TSYNCMAN ESCMEM * GetSyncMan( UINT8 channel )
 309:Lib/ssc/src/ecatslv.c **** {
 217              		.loc 1 309 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		.loc 1 309 1 is_stmt 0 view .LVU38
 222 0000 10B5     		push	{r4, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 4, -8
 225              		.cfi_offset 14, -4
 310:Lib/ssc/src/ecatslv.c ****     HW_EscRead((MEM_ADDR *)&SyncManInfo, ESC_SYNCMAN_REG_OFFSET + (channel * SIZEOF_SM_REGISTER), S
 226              		.loc 1 310 5 is_stmt 1 view .LVU39
 227              		.loc 1 310 65 is_stmt 0 view .LVU40
 228 0002 00F58071 		add	r1, r0, #256
 229              		.loc 1 310 5 view .LVU41
 230 0006 044C     		ldr	r4, .L14
 231 0008 0822     		movs	r2, #8
 232 000a C900     		lsls	r1, r1, #3
 233 000c 2046     		mov	r0, r4
 234              	.LVL14:
 235              		.loc 1 310 5 view .LVU42
 236 000e FFF7FEFF 		bl	HW_EscRead
 237              	.LVL15:
 311:Lib/ssc/src/ecatslv.c **** 
 312:Lib/ssc/src/ecatslv.c **** 
 313:Lib/ssc/src/ecatslv.c ****     return &SyncManInfo;
 238              		.loc 1 313 5 is_stmt 1 view .LVU43
 314:Lib/ssc/src/ecatslv.c **** }
 239              		.loc 1 314 1 is_stmt 0 view .LVU44
 240 0012 2046     		mov	r0, r4
 241 0014 10BD     		pop	{r4, pc}
 242              	.L15:
 243 0016 00BF     		.align	2
 244              	.L14:
 245 0018 00000000 		.word	.LANCHOR1
 246              		.cfi_endproc
 247              	.LFE137:
 249              		.section	.text.DisableSyncManChannel,"ax",%progbits
 250              		.align	1
 251              		.global	DisableSyncManChannel
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	DisableSyncManChannel:
 257              	.LVL16:
 258              	.LFB138:
 315:Lib/ssc/src/ecatslv.c **** 
 316:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 317:Lib/ssc/src/ecatslv.c **** /**
 318:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 319:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 11


 320:Lib/ssc/src/ecatslv.c ****  \brief    This function disables a Sync Manager channel
 321:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 322:Lib/ssc/src/ecatslv.c **** void DisableSyncManChannel(UINT8 channel)
 323:Lib/ssc/src/ecatslv.c **** {
 259              		.loc 1 323 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 8
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		.loc 1 323 1 is_stmt 0 view .LVU46
 264 0000 10B5     		push	{r4, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 4, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 324:Lib/ssc/src/ecatslv.c ****     UINT16 Offset;
 270              		.loc 1 324 5 is_stmt 1 view .LVU47
 325:Lib/ssc/src/ecatslv.c ****     //The register 0x806 is only readable from PDI => writing 0 is valid
 326:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16 smStatus = SM_SETTING_PDI_DISABLE;
 271              		.loc 1 326 5 view .LVU48
 272              		.loc 1 326 24 is_stmt 0 view .LVU49
 273 0004 4FF48073 		mov	r3, #256
 274 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
 327:Lib/ssc/src/ecatslv.c ****     Offset = (ESC_SYNCMAN_ACTIVE_OFFSET + (SIZEOF_SM_REGISTER*channel));
 275              		.loc 1 327 5 is_stmt 1 view .LVU50
 276              		.loc 1 327 41 is_stmt 0 view .LVU51
 277 000c C400     		lsls	r4, r0, #3
 278              		.loc 1 327 12 view .LVU52
 279 000e 04F60604 		addw	r4, r4, #2054
 280              	.LVL17:
 328:Lib/ssc/src/ecatslv.c **** 
 329:Lib/ssc/src/ecatslv.c **** 
 330:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(smStatus,Offset);
 281              		.loc 1 330 5 is_stmt 1 view .LVU53
 282 0012 0222     		movs	r2, #2
 283 0014 2146     		mov	r1, r4
 284 0016 0DF10600 		add	r0, sp, #6
 285              	.LVL18:
 286              		.loc 1 330 5 is_stmt 0 view .LVU54
 287 001a FFF7FEFF 		bl	HW_EscWrite
 288              	.LVL19:
 289              	.L17:
 331:Lib/ssc/src/ecatslv.c ****     
 332:Lib/ssc/src/ecatslv.c ****     /*wait until SyncManager is disabled*/
 333:Lib/ssc/src/ecatslv.c ****     do
 290              		.loc 1 333 5 is_stmt 1 discriminator 1 view .LVU55
 334:Lib/ssc/src/ecatslv.c ****     {
 335:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(smStatus, Offset);
 291              		.loc 1 335 9 discriminator 1 view .LVU56
 292 001e 0222     		movs	r2, #2
 293 0020 2146     		mov	r1, r4
 294 0022 0DF10600 		add	r0, sp, #6
 295 0026 FFF7FEFF 		bl	HW_EscRead
 296              	.LVL20:
 336:Lib/ssc/src/ecatslv.c ****     }while(!(smStatus & SM_SETTING_PDI_DISABLE));
 297              		.loc 1 336 11 discriminator 1 view .LVU57
 298              		.loc 1 336 23 is_stmt 0 discriminator 1 view .LVU58
ARM GAS  /tmp/ccd2INFf.s 			page 12


 299 002a BDF80630 		ldrh	r3, [sp, #6]
 300              		.loc 1 336 5 discriminator 1 view .LVU59
 301 002e 13F4807F 		tst	r3, #256
 302 0032 F4D0     		beq	.L17
 337:Lib/ssc/src/ecatslv.c **** }
 303              		.loc 1 337 1 view .LVU60
 304 0034 02B0     		add	sp, sp, #8
 305              		.cfi_def_cfa_offset 8
 306              		@ sp needed
 307 0036 10BD     		pop	{r4, pc}
 308              		.loc 1 337 1 view .LVU61
 309              		.cfi_endproc
 310              	.LFE138:
 312              		.section	.text.EnableSyncManChannel,"ax",%progbits
 313              		.align	1
 314              		.global	EnableSyncManChannel
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	EnableSyncManChannel:
 320              	.LVL21:
 321              	.LFB139:
 338:Lib/ssc/src/ecatslv.c **** 
 339:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 340:Lib/ssc/src/ecatslv.c **** /**
 341:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 342:Lib/ssc/src/ecatslv.c **** 
 343:Lib/ssc/src/ecatslv.c ****  \brief    This function enables a Sync Manager channel
 344:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 345:Lib/ssc/src/ecatslv.c **** void EnableSyncManChannel(UINT8 channel)
 346:Lib/ssc/src/ecatslv.c **** {
 322              		.loc 1 346 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		.loc 1 346 1 is_stmt 0 view .LVU63
 327 0000 10B5     		push	{r4, lr}
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 4, -8
 330              		.cfi_offset 14, -4
 331 0002 82B0     		sub	sp, sp, #8
 332              		.cfi_def_cfa_offset 16
 347:Lib/ssc/src/ecatslv.c ****     UINT16 Offset;
 333              		.loc 1 347 5 is_stmt 1 view .LVU64
 348:Lib/ssc/src/ecatslv.c ****     //The register 0x806 is only readable from PDI => writing 0 is valid
 349:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16 smStatus = 0x0000;
 334              		.loc 1 349 5 view .LVU65
 335              		.loc 1 349 24 is_stmt 0 view .LVU66
 336 0004 0023     		movs	r3, #0
 337 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
 350:Lib/ssc/src/ecatslv.c ****     Offset = (ESC_SYNCMAN_ACTIVE_OFFSET + (SIZEOF_SM_REGISTER*channel));
 338              		.loc 1 350 5 is_stmt 1 view .LVU67
 339              		.loc 1 350 41 is_stmt 0 view .LVU68
 340 000a C400     		lsls	r4, r0, #3
 341              		.loc 1 350 12 view .LVU69
 342 000c 04F60604 		addw	r4, r4, #2054
 343              	.LVL22:
ARM GAS  /tmp/ccd2INFf.s 			page 13


 351:Lib/ssc/src/ecatslv.c **** 
 352:Lib/ssc/src/ecatslv.c **** 
 353:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(smStatus,Offset);
 344              		.loc 1 353 5 is_stmt 1 view .LVU70
 345 0010 0222     		movs	r2, #2
 346 0012 2146     		mov	r1, r4
 347 0014 0DF10600 		add	r0, sp, #6
 348              	.LVL23:
 349              		.loc 1 353 5 is_stmt 0 view .LVU71
 350 0018 FFF7FEFF 		bl	HW_EscWrite
 351              	.LVL24:
 352              	.L20:
 354:Lib/ssc/src/ecatslv.c ****     
 355:Lib/ssc/src/ecatslv.c ****     /*wait until SyncManager is enabled*/
 356:Lib/ssc/src/ecatslv.c ****     do
 353              		.loc 1 356 5 is_stmt 1 discriminator 1 view .LVU72
 357:Lib/ssc/src/ecatslv.c ****     {
 358:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(smStatus,Offset);
 354              		.loc 1 358 9 discriminator 1 view .LVU73
 355 001c 0222     		movs	r2, #2
 356 001e 2146     		mov	r1, r4
 357 0020 0DF10600 		add	r0, sp, #6
 358 0024 FFF7FEFF 		bl	HW_EscRead
 359              	.LVL25:
 359:Lib/ssc/src/ecatslv.c **** 
 360:Lib/ssc/src/ecatslv.c ****     }while((smStatus & SM_SETTING_PDI_DISABLE));
 360              		.loc 1 360 11 discriminator 1 view .LVU74
 361              		.loc 1 360 22 is_stmt 0 discriminator 1 view .LVU75
 362 0028 BDF80630 		ldrh	r3, [sp, #6]
 363              		.loc 1 360 5 discriminator 1 view .LVU76
 364 002c 13F4807F 		tst	r3, #256
 365 0030 F4D1     		bne	.L20
 361:Lib/ssc/src/ecatslv.c **** }
 366              		.loc 1 361 1 view .LVU77
 367 0032 02B0     		add	sp, sp, #8
 368              		.cfi_def_cfa_offset 8
 369              		@ sp needed
 370 0034 10BD     		pop	{r4, pc}
 371              		.loc 1 361 1 view .LVU78
 372              		.cfi_endproc
 373              	.LFE139:
 375              		.section	.text.CheckSmSettings,"ax",%progbits
 376              		.align	1
 377              		.global	CheckSmSettings
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	CheckSmSettings:
 383              	.LVL26:
 384              	.LFB140:
 362:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 363:Lib/ssc/src/ecatslv.c **** 
 364:Lib/ssc/src/ecatslv.c **** 
 365:Lib/ssc/src/ecatslv.c **** 
 366:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 367:Lib/ssc/src/ecatslv.c **** /**
 368:Lib/ssc/src/ecatslv.c ****  \param  maxChannel    last SM channel which should be checked
ARM GAS  /tmp/ccd2INFf.s 			page 14


 369:Lib/ssc/src/ecatslv.c **** 
 370:Lib/ssc/src/ecatslv.c ****  \return                 0: okay else AL Status Code
 371:Lib/ssc/src/ecatslv.c **** 
 372:Lib/ssc/src/ecatslv.c ****  \brief    This function checks all SM channels
 373:Lib/ssc/src/ecatslv.c **** 
 374:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 375:Lib/ssc/src/ecatslv.c **** 
 376:Lib/ssc/src/ecatslv.c **** UINT8    CheckSmSettings(UINT8 maxChannel)
 377:Lib/ssc/src/ecatslv.c **** {
 385              		.loc 1 377 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		.loc 1 377 1 is_stmt 0 view .LVU80
 390 0000 38B5     		push	{r3, r4, r5, lr}
 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 3, -16
 393              		.cfi_offset 4, -12
 394              		.cfi_offset 5, -8
 395              		.cfi_offset 14, -4
 378:Lib/ssc/src/ecatslv.c ****     UINT8 i;
 396              		.loc 1 378 5 is_stmt 1 view .LVU81
 379:Lib/ssc/src/ecatslv.c ****     UINT8 result = 0;
 397              		.loc 1 379 5 view .LVU82
 398              	.LVL27:
 380:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM *pSyncMan;
 399              		.loc 1 380 5 view .LVU83
 381:Lib/ssc/src/ecatslv.c ****     UINT16 SMLength = 0;
 400              		.loc 1 381 5 view .LVU84
 382:Lib/ssc/src/ecatslv.c ****     UINT16 SMAddress = 0;
 401              		.loc 1 382 5 view .LVU85
 383:Lib/ssc/src/ecatslv.c **** 
 384:Lib/ssc/src/ecatslv.c ****     //Check if max address defines are within the available ESC address range
 385:Lib/ssc/src/ecatslv.c ****     if((nMaxEscAddress < MAX_PD_WRITE_ADDRESS)
 402              		.loc 1 385 5 view .LVU86
 386:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_PD_READ_ADDRESS)
 387:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM5*/
 388:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_WRITE_ADDRESS)
 389:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM5*/
 390:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_READ_ADDRESS))
 403              		.loc 1 390 9 is_stmt 0 view .LVU87
 404 0002 9E4B     		ldr	r3, .L90
 405 0004 1A88     		ldrh	r2, [r3]
 385:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_PD_READ_ADDRESS)
 406              		.loc 1 385 7 view .LVU88
 407 0006 42F6FE73 		movw	r3, #12286
 408 000a 9A42     		cmp	r2, r3
 409 000c 40F22781 		bls	.L39
 410 0010 0446     		mov	r4, r0
 391:Lib/ssc/src/ecatslv.c ****     {
 392:Lib/ssc/src/ecatslv.c ****         /*The defines for maximum SM addresses are invalid for the used ESC (change the defines in 
 393:Lib/ssc/src/ecatslv.c ****         It may be also required to adapt the SM settings in the ESI file*/
 394:Lib/ssc/src/ecatslv.c **** 
 395:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_NOVALIDFIRMWARE;
 396:Lib/ssc/src/ecatslv.c ****     }
 397:Lib/ssc/src/ecatslv.c **** 
 398:Lib/ssc/src/ecatslv.c ****     /* check the Sync Manager Parameter for the Receive Mailbox (Sync Manager Channel 0) */
ARM GAS  /tmp/ccd2INFf.s 			page 15


 399:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 400:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(MAILBOX_WRITE);
 411              		.loc 1 400 5 is_stmt 1 view .LVU89
 412              		.loc 1 400 16 is_stmt 0 view .LVU90
 413 0012 0020     		movs	r0, #0
 414              	.LVL28:
 415              		.loc 1 400 16 view .LVU91
 416 0014 FFF7FEFF 		bl	GetSyncMan
 417              	.LVL29:
 401:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 402:Lib/ssc/src/ecatslv.c **** 
 403:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 418              		.loc 1 403 5 is_stmt 1 view .LVU92
 419              		.loc 1 403 14 is_stmt 0 view .LVU93
 420 0018 4388     		ldrh	r3, [r0, #2]
 421              	.LVL30:
 404:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 422              		.loc 1 404 5 is_stmt 1 view .LVU94
 423              		.loc 1 404 15 is_stmt 0 view .LVU95
 424 001a 0288     		ldrh	r2, [r0]
 425              	.LVL31:
 405:Lib/ssc/src/ecatslv.c **** 
 406:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 407:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 408:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 426              		.loc 1 408 5 is_stmt 1 view .LVU96
 427              		.loc 1 408 8 is_stmt 0 view .LVU97
 428 001c 13F0010F 		tst	r3, #1
 429 0020 40F02081 		bne	.L40
 409:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 410:Lib/ssc/src/ecatslv.c **** 
 411:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 430              		.loc 1 411 5 is_stmt 1 view .LVU98
 431              		.loc 1 411 8 is_stmt 0 view .LVU99
 432 0024 12F0010F 		tst	r2, #1
 433 0028 40F01E81 		bne	.L41
 412:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 413:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 414:Lib/ssc/src/ecatslv.c **** 
 415:Lib/ssc/src/ecatslv.c ****     if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 434              		.loc 1 415 5 is_stmt 1 view .LVU100
 435              		.loc 1 415 29 is_stmt 0 view .LVU101
 436 002c C188     		ldrh	r1, [r0, #6]
 437              		.loc 1 415 8 view .LVU102
 438 002e 11F0010F 		tst	r1, #1
 439 0032 3CD0     		beq	.L42
 416:Lib/ssc/src/ecatslv.c ****         /* receive mailbox is not enabled */
 417:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 418:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM_SET
 440              		.loc 1 418 10 is_stmt 1 view .LVU103
 441              		.loc 1 418 34 is_stmt 0 view .LVU104
 442 0034 8188     		ldrh	r1, [r0, #4]
 443              		.loc 1 418 13 view .LVU105
 444 0036 01F00C00 		and	r0, r1, #12
 445              	.LVL32:
 446              		.loc 1 418 13 view .LVU106
 447 003a 0428     		cmp	r0, #4
ARM GAS  /tmp/ccd2INFf.s 			page 16


 448 003c 01D0     		beq	.L81
 419:Lib/ssc/src/ecatslv.c ****        /* receive mailbox is not writable by the master*/
 420:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 449              		.loc 1 420 16 view .LVU107
 450 003e 1625     		movs	r5, #22
 451 0040 36E0     		b	.L24
 452              	.L81:
 421:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETTING_
 453              		.loc 1 421 10 is_stmt 1 view .LVU108
 454              		.loc 1 421 13 is_stmt 0 view .LVU109
 455 0042 11F0020F 		tst	r1, #2
 456 0046 3DD0     		beq	.L44
 422:Lib/ssc/src/ecatslv.c ****         /* receive mailbox is not in one buffer mode */
 423:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 424:Lib/ssc/src/ecatslv.c ****     else if ( SMLength < MIN_MBX_SIZE )
 457              		.loc 1 424 10 is_stmt 1 view .LVU110
 458              		.loc 1 424 13 is_stmt 0 view .LVU111
 459 0048 212B     		cmp	r3, #33
 460 004a 3DD9     		bls	.L45
 425:Lib/ssc/src/ecatslv.c ****         /* receive mailbox size is too small */
 426:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 427:Lib/ssc/src/ecatslv.c ****     else if ( SMLength > MAX_MBX_SIZE )
 461              		.loc 1 427 10 is_stmt 1 view .LVU112
 462              		.loc 1 427 13 is_stmt 0 view .LVU113
 463 004c B3F5807F 		cmp	r3, #256
 464 0050 3CD8     		bhi	.L46
 428:Lib/ssc/src/ecatslv.c ****         /* receive mailbox size is too great */
 429:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 430:Lib/ssc/src/ecatslv.c ****      else if ( SMAddress < MIN_MBX_WRITE_ADDRESS )
 465              		.loc 1 430 11 is_stmt 1 view .LVU114
 466              		.loc 1 430 14 is_stmt 0 view .LVU115
 467 0052 B2F5805F 		cmp	r2, #4096
 468 0056 3BD3     		bcc	.L47
 431:Lib/ssc/src/ecatslv.c ****         /* receive mailbox address is too small */
 432:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 433:Lib/ssc/src/ecatslv.c ****     else if ( SMAddress > MAX_MBX_WRITE_ADDRESS)
 469              		.loc 1 433 10 is_stmt 1 view .LVU116
 470              		.loc 1 433 13 is_stmt 0 view .LVU117
 471 0058 B2F5405F 		cmp	r2, #12288
 472 005c 01D3     		bcc	.L82
 434:Lib/ssc/src/ecatslv.c ****         /* receive mailbox address is too great */
 435:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 473              		.loc 1 435 16 view .LVU118
 474 005e 1625     		movs	r5, #22
 475 0060 26E0     		b	.L24
 476              	.L82:
 436:Lib/ssc/src/ecatslv.c **** 
 437:Lib/ssc/src/ecatslv.c **** 
 438:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 477              		.loc 1 438 5 is_stmt 1 view .LVU119
 439:Lib/ssc/src/ecatslv.c ****     {
 440:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Send Mailbox (Sync Manager Channel 1) */
 441:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 442:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(MAILBOX_READ);
 478              		.loc 1 442 9 view .LVU120
 479              		.loc 1 442 20 is_stmt 0 view .LVU121
 480 0062 0120     		movs	r0, #1
ARM GAS  /tmp/ccd2INFf.s 			page 17


 481 0064 FFF7FEFF 		bl	GetSyncMan
 482              	.LVL33:
 483              		.loc 1 442 20 view .LVU122
 484 0068 0346     		mov	r3, r0
 485              	.LVL34:
 443:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 444:Lib/ssc/src/ecatslv.c **** 
 445:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 486              		.loc 1 445 5 is_stmt 1 view .LVU123
 487              		.loc 1 445 14 is_stmt 0 view .LVU124
 488 006a 4188     		ldrh	r1, [r0, #2]
 489              	.LVL35:
 446:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 490              		.loc 1 446 5 is_stmt 1 view .LVU125
 491              		.loc 1 446 15 is_stmt 0 view .LVU126
 492 006c 0288     		ldrh	r2, [r0]
 493              	.LVL36:
 447:Lib/ssc/src/ecatslv.c **** 
 448:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 449:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 450:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 494              		.loc 1 450 5 is_stmt 1 view .LVU127
 495              		.loc 1 450 8 is_stmt 0 view .LVU128
 496 006e 11F0010F 		tst	r1, #1
 497 0072 40F0FB80 		bne	.L49
 451:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 452:Lib/ssc/src/ecatslv.c **** 
 453:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 498              		.loc 1 453 5 is_stmt 1 view .LVU129
 499              		.loc 1 453 8 is_stmt 0 view .LVU130
 500 0076 12F0010F 		tst	r2, #1
 501 007a 40F0F980 		bne	.L50
 454:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 455:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 456:Lib/ssc/src/ecatslv.c **** 
 457:Lib/ssc/src/ecatslv.c ****       if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 502              		.loc 1 457 7 is_stmt 1 view .LVU131
 503              		.loc 1 457 31 is_stmt 0 view .LVU132
 504 007e C088     		ldrh	r0, [r0, #6]
 505              	.LVL37:
 506              		.loc 1 457 10 view .LVU133
 507 0080 10F0010F 		tst	r0, #1
 508 0084 71D0     		beq	.L51
 458:Lib/ssc/src/ecatslv.c ****             /* send mailbox is not enabled */
 459:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 460:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM
 509              		.loc 1 460 14 is_stmt 1 view .LVU134
 510              		.loc 1 460 38 is_stmt 0 view .LVU135
 511 0086 9B88     		ldrh	r3, [r3, #4]
 512              	.LVL38:
 513              		.loc 1 460 17 view .LVU136
 514 0088 13F00C0F 		tst	r3, #12
 515 008c 6FD1     		bne	.L52
 461:Lib/ssc/src/ecatslv.c ****            /* receive mailbox is not readable by the master*/
 462:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 463:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETT
 516              		.loc 1 463 14 is_stmt 1 view .LVU137
ARM GAS  /tmp/ccd2INFf.s 			page 18


 517              		.loc 1 463 17 is_stmt 0 view .LVU138
 518 008e 13F0020F 		tst	r3, #2
 519 0092 6ED0     		beq	.L53
 464:Lib/ssc/src/ecatslv.c ****             /* receive mailbox is not in one buffer mode */
 465:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 466:Lib/ssc/src/ecatslv.c ****         else if ( SMLength < MIN_MBX_SIZE )
 520              		.loc 1 466 14 is_stmt 1 view .LVU139
 521              		.loc 1 466 17 is_stmt 0 view .LVU140
 522 0094 2129     		cmp	r1, #33
 523 0096 6ED9     		bls	.L54
 467:Lib/ssc/src/ecatslv.c ****             /* send mailbox size is too small */
 468:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 469:Lib/ssc/src/ecatslv.c ****         else if ( SMLength > MAX_MBX_SIZE )
 524              		.loc 1 469 14 is_stmt 1 view .LVU141
 525              		.loc 1 469 17 is_stmt 0 view .LVU142
 526 0098 B1F5807F 		cmp	r1, #256
 527 009c 6DD8     		bhi	.L55
 470:Lib/ssc/src/ecatslv.c ****             /* send mailbox size is too great */
 471:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 472:Lib/ssc/src/ecatslv.c ****          else if ( SMAddress < MIN_MBX_READ_ADDRESS )
 528              		.loc 1 472 15 is_stmt 1 view .LVU143
 529              		.loc 1 472 18 is_stmt 0 view .LVU144
 530 009e B2F5805F 		cmp	r2, #4096
 531 00a2 6CD3     		bcc	.L56
 473:Lib/ssc/src/ecatslv.c ****             /* send mailbox address is too small */
 474:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 475:Lib/ssc/src/ecatslv.c ****         else if ( SMAddress > MAX_MBX_READ_ADDRESS )
 532              		.loc 1 475 14 is_stmt 1 view .LVU145
 533              		.loc 1 475 17 is_stmt 0 view .LVU146
 534 00a4 B2F5405F 		cmp	r2, #12288
 535 00a8 6BD2     		bcs	.L57
 379:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM *pSyncMan;
 536              		.loc 1 379 11 view .LVU147
 537 00aa 0025     		movs	r5, #0
 538 00ac 00E0     		b	.L24
 539              	.LVL39:
 540              	.L42:
 417:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM_SET
 541              		.loc 1 417 16 view .LVU148
 542 00ae 1625     		movs	r5, #22
 543              	.LVL40:
 544              	.L24:
 476:Lib/ssc/src/ecatslv.c ****             /* send mailbox address is too great */
 477:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 478:Lib/ssc/src/ecatslv.c **** 
 479:Lib/ssc/src/ecatslv.c ****     }
 480:Lib/ssc/src/ecatslv.c **** 
 481:Lib/ssc/src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_IN )
 545              		.loc 1 481 5 is_stmt 1 view .LVU149
 546              		.loc 1 481 8 is_stmt 0 view .LVU150
 547 00b0 0DB9     		cbnz	r5, .L25
 548              		.loc 1 481 22 discriminator 1 view .LVU151
 549 00b2 032C     		cmp	r4, #3
 550 00b4 0ED8     		bhi	.L83
 551              	.LVL41:
 552              	.L25:
 482:Lib/ssc/src/ecatslv.c ****     {
ARM GAS  /tmp/ccd2INFf.s 			page 19


 483:Lib/ssc/src/ecatslv.c ****         /* b3BufferMode is only set, if inputs and outputs are running in 3-Buffer-Mode when leavin
 484:Lib/ssc/src/ecatslv.c ****         b3BufferMode = TRUE;
 485:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 486:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 487:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 488:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 489:Lib/ssc/src/ecatslv.c **** 
 490:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 491:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 492:Lib/ssc/src/ecatslv.c **** 
 493:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 494:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 495:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 496:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 497:Lib/ssc/src/ecatslv.c **** 
 498:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 499:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 500:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 501:Lib/ssc/src/ecatslv.c **** 
 502:Lib/ssc/src/ecatslv.c ****         if ((pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLe
 503:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 504:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 505:Lib/ssc/src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 506:Lib/ssc/src/ecatslv.c ****         {
 507:Lib/ssc/src/ecatslv.c ****             /* Sync Manager Channel 3 is active, input size has to greater 0 */
 508:Lib/ssc/src/ecatslv.c ****             if ( SMLength != nPdInputSize || nPdInputSize == 0 || SMLength > MAX_PD_INPUT_SIZE)
 509:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 510:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 511:Lib/ssc/src/ecatslv.c ****             else
 512:Lib/ssc/src/ecatslv.c ****                 /* sizes matches */
 513:Lib/ssc/src/ecatslv.c ****             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) == SM_
 514:Lib/ssc/src/ecatslv.c ****             {
 515:Lib/ssc/src/ecatslv.c ****                 /* settings match */
 516:Lib/ssc/src/ecatslv.c ****                 if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_READ_ADDRESS )&&( SMAddr
 517:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 518:Lib/ssc/src/ecatslv.c ****                     )
 519:Lib/ssc/src/ecatslv.c ****                 {
 520:Lib/ssc/src/ecatslv.c ****                     /* addresses match */
 521:Lib/ssc/src/ecatslv.c **** 
 522:Lib/ssc/src/ecatslv.c ****                     if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) == 
 523:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 524:Lib/ssc/src/ecatslv.c ****                         b3BufferMode = FALSE;
 525:Lib/ssc/src/ecatslv.c ****                 }
 526:Lib/ssc/src/ecatslv.c ****                 else
 527:Lib/ssc/src/ecatslv.c ****                     /* input address is out of the allowed area or has changed in SAFEOP or OP */
 528:Lib/ssc/src/ecatslv.c ****                     result = SYNCMANCHADDRESS+1;
 529:Lib/ssc/src/ecatslv.c ****             }
 530:Lib/ssc/src/ecatslv.c ****             else
 531:Lib/ssc/src/ecatslv.c ****                 /* input settings do not match */
 532:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSETTINGS+1;
 533:Lib/ssc/src/ecatslv.c ****         }
 534:Lib/ssc/src/ecatslv.c ****         else if ( SMLength != 0 || nPdInputSize != 0 )
 535:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 536:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
 537:Lib/ssc/src/ecatslv.c **** 
 538:Lib/ssc/src/ecatslv.c **** 
 539:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 20


 540:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 541:Lib/ssc/src/ecatslv.c ****         {
 542:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMINCFG;
 543:Lib/ssc/src/ecatslv.c ****         }
 544:Lib/ssc/src/ecatslv.c ****     }
 545:Lib/ssc/src/ecatslv.c **** 
 546:Lib/ssc/src/ecatslv.c **** 
 547:Lib/ssc/src/ecatslv.c **** //    else
 548:Lib/ssc/src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_OUT )
 553              		.loc 1 548 5 is_stmt 1 view .LVU152
 554              		.loc 1 548 8 is_stmt 0 view .LVU153
 555 00b6 0DB9     		cbnz	r5, .L27
 556              		.loc 1 548 22 discriminator 1 view .LVU154
 557 00b8 022C     		cmp	r4, #2
 558 00ba 64D8     		bhi	.L84
 559              	.LVL42:
 560              	.L27:
 549:Lib/ssc/src/ecatslv.c ****     {
 550:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Outputs (Sync Manager Channel 2) */
 551:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 552:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 553:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 554:Lib/ssc/src/ecatslv.c **** 
 555:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 556:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 557:Lib/ssc/src/ecatslv.c **** 
 558:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 559:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 560:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 561:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 562:Lib/ssc/src/ecatslv.c **** 
 563:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 564:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 565:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 566:Lib/ssc/src/ecatslv.c **** 
 567:Lib/ssc/src/ecatslv.c ****     if ( (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLengt
 568:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 569:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 570:Lib/ssc/src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 571:Lib/ssc/src/ecatslv.c ****         {
 572:Lib/ssc/src/ecatslv.c ****             /* Sync Manager Channel 2 is active, output size has to greater 0 */
 573:Lib/ssc/src/ecatslv.c ****             if ( SMLength == nPdOutputSize && nPdOutputSize != 0 && SMLength <= ((UINT16)MAX_PD_OUT
 574:Lib/ssc/src/ecatslv.c **** 
 575:Lib/ssc/src/ecatslv.c ****             {
 576:Lib/ssc/src/ecatslv.c ****                 /* sizes match */
 577:Lib/ssc/src/ecatslv.c ****                 if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) ==
 578:Lib/ssc/src/ecatslv.c ****                 {
 579:Lib/ssc/src/ecatslv.c ****                     /* settings match */
 580:Lib/ssc/src/ecatslv.c ****                     if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_WRITE_ADDRESS )&&( S
 581:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 582:Lib/ssc/src/ecatslv.c ****                         )
 583:Lib/ssc/src/ecatslv.c ****                     {
 584:Lib/ssc/src/ecatslv.c ****                         /* addresses match */
 585:Lib/ssc/src/ecatslv.c ****                         {
 586:Lib/ssc/src/ecatslv.c ****                             /* check, if watchdog trigger is enabled */
 587:Lib/ssc/src/ecatslv.c ****                             if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_WATCHDOG
 588:Lib/ssc/src/ecatslv.c ****                             {
ARM GAS  /tmp/ccd2INFf.s 			page 21


 589:Lib/ssc/src/ecatslv.c ****                                 bWdTrigger = TRUE;
 590:Lib/ssc/src/ecatslv.c ****                             }
 591:Lib/ssc/src/ecatslv.c ****                             else
 592:Lib/ssc/src/ecatslv.c ****                             {
 593:Lib/ssc/src/ecatslv.c ****                                 bWdTrigger = FALSE;
 594:Lib/ssc/src/ecatslv.c ****                             }
 595:Lib/ssc/src/ecatslv.c **** 
 596:Lib/ssc/src/ecatslv.c ****                             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_M
 597:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 598:Lib/ssc/src/ecatslv.c ****                                 b3BufferMode = FALSE;
 599:Lib/ssc/src/ecatslv.c ****                         }
 600:Lib/ssc/src/ecatslv.c ****                     }
 601:Lib/ssc/src/ecatslv.c ****                     else
 602:Lib/ssc/src/ecatslv.c ****                         /* output address is out of the allowed area or has changed in SAFEOP or OP
 603:Lib/ssc/src/ecatslv.c ****                         result = SYNCMANCHADDRESS+1;
 604:Lib/ssc/src/ecatslv.c ****                 }
 605:Lib/ssc/src/ecatslv.c ****                 else
 606:Lib/ssc/src/ecatslv.c ****                     /* output settings do not match */
 607:Lib/ssc/src/ecatslv.c ****                     result = SYNCMANCHSETTINGS+1;
 608:Lib/ssc/src/ecatslv.c ****             }
 609:Lib/ssc/src/ecatslv.c ****             else
 610:Lib/ssc/src/ecatslv.c ****                 /* output sizes don't match */
 611:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 612:Lib/ssc/src/ecatslv.c ****         }
 613:Lib/ssc/src/ecatslv.c ****         else if ( SMLength != 0 || nPdOutputSize != 0 )
 614:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 615:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
 616:Lib/ssc/src/ecatslv.c **** 
 617:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 618:Lib/ssc/src/ecatslv.c ****         {
 619:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMOUTCFG;
 620:Lib/ssc/src/ecatslv.c ****         }
 621:Lib/ssc/src/ecatslv.c ****     }
 622:Lib/ssc/src/ecatslv.c **** 
 623:Lib/ssc/src/ecatslv.c **** 
 624:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 561              		.loc 1 624 5 is_stmt 1 view .LVU155
 562              		.loc 1 624 8 is_stmt 0 view .LVU156
 563 00bc 002D     		cmp	r5, #0
 564 00be 00F0C980 		beq	.L37
 565 00c2 CDE0     		b	.L23
 566              	.LVL43:
 567              	.L44:
 423:Lib/ssc/src/ecatslv.c ****     else if ( SMLength < MIN_MBX_SIZE )
 568              		.loc 1 423 16 view .LVU157
 569 00c4 1625     		movs	r5, #22
 570 00c6 F3E7     		b	.L24
 571              	.L45:
 426:Lib/ssc/src/ecatslv.c ****     else if ( SMLength > MAX_MBX_SIZE )
 572              		.loc 1 426 16 view .LVU158
 573 00c8 1625     		movs	r5, #22
 574 00ca F1E7     		b	.L24
 575              	.L46:
 429:Lib/ssc/src/ecatslv.c ****      else if ( SMAddress < MIN_MBX_WRITE_ADDRESS )
 576              		.loc 1 429 16 view .LVU159
 577 00cc 1625     		movs	r5, #22
 578 00ce EFE7     		b	.L24
ARM GAS  /tmp/ccd2INFf.s 			page 22


 579              	.L47:
 432:Lib/ssc/src/ecatslv.c ****     else if ( SMAddress > MAX_MBX_WRITE_ADDRESS)
 580              		.loc 1 432 16 view .LVU160
 581 00d0 1625     		movs	r5, #22
 582 00d2 EDE7     		b	.L24
 583              	.LVL44:
 584              	.L83:
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 585              		.loc 1 484 9 is_stmt 1 view .LVU161
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 586              		.loc 1 484 22 is_stmt 0 view .LVU162
 587 00d4 6A4B     		ldr	r3, .L90+4
 588 00d6 0122     		movs	r2, #1
 589              	.LVL45:
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 590              		.loc 1 484 22 view .LVU163
 591 00d8 1A70     		strb	r2, [r3]
 487:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 592              		.loc 1 487 9 is_stmt 1 view .LVU164
 487:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 593              		.loc 1 487 20 is_stmt 0 view .LVU165
 594 00da 0320     		movs	r0, #3
 595 00dc FFF7FEFF 		bl	GetSyncMan
 596              	.LVL46:
 490:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 597              		.loc 1 490 5 is_stmt 1 view .LVU166
 490:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 598              		.loc 1 490 14 is_stmt 0 view .LVU167
 599 00e0 4288     		ldrh	r2, [r0, #2]
 600              	.LVL47:
 491:Lib/ssc/src/ecatslv.c **** 
 601              		.loc 1 491 5 is_stmt 1 view .LVU168
 491:Lib/ssc/src/ecatslv.c **** 
 602              		.loc 1 491 15 is_stmt 0 view .LVU169
 603 00e2 0188     		ldrh	r1, [r0]
 604              	.LVL48:
 495:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 605              		.loc 1 495 5 is_stmt 1 view .LVU170
 495:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 606              		.loc 1 495 8 is_stmt 0 view .LVU171
 607 00e4 12F0010F 		tst	r2, #1
 608 00e8 40F0C480 		bne	.L58
 498:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 609              		.loc 1 498 5 is_stmt 1 view .LVU172
 498:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 610              		.loc 1 498 8 is_stmt 0 view .LVU173
 611 00ec 11F0010F 		tst	r1, #1
 612 00f0 40F0C280 		bne	.L59
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 613              		.loc 1 502 9 is_stmt 1 view .LVU174
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 614              		.loc 1 502 32 is_stmt 0 view .LVU175
 615 00f4 C388     		ldrh	r3, [r0, #6]
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 616              		.loc 1 502 12 view .LVU176
 617 00f6 13F00103 		ands	r3, r3, #1
 618 00fa 02D0     		beq	.L26
ARM GAS  /tmp/ccd2INFf.s 			page 23


 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 619              		.loc 1 502 93 discriminator 1 view .LVU177
 620 00fc 002A     		cmp	r2, #0
 621 00fe 00F09580 		beq	.L60
 622              	.L26:
 505:Lib/ssc/src/ecatslv.c ****         {
 623              		.loc 1 505 14 is_stmt 1 view .LVU178
 505:Lib/ssc/src/ecatslv.c ****         {
 624              		.loc 1 505 17 is_stmt 0 view .LVU179
 625 0102 53B3     		cbz	r3, .L28
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 626              		.loc 1 508 13 is_stmt 1 view .LVU180
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 627              		.loc 1 508 27 is_stmt 0 view .LVU181
 628 0104 5F4B     		ldr	r3, .L90+8
 629 0106 1B88     		ldrh	r3, [r3]
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 630              		.loc 1 508 16 view .LVU182
 631 0108 9342     		cmp	r3, r2
 632 010a 01D0     		beq	.L85
 542:Lib/ssc/src/ecatslv.c ****         }
 633              		.loc 1 542 20 view .LVU183
 634 010c 1E25     		movs	r5, #30
 635              	.LVL49:
 542:Lib/ssc/src/ecatslv.c ****         }
 636              		.loc 1 542 20 view .LVU184
 637 010e D5E7     		b	.L27
 638              	.LVL50:
 639              	.L85:
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 640              		.loc 1 508 43 discriminator 1 view .LVU185
 641 0110 002B     		cmp	r3, #0
 642 0112 00F08D80 		beq	.L62
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 643              		.loc 1 508 64 discriminator 2 view .LVU186
 644 0116 442A     		cmp	r2, #68
 645 0118 00F28C80 		bhi	.L63
 513:Lib/ssc/src/ecatslv.c ****             {
 646              		.loc 1 513 13 is_stmt 1 view .LVU187
 513:Lib/ssc/src/ecatslv.c ****             {
 647              		.loc 1 513 37 is_stmt 0 view .LVU188
 648 011c 8388     		ldrh	r3, [r0, #4]
 513:Lib/ssc/src/ecatslv.c ****             {
 649              		.loc 1 513 16 view .LVU189
 650 011e 13F00C0F 		tst	r3, #12
 651 0122 40F08980 		bne	.L64
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 652              		.loc 1 516 17 is_stmt 1 view .LVU190
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 653              		.loc 1 516 36 is_stmt 0 view .LVU191
 654 0126 584A     		ldr	r2, .L90+12
 655              	.LVL51:
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 656              		.loc 1 516 36 view .LVU192
 657 0128 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 658              		.loc 1 516 20 view .LVU193
ARM GAS  /tmp/ccd2INFf.s 			page 24


 659 012a 022A     		cmp	r2, #2
 660 012c 08D0     		beq	.L86
 661              	.L29:
 517:Lib/ssc/src/ecatslv.c ****                     )
 662              		.loc 1 517 20 view .LVU194
 663 012e 022A     		cmp	r2, #2
 664 0130 00F08480 		beq	.L65
 517:Lib/ssc/src/ecatslv.c ****                     )
 665              		.loc 1 517 66 discriminator 1 view .LVU195
 666 0134 554A     		ldr	r2, .L90+16
 667 0136 1288     		ldrh	r2, [r2]
 517:Lib/ssc/src/ecatslv.c ****                     )
 668              		.loc 1 517 52 discriminator 1 view .LVU196
 669 0138 8A42     		cmp	r2, r1
 670 013a 07D0     		beq	.L30
 542:Lib/ssc/src/ecatslv.c ****         }
 671              		.loc 1 542 20 view .LVU197
 672 013c 1E25     		movs	r5, #30
 673              	.LVL52:
 542:Lib/ssc/src/ecatslv.c ****         }
 674              		.loc 1 542 20 view .LVU198
 675 013e BDE7     		b	.L27
 676              	.LVL53:
 677              	.L86:
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 678              		.loc 1 516 52 discriminator 1 view .LVU199
 679 0140 B1F5805F 		cmp	r1, #4096
 680 0144 F3D3     		bcc	.L29
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 681              		.loc 1 516 90 discriminator 2 view .LVU200
 682 0146 B1F5405F 		cmp	r1, #12288
 683 014a F0D2     		bcs	.L29
 684              	.L30:
 522:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 685              		.loc 1 522 21 is_stmt 1 view .LVU201
 522:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 686              		.loc 1 522 24 is_stmt 0 view .LVU202
 687 014c 13F0020F 		tst	r3, #2
 688 0150 B1D0     		beq	.L25
 524:Lib/ssc/src/ecatslv.c ****                 }
 689              		.loc 1 524 25 is_stmt 1 view .LVU203
 524:Lib/ssc/src/ecatslv.c ****                 }
 690              		.loc 1 524 38 is_stmt 0 view .LVU204
 691 0152 4B4B     		ldr	r3, .L90+4
 692 0154 0022     		movs	r2, #0
 693 0156 1A70     		strb	r2, [r3]
 694 0158 ADE7     		b	.L25
 695              	.LVL54:
 696              	.L28:
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 697              		.loc 1 534 14 is_stmt 1 view .LVU205
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 698              		.loc 1 534 17 is_stmt 0 view .LVU206
 699 015a 002A     		cmp	r2, #0
 700 015c 70D1     		bne	.L67
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 701              		.loc 1 534 49 discriminator 1 view .LVU207
ARM GAS  /tmp/ccd2INFf.s 			page 25


 702 015e 494B     		ldr	r3, .L90+8
 703 0160 1B88     		ldrh	r3, [r3]
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 704              		.loc 1 534 33 discriminator 1 view .LVU208
 705 0162 002B     		cmp	r3, #0
 706 0164 A7D0     		beq	.L25
 542:Lib/ssc/src/ecatslv.c ****         }
 707              		.loc 1 542 20 view .LVU209
 708 0166 1E25     		movs	r5, #30
 709              	.LVL55:
 542:Lib/ssc/src/ecatslv.c ****         }
 710              		.loc 1 542 20 view .LVU210
 711 0168 A8E7     		b	.L27
 712              	.LVL56:
 713              	.L51:
 459:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM
 714              		.loc 1 459 20 view .LVU211
 715 016a 1625     		movs	r5, #22
 716 016c A3E7     		b	.L25
 717              	.LVL57:
 718              	.L52:
 462:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETT
 719              		.loc 1 462 20 view .LVU212
 720 016e 1625     		movs	r5, #22
 721 0170 A1E7     		b	.L25
 722              	.L53:
 465:Lib/ssc/src/ecatslv.c ****         else if ( SMLength < MIN_MBX_SIZE )
 723              		.loc 1 465 20 view .LVU213
 724 0172 1625     		movs	r5, #22
 725 0174 9FE7     		b	.L25
 726              	.L54:
 468:Lib/ssc/src/ecatslv.c ****         else if ( SMLength > MAX_MBX_SIZE )
 727              		.loc 1 468 20 view .LVU214
 728 0176 1625     		movs	r5, #22
 729 0178 9DE7     		b	.L25
 730              	.L55:
 471:Lib/ssc/src/ecatslv.c ****          else if ( SMAddress < MIN_MBX_READ_ADDRESS )
 731              		.loc 1 471 20 view .LVU215
 732 017a 1625     		movs	r5, #22
 733 017c 9BE7     		b	.L25
 734              	.L56:
 474:Lib/ssc/src/ecatslv.c ****         else if ( SMAddress > MAX_MBX_READ_ADDRESS )
 735              		.loc 1 474 20 view .LVU216
 736 017e 1625     		movs	r5, #22
 737 0180 99E7     		b	.L25
 738              	.L57:
 477:Lib/ssc/src/ecatslv.c **** 
 739              		.loc 1 477 20 view .LVU217
 740 0182 1625     		movs	r5, #22
 741 0184 97E7     		b	.L25
 742              	.LVL58:
 743              	.L84:
 552:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 744              		.loc 1 552 9 is_stmt 1 view .LVU218
 552:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 745              		.loc 1 552 20 is_stmt 0 view .LVU219
 746 0186 0220     		movs	r0, #2
ARM GAS  /tmp/ccd2INFf.s 			page 26


 747 0188 FFF7FEFF 		bl	GetSyncMan
 748              	.LVL59:
 555:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 749              		.loc 1 555 5 is_stmt 1 view .LVU220
 555:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 750              		.loc 1 555 14 is_stmt 0 view .LVU221
 751 018c 4288     		ldrh	r2, [r0, #2]
 752              	.LVL60:
 556:Lib/ssc/src/ecatslv.c **** 
 753              		.loc 1 556 5 is_stmt 1 view .LVU222
 556:Lib/ssc/src/ecatslv.c **** 
 754              		.loc 1 556 15 is_stmt 0 view .LVU223
 755 018e 0188     		ldrh	r1, [r0]
 756              	.LVL61:
 560:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 757              		.loc 1 560 5 is_stmt 1 view .LVU224
 560:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 758              		.loc 1 560 8 is_stmt 0 view .LVU225
 759 0190 12F0010F 		tst	r2, #1
 760 0194 40F08680 		bne	.L69
 563:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 761              		.loc 1 563 5 is_stmt 1 view .LVU226
 563:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 762              		.loc 1 563 8 is_stmt 0 view .LVU227
 763 0198 11F0010F 		tst	r1, #1
 764 019c 40F08480 		bne	.L70
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 765              		.loc 1 567 5 is_stmt 1 view .LVU228
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 766              		.loc 1 567 29 is_stmt 0 view .LVU229
 767 01a0 C388     		ldrh	r3, [r0, #6]
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 768              		.loc 1 567 8 view .LVU230
 769 01a2 13F00103 		ands	r3, r3, #1
 770 01a6 01D0     		beq	.L31
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 771              		.loc 1 567 90 discriminator 1 view .LVU231
 772 01a8 002A     		cmp	r2, #0
 773 01aa 7FD0     		beq	.L71
 774              	.L31:
 570:Lib/ssc/src/ecatslv.c ****         {
 775              		.loc 1 570 14 is_stmt 1 view .LVU232
 570:Lib/ssc/src/ecatslv.c ****         {
 776              		.loc 1 570 17 is_stmt 0 view .LVU233
 777 01ac 002B     		cmp	r3, #0
 778 01ae 34D0     		beq	.L32
 573:Lib/ssc/src/ecatslv.c **** 
 779              		.loc 1 573 13 is_stmt 1 view .LVU234
 573:Lib/ssc/src/ecatslv.c **** 
 780              		.loc 1 573 27 is_stmt 0 view .LVU235
 781 01b0 374B     		ldr	r3, .L90+20
 782 01b2 1B88     		ldrh	r3, [r3]
 573:Lib/ssc/src/ecatslv.c **** 
 783              		.loc 1 573 16 view .LVU236
 784 01b4 9342     		cmp	r3, r2
 785 01b6 01D0     		beq	.L87
 619:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccd2INFf.s 			page 27


 786              		.loc 1 619 20 view .LVU237
 787 01b8 1D25     		movs	r5, #29
 788              	.LVL62:
 619:Lib/ssc/src/ecatslv.c ****         }
 789              		.loc 1 619 20 view .LVU238
 790 01ba 51E0     		b	.L23
 791              	.LVL63:
 792              	.L87:
 573:Lib/ssc/src/ecatslv.c **** 
 793              		.loc 1 573 44 discriminator 1 view .LVU239
 794 01bc 002B     		cmp	r3, #0
 795 01be 77D0     		beq	.L73
 573:Lib/ssc/src/ecatslv.c **** 
 796              		.loc 1 573 66 discriminator 2 view .LVU240
 797 01c0 442A     		cmp	r2, #68
 798 01c2 77D8     		bhi	.L74
 577:Lib/ssc/src/ecatslv.c ****                 {
 799              		.loc 1 577 17 is_stmt 1 view .LVU241
 577:Lib/ssc/src/ecatslv.c ****                 {
 800              		.loc 1 577 41 is_stmt 0 view .LVU242
 801 01c4 8388     		ldrh	r3, [r0, #4]
 577:Lib/ssc/src/ecatslv.c ****                 {
 802              		.loc 1 577 20 view .LVU243
 803 01c6 03F00C02 		and	r2, r3, #12
 804              	.LVL64:
 577:Lib/ssc/src/ecatslv.c ****                 {
 805              		.loc 1 577 20 view .LVU244
 806 01ca 042A     		cmp	r2, #4
 807 01cc 01D0     		beq	.L88
 619:Lib/ssc/src/ecatslv.c ****         }
 808              		.loc 1 619 20 view .LVU245
 809 01ce 1D25     		movs	r5, #29
 810              	.LVL65:
 619:Lib/ssc/src/ecatslv.c ****         }
 811              		.loc 1 619 20 view .LVU246
 812 01d0 46E0     		b	.L23
 813              	.LVL66:
 814              	.L88:
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 815              		.loc 1 580 21 is_stmt 1 view .LVU247
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 816              		.loc 1 580 40 is_stmt 0 view .LVU248
 817 01d2 2D4A     		ldr	r2, .L90+12
 818 01d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 819              		.loc 1 580 24 view .LVU249
 820 01d6 022A     		cmp	r2, #2
 821 01d8 07D0     		beq	.L89
 822              	.L33:
 581:Lib/ssc/src/ecatslv.c ****                         )
 823              		.loc 1 581 24 view .LVU250
 824 01da 022A     		cmp	r2, #2
 825 01dc 6CD0     		beq	.L76
 581:Lib/ssc/src/ecatslv.c ****                         )
 826              		.loc 1 581 70 discriminator 1 view .LVU251
 827 01de 2D4A     		ldr	r2, .L90+24
 828 01e0 1288     		ldrh	r2, [r2]
ARM GAS  /tmp/ccd2INFf.s 			page 28


 581:Lib/ssc/src/ecatslv.c ****                         )
 829              		.loc 1 581 56 discriminator 1 view .LVU252
 830 01e2 8A42     		cmp	r2, r1
 831 01e4 07D0     		beq	.L34
 619:Lib/ssc/src/ecatslv.c ****         }
 832              		.loc 1 619 20 view .LVU253
 833 01e6 1D25     		movs	r5, #29
 834              	.LVL67:
 619:Lib/ssc/src/ecatslv.c ****         }
 835              		.loc 1 619 20 view .LVU254
 836 01e8 3AE0     		b	.L23
 837              	.LVL68:
 838              	.L89:
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 839              		.loc 1 580 56 discriminator 1 view .LVU255
 840 01ea B1F5805F 		cmp	r1, #4096
 841 01ee F4D3     		bcc	.L33
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 842              		.loc 1 580 95 discriminator 2 view .LVU256
 843 01f0 B1F5405F 		cmp	r1, #12288
 844 01f4 F1D2     		bcs	.L33
 845              	.L34:
 587:Lib/ssc/src/ecatslv.c ****                             {
 846              		.loc 1 587 29 is_stmt 1 view .LVU257
 587:Lib/ssc/src/ecatslv.c ****                             {
 847              		.loc 1 587 32 is_stmt 0 view .LVU258
 848 01f6 13F0400F 		tst	r3, #64
 849 01fa 0AD0     		beq	.L35
 589:Lib/ssc/src/ecatslv.c ****                             }
 850              		.loc 1 589 33 is_stmt 1 view .LVU259
 589:Lib/ssc/src/ecatslv.c ****                             }
 851              		.loc 1 589 44 is_stmt 0 view .LVU260
 852 01fc 264A     		ldr	r2, .L90+28
 853 01fe 0121     		movs	r1, #1
 854              	.LVL69:
 589:Lib/ssc/src/ecatslv.c ****                             }
 855              		.loc 1 589 44 view .LVU261
 856 0200 1170     		strb	r1, [r2]
 857              	.LVL70:
 858              	.L36:
 596:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 859              		.loc 1 596 29 is_stmt 1 view .LVU262
 596:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 860              		.loc 1 596 32 is_stmt 0 view .LVU263
 861 0202 13F0020F 		tst	r3, #2
 862 0206 3FF459AF 		beq	.L27
 598:Lib/ssc/src/ecatslv.c ****                         }
 863              		.loc 1 598 33 is_stmt 1 view .LVU264
 598:Lib/ssc/src/ecatslv.c ****                         }
 864              		.loc 1 598 46 is_stmt 0 view .LVU265
 865 020a 1D4B     		ldr	r3, .L90+4
 866 020c 0022     		movs	r2, #0
 867 020e 1A70     		strb	r2, [r3]
 868 0210 54E7     		b	.L27
 869              	.LVL71:
 870              	.L35:
 593:Lib/ssc/src/ecatslv.c ****                             }
ARM GAS  /tmp/ccd2INFf.s 			page 29


 871              		.loc 1 593 33 is_stmt 1 view .LVU266
 593:Lib/ssc/src/ecatslv.c ****                             }
 872              		.loc 1 593 44 is_stmt 0 view .LVU267
 873 0212 214A     		ldr	r2, .L90+28
 874 0214 0021     		movs	r1, #0
 875              	.LVL72:
 593:Lib/ssc/src/ecatslv.c ****                             }
 876              		.loc 1 593 44 view .LVU268
 877 0216 1170     		strb	r1, [r2]
 878              	.LVL73:
 593:Lib/ssc/src/ecatslv.c ****                             }
 879              		.loc 1 593 44 view .LVU269
 880 0218 F3E7     		b	.L36
 881              	.LVL74:
 882              	.L32:
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 883              		.loc 1 613 14 is_stmt 1 view .LVU270
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 884              		.loc 1 613 17 is_stmt 0 view .LVU271
 885 021a 002A     		cmp	r2, #0
 886 021c 4ED1     		bne	.L78
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 887              		.loc 1 613 50 discriminator 1 view .LVU272
 888 021e 1C4B     		ldr	r3, .L90+20
 889 0220 1B88     		ldrh	r3, [r3]
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 890              		.loc 1 613 33 discriminator 1 view .LVU273
 891 0222 002B     		cmp	r3, #0
 892 0224 3FF44AAF 		beq	.L27
 619:Lib/ssc/src/ecatslv.c ****         }
 893              		.loc 1 619 20 view .LVU274
 894 0228 1D25     		movs	r5, #29
 895              	.LVL75:
 619:Lib/ssc/src/ecatslv.c ****         }
 896              		.loc 1 619 20 view .LVU275
 897 022a 19E0     		b	.L23
 898              	.LVL76:
 899              	.L60:
 542:Lib/ssc/src/ecatslv.c ****         }
 900              		.loc 1 542 20 view .LVU276
 901 022c 1E25     		movs	r5, #30
 902              	.LVL77:
 542:Lib/ssc/src/ecatslv.c ****         }
 903              		.loc 1 542 20 view .LVU277
 904 022e 45E7     		b	.L27
 905              	.LVL78:
 906              	.L62:
 542:Lib/ssc/src/ecatslv.c ****         }
 907              		.loc 1 542 20 view .LVU278
 908 0230 1E25     		movs	r5, #30
 909              	.LVL79:
 542:Lib/ssc/src/ecatslv.c ****         }
 910              		.loc 1 542 20 view .LVU279
 911 0232 43E7     		b	.L27
 912              	.LVL80:
 913              	.L63:
 542:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccd2INFf.s 			page 30


 914              		.loc 1 542 20 view .LVU280
 915 0234 1E25     		movs	r5, #30
 916              	.LVL81:
 542:Lib/ssc/src/ecatslv.c ****         }
 917              		.loc 1 542 20 view .LVU281
 918 0236 41E7     		b	.L27
 919              	.LVL82:
 920              	.L64:
 542:Lib/ssc/src/ecatslv.c ****         }
 921              		.loc 1 542 20 view .LVU282
 922 0238 1E25     		movs	r5, #30
 923              	.LVL83:
 542:Lib/ssc/src/ecatslv.c ****         }
 924              		.loc 1 542 20 view .LVU283
 925 023a 3FE7     		b	.L27
 926              	.LVL84:
 927              	.L65:
 542:Lib/ssc/src/ecatslv.c ****         }
 928              		.loc 1 542 20 view .LVU284
 929 023c 1E25     		movs	r5, #30
 930              	.LVL85:
 542:Lib/ssc/src/ecatslv.c ****         }
 931              		.loc 1 542 20 view .LVU285
 932 023e 3DE7     		b	.L27
 933              	.LVL86:
 934              	.L67:
 542:Lib/ssc/src/ecatslv.c ****         }
 935              		.loc 1 542 20 view .LVU286
 936 0240 1E25     		movs	r5, #30
 937              	.LVL87:
 542:Lib/ssc/src/ecatslv.c ****         }
 938              		.loc 1 542 20 view .LVU287
 939 0242 3BE7     		b	.L27
 940              	.LVL88:
 941              	.L38:
 625:Lib/ssc/src/ecatslv.c ****     {
 626:Lib/ssc/src/ecatslv.c ****         /* the Enable-Byte of the rest of the SM channels has to be read to acknowledge the SM-Chan
 627:Lib/ssc/src/ecatslv.c ****         for (i = maxChannel; i < nMaxSyncMan; i++)
 628:Lib/ssc/src/ecatslv.c ****         {
 629:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 630:Lib/ssc/src/ecatslv.c ****             pSyncMan = GetSyncMan(i);
 942              		.loc 1 630 13 is_stmt 1 discriminator 3 view .LVU288
 943              		.loc 1 630 24 is_stmt 0 discriminator 3 view .LVU289
 944 0244 2046     		mov	r0, r4
 945 0246 FFF7FEFF 		bl	GetSyncMan
 946              	.LVL89:
 631:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 632:Lib/ssc/src/ecatslv.c ****             SMActivate = pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET];
 947              		.loc 1 632 13 is_stmt 1 discriminator 3 view .LVU290
 948              		.loc 1 632 44 is_stmt 0 discriminator 3 view .LVU291
 949 024a C288     		ldrh	r2, [r0, #6]
 950              		.loc 1 632 24 discriminator 3 view .LVU292
 951 024c 134B     		ldr	r3, .L90+32
 952 024e 1A80     		strh	r2, [r3]	@ movhi
 627:Lib/ssc/src/ecatslv.c ****         {
 953              		.loc 1 627 47 is_stmt 1 discriminator 3 view .LVU293
 627:Lib/ssc/src/ecatslv.c ****         {
ARM GAS  /tmp/ccd2INFf.s 			page 31


 954              		.loc 1 627 48 is_stmt 0 discriminator 3 view .LVU294
 955 0250 0134     		adds	r4, r4, #1
 956              	.LVL90:
 627:Lib/ssc/src/ecatslv.c ****         {
 957              		.loc 1 627 48 discriminator 3 view .LVU295
 958 0252 E4B2     		uxtb	r4, r4
 959              	.LVL91:
 960              	.L37:
 627:Lib/ssc/src/ecatslv.c ****         {
 961              		.loc 1 627 30 is_stmt 1 discriminator 1 view .LVU296
 627:Lib/ssc/src/ecatslv.c ****         {
 962              		.loc 1 627 32 is_stmt 0 discriminator 1 view .LVU297
 963 0254 124B     		ldr	r3, .L90+36
 964 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 627:Lib/ssc/src/ecatslv.c ****         {
 965              		.loc 1 627 9 discriminator 1 view .LVU298
 966 0258 A342     		cmp	r3, r4
 967 025a F3D8     		bhi	.L38
 968 025c 00E0     		b	.L23
 969              	.LVL92:
 970              	.L39:
 395:Lib/ssc/src/ecatslv.c ****     }
 971              		.loc 1 395 16 view .LVU299
 972 025e 1425     		movs	r5, #20
 973              	.LVL93:
 974              	.L23:
 633:Lib/ssc/src/ecatslv.c ****         }
 634:Lib/ssc/src/ecatslv.c ****     }
 635:Lib/ssc/src/ecatslv.c ****     return result;
 636:Lib/ssc/src/ecatslv.c **** }
 975              		.loc 1 636 1 view .LVU300
 976 0260 2846     		mov	r0, r5
 977 0262 38BD     		pop	{r3, r4, r5, pc}
 978              	.LVL94:
 979              	.L40:
 409:Lib/ssc/src/ecatslv.c **** 
 980              		.loc 1 409 16 view .LVU301
 981 0264 1725     		movs	r5, #23
 982 0266 FBE7     		b	.L23
 983              	.L41:
 412:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 984              		.loc 1 412 16 view .LVU302
 985 0268 1725     		movs	r5, #23
 986 026a F9E7     		b	.L23
 987              	.LVL95:
 988              	.L49:
 451:Lib/ssc/src/ecatslv.c **** 
 989              		.loc 1 451 16 view .LVU303
 990 026c 1725     		movs	r5, #23
 991 026e F7E7     		b	.L23
 992              	.L50:
 454:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 993              		.loc 1 454 16 view .LVU304
 994 0270 1725     		movs	r5, #23
 995 0272 F5E7     		b	.L23
 996              	.LVL96:
 997              	.L58:
ARM GAS  /tmp/ccd2INFf.s 			page 32


 496:Lib/ssc/src/ecatslv.c **** 
 998              		.loc 1 496 16 view .LVU305
 999 0274 1725     		movs	r5, #23
 1000              	.LVL97:
 496:Lib/ssc/src/ecatslv.c **** 
 1001              		.loc 1 496 16 view .LVU306
 1002 0276 F3E7     		b	.L23
 1003              	.LVL98:
 1004              	.L59:
 499:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1005              		.loc 1 499 16 view .LVU307
 1006 0278 1725     		movs	r5, #23
 1007              	.LVL99:
 499:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1008              		.loc 1 499 16 view .LVU308
 1009 027a F1E7     		b	.L23
 1010              	.L91:
 1011              		.align	2
 1012              	.L90:
 1013 027c 00000000 		.word	.LANCHOR2
 1014 0280 00000000 		.word	.LANCHOR3
 1015 0284 00000000 		.word	.LANCHOR4
 1016 0288 00000000 		.word	.LANCHOR5
 1017 028c 00000000 		.word	.LANCHOR6
 1018 0290 00000000 		.word	.LANCHOR7
 1019 0294 00000000 		.word	.LANCHOR8
 1020 0298 00000000 		.word	.LANCHOR9
 1021 029c 00000000 		.word	.LANCHOR10
 1022 02a0 00000000 		.word	.LANCHOR11
 1023              	.LVL100:
 1024              	.L69:
 561:Lib/ssc/src/ecatslv.c **** 
 1025              		.loc 1 561 16 view .LVU309
 1026 02a4 1725     		movs	r5, #23
 1027              	.LVL101:
 561:Lib/ssc/src/ecatslv.c **** 
 1028              		.loc 1 561 16 view .LVU310
 1029 02a6 DBE7     		b	.L23
 1030              	.LVL102:
 1031              	.L70:
 564:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1032              		.loc 1 564 16 view .LVU311
 1033 02a8 1725     		movs	r5, #23
 1034              	.LVL103:
 564:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1035              		.loc 1 564 16 view .LVU312
 1036 02aa D9E7     		b	.L23
 1037              	.LVL104:
 1038              	.L71:
 619:Lib/ssc/src/ecatslv.c ****         }
 1039              		.loc 1 619 20 view .LVU313
 1040 02ac 1D25     		movs	r5, #29
 1041              	.LVL105:
 619:Lib/ssc/src/ecatslv.c ****         }
 1042              		.loc 1 619 20 view .LVU314
 1043 02ae D7E7     		b	.L23
 1044              	.LVL106:
ARM GAS  /tmp/ccd2INFf.s 			page 33


 1045              	.L73:
 619:Lib/ssc/src/ecatslv.c ****         }
 1046              		.loc 1 619 20 view .LVU315
 1047 02b0 1D25     		movs	r5, #29
 1048              	.LVL107:
 619:Lib/ssc/src/ecatslv.c ****         }
 1049              		.loc 1 619 20 view .LVU316
 1050 02b2 D5E7     		b	.L23
 1051              	.LVL108:
 1052              	.L74:
 619:Lib/ssc/src/ecatslv.c ****         }
 1053              		.loc 1 619 20 view .LVU317
 1054 02b4 1D25     		movs	r5, #29
 1055              	.LVL109:
 619:Lib/ssc/src/ecatslv.c ****         }
 1056              		.loc 1 619 20 view .LVU318
 1057 02b6 D3E7     		b	.L23
 1058              	.LVL110:
 1059              	.L76:
 619:Lib/ssc/src/ecatslv.c ****         }
 1060              		.loc 1 619 20 view .LVU319
 1061 02b8 1D25     		movs	r5, #29
 1062              	.LVL111:
 619:Lib/ssc/src/ecatslv.c ****         }
 1063              		.loc 1 619 20 view .LVU320
 1064 02ba D1E7     		b	.L23
 1065              	.LVL112:
 1066              	.L78:
 619:Lib/ssc/src/ecatslv.c ****         }
 1067              		.loc 1 619 20 view .LVU321
 1068 02bc 1D25     		movs	r5, #29
 1069              	.LVL113:
 619:Lib/ssc/src/ecatslv.c ****         }
 1070              		.loc 1 619 20 view .LVU322
 1071 02be CFE7     		b	.L23
 1072              		.cfi_endproc
 1073              	.LFE140:
 1075              		.section	.text.StartInputHandler,"ax",%progbits
 1076              		.align	1
 1077              		.global	StartInputHandler
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1082              	StartInputHandler:
 1083              	.LFB141:
 637:Lib/ssc/src/ecatslv.c **** 
 638:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 639:Lib/ssc/src/ecatslv.c **** /**
 640:Lib/ssc/src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
 641:Lib/ssc/src/ecatslv.c **** 
 642:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from PREOP to SAFEOP.
 643:Lib/ssc/src/ecatslv.c ****  |brief  the areas of the Sync Managers will be checked for overlapping,
 644:Lib/ssc/src/ecatslv.c ****  \brief  the synchronization mode (Free Run, Synchron, Distributed Clocks) is selected,
 645:Lib/ssc/src/ecatslv.c ****  \brief  the requested cycle time will be checked, the watchdog is started
 646:Lib/ssc/src/ecatslv.c ****  \brief  and the AL Event Mask register will be set
 647:Lib/ssc/src/ecatslv.c **** 
 648:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
ARM GAS  /tmp/ccd2INFf.s 			page 34


 649:Lib/ssc/src/ecatslv.c **** 
 650:Lib/ssc/src/ecatslv.c **** UINT16 StartInputHandler(void)
 651:Lib/ssc/src/ecatslv.c **** {
 1084              		.loc 1 651 1 is_stmt 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 16
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1089              		.cfi_def_cfa_offset 20
 1090              		.cfi_offset 4, -20
 1091              		.cfi_offset 5, -16
 1092              		.cfi_offset 6, -12
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095 0002 85B0     		sub	sp, sp, #20
 1096              		.cfi_def_cfa_offset 40
 652:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM * pSyncMan;
 1097              		.loc 1 652 5 view .LVU324
 653:Lib/ssc/src/ecatslv.c ****     UINT16        dcControl;
 1098              		.loc 1 653 5 view .LVU325
 654:Lib/ssc/src/ecatslv.c ****     UINT16     wdiv = 0;
 1099              		.loc 1 654 5 view .LVU326
 1100              		.loc 1 654 16 is_stmt 0 view .LVU327
 1101 0004 0023     		movs	r3, #0
 1102 0006 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 655:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 656:Lib/ssc/src/ecatslv.c ****     UINT16     wd = 0;
 1103              		.loc 1 656 5 is_stmt 1 view .LVU328
 1104              		.loc 1 656 16 is_stmt 0 view .LVU329
 1105 000a ADF80A30 		strh	r3, [sp, #10]	@ movhi
 657:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 658:Lib/ssc/src/ecatslv.c ****     UINT32     cycleTimeSync0 = 0; /* Sync0 cycle time */
 1106              		.loc 1 658 5 is_stmt 1 view .LVU330
 1107              		.loc 1 658 16 is_stmt 0 view .LVU331
 1108 000e 0193     		str	r3, [sp, #4]
 659:Lib/ssc/src/ecatslv.c ****     UINT32     cycleTimeSync1 = 0; /* Delay between the Sync0 and Sycn1 signal. A new Sync1 cycle s
 1109              		.loc 1 659 5 is_stmt 1 view .LVU332
 1110              		.loc 1 659 16 is_stmt 0 view .LVU333
 1111 0010 0093     		str	r3, [sp]
 660:Lib/ssc/src/ecatslv.c ****     BOOL bSubordinatedCycles = FALSE;
 1112              		.loc 1 660 5 is_stmt 1 view .LVU334
 1113              	.LVL114:
 661:Lib/ssc/src/ecatslv.c **** 
 662:Lib/ssc/src/ecatslv.c ****     UINT16    nPdInputBuffer = 3;
 1114              		.loc 1 662 5 view .LVU335
 663:Lib/ssc/src/ecatslv.c ****     UINT16    nPdOutputBuffer = 3;
 1115              		.loc 1 663 5 view .LVU336
 664:Lib/ssc/src/ecatslv.c **** 
 665:Lib/ssc/src/ecatslv.c ****     UINT16 SyncType0x1C32 = 0; /* Helper variable for sync type for SM2 (required if no CoE is supp
 1116              		.loc 1 665 5 view .LVU337
 666:Lib/ssc/src/ecatslv.c ****     UINT16 SyncType0x1C33 = 0; /* Helper variable for sync type for SM3 (required if no CoE is supp
 1117              		.loc 1 666 5 view .LVU338
 667:Lib/ssc/src/ecatslv.c **** 
 668:Lib/ssc/src/ecatslv.c ****     UINT16 u16MinSuppSyncType = 0xFFFF;  /* Minimum supported Sync Types */
 1118              		.loc 1 668 5 view .LVU339
 669:Lib/ssc/src/ecatslv.c **** 
 670:Lib/ssc/src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManOutPar.u16SyncTypesSupported;
ARM GAS  /tmp/ccd2INFf.s 			page 35


 1119              		.loc 1 670 5 view .LVU340
 1120              		.loc 1 670 41 is_stmt 0 view .LVU341
 1121 0012 684A     		ldr	r2, .L182
 1122 0014 9489     		ldrh	r4, [r2, #12]
 1123              	.LVL115:
 671:Lib/ssc/src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManInPar.u16SyncTypesSupported;
 1124              		.loc 1 671 5 is_stmt 1 view .LVU342
 1125              		.loc 1 671 40 is_stmt 0 view .LVU343
 1126 0016 684A     		ldr	r2, .L182+4
 1127 0018 9289     		ldrh	r2, [r2, #12]
 1128              		.loc 1 671 24 view .LVU344
 1129 001a 1440     		ands	r4, r4, r2
 1130              	.LVL116:
 672:Lib/ssc/src/ecatslv.c **** 
 673:Lib/ssc/src/ecatslv.c ****     u16ALEventMask = 0;
 1131              		.loc 1 673 5 is_stmt 1 view .LVU345
 1132              		.loc 1 673 20 is_stmt 0 view .LVU346
 1133 001c 674A     		ldr	r2, .L182+8
 1134 001e 1380     		strh	r3, [r2]	@ movhi
 674:Lib/ssc/src/ecatslv.c **** 
 675:Lib/ssc/src/ecatslv.c ****     /* 
 676:Lib/ssc/src/ecatslv.c ****         --- Check if SyncManager areas overlapping --- 
 677:Lib/ssc/src/ecatslv.c ****     */
 678:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 1135              		.loc 1 678 5 is_stmt 1 view .LVU347
 1136              		.loc 1 678 31 is_stmt 0 view .LVU348
 1137 0020 674A     		ldr	r2, .L182+12
 1138 0022 1370     		strb	r3, [r2]
 679:Lib/ssc/src/ecatslv.c **** 
 680:Lib/ssc/src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 2 (Outputs) */
 681:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 682:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 1139              		.loc 1 682 5 is_stmt 1 view .LVU349
 1140              		.loc 1 682 16 is_stmt 0 view .LVU350
 1141 0024 0220     		movs	r0, #2
 1142 0026 FFF7FEFF 		bl	GetSyncMan
 1143              	.LVL117:
 683:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 684:Lib/ssc/src/ecatslv.c ****     /* store the address of the Sync Manager Channel 2 (Outputs) */
 685:Lib/ssc/src/ecatslv.c ****     nEscAddrOutputData = pSyncMan->PhysicalStartAddress;
 1144              		.loc 1 685 5 is_stmt 1 view .LVU351
 1145              		.loc 1 685 34 is_stmt 0 view .LVU352
 1146 002a 0288     		ldrh	r2, [r0]
 1147              		.loc 1 685 24 view .LVU353
 1148 002c 654B     		ldr	r3, .L182+16
 1149 002e 1A80     		strh	r2, [r3]	@ movhi
 686:Lib/ssc/src/ecatslv.c ****     /* get the number of output buffer used for calculating the address areas */
 687:Lib/ssc/src/ecatslv.c ****     if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE)
 1150              		.loc 1 687 5 is_stmt 1 view .LVU354
 1151              		.loc 1 687 27 is_stmt 0 view .LVU355
 1152 0030 8388     		ldrh	r3, [r0, #4]
 1153              		.loc 1 687 8 view .LVU356
 1154 0032 13F0020F 		tst	r3, #2
 1155 0036 40F08780 		bne	.L141
 663:Lib/ssc/src/ecatslv.c **** 
 1156              		.loc 1 663 15 view .LVU357
 1157 003a 0325     		movs	r5, #3
ARM GAS  /tmp/ccd2INFf.s 			page 36


 1158              	.L93:
 1159              	.LVL118:
 688:Lib/ssc/src/ecatslv.c ****     {
 689:Lib/ssc/src/ecatslv.c ****        nPdOutputBuffer = 1;
 690:Lib/ssc/src/ecatslv.c ****     }
 691:Lib/ssc/src/ecatslv.c **** 
 692:Lib/ssc/src/ecatslv.c **** 
 693:Lib/ssc/src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 3 (Inputs) */
 694:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 695:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 1160              		.loc 1 695 5 is_stmt 1 view .LVU358
 1161              		.loc 1 695 16 is_stmt 0 view .LVU359
 1162 003c 0320     		movs	r0, #3
 1163              	.LVL119:
 1164              		.loc 1 695 16 view .LVU360
 1165 003e FFF7FEFF 		bl	GetSyncMan
 1166              	.LVL120:
 696:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 697:Lib/ssc/src/ecatslv.c ****     /* store the address of the Sync Manager Channel 3 (Inputs)*/
 698:Lib/ssc/src/ecatslv.c ****     nEscAddrInputData = pSyncMan->PhysicalStartAddress;
 1167              		.loc 1 698 5 is_stmt 1 view .LVU361
 1168              		.loc 1 698 33 is_stmt 0 view .LVU362
 1169 0042 0388     		ldrh	r3, [r0]
 1170              		.loc 1 698 23 view .LVU363
 1171 0044 604A     		ldr	r2, .L182+20
 1172 0046 1380     		strh	r3, [r2]	@ movhi
 699:Lib/ssc/src/ecatslv.c ****     
 700:Lib/ssc/src/ecatslv.c ****     /* get the number of input buffer used for calculating the address areas */
 701:Lib/ssc/src/ecatslv.c ****     if ( pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE )
 1173              		.loc 1 701 5 is_stmt 1 view .LVU364
 1174              		.loc 1 701 28 is_stmt 0 view .LVU365
 1175 0048 8288     		ldrh	r2, [r0, #4]
 1176              		.loc 1 701 8 view .LVU366
 1177 004a 12F0020F 		tst	r2, #2
 1178 004e 7DD1     		bne	.L142
 662:Lib/ssc/src/ecatslv.c ****     UINT16    nPdOutputBuffer = 3;
 1179              		.loc 1 662 15 view .LVU367
 1180 0050 0322     		movs	r2, #3
 1181              	.L94:
 1182              	.LVL121:
 702:Lib/ssc/src/ecatslv.c ****         nPdInputBuffer = 1;
 703:Lib/ssc/src/ecatslv.c **** 
 704:Lib/ssc/src/ecatslv.c ****     /* it has be checked if the Sync Manager memory areas for Inputs and Outputs will not overlap
 705:Lib/ssc/src/ecatslv.c ****        the Sync Manager memory areas for the Mailbox */
 706:Lib/ssc/src/ecatslv.c **** 
 707:Lib/ssc/src/ecatslv.c ****     if (((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrSendMbx && (nEscAddrInputD
 1183              		.loc 1 707 5 is_stmt 1 view .LVU368
 1184              		.loc 1 707 44 is_stmt 0 view .LVU369
 1185 0052 5E49     		ldr	r1, .L182+24
 1186 0054 B1F800E0 		ldrh	lr, [r1]
 1187              		.loc 1 707 29 view .LVU370
 1188 0058 0EFB0232 		mla	r2, lr, r2, r3
 1189              	.LVL122:
 1190              		.loc 1 707 62 view .LVU371
 1191 005c 5C49     		ldr	r1, .L182+28
 1192 005e 0988     		ldrh	r1, [r1]
 1193              		.loc 1 707 8 view .LVU372
ARM GAS  /tmp/ccd2INFf.s 			page 37


 1194 0060 8A42     		cmp	r2, r1
 1195 0062 05DD     		ble	.L95
 1196              		.loc 1 707 125 discriminator 1 view .LVU373
 1197 0064 5B48     		ldr	r0, .L182+32
 1198              	.LVL123:
 1199              		.loc 1 707 125 discriminator 1 view .LVU374
 1200 0066 0088     		ldrh	r0, [r0]
 1201 0068 0844     		add	r0, r0, r1
 1202              		.loc 1 707 82 discriminator 1 view .LVU375
 1203 006a 8342     		cmp	r3, r0
 1204 006c C0F25E82 		blt	.L143
 1205              	.L95:
 708:Lib/ssc/src/ecatslv.c ****        || ((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrReceiveMbx && (nEscAddrI
 1206              		.loc 1 708 64 view .LVU376
 1207 0070 5948     		ldr	r0, .L182+36
 1208 0072 0088     		ldrh	r0, [r0]
 1209              		.loc 1 708 8 view .LVU377
 1210 0074 8242     		cmp	r2, r0
 1211 0076 05DD     		ble	.L97
 1212              		.loc 1 708 133 discriminator 1 view .LVU378
 1213 0078 584A     		ldr	r2, .L182+40
 1214 007a 1288     		ldrh	r2, [r2]
 1215 007c 0244     		add	r2, r2, r0
 1216              		.loc 1 708 87 discriminator 1 view .LVU379
 1217 007e 9342     		cmp	r3, r2
 1218 0080 C0F25682 		blt	.L144
 1219              	.L97:
 709:Lib/ssc/src/ecatslv.c ****         )
 710:Lib/ssc/src/ecatslv.c ****     {
 711:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMINCFG;
 712:Lib/ssc/src/ecatslv.c ****     }
 713:Lib/ssc/src/ecatslv.c **** 
 714:Lib/ssc/src/ecatslv.c ****     if (
 1220              		.loc 1 714 5 is_stmt 1 view .LVU380
 715:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1221              		.loc 1 715 30 is_stmt 0 view .LVU381
 1222 0084 4F4A     		ldr	r2, .L182+16
 1223 0086 B2F800C0 		ldrh	ip, [r2]
 1224              		.loc 1 715 46 view .LVU382
 1225 008a 554A     		ldr	r2, .L182+44
 1226 008c 1288     		ldrh	r2, [r2]
 1227              		.loc 1 715 30 view .LVU383
 1228 008e 05FB02C2 		mla	r2, r5, r2, ip
 714:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1229              		.loc 1 714 8 view .LVU384
 1230 0092 9142     		cmp	r1, r2
 1231 0094 05DA     		bge	.L98
 1232              		.loc 1 715 129 view .LVU385
 1233 0096 4F4D     		ldr	r5, .L182+32
 1234              	.LVL124:
 1235              		.loc 1 715 129 view .LVU386
 1236 0098 2D88     		ldrh	r5, [r5]
 1237 009a 2944     		add	r1, r1, r5
 1238              		.loc 1 715 85 view .LVU387
 1239 009c 8C45     		cmp	ip, r1
 1240 009e C0F24982 		blt	.L145
 1241              	.L98:
ARM GAS  /tmp/ccd2INFf.s 			page 38


 716:Lib/ssc/src/ecatslv.c ****         ||((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrReceiveMbx && (nEscAd
 1242              		.loc 1 716 9 view .LVU388
 1243 00a2 9042     		cmp	r0, r2
 1244 00a4 05DA     		bge	.L99
 1245              		.loc 1 716 137 discriminator 1 view .LVU389
 1246 00a6 4D49     		ldr	r1, .L182+40
 1247 00a8 0988     		ldrh	r1, [r1]
 1248 00aa 0844     		add	r0, r0, r1
 1249              		.loc 1 716 90 discriminator 1 view .LVU390
 1250 00ac 8445     		cmp	ip, r0
 1251 00ae C0F24382 		blt	.L146
 1252              	.L99:
 717:Lib/ssc/src/ecatslv.c ****         ||
 1253              		.loc 1 717 9 view .LVU391
 1254 00b2 9342     		cmp	r3, r2
 1255 00b4 03DA     		bge	.L100
 718:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > nEscAddrInputData && (nEscAddrOut
 1256              		.loc 1 718 129 view .LVU392
 1257 00b6 7344     		add	r3, r3, lr
 1258              		.loc 1 718 85 view .LVU393
 1259 00b8 9C45     		cmp	ip, r3
 1260 00ba C0F23F82 		blt	.L147
 1261              	.L100:
 719:Lib/ssc/src/ecatslv.c ****         )
 720:Lib/ssc/src/ecatslv.c ****     {
 721:Lib/ssc/src/ecatslv.c ****         /* Sync Manager Channel 2 memory area (Outputs) overlaps the Sync Manager memory areas for 
 722:Lib/ssc/src/ecatslv.c ****            or the Sync Manager Channel 3 memory area (Inputs) */
 723:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMOUTCFG;
 724:Lib/ssc/src/ecatslv.c ****     }
 725:Lib/ssc/src/ecatslv.c **** 
 726:Lib/ssc/src/ecatslv.c ****     /* 
 727:Lib/ssc/src/ecatslv.c ****         --- Check configured synchronisation ---
 728:Lib/ssc/src/ecatslv.c ****     */
 729:Lib/ssc/src/ecatslv.c **** 
 730:Lib/ssc/src/ecatslv.c ****     /* Get the DC Control/Activation register value*/
 731:Lib/ssc/src/ecatslv.c ****     /*Read registers 0x980:0x981 (corresponding masks are adapted)*/
 732:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(dcControl, ESC_DC_UNIT_CONTROL_OFFSET);
 1262              		.loc 1 732 5 is_stmt 1 view .LVU394
 1263 00be 0222     		movs	r2, #2
 1264 00c0 4FF41861 		mov	r1, #2432
 1265 00c4 0DF10E00 		add	r0, sp, #14
 1266 00c8 FFF7FEFF 		bl	HW_EscRead
 1267              	.LVL125:
 733:Lib/ssc/src/ecatslv.c ****     dcControl = SWAPWORD(dcControl);
 1268              		.loc 1 733 5 view .LVU395
 734:Lib/ssc/src/ecatslv.c **** 
 735:Lib/ssc/src/ecatslv.c ****     // Cycle time for Sync0
 736:Lib/ssc/src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync0, ESC_DC_SYNC0_CYCLETIME_OFFSET);
 1269              		.loc 1 736 9 view .LVU396
 1270 00cc 0422     		movs	r2, #4
 1271 00ce 4FF41A61 		mov	r1, #2464
 1272 00d2 0DEB0200 		add	r0, sp, r2
 1273 00d6 FFF7FEFF 		bl	HW_EscRead
 1274              	.LVL126:
 737:Lib/ssc/src/ecatslv.c ****         cycleTimeSync0 = SWAPDWORD(cycleTimeSync0);
 1275              		.loc 1 737 9 view .LVU397
 738:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 39


 739:Lib/ssc/src/ecatslv.c ****     // Cycle time for Sync1
 740:Lib/ssc/src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync1, ESC_DC_SYNC1_CYCLETIME_OFFSET);
 1276              		.loc 1 740 9 view .LVU398
 1277 00da 0422     		movs	r2, #4
 1278 00dc 40F6A411 		movw	r1, #2468
 1279 00e0 6846     		mov	r0, sp
 1280 00e2 FFF7FEFF 		bl	HW_EscRead
 1281              	.LVL127:
 741:Lib/ssc/src/ecatslv.c ****         cycleTimeSync1 = SWAPDWORD(cycleTimeSync1);
 1282              		.loc 1 741 9 view .LVU399
 1283              		.loc 1 741 24 is_stmt 0 view .LVU400
 1284 00e6 0098     		ldr	r0, [sp]
 742:Lib/ssc/src/ecatslv.c **** 
 743:Lib/ssc/src/ecatslv.c **** 
 744:Lib/ssc/src/ecatslv.c ****     SyncType0x1C32 = sSyncManOutPar.u16SyncType;
 1285              		.loc 1 744 5 is_stmt 1 view .LVU401
 1286              		.loc 1 744 20 is_stmt 0 view .LVU402
 1287 00e8 324B     		ldr	r3, .L182
 1288 00ea 5B88     		ldrh	r3, [r3, #2]
 1289              	.LVL128:
 745:Lib/ssc/src/ecatslv.c ****     SyncType0x1C33 = sSyncManInPar.u16SyncType;
 1290              		.loc 1 745 5 is_stmt 1 view .LVU403
 1291              		.loc 1 745 20 is_stmt 0 view .LVU404
 1292 00ec 324A     		ldr	r2, .L182+4
 1293 00ee 5188     		ldrh	r1, [r2, #2]
 1294              	.LVL129:
 746:Lib/ssc/src/ecatslv.c **** 
 747:Lib/ssc/src/ecatslv.c **** 
 748:Lib/ssc/src/ecatslv.c **** 
 749:Lib/ssc/src/ecatslv.c ****     /* check general DC register plausibility and if configuration is supported
 750:Lib/ssc/src/ecatslv.c ****        - 0x981 DC Active
 751:Lib/ssc/src/ecatslv.c ****        - 0x9A0:0x9A3 Sync0 Cycle
 752:Lib/ssc/src/ecatslv.c ****        - 0x9A4:0x9A7 Sync1 Cycle
 753:Lib/ssc/src/ecatslv.c ****     */
 754:Lib/ssc/src/ecatslv.c ****     if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) != 0)
 1295              		.loc 1 754 5 is_stmt 1 view .LVU405
 1296              		.loc 1 754 19 is_stmt 0 view .LVU406
 1297 00f0 BDF80E20 		ldrh	r2, [sp, #14]
 1298              		.loc 1 754 7 view .LVU407
 1299 00f4 12F41065 		ands	r5, r2, #2304
 1300 00f8 33D0     		beq	.L148
 755:Lib/ssc/src/ecatslv.c ****     {
 756:Lib/ssc/src/ecatslv.c ****         /* DC unit is active at least one Sync signal shall be generated */
 757:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC0_ACTIVE_MASK | ESC_DC_SYNC1_ACTIVE_MASK)) == 0)
 1301              		.loc 1 757 9 is_stmt 1 view .LVU408
 1302              		.loc 1 757 11 is_stmt 0 view .LVU409
 1303 00fa 12F4C066 		ands	r6, r2, #1536
 1304 00fe 00F01F82 		beq	.L149
 758:Lib/ssc/src/ecatslv.c ****         {
 759:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 760:Lib/ssc/src/ecatslv.c ****         }
 761:Lib/ssc/src/ecatslv.c **** 
 762:Lib/ssc/src/ecatslv.c ****         /* If Sync1 shall only be active if also Sync0 will be generated*/
 763:Lib/ssc/src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1305              		.loc 1 763 9 is_stmt 1 view .LVU410
 1306              		.loc 1 763 11 is_stmt 0 view .LVU411
 1307 0102 B6F5806F 		cmp	r6, #1024
ARM GAS  /tmp/ccd2INFf.s 			page 40


 1308 0106 00F01D82 		beq	.L150
 764:Lib/ssc/src/ecatslv.c ****             && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0))
 765:Lib/ssc/src/ecatslv.c ****         {
 766:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 767:Lib/ssc/src/ecatslv.c ****         }
 768:Lib/ssc/src/ecatslv.c **** 
 769:Lib/ssc/src/ecatslv.c ****         if(u16MinSuppSyncType != 0)
 1309              		.loc 1 769 9 is_stmt 1 view .LVU412
 1310              		.loc 1 769 11 is_stmt 0 view .LVU413
 1311 010a 6CB1     		cbz	r4, .L102
 770:Lib/ssc/src/ecatslv.c ****         {
 771:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM2*/
 772:Lib/ssc/src/ecatslv.c ****             if((((u16MinSuppSyncType & SYNCTYPE_DCSYNC0SUPP) == 0) && ((dcControl & ESC_DC_SYNC0_AC
 1312              		.loc 1 772 13 is_stmt 1 view .LVU414
 1313              		.loc 1 772 15 is_stmt 0 view .LVU415
 1314 010c 14F0040F 		tst	r4, #4
 1315 0110 03D1     		bne	.L103
 1316              		.loc 1 772 68 discriminator 1 view .LVU416
 1317 0112 12F4007F 		tst	r2, #512
 1318 0116 40F01782 		bne	.L151
 1319              	.L103:
 773:Lib/ssc/src/ecatslv.c ****                 ||(((u16MinSuppSyncType & SYNCTYPE_DCSYNC1SUPP) == 0) && ((dcControl & ESC_DC_SYNC1
 1320              		.loc 1 773 17 view .LVU417
 1321 011a 14F0080F 		tst	r4, #8
 1322 011e 03D1     		bne	.L102
 1323              		.loc 1 773 71 discriminator 1 view .LVU418
 1324 0120 12F4806F 		tst	r2, #1024
 1325 0124 40F01282 		bne	.L152
 1326              	.L102:
 774:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM2*/
 775:Lib/ssc/src/ecatslv.c ****             {
 776:Lib/ssc/src/ecatslv.c ****                 /* Sync0 is not supported but will be generated*/
 777:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;                   
 778:Lib/ssc/src/ecatslv.c ****     }
 779:Lib/ssc/src/ecatslv.c ****         }
 780:Lib/ssc/src/ecatslv.c **** 
 781:Lib/ssc/src/ecatslv.c ****         /*Check if Sync0 cycle time is supported*/
 782:Lib/ssc/src/ecatslv.c ****         if ( cycleTimeSync0 != 0 && (cycleTimeSync0 < MIN_PD_CYCLE_TIME || cycleTimeSync0 > MAX_PD_
 1327              		.loc 1 782 9 is_stmt 1 view .LVU419
 1328              		.loc 1 782 29 is_stmt 0 view .LVU420
 1329 0128 019F     		ldr	r7, [sp, #4]
 1330              		.loc 1 782 12 view .LVU421
 1331 012a 47B1     		cbz	r7, .L104
 1332              		.loc 1 782 73 discriminator 1 view .LVU422
 1333 012c A7F5F42C 		sub	ip, r7, #499712
 1334 0130 ACF5907C 		sub	ip, ip, #288
 1335              		.loc 1 782 34 discriminator 1 view .LVU423
 1336 0134 DFF8B0E0 		ldr	lr, .L182+52
 1337 0138 F445     		cmp	ip, lr
 1338 013a 00F20982 		bhi	.L153
 1339              	.L104:
 783:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCSYNC0CYCLETIME;
 784:Lib/ssc/src/ecatslv.c **** 
 785:Lib/ssc/src/ecatslv.c **** 
 786:Lib/ssc/src/ecatslv.c ****         /* Check if Subordinated cycles are configured */
 787:Lib/ssc/src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0) && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK)
 1340              		.loc 1 787 9 is_stmt 1 view .LVU424
ARM GAS  /tmp/ccd2INFf.s 			page 41


 1341              		.loc 1 787 11 is_stmt 0 view .LVU425
 1342 013e B6F5C06F 		cmp	r6, #1536
 1343 0142 05D0     		beq	.L174
 660:Lib/ssc/src/ecatslv.c **** 
 1344              		.loc 1 660 10 view .LVU426
 1345 0144 0026     		movs	r6, #0
 1346 0146 0DE0     		b	.L101
 1347              	.LVL130:
 1348              	.L141:
 689:Lib/ssc/src/ecatslv.c ****     }
 1349              		.loc 1 689 24 view .LVU427
 1350 0148 0125     		movs	r5, #1
 1351 014a 77E7     		b	.L93
 1352              	.LVL131:
 1353              	.L142:
 702:Lib/ssc/src/ecatslv.c **** 
 1354              		.loc 1 702 24 view .LVU428
 1355 014c 0122     		movs	r2, #1
 1356 014e 80E7     		b	.L94
 1357              	.LVL132:
 1358              	.L174:
 788:Lib/ssc/src/ecatslv.c ****         {
 789:Lib/ssc/src/ecatslv.c ****             /* For Subordinated cycles both Sync signals shall be active and Sync0 is not configure
 790:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM1*/
 791:Lib/ssc/src/ecatslv.c ****             if((cycleTimeSync1 > 0) && (cycleTimeSync1 >= cycleTimeSync0))
 1359              		.loc 1 791 13 is_stmt 1 view .LVU429
 1360              		.loc 1 791 15 is_stmt 0 view .LVU430
 1361 0150 C8B1     		cbz	r0, .L155
 1362              		.loc 1 791 37 discriminator 1 view .LVU431
 1363 0152 B842     		cmp	r0, r7
 1364 0154 19D3     		bcc	.L156
 792:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM1*/
 793:Lib/ssc/src/ecatslv.c ****             {
 794:Lib/ssc/src/ecatslv.c ****                 bSubordinatedCycles = TRUE;
 1365              		.loc 1 794 17 is_stmt 1 view .LVU432
 1366              	.LVL133:
 795:Lib/ssc/src/ecatslv.c ****             }
 796:Lib/ssc/src/ecatslv.c ****         }
 797:Lib/ssc/src/ecatslv.c **** 
 798:Lib/ssc/src/ecatslv.c ****         /* Dump an error if subordinated cycles are configured but not supported */
 799:Lib/ssc/src/ecatslv.c ****         if(bSubordinatedCycles && ((u16MinSuppSyncType & SYNCTYPE_SUBCYCLESUPP) == 0))
 1367              		.loc 1 799 9 view .LVU433
 1368              		.loc 1 799 32 is_stmt 0 view .LVU434
 1369 0156 14F0100F 		tst	r4, #16
 1370 015a 00F0FB81 		beq	.L157
 794:Lib/ssc/src/ecatslv.c ****             }
 1371              		.loc 1 794 37 view .LVU435
 1372 015e 0126     		movs	r6, #1
 1373 0160 00E0     		b	.L101
 1374              	.LVL134:
 1375              	.L148:
 660:Lib/ssc/src/ecatslv.c **** 
 1376              		.loc 1 660 10 view .LVU436
 1377 0162 0026     		movs	r6, #0
 1378              	.LVL135:
 1379              	.L101:
 800:Lib/ssc/src/ecatslv.c ****         {
ARM GAS  /tmp/ccd2INFf.s 			page 42


 801:Lib/ssc/src/ecatslv.c ****              return ALSTATUSCODE_DCINVALIDSYNCCFG;
 802:Lib/ssc/src/ecatslv.c ****         }
 803:Lib/ssc/src/ecatslv.c ****     }
 804:Lib/ssc/src/ecatslv.c **** 
 805:Lib/ssc/src/ecatslv.c **** 
 806:Lib/ssc/src/ecatslv.c ****     /*
 807:Lib/ssc/src/ecatslv.c ****         Check if the user configured Sync Type matches the DC register values (if the Sync Type is 
 808:Lib/ssc/src/ecatslv.c ****     */
 809:Lib/ssc/src/ecatslv.c ****     if(bSyncSetByUser)
 1380              		.loc 1 809 5 is_stmt 1 view .LVU437
 1381              		.loc 1 809 8 is_stmt 0 view .LVU438
 1382 0164 1F4C     		ldr	r4, .L182+48
 1383              	.LVL136:
 1384              		.loc 1 809 8 view .LVU439
 1385 0166 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 1386              		.loc 1 809 7 view .LVU440
 1387 0168 002C     		cmp	r4, #0
 1388 016a 3FD0     		beq	.L105
 810:Lib/ssc/src/ecatslv.c ****     {
 811:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1389              		.loc 1 811 9 is_stmt 1 view .LVU441
 1390              		.loc 1 811 11 is_stmt 0 view .LVU442
 1391 016c 7DB9     		cbnz	r5, .L106
 812:Lib/ssc/src/ecatslv.c ****         {
 813:Lib/ssc/src/ecatslv.c ****             /* DC out unit not enabled => no DC mode shall be set */
 814:Lib/ssc/src/ecatslv.c ****             if((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1392              		.loc 1 814 13 is_stmt 1 view .LVU443
 1393              		.loc 1 814 53 is_stmt 0 view .LVU444
 1394 016e 9A1E     		subs	r2, r3, #2
 1395 0170 92B2     		uxth	r2, r2
 1396              		.loc 1 814 15 view .LVU445
 1397 0172 012A     		cmp	r2, #1
 1398 0174 40F2F081 		bls	.L158
 815:Lib/ssc/src/ecatslv.c ****                 ||(SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))
 1399              		.loc 1 815 17 view .LVU446
 1400 0178 0229     		cmp	r1, #2
 1401 017a 00F0EF81 		beq	.L159
 1402              		.loc 1 815 56 discriminator 1 view .LVU447
 1403 017e 0329     		cmp	r1, #3
 1404 0180 46D1     		bne	.L107
 816:Lib/ssc/src/ecatslv.c ****             {
 817:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1405              		.loc 1 817 24 view .LVU448
 1406 0182 3020     		movs	r0, #48
 1407 0184 FEE0     		b	.L96
 1408              	.LVL137:
 1409              	.L155:
 660:Lib/ssc/src/ecatslv.c **** 
 1410              		.loc 1 660 10 view .LVU449
 1411 0186 0026     		movs	r6, #0
 1412 0188 ECE7     		b	.L101
 1413              	.L156:
 1414 018a 0026     		movs	r6, #0
 1415 018c EAE7     		b	.L101
 1416              	.LVL138:
 1417              	.L106:
 818:Lib/ssc/src/ecatslv.c ****             }
ARM GAS  /tmp/ccd2INFf.s 			page 43


 819:Lib/ssc/src/ecatslv.c ****         } //if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 
 820:Lib/ssc/src/ecatslv.c ****     else
 821:Lib/ssc/src/ecatslv.c ****     {
 822:Lib/ssc/src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 1418              		.loc 1 822 13 is_stmt 1 view .LVU450
 1419              		.loc 1 822 15 is_stmt 0 view .LVU451
 1420 018e 12F4806F 		tst	r2, #1024
 1421 0192 05D1     		bne	.L108
 823:Lib/ssc/src/ecatslv.c ****             {
 824:Lib/ssc/src/ecatslv.c ****                 /* No Sync 1 is generated => No Sync1 Sync Type shall configured*/
 825:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 826:Lib/ssc/src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC1)
 1422              		.loc 1 826 17 is_stmt 1 view .LVU452
 1423              		.loc 1 826 19 is_stmt 0 view .LVU453
 1424 0194 032B     		cmp	r3, #3
 1425 0196 00F0E381 		beq	.L161
 827:Lib/ssc/src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC1))
 1426              		.loc 1 827 21 view .LVU454
 1427 019a 0329     		cmp	r1, #3
 1428 019c 00F0E281 		beq	.L162
 1429              	.L108:
 828:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 829:Lib/ssc/src/ecatslv.c ****                 {
 830:Lib/ssc/src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 831:Lib/ssc/src/ecatslv.c ****                 }
 832:Lib/ssc/src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 833:Lib/ssc/src/ecatslv.c **** 
 834:Lib/ssc/src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1430              		.loc 1 834 13 is_stmt 1 view .LVU455
 1431              		.loc 1 834 15 is_stmt 0 view .LVU456
 1432 01a0 12F4007F 		tst	r2, #512
 1433 01a4 34D1     		bne	.L107
 835:Lib/ssc/src/ecatslv.c ****             {
 836:Lib/ssc/src/ecatslv.c ****                 /* No Sync 0 is generated => No Sync0 Sync Type shall configured*/
 837:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 838:Lib/ssc/src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC0)
 1434              		.loc 1 838 17 is_stmt 1 view .LVU457
 1435              		.loc 1 838 19 is_stmt 0 view .LVU458
 1436 01a6 022B     		cmp	r3, #2
 1437 01a8 00F0DE81 		beq	.L163
 839:Lib/ssc/src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC0))
 1438              		.loc 1 839 21 view .LVU459
 1439 01ac 0229     		cmp	r1, #2
 1440 01ae 2FD1     		bne	.L107
 840:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 841:Lib/ssc/src/ecatslv.c ****                 {
 842:Lib/ssc/src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1441              		.loc 1 842 28 view .LVU460
 1442 01b0 3020     		movs	r0, #48
 1443 01b2 E7E0     		b	.L96
 1444              	.L183:
 1445              		.align	2
 1446              	.L182:
 1447 01b4 00000000 		.word	sSyncManOutPar
 1448 01b8 00000000 		.word	sSyncManInPar
 1449 01bc 00000000 		.word	.LANCHOR12
 1450 01c0 00000000 		.word	.LANCHOR13
ARM GAS  /tmp/ccd2INFf.s 			page 44


 1451 01c4 00000000 		.word	.LANCHOR8
 1452 01c8 00000000 		.word	.LANCHOR6
 1453 01cc 00000000 		.word	.LANCHOR4
 1454 01d0 00000000 		.word	u16EscAddrSendMbx
 1455 01d4 00000000 		.word	u16SendMbxSize
 1456 01d8 00000000 		.word	u16EscAddrReceiveMbx
 1457 01dc 00000000 		.word	u16ReceiveMbxSize
 1458 01e0 00000000 		.word	.LANCHOR7
 1459 01e4 00000000 		.word	bSyncSetByUser
 1460 01e8 E05E48C3 		.word	-1018667296
 1461              	.L105:
 843:Lib/ssc/src/ecatslv.c ****                 }
 844:Lib/ssc/src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 845:Lib/ssc/src/ecatslv.c **** 
 846:Lib/ssc/src/ecatslv.c ****         }
 847:Lib/ssc/src/ecatslv.c ****     } //if(bSyncSetByUser)
 848:Lib/ssc/src/ecatslv.c ****     else
 849:Lib/ssc/src/ecatslv.c ****     {
 850:Lib/ssc/src/ecatslv.c ****         /* No Sync Type selected by user => Configure Sync Type based on DC register values*/
 851:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1462              		.loc 1 851 9 is_stmt 1 view .LVU461
 1463              		.loc 1 851 11 is_stmt 0 view .LVU462
 1464 01ec 002D     		cmp	r5, #0
 1465 01ee 40F0D580 		bne	.L109
 852:Lib/ssc/src/ecatslv.c ****         {
 853:Lib/ssc/src/ecatslv.c ****             /* Activation or auto activation of the Sync Out Unit is disabled => Free Run or SM Syn
 854:Lib/ssc/src/ecatslv.c **** 
 855:Lib/ssc/src/ecatslv.c ****             /* AL Event enabled => Configure SM Sync*/
 856:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize > 0)
 1466              		.loc 1 856 13 is_stmt 1 view .LVU463
 1467              		.loc 1 856 31 is_stmt 0 view .LVU464
 1468 01f2 904B     		ldr	r3, .L184
 1469              	.LVL139:
 1470              		.loc 1 856 31 view .LVU465
 1471 01f4 1A88     		ldrh	r2, [r3]
 1472              		.loc 1 856 16 view .LVU466
 1473 01f6 002A     		cmp	r2, #0
 1474 01f8 00F0C680 		beq	.L110
 857:Lib/ssc/src/ecatslv.c ****             {
 858:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_SM_SYNCHRON;
 1475              		.loc 1 858 17 is_stmt 1 view .LVU467
 1476              	.LVL140:
 859:Lib/ssc/src/ecatslv.c ****                 
 860:Lib/ssc/src/ecatslv.c ****                 if (nPdInputSize > 0)
 1477              		.loc 1 860 17 view .LVU468
 1478              		.loc 1 860 34 is_stmt 0 view .LVU469
 1479 01fc 8E4B     		ldr	r3, .L184+4
 1480 01fe 1988     		ldrh	r1, [r3]
 1481              	.LVL141:
 1482              		.loc 1 860 20 view .LVU470
 1483 0200 0029     		cmp	r1, #0
 1484 0202 00F0C780 		beq	.L165
 861:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_SM2_SYNCHRON;
 1485              		.loc 1 861 36 view .LVU471
 1486 0206 2221     		movs	r1, #34
 858:Lib/ssc/src/ecatslv.c ****                 
 1487              		.loc 1 858 32 view .LVU472
ARM GAS  /tmp/ccd2INFf.s 			page 45


 1488 0208 0123     		movs	r3, #1
 1489              	.LVL142:
 1490              	.L111:
 862:Lib/ssc/src/ecatslv.c ****                 else
 863:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_FREERUN;
 864:Lib/ssc/src/ecatslv.c ****             }
 865:Lib/ssc/src/ecatslv.c ****             else if (nPdInputSize > 0)
 866:Lib/ssc/src/ecatslv.c ****             {
 867:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 868:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_SM_SYNCHRON;
 869:Lib/ssc/src/ecatslv.c ****             }
 870:Lib/ssc/src/ecatslv.c ****             else
 871:Lib/ssc/src/ecatslv.c ****             {
 872:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 873:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 874:Lib/ssc/src/ecatslv.c ****             }
 875:Lib/ssc/src/ecatslv.c ****             sSyncManOutPar.u16GetCycleTime = 1;
 1491              		.loc 1 875 13 is_stmt 1 view .LVU473
 1492              		.loc 1 875 44 is_stmt 0 view .LVU474
 1493 020a 8C4A     		ldr	r2, .L184+8
 1494 020c 0124     		movs	r4, #1
 1495 020e 9483     		strh	r4, [r2, #28]	@ movhi
 1496              	.LVL143:
 1497              	.L107:
 876:Lib/ssc/src/ecatslv.c **** 
 877:Lib/ssc/src/ecatslv.c ****         }
 878:Lib/ssc/src/ecatslv.c ****         else
 879:Lib/ssc/src/ecatslv.c ****         {
 880:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize > 0)
 881:Lib/ssc/src/ecatslv.c ****             {
 882:Lib/ssc/src/ecatslv.c ****                 /* Sync Signal generation is active*/
 883:Lib/ssc/src/ecatslv.c ****                 if (bSubordinatedCycles)
 884:Lib/ssc/src/ecatslv.c ****                 {
 885:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC1;
 886:Lib/ssc/src/ecatslv.c ****                 }
 887:Lib/ssc/src/ecatslv.c ****                 else
 888:Lib/ssc/src/ecatslv.c ****                 {
 889:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC0;
 890:Lib/ssc/src/ecatslv.c ****                 }
 891:Lib/ssc/src/ecatslv.c ****             }
 892:Lib/ssc/src/ecatslv.c ****             else
 893:Lib/ssc/src/ecatslv.c ****             {
 894:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 895:Lib/ssc/src/ecatslv.c ****             }
 896:Lib/ssc/src/ecatslv.c **** 
 897:Lib/ssc/src/ecatslv.c **** 
 898:Lib/ssc/src/ecatslv.c ****             if (nPdInputSize > 0)
 899:Lib/ssc/src/ecatslv.c ****             {
 900:Lib/ssc/src/ecatslv.c ****                 if ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0)
 901:Lib/ssc/src/ecatslv.c ****                 {
 902:Lib/ssc/src/ecatslv.c ****                     /* If Sync1 is available the inputs will always be mapped with Sync1 */
 903:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC1;
 904:Lib/ssc/src/ecatslv.c ****                 }
 905:Lib/ssc/src/ecatslv.c ****                 else
 906:Lib/ssc/src/ecatslv.c ****                 {
 907:Lib/ssc/src/ecatslv.c ****                     /* Map Inputs based on Sync0*/
 908:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC0;
ARM GAS  /tmp/ccd2INFf.s 			page 46


 909:Lib/ssc/src/ecatslv.c ****                 }
 910:Lib/ssc/src/ecatslv.c ****             }
 911:Lib/ssc/src/ecatslv.c ****             else
 912:Lib/ssc/src/ecatslv.c ****             {
 913:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 914:Lib/ssc/src/ecatslv.c ****             }
 915:Lib/ssc/src/ecatslv.c ****         }
 916:Lib/ssc/src/ecatslv.c ****     }
 917:Lib/ssc/src/ecatslv.c **** 
 918:Lib/ssc/src/ecatslv.c ****     /* Update Cycle time entries if DC Sync Mode enabled */
 919:Lib/ssc/src/ecatslv.c ****     if(SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1498              		.loc 1 919 5 is_stmt 1 view .LVU475
 1499              		.loc 1 919 7 is_stmt 0 view .LVU476
 1500 0210 032B     		cmp	r3, #3
 1501 0212 00F0D680 		beq	.L175
 920:Lib/ssc/src/ecatslv.c ****     {
 921:Lib/ssc/src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 922:Lib/ssc/src/ecatslv.c **** 
 923:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 924:Lib/ssc/src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 925:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 926:Lib/ssc/src/ecatslv.c ****     }
 927:Lib/ssc/src/ecatslv.c ****     else if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 1502              		.loc 1 927 10 is_stmt 1 view .LVU477
 1503              		.loc 1 927 12 is_stmt 0 view .LVU478
 1504 0216 022B     		cmp	r3, #2
 1505 0218 00F0D980 		beq	.L176
 1506              	.L114:
 928:Lib/ssc/src/ecatslv.c ****     {
 929:Lib/ssc/src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 930:Lib/ssc/src/ecatslv.c **** 
 931:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 932:Lib/ssc/src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT16)cycleTimeSync0;
 933:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 934:Lib/ssc/src/ecatslv.c ****     }
 935:Lib/ssc/src/ecatslv.c **** 
 936:Lib/ssc/src/ecatslv.c ****     /* Set global flags based on Sync Type */
 937:Lib/ssc/src/ecatslv.c ****     if ( !b3BufferMode )
 1507              		.loc 1 937 5 is_stmt 1 view .LVU479
 1508              		.loc 1 937 10 is_stmt 0 view .LVU480
 1509 021c 884A     		ldr	r2, .L184+12
 1510 021e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1511              		.loc 1 937 8 view .LVU481
 1512 0220 2AB9     		cbnz	r2, .L115
 938:Lib/ssc/src/ecatslv.c ****     {
 939:Lib/ssc/src/ecatslv.c ****         /* 1-Buffer-Mode configured => For free run it shall be 3Buffer mode*/
 940:Lib/ssc/src/ecatslv.c ****         if (( SyncType0x1C32 == SYNCTYPE_FREERUN ) || ( SyncType0x1C33 == SYNCTYPE_FREERUN ))
 1513              		.loc 1 940 9 is_stmt 1 view .LVU482
 1514              		.loc 1 940 12 is_stmt 0 view .LVU483
 1515 0222 002B     		cmp	r3, #0
 1516 0224 00F0A281 		beq	.L169
 1517              		.loc 1 940 52 discriminator 1 view .LVU484
 1518 0228 0029     		cmp	r1, #0
 1519 022a 00F0A181 		beq	.L170
 1520              	.L115:
 941:Lib/ssc/src/ecatslv.c ****         {
 942:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_FREERUNNEEDS3BUFFERMODE;
ARM GAS  /tmp/ccd2INFf.s 			page 47


 943:Lib/ssc/src/ecatslv.c ****         }
 944:Lib/ssc/src/ecatslv.c ****     }
 945:Lib/ssc/src/ecatslv.c **** 
 946:Lib/ssc/src/ecatslv.c ****     /* If no free run is supported the EscInt is always enabled*/
 947:Lib/ssc/src/ecatslv.c ****         if (( SyncType0x1C32 != SYNCTYPE_FREERUN ) || ( SyncType0x1C33 != SYNCTYPE_FREERUN ))
 1521              		.loc 1 947 9 is_stmt 1 view .LVU485
 1522              		.loc 1 947 12 is_stmt 0 view .LVU486
 1523 022e 03B9     		cbnz	r3, .L116
 1524              		.loc 1 947 52 discriminator 1 view .LVU487
 1525 0230 11B1     		cbz	r1, .L117
 1526              	.L116:
 948:Lib/ssc/src/ecatslv.c ****         {
 949:Lib/ssc/src/ecatslv.c ****         /* ECAT Synchron Mode, the ESC interrupt is enabled */
 950:Lib/ssc/src/ecatslv.c ****         bEscIntEnabled = TRUE;
 1527              		.loc 1 950 9 is_stmt 1 view .LVU488
 1528              		.loc 1 950 24 is_stmt 0 view .LVU489
 1529 0232 844A     		ldr	r2, .L184+16
 1530 0234 0124     		movs	r4, #1
 1531 0236 1470     		strb	r4, [r2]
 1532              	.L117:
 951:Lib/ssc/src/ecatslv.c ****     }
 952:Lib/ssc/src/ecatslv.c **** 
 953:Lib/ssc/src/ecatslv.c ****         /* Update value for AL Event Mask register (0x204) */
 954:Lib/ssc/src/ecatslv.c ****         if(bEscIntEnabled)
 1533              		.loc 1 954 9 is_stmt 1 view .LVU490
 1534              		.loc 1 954 12 is_stmt 0 view .LVU491
 1535 0238 824A     		ldr	r2, .L184+16
 1536 023a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1537              		.loc 1 954 11 view .LVU492
 1538 023c 42B1     		cbz	r2, .L118
 955:Lib/ssc/src/ecatslv.c ****         {
 956:Lib/ssc/src/ecatslv.c ****             if(nPdOutputSize > 0)
 1539              		.loc 1 956 13 is_stmt 1 view .LVU493
 1540              		.loc 1 956 30 is_stmt 0 view .LVU494
 1541 023e 7D4A     		ldr	r2, .L184
 1542 0240 1288     		ldrh	r2, [r2]
 1543              		.loc 1 956 15 view .LVU495
 1544 0242 002A     		cmp	r2, #0
 1545 0244 00F0CA80 		beq	.L119
 957:Lib/ssc/src/ecatslv.c ****             {
 958:Lib/ssc/src/ecatslv.c ****                 u16ALEventMask = PROCESS_OUTPUT_EVENT;
 1546              		.loc 1 958 17 is_stmt 1 view .LVU496
 1547              		.loc 1 958 32 is_stmt 0 view .LVU497
 1548 0248 7F4A     		ldr	r2, .L184+20
 1549 024a 4FF48064 		mov	r4, #1024
 1550 024e 1480     		strh	r4, [r2]	@ movhi
 1551              	.L118:
 959:Lib/ssc/src/ecatslv.c ****             }
 960:Lib/ssc/src/ecatslv.c ****             else if(nPdInputSize > 0)
 961:Lib/ssc/src/ecatslv.c ****             {
 962:Lib/ssc/src/ecatslv.c ****                 u16ALEventMask = PROCESS_INPUT_EVENT;
 963:Lib/ssc/src/ecatslv.c ****             }
 964:Lib/ssc/src/ecatslv.c **** 
 965:Lib/ssc/src/ecatslv.c ****         }
 966:Lib/ssc/src/ecatslv.c **** 
 967:Lib/ssc/src/ecatslv.c ****         if ((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1552              		.loc 1 967 9 is_stmt 1 view .LVU498
ARM GAS  /tmp/ccd2INFf.s 			page 48


 1553              		.loc 1 967 50 is_stmt 0 view .LVU499
 1554 0250 9A1E     		subs	r2, r3, #2
 1555 0252 92B2     		uxth	r2, r2
 1556              		.loc 1 967 12 view .LVU500
 1557 0254 012A     		cmp	r2, #1
 1558 0256 03D9     		bls	.L120
 968:Lib/ssc/src/ecatslv.c ****             || (SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))/* Sync
 1559              		.loc 1 968 13 view .LVU501
 1560 0258 0229     		cmp	r1, #2
 1561 025a 01D0     		beq	.L120
 1562              		.loc 1 968 53 discriminator 1 view .LVU502
 1563 025c 0329     		cmp	r1, #3
 1564 025e 08D1     		bne	.L121
 1565              	.L120:
 969:Lib/ssc/src/ecatslv.c ****         {
 970:Lib/ssc/src/ecatslv.c ****             /* slave is running in DC-mode */
 971:Lib/ssc/src/ecatslv.c ****             bDcSyncActive = TRUE;
 1566              		.loc 1 971 13 is_stmt 1 view .LVU503
 1567              		.loc 1 971 27 is_stmt 0 view .LVU504
 1568 0260 7A4A     		ldr	r2, .L184+24
 1569 0262 0124     		movs	r4, #1
 1570 0264 1470     		strb	r4, [r2]
 972:Lib/ssc/src/ecatslv.c **** 
 973:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 974:Lib/ssc/src/ecatslv.c ****             /*In case of an Input only application with DC no PDI Isr handling is required*/
 975:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize == 0)
 1571              		.loc 1 975 13 is_stmt 1 view .LVU505
 1572              		.loc 1 975 31 is_stmt 0 view .LVU506
 1573 0266 734A     		ldr	r2, .L184
 1574 0268 1288     		ldrh	r2, [r2]
 1575              		.loc 1 975 16 view .LVU507
 1576 026a 12B9     		cbnz	r2, .L121
 976:Lib/ssc/src/ecatslv.c ****             {
 977:Lib/ssc/src/ecatslv.c ****                u16ALEventMask = 0;
 1577              		.loc 1 977 16 is_stmt 1 view .LVU508
 1578              		.loc 1 977 31 is_stmt 0 view .LVU509
 1579 026c 764A     		ldr	r2, .L184+20
 1580 026e 0024     		movs	r4, #0
 1581 0270 1480     		strh	r4, [r2]	@ movhi
 1582              	.L121:
 978:Lib/ssc/src/ecatslv.c ****             }
 979:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 980:Lib/ssc/src/ecatslv.c ****         }
 981:Lib/ssc/src/ecatslv.c **** 
 982:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u16SyncType = SyncType0x1C32;
 1583              		.loc 1 982 5 is_stmt 1 view .LVU510
 1584              		.loc 1 982 32 is_stmt 0 view .LVU511
 1585 0272 724A     		ldr	r2, .L184+8
 1586 0274 5380     		strh	r3, [r2, #2]	@ movhi
 983:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u16SyncType = SyncType0x1C33;
 1587              		.loc 1 983 5 is_stmt 1 view .LVU512
 1588              		.loc 1 983 31 is_stmt 0 view .LVU513
 1589 0276 764A     		ldr	r2, .L184+28
 1590 0278 5180     		strh	r1, [r2, #2]	@ movhi
 984:Lib/ssc/src/ecatslv.c **** 
 985:Lib/ssc/src/ecatslv.c ****     /* Calculate number of Sync0 events within one SM cycle and the Sync0 events on which the input
 986:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Value = 0;
ARM GAS  /tmp/ccd2INFf.s 			page 49


 1591              		.loc 1 986 5 is_stmt 1 view .LVU514
 1592              		.loc 1 986 26 is_stmt 0 view .LVU515
 1593 027a 0022     		movs	r2, #0
 1594 027c 754C     		ldr	r4, .L184+32
 1595 027e 2280     		strh	r2, [r4]	@ movhi
 987:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Counter = 0;
 1596              		.loc 1 987 5 is_stmt 1 view .LVU516
 1597              		.loc 1 987 28 is_stmt 0 view .LVU517
 1598 0280 754C     		ldr	r4, .L184+36
 1599 0282 2280     		strh	r2, [r4]	@ movhi
 988:Lib/ssc/src/ecatslv.c ****     u16SmSync0Value = 0;
 1600              		.loc 1 988 5 is_stmt 1 view .LVU518
 1601              		.loc 1 988 21 is_stmt 0 view .LVU519
 1602 0284 754C     		ldr	r4, .L184+40
 1603 0286 2280     		strh	r2, [r4]	@ movhi
 989:Lib/ssc/src/ecatslv.c ****     u16SmSync0Counter = 0;
 1604              		.loc 1 989 5 is_stmt 1 view .LVU520
 1605              		.loc 1 989 23 is_stmt 0 view .LVU521
 1606 0288 754C     		ldr	r4, .L184+44
 1607 028a 2280     		strh	r2, [r4]	@ movhi
 990:Lib/ssc/src/ecatslv.c **** 
 991:Lib/ssc/src/ecatslv.c **** 
 992:Lib/ssc/src/ecatslv.c ****     if(bSubordinatedCycles == TRUE)
 1608              		.loc 1 992 5 is_stmt 1 view .LVU522
 1609              		.loc 1 992 7 is_stmt 0 view .LVU523
 1610 028c 002E     		cmp	r6, #0
 1611 028e 40F0AF80 		bne	.L177
 993:Lib/ssc/src/ecatslv.c ****     {
 994:Lib/ssc/src/ecatslv.c ****         /* get the number of Sync0 event within on SM cycle */
 995:Lib/ssc/src/ecatslv.c ****         if(cycleTimeSync1 >= cycleTimeSync0)
 996:Lib/ssc/src/ecatslv.c ****         {
 997:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = (UINT16)(cycleTimeSync1 / cycleTimeSync0);
 998:Lib/ssc/src/ecatslv.c ****             
 999:Lib/ssc/src/ecatslv.c ****             if((cycleTimeSync1 % cycleTimeSync0) == 0)
1000:Lib/ssc/src/ecatslv.c ****             {
1001:Lib/ssc/src/ecatslv.c ****                 /* if the Sync1cycletime/Sync0cycletime ratio is even one additional tick */
1002:Lib/ssc/src/ecatslv.c ****                 u16SmSync0Value ++;
1003:Lib/ssc/src/ecatslv.c ****         }
1004:Lib/ssc/src/ecatslv.c ****         }
1005:Lib/ssc/src/ecatslv.c ****         else
1006:Lib/ssc/src/ecatslv.c ****         {
1007:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = 1;
1008:Lib/ssc/src/ecatslv.c ****         }
1009:Lib/ssc/src/ecatslv.c **** 
1010:Lib/ssc/src/ecatslv.c ****         /* Calculate the Sync0 tick on which the inputs shall be latched (last Sync0 before the nex
1011:Lib/ssc/src/ecatslv.c ****         LatchInputSync0Value = (UINT16) (cycleTimeSync1 / cycleTimeSync0);
1012:Lib/ssc/src/ecatslv.c **** 
1013:Lib/ssc/src/ecatslv.c ****         if((cycleTimeSync1 % cycleTimeSync0) > 0)
1014:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
1015:Lib/ssc/src/ecatslv.c **** 
1016:Lib/ssc/src/ecatslv.c ****     }
1017:Lib/ssc/src/ecatslv.c ****     else 
1018:Lib/ssc/src/ecatslv.c ****     {
1019:Lib/ssc/src/ecatslv.c ****         if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 1612              		.loc 1 1019 9 is_stmt 1 view .LVU524
 1613              		.loc 1 1019 11 is_stmt 0 view .LVU525
 1614 0292 022B     		cmp	r3, #2
ARM GAS  /tmp/ccd2INFf.s 			page 50


 1615 0294 00F0CA80 		beq	.L178
 1616              	.LVL144:
 1617              	.L126:
1020:Lib/ssc/src/ecatslv.c ****         {
1021:Lib/ssc/src/ecatslv.c ****             /* if SyncType of 0x1C32 is 2 the Sync0 event is trigger once during a SM cycle */
1022:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = 1;
1023:Lib/ssc/src/ecatslv.c ****         }   
1024:Lib/ssc/src/ecatslv.c **** 
1025:Lib/ssc/src/ecatslv.c ****         if(SyncType0x1C33 != SYNCTYPE_DCSYNC1)
 1618              		.loc 1 1025 9 is_stmt 1 view .LVU526
 1619              		.loc 1 1025 11 is_stmt 0 view .LVU527
 1620 0298 0329     		cmp	r1, #3
 1621 029a 02D0     		beq	.L125
1026:Lib/ssc/src/ecatslv.c ****         {
1027:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value = 1;
 1622              		.loc 1 1027 13 is_stmt 1 view .LVU528
 1623              		.loc 1 1027 34 is_stmt 0 view .LVU529
 1624 029c 6D4B     		ldr	r3, .L184+32
 1625 029e 0122     		movs	r2, #1
 1626 02a0 1A80     		strh	r2, [r3]	@ movhi
 1627              	.LVL145:
 1628              	.L125:
1028:Lib/ssc/src/ecatslv.c ****         }
1029:Lib/ssc/src/ecatslv.c ****     }
1030:Lib/ssc/src/ecatslv.c **** 
1031:Lib/ssc/src/ecatslv.c **** 
1032:Lib/ssc/src/ecatslv.c **** 
1033:Lib/ssc/src/ecatslv.c ****     /* reset the error counter indicating synchronization problems */
1034:Lib/ssc/src/ecatslv.c ****     sCycleDiag.syncFailedCounter = 0;
 1629              		.loc 1 1034 5 is_stmt 1 view .LVU530
 1630              		.loc 1 1034 34 is_stmt 0 view .LVU531
 1631 02a2 704B     		ldr	r3, .L184+48
 1632 02a4 0022     		movs	r2, #0
 1633 02a6 1A80     		strh	r2, [r3]	@ movhi
1035:Lib/ssc/src/ecatslv.c **** 
1036:Lib/ssc/src/ecatslv.c **** 
1037:Lib/ssc/src/ecatslv.c ****     /*
1038:Lib/ssc/src/ecatslv.c ****         --- Check watchdog settings ---
1039:Lib/ssc/src/ecatslv.c ****     */
1040:Lib/ssc/src/ecatslv.c **** 
1041:Lib/ssc/src/ecatslv.c ****     /*get the watchdog time (register 0x420). if value is > 0 watchdog is active*/
1042:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1043:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(wd, ESC_PD_WD_TIME);
 1634              		.loc 1 1043 5 is_stmt 1 view .LVU532
 1635 02a8 0222     		movs	r2, #2
 1636 02aa 4FF48461 		mov	r1, #1056
 1637 02ae 0DF10A00 		add	r0, sp, #10
 1638 02b2 FFF7FEFF 		bl	HW_EscRead
 1639              	.LVL146:
1044:Lib/ssc/src/ecatslv.c ****     wd = SWAPWORD(wd);
 1640              		.loc 1 1044 5 view .LVU533
 1641              		.loc 1 1044 8 is_stmt 0 view .LVU534
 1642 02b6 BDF80A20 		ldrh	r2, [sp, #10]
1045:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1046:Lib/ssc/src/ecatslv.c **** 
1047:Lib/ssc/src/ecatslv.c ****     if (nPdOutputSize > 0 &&  wd != 0 )
 1643              		.loc 1 1047 5 is_stmt 1 view .LVU535
ARM GAS  /tmp/ccd2INFf.s 			page 51


 1644              		.loc 1 1047 23 is_stmt 0 view .LVU536
 1645 02ba 5E4B     		ldr	r3, .L184
 1646 02bc 1B88     		ldrh	r3, [r3]
 1647              		.loc 1 1047 8 view .LVU537
 1648 02be 13B1     		cbz	r3, .L127
 1649              		.loc 1 1047 27 discriminator 1 view .LVU538
 1650 02c0 002A     		cmp	r2, #0
 1651 02c2 40F0E780 		bne	.L179
 1652              	.L127:
1048:Lib/ssc/src/ecatslv.c ****     {
1049:Lib/ssc/src/ecatslv.c ****     /*get watchdog divider (register 0x400)*/
1050:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(wdiv, ESC_WD_DIVIDER_OFFSET);
1051:Lib/ssc/src/ecatslv.c ****     wdiv = SWAPWORD(wdiv);
1052:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
1053:Lib/ssc/src/ecatslv.c ****         {
1054:Lib/ssc/src/ecatslv.c ****             /* the ESC subtracts 2 in register 0x400 so it has to be added here */
1055:Lib/ssc/src/ecatslv.c ****             UINT32 d = wdiv+2;
1056:Lib/ssc/src/ecatslv.c **** 
1057:Lib/ssc/src/ecatslv.c ****             d *= wd;
1058:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
1059:Lib/ssc/src/ecatslv.c ****             /* watchdog value has to be rounded up */
1060:Lib/ssc/src/ecatslv.c ****             d += 24999;
1061:Lib/ssc/src/ecatslv.c ****             d /= 25000;
1062:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
1063:Lib/ssc/src/ecatslv.c ****         }
1064:Lib/ssc/src/ecatslv.c ****         else
1065:Lib/ssc/src/ecatslv.c ****         {
1066:Lib/ssc/src/ecatslv.c ****             wd = 0;
1067:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
1068:Lib/ssc/src/ecatslv.c ****             EcatWdValue = 0;
1069:Lib/ssc/src/ecatslv.c ****         }
1070:Lib/ssc/src/ecatslv.c ****     }
1071:Lib/ssc/src/ecatslv.c ****     else
1072:Lib/ssc/src/ecatslv.c ****     {
1073:Lib/ssc/src/ecatslv.c ****         /* the watchdog is deactivated or slave has no output process data*/
1074:Lib/ssc/src/ecatslv.c ****         wdiv = 0;
 1653              		.loc 1 1074 9 is_stmt 1 view .LVU539
 1654              		.loc 1 1074 14 is_stmt 0 view .LVU540
 1655 02c6 0023     		movs	r3, #0
 1656 02c8 ADF80C30 		strh	r3, [sp, #12]	@ movhi
1075:Lib/ssc/src/ecatslv.c ****         EcatWdValue = 0;
 1657              		.loc 1 1075 9 is_stmt 1 view .LVU541
 1658              		.loc 1 1075 21 is_stmt 0 view .LVU542
 1659 02cc 664A     		ldr	r2, .L184+52
 1660 02ce 1380     		strh	r3, [r2]	@ movhi
 1661              	.L129:
1076:Lib/ssc/src/ecatslv.c ****     }
1077:Lib/ssc/src/ecatslv.c **** 
1078:Lib/ssc/src/ecatslv.c ****     if((EcatWdValue == 0 && bWdTrigger) || (EcatWdValue != 0 && !bWdTrigger))
 1662              		.loc 1 1078 5 is_stmt 1 view .LVU543
 1663              		.loc 1 1078 21 is_stmt 0 view .LVU544
 1664 02d0 654B     		ldr	r3, .L184+52
 1665 02d2 1B88     		ldrh	r3, [r3]
 1666              		.loc 1 1078 7 view .LVU545
 1667 02d4 23B9     		cbnz	r3, .L130
 1668              		.loc 1 1078 26 discriminator 1 view .LVU546
 1669 02d6 654A     		ldr	r2, .L184+56
ARM GAS  /tmp/ccd2INFf.s 			page 52


 1670 02d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1671 02da 002A     		cmp	r2, #0
 1672 02dc 40F04A81 		bne	.L171
 1673              	.L130:
 1674              		.loc 1 1078 41 discriminator 3 view .LVU547
 1675 02e0 23B1     		cbz	r3, .L131
 1676              		.loc 1 1078 65 discriminator 4 view .LVU548
 1677 02e2 624B     		ldr	r3, .L184+56
 1678 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1679              		.loc 1 1078 62 discriminator 4 view .LVU549
 1680 02e6 002B     		cmp	r3, #0
 1681 02e8 00F04681 		beq	.L172
 1682              	.L131:
1079:Lib/ssc/src/ecatslv.c ****     {
1080:Lib/ssc/src/ecatslv.c ****         /* if the WD-Trigger in the Sync Manager Channel 2 Control-Byte is set (Bit 6 of Register 0
1081:Lib/ssc/src/ecatslv.c ****             an error has to be returned */
1082:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDWDCFG;
1083:Lib/ssc/src/ecatslv.c ****     }
1084:Lib/ssc/src/ecatslv.c **** 
1085:Lib/ssc/src/ecatslv.c ****     if ( bEscIntEnabled && nPdOutputSize != 0 )
 1683              		.loc 1 1085 5 is_stmt 1 view .LVU550
 1684              		.loc 1 1085 10 is_stmt 0 view .LVU551
 1685 02ec 554B     		ldr	r3, .L184+16
 1686 02ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1687              		.loc 1 1085 8 view .LVU552
 1688 02f0 3BB1     		cbz	r3, .L132
 1689              		.loc 1 1085 42 discriminator 1 view .LVU553
 1690 02f2 504B     		ldr	r3, .L184
 1691 02f4 1B88     		ldrh	r3, [r3]
 1692              		.loc 1 1085 25 discriminator 1 view .LVU554
 1693 02f6 23B1     		cbz	r3, .L132
1086:Lib/ssc/src/ecatslv.c ****     {
1087:Lib/ssc/src/ecatslv.c ****         /* ECAT synchron Mode is active, the Sync Manager Channel 2 event
1088:Lib/ssc/src/ecatslv.c ****            has to activated in the AL-Event mask register */
1089:Lib/ssc/src/ecatslv.c ****         u16ALEventMask |= PROCESS_OUTPUT_EVENT;
 1694              		.loc 1 1089 9 is_stmt 1 view .LVU555
 1695              		.loc 1 1089 24 is_stmt 0 view .LVU556
 1696 02f8 534A     		ldr	r2, .L184+20
 1697 02fa 1388     		ldrh	r3, [r2]
 1698 02fc 43F48063 		orr	r3, r3, #1024
 1699 0300 1380     		strh	r3, [r2]	@ movhi
 1700              	.L132:
1090:Lib/ssc/src/ecatslv.c ****     }
1091:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1092:Lib/ssc/src/ecatslv.c **** 
1093:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 1701              		.loc 1 1093 5 is_stmt 1 view .LVU557
 1702              		.loc 1 1093 18 is_stmt 0 view .LVU558
 1703 0302 0023     		movs	r3, #0
 1704 0304 5A4A     		ldr	r2, .L184+60
 1705 0306 1380     		strh	r3, [r2]	@ movhi
1094:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 1706              		.loc 1 1094 5 is_stmt 1 view .LVU559
 1707              		.loc 1 1094 20 is_stmt 0 view .LVU560
 1708 0308 5A4A     		ldr	r2, .L184+64
 1709 030a 1380     		strh	r3, [r2]	@ movhi
1095:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
ARM GAS  /tmp/ccd2INFf.s 			page 53


 1710              		.loc 1 1095 5 is_stmt 1 view .LVU561
 1711              		.loc 1 1095 20 is_stmt 0 view .LVU562
 1712 030c 5A4A     		ldr	r2, .L184+68
 1713 030e 1380     		strh	r3, [r2]	@ movhi
1096:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 1714              		.loc 1 1096 5 is_stmt 1 view .LVU563
 1715              		.loc 1 1096 18 is_stmt 0 view .LVU564
 1716 0310 5A4A     		ldr	r2, .L184+72
 1717 0312 1380     		strh	r3, [r2]	@ movhi
1097:Lib/ssc/src/ecatslv.c ****     bDcRunning = FALSE;
 1718              		.loc 1 1097 5 is_stmt 1 view .LVU565
 1719              		.loc 1 1097 16 is_stmt 0 view .LVU566
 1720 0314 5A4A     		ldr	r2, .L184+76
 1721 0316 1370     		strb	r3, [r2]
1098:Lib/ssc/src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 1722              		.loc 1 1098 5 is_stmt 1 view .LVU567
 1723              		.loc 1 1098 26 is_stmt 0 view .LVU568
 1724 0318 5A4A     		ldr	r2, .L184+80
 1725 031a 1370     		strb	r3, [r2]
1099:Lib/ssc/src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 1726              		.loc 1 1099 5 is_stmt 1 view .LVU569
 1727              		.loc 1 1099 33 is_stmt 0 view .LVU570
 1728 031c 5A4A     		ldr	r2, .L184+84
 1729 031e 1380     		strh	r3, [r2]	@ movhi
1100:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1101:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 1730              		.loc 1 1101 5 is_stmt 1 view .LVU571
 1731              		.loc 1 1101 31 is_stmt 0 view .LVU572
 1732 0320 4B4A     		ldr	r2, .L184+28
 1733 0322 82F84030 		strb	r3, [r2, #64]
1102:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1103:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u8SyncError = 0;
 1734              		.loc 1 1103 5 is_stmt 1 view .LVU573
 1735              		.loc 1 1103 32 is_stmt 0 view .LVU574
 1736 0326 454A     		ldr	r2, .L184+8
 1737 0328 82F84030 		strb	r3, [r2, #64]
1104:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u16SmEventMissedCounter = 0;
 1738              		.loc 1 1104 5 is_stmt 1 view .LVU575
 1739              		.loc 1 1104 44 is_stmt 0 view .LVU576
 1740 032c 1385     		strh	r3, [r2, #40]	@ movhi
1105:Lib/ssc/src/ecatslv.c **** 
1106:Lib/ssc/src/ecatslv.c ****     /* calculate the Sync0/Sync1 watchdog timeouts */
1107:Lib/ssc/src/ecatslv.c ****     if ( (dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0 )
 1741              		.loc 1 1107 5 is_stmt 1 view .LVU577
 1742              		.loc 1 1107 21 is_stmt 0 view .LVU578
 1743 032e BDF80E30 		ldrh	r3, [sp, #14]
 1744              		.loc 1 1107 8 view .LVU579
 1745 0332 13F4007F 		tst	r3, #512
 1746 0336 18D0     		beq	.L133
1108:Lib/ssc/src/ecatslv.c ****     {
1109:Lib/ssc/src/ecatslv.c ****         /*calculate the Sync0 Watchdog counter value the minimum value is 1 ms
1110:Lib/ssc/src/ecatslv.c ****             if the sync0 cycle is greater 500us the Sync0 Wd value is 2*Sycn0 cycle */
1111:Lib/ssc/src/ecatslv.c ****         if(cycleTimeSync0 == 0)
 1747              		.loc 1 1111 9 is_stmt 1 view .LVU580
 1748              		.loc 1 1111 27 is_stmt 0 view .LVU581
 1749 0338 0199     		ldr	r1, [sp, #4]
 1750              		.loc 1 1111 11 view .LVU582
ARM GAS  /tmp/ccd2INFf.s 			page 54


 1751 033a 59B1     		cbz	r1, .L134
 1752              	.LBB4:
1112:Lib/ssc/src/ecatslv.c ****         {
1113:Lib/ssc/src/ecatslv.c ****             Sync0WdValue = 0;
1114:Lib/ssc/src/ecatslv.c ****         }
1115:Lib/ssc/src/ecatslv.c ****         else
1116:Lib/ssc/src/ecatslv.c ****         {
1117:Lib/ssc/src/ecatslv.c ****             UINT32 Sync0Cycle = cycleTimeSync0/100000;
 1753              		.loc 1 1117 13 is_stmt 1 view .LVU583
 1754              		.loc 1 1117 20 is_stmt 0 view .LVU584
 1755 033c 4A09     		lsrs	r2, r1, #5
 1756 033e 5348     		ldr	r0, .L184+88
 1757 0340 A0FB0202 		umull	r0, r2, r0, r2
 1758 0344 D209     		lsrs	r2, r2, #7
 1759              	.LVL147:
1118:Lib/ssc/src/ecatslv.c ****             if(Sync0Cycle < 5)
 1760              		.loc 1 1118 13 is_stmt 1 view .LVU585
 1761              		.loc 1 1118 15 is_stmt 0 view .LVU586
 1762 0346 5248     		ldr	r0, .L184+92
 1763 0348 8142     		cmp	r1, r0
 1764 034a 00F2C280 		bhi	.L135
1119:Lib/ssc/src/ecatslv.c ****             {
1120:Lib/ssc/src/ecatslv.c ****                 /*Sync0 cycle less than 500us*/
1121:Lib/ssc/src/ecatslv.c ****                 Sync0WdValue = 1;
 1765              		.loc 1 1121 17 is_stmt 1 view .LVU587
 1766              		.loc 1 1121 30 is_stmt 0 view .LVU588
 1767 034e 484A     		ldr	r2, .L184+60
 1768              	.LVL148:
 1769              		.loc 1 1121 30 view .LVU589
 1770 0350 0120     		movs	r0, #1
 1771 0352 1080     		strh	r0, [r2]	@ movhi
 1772              	.LVL149:
 1773              	.L134:
 1774              		.loc 1 1121 30 view .LVU590
 1775              	.LBE4:
1122:Lib/ssc/src/ecatslv.c ****             }
1123:Lib/ssc/src/ecatslv.c ****             else
1124:Lib/ssc/src/ecatslv.c ****             {
1125:Lib/ssc/src/ecatslv.c ****                 Sync0WdValue = (UINT16)(Sync0Cycle*2)/10;
1126:Lib/ssc/src/ecatslv.c ****             }
1127:Lib/ssc/src/ecatslv.c ****         }
1128:Lib/ssc/src/ecatslv.c **** 
1129:Lib/ssc/src/ecatslv.c ****         /* Calculate also the watchdog time for Sync1*/
1130:Lib/ssc/src/ecatslv.c ****         if ( (dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0 )
 1776              		.loc 1 1130 9 is_stmt 1 view .LVU591
 1777              		.loc 1 1130 12 is_stmt 0 view .LVU592
 1778 0354 13F4806F 		tst	r3, #1024
 1779 0358 07D0     		beq	.L133
1131:Lib/ssc/src/ecatslv.c ****         {
1132:Lib/ssc/src/ecatslv.c ****             if(cycleTimeSync1 < cycleTimeSync0)
 1780              		.loc 1 1132 13 is_stmt 1 view .LVU593
 1781              		.loc 1 1132 31 is_stmt 0 view .LVU594
 1782 035a 009A     		ldr	r2, [sp]
 1783              		.loc 1 1132 15 view .LVU595
 1784 035c 9142     		cmp	r1, r2
 1785 035e 40F2C180 		bls	.L136
1133:Lib/ssc/src/ecatslv.c **** 						{
ARM GAS  /tmp/ccd2INFf.s 			page 55


1134:Lib/ssc/src/ecatslv.c **** 										/* Sync 1 has the same cycle time than Sync0 (maybe with a shift (cycleTimeSync1 > 0))*/
1135:Lib/ssc/src/ecatslv.c **** 										Sync1WdValue = Sync0WdValue;
 1786              		.loc 1 1135 11 is_stmt 1 view .LVU596
 1787              		.loc 1 1135 24 is_stmt 0 view .LVU597
 1788 0362 434B     		ldr	r3, .L184+60
 1789 0364 1A88     		ldrh	r2, [r3]
 1790 0366 454B     		ldr	r3, .L184+72
 1791 0368 1A80     		strh	r2, [r3]	@ movhi
 1792              	.L133:
1136:Lib/ssc/src/ecatslv.c **** 						}
1137:Lib/ssc/src/ecatslv.c **** 						else
1138:Lib/ssc/src/ecatslv.c **** 						{
1139:Lib/ssc/src/ecatslv.c **** 										/* Sync1 cycle is larger than Sync0 (e.g. subordinated Sync0 cycles) */
1140:Lib/ssc/src/ecatslv.c **** 										UINT32 Sync1Cycle = cycleTimeSync1/100000;
1141:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
1142:Lib/ssc/src/ecatslv.c **** 										{
1143:Lib/ssc/src/ecatslv.c **** 												/*Sync0 cycle less than 500us*/
1144:Lib/ssc/src/ecatslv.c **** 												Sync1WdValue = 1;
1145:Lib/ssc/src/ecatslv.c **** 										}
1146:Lib/ssc/src/ecatslv.c **** 										else
1147:Lib/ssc/src/ecatslv.c **** 										{
1148:Lib/ssc/src/ecatslv.c **** 												Sync1WdValue = (UINT16)(Sync1Cycle*2)/10;
1149:Lib/ssc/src/ecatslv.c **** 										}
1150:Lib/ssc/src/ecatslv.c **** 
1151:Lib/ssc/src/ecatslv.c **** 												/* add one Sync0 cycle because the Sync1 cycle starts on the next Sync0 after the Sync1
1152:Lib/ssc/src/ecatslv.c **** 													Sync1WdValue += Sync0WdValue/2;
1153:Lib/ssc/src/ecatslv.c **** 						}
1154:Lib/ssc/src/ecatslv.c **** 				}
1155:Lib/ssc/src/ecatslv.c ****     }
1156:Lib/ssc/src/ecatslv.c **** 
1157:Lib/ssc/src/ecatslv.c **** 
1158:Lib/ssc/src/ecatslv.c **** 
1159:Lib/ssc/src/ecatslv.c **** 
1160:Lib/ssc/src/ecatslv.c **** 
1161:Lib/ssc/src/ecatslv.c ****     if(nPdOutputSize > 0)
 1793              		.loc 1 1161 5 is_stmt 1 view .LVU598
 1794              		.loc 1 1161 22 is_stmt 0 view .LVU599
 1795 036a 324B     		ldr	r3, .L184
 1796 036c 1B88     		ldrh	r3, [r3]
 1797              		.loc 1 1161 7 view .LVU600
 1798 036e 002B     		cmp	r3, #0
 1799 0370 40F0D480 		bne	.L180
 1800              	.L139:
1162:Lib/ssc/src/ecatslv.c ****     {
1163:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1164:Lib/ssc/src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_OUT);
1165:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1166:Lib/ssc/src/ecatslv.c ****     }
1167:Lib/ssc/src/ecatslv.c **** 
1168:Lib/ssc/src/ecatslv.c ****     if(nPdInputSize > 0)
 1801              		.loc 1 1168 5 is_stmt 1 view .LVU601
 1802              		.loc 1 1168 21 is_stmt 0 view .LVU602
 1803 0374 304B     		ldr	r3, .L184+4
 1804 0376 1B88     		ldrh	r3, [r3]
 1805              		.loc 1 1168 7 view .LVU603
 1806 0378 002B     		cmp	r3, #0
 1807 037a 40F0D380 		bne	.L181
ARM GAS  /tmp/ccd2INFf.s 			page 56


 1808              	.L140:
1169:Lib/ssc/src/ecatslv.c ****     {
1170:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1171:Lib/ssc/src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_IN);
1172:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1173:Lib/ssc/src/ecatslv.c ****     }
1174:Lib/ssc/src/ecatslv.c **** 
1175:Lib/ssc/src/ecatslv.c ****     /*write initial input data*/
1176:Lib/ssc/src/ecatslv.c ****     PDO_InputMapping();
 1809              		.loc 1 1176 5 is_stmt 1 view .LVU604
 1810 037e FFF7FEFF 		bl	PDO_InputMapping
 1811              	.LVL150:
1177:Lib/ssc/src/ecatslv.c **** 
1178:Lib/ssc/src/ecatslv.c ****     return ALSTATUSCODE_NOERROR;
 1812              		.loc 1 1178 5 view .LVU605
 1813              		.loc 1 1178 12 is_stmt 0 view .LVU606
 1814 0382 0020     		movs	r0, #0
 1815              	.LVL151:
 1816              	.L96:
1179:Lib/ssc/src/ecatslv.c **** }
 1817              		.loc 1 1179 1 view .LVU607
 1818 0384 05B0     		add	sp, sp, #20
 1819              		.cfi_remember_state
 1820              		.cfi_def_cfa_offset 20
 1821              		@ sp needed
 1822 0386 F0BD     		pop	{r4, r5, r6, r7, pc}
 1823              	.LVL152:
 1824              	.L110:
 1825              		.cfi_restore_state
 865:Lib/ssc/src/ecatslv.c ****             {
 1826              		.loc 1 865 18 is_stmt 1 view .LVU608
 865:Lib/ssc/src/ecatslv.c ****             {
 1827              		.loc 1 865 35 is_stmt 0 view .LVU609
 1828 0388 2B4B     		ldr	r3, .L184+4
 1829 038a 1B88     		ldrh	r3, [r3]
 865:Lib/ssc/src/ecatslv.c ****             {
 1830              		.loc 1 865 21 view .LVU610
 1831 038c 23B1     		cbz	r3, .L166
 867:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_SM_SYNCHRON;
 1832              		.loc 1 867 32 view .LVU611
 1833 038e 1346     		mov	r3, r2
 868:Lib/ssc/src/ecatslv.c ****             }
 1834              		.loc 1 868 32 view .LVU612
 1835 0390 0121     		movs	r1, #1
 1836              	.LVL153:
 868:Lib/ssc/src/ecatslv.c ****             }
 1837              		.loc 1 868 32 view .LVU613
 1838 0392 3AE7     		b	.L111
 1839              	.LVL154:
 1840              	.L165:
 858:Lib/ssc/src/ecatslv.c ****                 
 1841              		.loc 1 858 32 view .LVU614
 1842 0394 0123     		movs	r3, #1
 1843 0396 38E7     		b	.L111
 1844              	.LVL155:
 1845              	.L166:
 873:Lib/ssc/src/ecatslv.c ****             }
ARM GAS  /tmp/ccd2INFf.s 			page 57


 1846              		.loc 1 873 32 view .LVU615
 1847 0398 1946     		mov	r1, r3
 1848              	.LVL156:
 873:Lib/ssc/src/ecatslv.c ****             }
 1849              		.loc 1 873 32 view .LVU616
 1850 039a 36E7     		b	.L111
 1851              	.LVL157:
 1852              	.L109:
 880:Lib/ssc/src/ecatslv.c ****             {
 1853              		.loc 1 880 13 is_stmt 1 view .LVU617
 880:Lib/ssc/src/ecatslv.c ****             {
 1854              		.loc 1 880 31 is_stmt 0 view .LVU618
 1855 039c 254B     		ldr	r3, .L184
 1856              	.LVL158:
 880:Lib/ssc/src/ecatslv.c ****             {
 1857              		.loc 1 880 31 view .LVU619
 1858 039e 1B88     		ldrh	r3, [r3]
 880:Lib/ssc/src/ecatslv.c ****             {
 1859              		.loc 1 880 16 view .LVU620
 1860 03a0 0BB1     		cbz	r3, .L112
 883:Lib/ssc/src/ecatslv.c ****                 {
 1861              		.loc 1 883 17 is_stmt 1 view .LVU621
 883:Lib/ssc/src/ecatslv.c ****                 {
 1862              		.loc 1 883 20 is_stmt 0 view .LVU622
 1863 03a2 56B1     		cbz	r6, .L167
 885:Lib/ssc/src/ecatslv.c ****                 }
 1864              		.loc 1 885 36 view .LVU623
 1865 03a4 0323     		movs	r3, #3
 1866              	.L112:
 1867              	.LVL159:
 898:Lib/ssc/src/ecatslv.c ****             {
 1868              		.loc 1 898 13 is_stmt 1 view .LVU624
 898:Lib/ssc/src/ecatslv.c ****             {
 1869              		.loc 1 898 30 is_stmt 0 view .LVU625
 1870 03a6 2449     		ldr	r1, .L184+4
 1871              	.LVL160:
 898:Lib/ssc/src/ecatslv.c ****             {
 1872              		.loc 1 898 30 view .LVU626
 1873 03a8 0988     		ldrh	r1, [r1]
 898:Lib/ssc/src/ecatslv.c ****             {
 1874              		.loc 1 898 16 view .LVU627
 1875 03aa 0029     		cmp	r1, #0
 1876 03ac 3FF430AF 		beq	.L107
 900:Lib/ssc/src/ecatslv.c ****                 {
 1877              		.loc 1 900 17 is_stmt 1 view .LVU628
 900:Lib/ssc/src/ecatslv.c ****                 {
 1878              		.loc 1 900 20 is_stmt 0 view .LVU629
 1879 03b0 12F4806F 		tst	r2, #1024
 1880 03b4 03D0     		beq	.L168
 903:Lib/ssc/src/ecatslv.c ****                 }
 1881              		.loc 1 903 36 view .LVU630
 1882 03b6 0321     		movs	r1, #3
 1883 03b8 2AE7     		b	.L107
 1884              	.LVL161:
 1885              	.L167:
 889:Lib/ssc/src/ecatslv.c ****                 }
 1886              		.loc 1 889 36 view .LVU631
ARM GAS  /tmp/ccd2INFf.s 			page 58


 1887 03ba 0223     		movs	r3, #2
 1888 03bc F3E7     		b	.L112
 1889              	.LVL162:
 1890              	.L168:
 908:Lib/ssc/src/ecatslv.c ****                 }
 1891              		.loc 1 908 36 view .LVU632
 1892 03be 0221     		movs	r1, #2
 1893 03c0 26E7     		b	.L107
 1894              	.LVL163:
 1895              	.L175:
 921:Lib/ssc/src/ecatslv.c **** 
 1896              		.loc 1 921 9 is_stmt 1 view .LVU633
 921:Lib/ssc/src/ecatslv.c **** 
 1897              		.loc 1 921 42 is_stmt 0 view .LVU634
 1898 03c2 019A     		ldr	r2, [sp, #4]
 1899 03c4 1D4C     		ldr	r4, .L184+8
 1900 03c6 6262     		str	r2, [r4, #36]
 924:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1901              		.loc 1 924 9 is_stmt 1 view .LVU635
 924:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1902              		.loc 1 924 41 is_stmt 0 view .LVU636
 1903 03c8 214C     		ldr	r4, .L184+28
 1904 03ca 6262     		str	r2, [r4, #36]
 1905 03cc 26E7     		b	.L114
 1906              	.L176:
 929:Lib/ssc/src/ecatslv.c **** 
 1907              		.loc 1 929 9 is_stmt 1 view .LVU637
 929:Lib/ssc/src/ecatslv.c **** 
 1908              		.loc 1 929 42 is_stmt 0 view .LVU638
 1909 03ce 019A     		ldr	r2, [sp, #4]
 1910 03d0 1A4C     		ldr	r4, .L184+8
 1911 03d2 6262     		str	r2, [r4, #36]
 932:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1912              		.loc 1 932 9 is_stmt 1 view .LVU639
 932:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 1913              		.loc 1 932 41 is_stmt 0 view .LVU640
 1914 03d4 92B2     		uxth	r2, r2
 1915 03d6 1E4C     		ldr	r4, .L184+28
 1916 03d8 6262     		str	r2, [r4, #36]
 1917 03da 1FE7     		b	.L114
 1918              	.L119:
 960:Lib/ssc/src/ecatslv.c ****             {
 1919              		.loc 1 960 18 is_stmt 1 view .LVU641
 960:Lib/ssc/src/ecatslv.c ****             {
 1920              		.loc 1 960 34 is_stmt 0 view .LVU642
 1921 03dc 164A     		ldr	r2, .L184+4
 1922 03de 1288     		ldrh	r2, [r2]
 960:Lib/ssc/src/ecatslv.c ****             {
 1923              		.loc 1 960 20 view .LVU643
 1924 03e0 002A     		cmp	r2, #0
 1925 03e2 3FF435AF 		beq	.L118
 962:Lib/ssc/src/ecatslv.c ****             }
 1926              		.loc 1 962 17 is_stmt 1 view .LVU644
 962:Lib/ssc/src/ecatslv.c ****             }
 1927              		.loc 1 962 32 is_stmt 0 view .LVU645
 1928 03e6 184A     		ldr	r2, .L184+20
 1929 03e8 4FF40064 		mov	r4, #2048
ARM GAS  /tmp/ccd2INFf.s 			page 59


 1930 03ec 1480     		strh	r4, [r2]	@ movhi
 1931 03ee 2FE7     		b	.L118
 1932              	.L177:
 995:Lib/ssc/src/ecatslv.c ****         {
 1933              		.loc 1 995 9 is_stmt 1 view .LVU646
 995:Lib/ssc/src/ecatslv.c ****         {
 1934              		.loc 1 995 27 is_stmt 0 view .LVU647
 1935 03f0 019B     		ldr	r3, [sp, #4]
 1936              	.LVL164:
 995:Lib/ssc/src/ecatslv.c ****         {
 1937              		.loc 1 995 11 view .LVU648
 1938 03f2 9842     		cmp	r0, r3
 1939 03f4 0AD3     		bcc	.L123
 997:Lib/ssc/src/ecatslv.c ****             
 1940              		.loc 1 997 13 is_stmt 1 view .LVU649
 997:Lib/ssc/src/ecatslv.c ****             
 1941              		.loc 1 997 55 is_stmt 0 view .LVU650
 1942 03f6 B0FBF3F2 		udiv	r2, r0, r3
 997:Lib/ssc/src/ecatslv.c ****             
 1943              		.loc 1 997 31 view .LVU651
 1944 03fa 91B2     		uxth	r1, r2
 1945              	.LVL165:
 997:Lib/ssc/src/ecatslv.c ****             
 1946              		.loc 1 997 29 view .LVU652
 1947 03fc 174C     		ldr	r4, .L184+40
 1948 03fe 2180     		strh	r1, [r4]	@ movhi
 999:Lib/ssc/src/ecatslv.c ****             {
 1949              		.loc 1 999 13 is_stmt 1 view .LVU653
 999:Lib/ssc/src/ecatslv.c ****             {
 1950              		.loc 1 999 32 is_stmt 0 view .LVU654
 1951 0400 03FB1202 		mls	r2, r3, r2, r0
 999:Lib/ssc/src/ecatslv.c ****             {
 1952              		.loc 1 999 15 view .LVU655
 1953 0404 2AB9     		cbnz	r2, .L124
1002:Lib/ssc/src/ecatslv.c ****         }
 1954              		.loc 1 1002 17 is_stmt 1 view .LVU656
1002:Lib/ssc/src/ecatslv.c ****         }
 1955              		.loc 1 1002 33 is_stmt 0 view .LVU657
 1956 0406 0131     		adds	r1, r1, #1
 1957 0408 2180     		strh	r1, [r4]	@ movhi
 1958 040a 02E0     		b	.L124
 1959              	.LVL166:
 1960              	.L123:
1007:Lib/ssc/src/ecatslv.c ****         }
 1961              		.loc 1 1007 13 is_stmt 1 view .LVU658
1007:Lib/ssc/src/ecatslv.c ****         }
 1962              		.loc 1 1007 29 is_stmt 0 view .LVU659
 1963 040c 134A     		ldr	r2, .L184+40
 1964 040e 0121     		movs	r1, #1
 1965              	.LVL167:
1007:Lib/ssc/src/ecatslv.c ****         }
 1966              		.loc 1 1007 29 view .LVU660
 1967 0410 1180     		strh	r1, [r2]	@ movhi
 1968              	.L124:
1011:Lib/ssc/src/ecatslv.c **** 
 1969              		.loc 1 1011 9 is_stmt 1 view .LVU661
1011:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 60


 1970              		.loc 1 1011 57 is_stmt 0 view .LVU662
 1971 0412 B0FBF3F1 		udiv	r1, r0, r3
1011:Lib/ssc/src/ecatslv.c **** 
 1972              		.loc 1 1011 32 view .LVU663
 1973 0416 8AB2     		uxth	r2, r1
1011:Lib/ssc/src/ecatslv.c **** 
 1974              		.loc 1 1011 30 view .LVU664
 1975 0418 0E4C     		ldr	r4, .L184+32
 1976 041a 2280     		strh	r2, [r4]	@ movhi
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 1977              		.loc 1 1013 9 is_stmt 1 view .LVU665
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 1978              		.loc 1 1013 28 is_stmt 0 view .LVU666
 1979 041c 03FB1100 		mls	r0, r3, r1, r0
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 1980              		.loc 1 1013 11 view .LVU667
 1981 0420 0028     		cmp	r0, #0
 1982 0422 3FF43EAF 		beq	.L125
1014:Lib/ssc/src/ecatslv.c **** 
 1983              		.loc 1 1014 13 is_stmt 1 view .LVU668
1014:Lib/ssc/src/ecatslv.c **** 
 1984              		.loc 1 1014 33 is_stmt 0 view .LVU669
 1985 0426 0132     		adds	r2, r2, #1
 1986 0428 2280     		strh	r2, [r4]	@ movhi
 1987 042a 3AE7     		b	.L125
 1988              	.LVL168:
 1989              	.L178:
1022:Lib/ssc/src/ecatslv.c ****         }   
 1990              		.loc 1 1022 13 is_stmt 1 view .LVU670
1022:Lib/ssc/src/ecatslv.c ****         }   
 1991              		.loc 1 1022 29 is_stmt 0 view .LVU671
 1992 042c 0B4B     		ldr	r3, .L184+40
 1993              	.LVL169:
1022:Lib/ssc/src/ecatslv.c ****         }   
 1994              		.loc 1 1022 29 view .LVU672
 1995 042e 0122     		movs	r2, #1
 1996 0430 1A80     		strh	r2, [r3]	@ movhi
 1997 0432 31E7     		b	.L126
 1998              	.L185:
 1999              		.align	2
 2000              	.L184:
 2001 0434 00000000 		.word	.LANCHOR7
 2002 0438 00000000 		.word	.LANCHOR4
 2003 043c 00000000 		.word	sSyncManOutPar
 2004 0440 00000000 		.word	.LANCHOR3
 2005 0444 00000000 		.word	.LANCHOR14
 2006 0448 00000000 		.word	.LANCHOR12
 2007 044c 00000000 		.word	.LANCHOR15
 2008 0450 00000000 		.word	sSyncManInPar
 2009 0454 00000000 		.word	.LANCHOR16
 2010 0458 00000000 		.word	.LANCHOR17
 2011 045c 00000000 		.word	.LANCHOR18
 2012 0460 00000000 		.word	.LANCHOR19
 2013 0464 00000000 		.word	sCycleDiag
 2014 0468 00000000 		.word	.LANCHOR20
 2015 046c 00000000 		.word	.LANCHOR9
 2016 0470 00000000 		.word	.LANCHOR21
ARM GAS  /tmp/ccd2INFf.s 			page 61


 2017 0474 00000000 		.word	.LANCHOR22
 2018 0478 00000000 		.word	.LANCHOR23
 2019 047c 00000000 		.word	.LANCHOR24
 2020 0480 00000000 		.word	.LANCHOR25
 2021 0484 00000000 		.word	.LANCHOR26
 2022 0488 00000000 		.word	.LANCHOR27
 2023 048c C55A7C0A 		.word	175921861
 2024 0490 1FA10700 		.word	499999
 2025              	.LVL170:
 2026              	.L179:
1050:Lib/ssc/src/ecatslv.c ****     wdiv = SWAPWORD(wdiv);
 2027              		.loc 1 1050 5 is_stmt 1 view .LVU673
 2028 0494 0222     		movs	r2, #2
 2029 0496 4FF48061 		mov	r1, #1024
 2030 049a 03A8     		add	r0, sp, #12
 2031 049c FFF7FEFF 		bl	HW_EscRead
 2032              	.LVL171:
1051:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
 2033              		.loc 1 1051 5 view .LVU674
1051:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
 2034              		.loc 1 1051 10 is_stmt 0 view .LVU675
 2035 04a0 BDF80C20 		ldrh	r2, [sp, #12]
1052:Lib/ssc/src/ecatslv.c ****         {
 2036              		.loc 1 1052 9 is_stmt 1 view .LVU676
1052:Lib/ssc/src/ecatslv.c ****         {
 2037              		.loc 1 1052 12 is_stmt 0 view .LVU677
 2038 04a4 7AB1     		cbz	r2, .L128
 2039              	.LBB5:
1055:Lib/ssc/src/ecatslv.c **** 
 2040              		.loc 1 1055 13 is_stmt 1 view .LVU678
1055:Lib/ssc/src/ecatslv.c **** 
 2041              		.loc 1 1055 28 is_stmt 0 view .LVU679
 2042 04a6 0232     		adds	r2, r2, #2
 2043              	.LVL172:
1057:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
 2044              		.loc 1 1057 13 is_stmt 1 view .LVU680
1057:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
 2045              		.loc 1 1057 15 is_stmt 0 view .LVU681
 2046 04a8 BDF80A10 		ldrh	r1, [sp, #10]
 2047              	.LVL173:
1060:Lib/ssc/src/ecatslv.c ****             d /= 25000;
 2048              		.loc 1 1060 13 is_stmt 1 view .LVU682
1060:Lib/ssc/src/ecatslv.c ****             d /= 25000;
 2049              		.loc 1 1060 15 is_stmt 0 view .LVU683
 2050 04ac 46F2A713 		movw	r3, #24999
 2051 04b0 02FB0133 		mla	r3, r2, r1, r3
 2052              	.LVL174:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2053              		.loc 1 1061 13 is_stmt 1 view .LVU684
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2054              		.loc 1 1061 15 is_stmt 0 view .LVU685
 2055 04b4 DB08     		lsrs	r3, r3, #3
 2056              	.LVL175:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2057              		.loc 1 1061 15 view .LVU686
 2058 04b6 314A     		ldr	r2, .L186
 2059              	.LVL176:
ARM GAS  /tmp/ccd2INFf.s 			page 62


1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2060              		.loc 1 1061 15 view .LVU687
 2061 04b8 A2FB0323 		umull	r2, r3, r2, r3
 2062              	.LVL177:
1062:Lib/ssc/src/ecatslv.c ****         }
 2063              		.loc 1 1062 13 is_stmt 1 view .LVU688
1062:Lib/ssc/src/ecatslv.c ****         }
 2064              		.loc 1 1062 27 is_stmt 0 view .LVU689
 2065 04bc C3F30F23 		ubfx	r3, r3, #8, #16
 2066              	.LVL178:
1062:Lib/ssc/src/ecatslv.c ****         }
 2067              		.loc 1 1062 25 view .LVU690
 2068 04c0 2F4A     		ldr	r2, .L186+4
 2069 04c2 1380     		strh	r3, [r2]	@ movhi
 2070              	.LBE5:
 2071 04c4 04E7     		b	.L129
 2072              	.LVL179:
 2073              	.L128:
1066:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
 2074              		.loc 1 1066 13 is_stmt 1 view .LVU691
1066:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
 2075              		.loc 1 1066 16 is_stmt 0 view .LVU692
 2076 04c6 0023     		movs	r3, #0
 2077 04c8 ADF80A30 		strh	r3, [sp, #10]	@ movhi
1068:Lib/ssc/src/ecatslv.c ****         }
 2078              		.loc 1 1068 13 is_stmt 1 view .LVU693
1068:Lib/ssc/src/ecatslv.c ****         }
 2079              		.loc 1 1068 25 is_stmt 0 view .LVU694
 2080 04cc 2C4A     		ldr	r2, .L186+4
 2081 04ce 1380     		strh	r3, [r2]	@ movhi
 2082 04d0 FEE6     		b	.L129
 2083              	.LVL180:
 2084              	.L135:
 2085              	.LBB6:
1125:Lib/ssc/src/ecatslv.c ****             }
 2086              		.loc 1 1125 17 is_stmt 1 view .LVU695
1125:Lib/ssc/src/ecatslv.c ****             }
 2087              		.loc 1 1125 32 is_stmt 0 view .LVU696
 2088 04d2 5200     		lsls	r2, r2, #1
 2089              	.LVL181:
1125:Lib/ssc/src/ecatslv.c ****             }
 2090              		.loc 1 1125 32 view .LVU697
 2091 04d4 92B2     		uxth	r2, r2
1125:Lib/ssc/src/ecatslv.c ****             }
 2092              		.loc 1 1125 30 view .LVU698
 2093 04d6 2B48     		ldr	r0, .L186+8
 2094 04d8 A0FB0202 		umull	r0, r2, r0, r2
 2095 04dc D208     		lsrs	r2, r2, #3
 2096 04de 2A48     		ldr	r0, .L186+12
 2097 04e0 0280     		strh	r2, [r0]	@ movhi
 2098 04e2 37E7     		b	.L134
 2099              	.LVL182:
 2100              	.L136:
1125:Lib/ssc/src/ecatslv.c ****             }
 2101              		.loc 1 1125 30 view .LVU699
 2102              	.LBE6:
 2103              	.LBB7:
ARM GAS  /tmp/ccd2INFf.s 			page 63


1140:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
 2104              		.loc 1 1140 11 is_stmt 1 view .LVU700
1140:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
 2105              		.loc 1 1140 18 is_stmt 0 view .LVU701
 2106 04e4 5309     		lsrs	r3, r2, #5
 2107 04e6 2949     		ldr	r1, .L186+16
 2108 04e8 A1FB0313 		umull	r1, r3, r1, r3
 2109 04ec DB09     		lsrs	r3, r3, #7
 2110              	.LVL183:
1141:Lib/ssc/src/ecatslv.c **** 										{
 2111              		.loc 1 1141 11 is_stmt 1 view .LVU702
1141:Lib/ssc/src/ecatslv.c **** 										{
 2112              		.loc 1 1141 13 is_stmt 0 view .LVU703
 2113 04ee 2849     		ldr	r1, .L186+20
 2114 04f0 8A42     		cmp	r2, r1
 2115 04f2 0AD8     		bhi	.L137
1144:Lib/ssc/src/ecatslv.c **** 										}
 2116              		.loc 1 1144 13 is_stmt 1 view .LVU704
1144:Lib/ssc/src/ecatslv.c **** 										}
 2117              		.loc 1 1144 26 is_stmt 0 view .LVU705
 2118 04f4 274B     		ldr	r3, .L186+24
 2119              	.LVL184:
1144:Lib/ssc/src/ecatslv.c **** 										}
 2120              		.loc 1 1144 26 view .LVU706
 2121 04f6 0122     		movs	r2, #1
 2122              	.LVL185:
1144:Lib/ssc/src/ecatslv.c **** 										}
 2123              		.loc 1 1144 26 view .LVU707
 2124 04f8 1A80     		strh	r2, [r3]	@ movhi
 2125              	.L138:
1152:Lib/ssc/src/ecatslv.c **** 						}
 2126              		.loc 1 1152 14 is_stmt 1 view .LVU708
1152:Lib/ssc/src/ecatslv.c **** 						}
 2127              		.loc 1 1152 27 is_stmt 0 view .LVU709
 2128 04fa 264A     		ldr	r2, .L186+24
 2129 04fc 224B     		ldr	r3, .L186+12
 2130 04fe 1988     		ldrh	r1, [r3]
 2131 0500 1388     		ldrh	r3, [r2]
 2132 0502 03EB5103 		add	r3, r3, r1, lsr #1
 2133 0506 1380     		strh	r3, [r2]	@ movhi
 2134 0508 2FE7     		b	.L133
 2135              	.LVL186:
 2136              	.L137:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2137              		.loc 1 1148 13 is_stmt 1 view .LVU710
1148:Lib/ssc/src/ecatslv.c **** 										}
 2138              		.loc 1 1148 28 is_stmt 0 view .LVU711
 2139 050a 5B00     		lsls	r3, r3, #1
 2140              	.LVL187:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2141              		.loc 1 1148 28 view .LVU712
 2142 050c 9BB2     		uxth	r3, r3
1148:Lib/ssc/src/ecatslv.c **** 										}
 2143              		.loc 1 1148 26 view .LVU713
 2144 050e 1D4A     		ldr	r2, .L186+8
 2145              	.LVL188:
1148:Lib/ssc/src/ecatslv.c **** 										}
ARM GAS  /tmp/ccd2INFf.s 			page 64


 2146              		.loc 1 1148 26 view .LVU714
 2147 0510 A2FB0323 		umull	r2, r3, r2, r3
 2148 0514 DB08     		lsrs	r3, r3, #3
 2149 0516 1F4A     		ldr	r2, .L186+24
 2150 0518 1380     		strh	r3, [r2]	@ movhi
 2151 051a EEE7     		b	.L138
 2152              	.LVL189:
 2153              	.L180:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2154              		.loc 1 1148 26 view .LVU715
 2155              	.LBE7:
1164:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2156              		.loc 1 1164 9 is_stmt 1 view .LVU716
 2157 051c 0220     		movs	r0, #2
 2158 051e FFF7FEFF 		bl	EnableSyncManChannel
 2159              	.LVL190:
 2160 0522 27E7     		b	.L139
 2161              	.L181:
1171:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2162              		.loc 1 1171 9 view .LVU717
 2163 0524 0320     		movs	r0, #3
 2164 0526 FFF7FEFF 		bl	EnableSyncManChannel
 2165              	.LVL191:
 2166 052a 28E7     		b	.L140
 2167              	.LVL192:
 2168              	.L143:
 711:Lib/ssc/src/ecatslv.c ****     }
 2169              		.loc 1 711 16 is_stmt 0 view .LVU718
 2170 052c 1E20     		movs	r0, #30
 2171 052e 29E7     		b	.L96
 2172              	.L144:
 2173 0530 1E20     		movs	r0, #30
 2174 0532 27E7     		b	.L96
 2175              	.LVL193:
 2176              	.L145:
 723:Lib/ssc/src/ecatslv.c ****     }
 2177              		.loc 1 723 16 view .LVU719
 2178 0534 1D20     		movs	r0, #29
 2179 0536 25E7     		b	.L96
 2180              	.L146:
 2181 0538 1D20     		movs	r0, #29
 2182 053a 23E7     		b	.L96
 2183              	.L147:
 2184 053c 1D20     		movs	r0, #29
 2185 053e 21E7     		b	.L96
 2186              	.LVL194:
 2187              	.L149:
 759:Lib/ssc/src/ecatslv.c ****         }
 2188              		.loc 1 759 20 view .LVU720
 2189 0540 3020     		movs	r0, #48
 2190 0542 1FE7     		b	.L96
 2191              	.L150:
 766:Lib/ssc/src/ecatslv.c ****         }
 2192              		.loc 1 766 20 view .LVU721
 2193 0544 3020     		movs	r0, #48
 2194 0546 1DE7     		b	.L96
 2195              	.L151:
ARM GAS  /tmp/ccd2INFf.s 			page 65


 777:Lib/ssc/src/ecatslv.c ****     }
 2196              		.loc 1 777 24 view .LVU722
 2197 0548 3020     		movs	r0, #48
 2198 054a 1BE7     		b	.L96
 2199              	.L152:
 2200 054c 3020     		movs	r0, #48
 2201 054e 19E7     		b	.L96
 2202              	.L153:
 783:Lib/ssc/src/ecatslv.c **** 
 2203              		.loc 1 783 20 view .LVU723
 2204 0550 3620     		movs	r0, #54
 2205 0552 17E7     		b	.L96
 2206              	.LVL195:
 2207              	.L157:
 801:Lib/ssc/src/ecatslv.c ****         }
 2208              		.loc 1 801 21 view .LVU724
 2209 0554 3020     		movs	r0, #48
 2210 0556 15E7     		b	.L96
 2211              	.LVL196:
 2212              	.L158:
 817:Lib/ssc/src/ecatslv.c ****             }
 2213              		.loc 1 817 24 view .LVU725
 2214 0558 3020     		movs	r0, #48
 2215 055a 13E7     		b	.L96
 2216              	.L159:
 2217 055c 3020     		movs	r0, #48
 2218 055e 11E7     		b	.L96
 2219              	.L161:
 830:Lib/ssc/src/ecatslv.c ****                 }
 2220              		.loc 1 830 28 view .LVU726
 2221 0560 3020     		movs	r0, #48
 2222 0562 0FE7     		b	.L96
 2223              	.L162:
 2224 0564 3020     		movs	r0, #48
 2225 0566 0DE7     		b	.L96
 2226              	.L163:
 842:Lib/ssc/src/ecatslv.c ****                 }
 2227              		.loc 1 842 28 view .LVU727
 2228 0568 3020     		movs	r0, #48
 2229 056a 0BE7     		b	.L96
 2230              	.L169:
 942:Lib/ssc/src/ecatslv.c ****         }
 2231              		.loc 1 942 24 view .LVU728
 2232 056c 2920     		movs	r0, #41
 2233 056e 09E7     		b	.L96
 2234              	.L170:
 2235 0570 2920     		movs	r0, #41
 2236 0572 07E7     		b	.L96
 2237              	.LVL197:
 2238              	.L171:
1082:Lib/ssc/src/ecatslv.c ****     }
 2239              		.loc 1 1082 16 view .LVU729
 2240 0574 1F20     		movs	r0, #31
 2241 0576 05E7     		b	.L96
 2242              	.L172:
 2243 0578 1F20     		movs	r0, #31
 2244 057a 03E7     		b	.L96
ARM GAS  /tmp/ccd2INFf.s 			page 66


 2245              	.L187:
 2246              		.align	2
 2247              	.L186:
 2248 057c 89B5F814 		.word	351843721
 2249 0580 00000000 		.word	.LANCHOR20
 2250 0584 CDCCCCCC 		.word	-858993459
 2251 0588 00000000 		.word	.LANCHOR21
 2252 058c C55A7C0A 		.word	175921861
 2253 0590 1FA10700 		.word	499999
 2254 0594 00000000 		.word	.LANCHOR24
 2255              		.cfi_endproc
 2256              	.LFE141:
 2258              		.section	.text.StartOutputHandler,"ax",%progbits
 2259              		.align	1
 2260              		.global	StartOutputHandler
 2261              		.syntax unified
 2262              		.thumb
 2263              		.thumb_func
 2265              	StartOutputHandler:
 2266              	.LFB142:
1180:Lib/ssc/src/ecatslv.c **** 
1181:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1182:Lib/ssc/src/ecatslv.c **** /**
1183:Lib/ssc/src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
1184:Lib/ssc/src/ecatslv.c **** 
1185:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from SAFEOP to OP.
1186:Lib/ssc/src/ecatslv.c ****  \brief  It will be checked if outputs had to be received before switching to OP
1187:Lib/ssc/src/ecatslv.c ****  \brief  and the state transition would be refused if outputs are missing
1188:Lib/ssc/src/ecatslv.c **** 
1189:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1190:Lib/ssc/src/ecatslv.c **** 
1191:Lib/ssc/src/ecatslv.c **** UINT16 StartOutputHandler(void)
1192:Lib/ssc/src/ecatslv.c **** {
 2267              		.loc 1 1192 1 is_stmt 1 view -0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
1193:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM6*/
1194:Lib/ssc/src/ecatslv.c ****     /* by default the SO transition should be completed in AlControlRes().
1195:Lib/ssc/src/ecatslv.c ****        required to support also masters which starts to send process data after the SO transition w
1196:Lib/ssc/src/ecatslv.c ****        (if the master don't send process data within "SAFEOP2OPTIMEOUT" the transition is rejected)
1197:Lib/ssc/src/ecatslv.c ****     UINT16 result = NOERROR_INWORK;
 2272              		.loc 1 1197 5 view .LVU731
 2273              	.LVL198:
1198:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM6*/
1199:Lib/ssc/src/ecatslv.c ****     if(bLocalErrorFlag)
 2274              		.loc 1 1199 5 view .LVU732
 2275              		.loc 1 1199 8 is_stmt 0 view .LVU733
 2276 0000 094B     		ldr	r3, .L193
 2277 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2278              		.loc 1 1199 7 view .LVU734
 2279 0004 53B9     		cbnz	r3, .L192
1200:Lib/ssc/src/ecatslv.c ****     {
1201:Lib/ssc/src/ecatslv.c ****         /*Local error still exists => skip state request to OP and response with "u16LocalErrorCode
1202:Lib/ssc/src/ecatslv.c ****         return u16LocalErrorCode;
1203:Lib/ssc/src/ecatslv.c ****     }
ARM GAS  /tmp/ccd2INFf.s 			page 67


1204:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1205:Lib/ssc/src/ecatslv.c **** 
1206:Lib/ssc/src/ecatslv.c **** 
1207:Lib/ssc/src/ecatslv.c ****     /*DC synchronisation is active wait until pll is valid*/
1208:Lib/ssc/src/ecatslv.c ****     if(bDcSyncActive)
 2280              		.loc 1 1208 5 is_stmt 1 view .LVU735
 2281              		.loc 1 1208 8 is_stmt 0 view .LVU736
 2282 0006 094B     		ldr	r3, .L193+4
 2283 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284              		.loc 1 1208 7 view .LVU737
 2285 000a 53B1     		cbz	r3, .L191
1209:Lib/ssc/src/ecatslv.c ****     {
1210:Lib/ssc/src/ecatslv.c ****         i16WaitForPllRunningTimeout = 200;
 2286              		.loc 1 1210 9 is_stmt 1 view .LVU738
 2287              		.loc 1 1210 37 is_stmt 0 view .LVU739
 2288 000c 084B     		ldr	r3, .L193+8
 2289 000e C822     		movs	r2, #200
 2290 0010 1A80     		strh	r2, [r3]	@ movhi
1211:Lib/ssc/src/ecatslv.c ****         i16WaitForPllRunningCnt = 0;
 2291              		.loc 1 1211 9 is_stmt 1 view .LVU740
 2292              		.loc 1 1211 33 is_stmt 0 view .LVU741
 2293 0012 084B     		ldr	r3, .L193+12
 2294 0014 0022     		movs	r2, #0
 2295 0016 1A80     		strh	r2, [r3]	@ movhi
1212:Lib/ssc/src/ecatslv.c ****     }
1213:Lib/ssc/src/ecatslv.c **** 
1214:Lib/ssc/src/ecatslv.c **** 
1215:Lib/ssc/src/ecatslv.c ****     return result;
 2296              		.loc 1 1215 12 view .LVU742
 2297 0018 FF20     		movs	r0, #255
 2298 001a 7047     		bx	lr
 2299              	.L192:
1202:Lib/ssc/src/ecatslv.c ****     }
 2300              		.loc 1 1202 9 is_stmt 1 view .LVU743
1202:Lib/ssc/src/ecatslv.c ****     }
 2301              		.loc 1 1202 16 is_stmt 0 view .LVU744
 2302 001c 064B     		ldr	r3, .L193+16
 2303 001e 1888     		ldrh	r0, [r3]
 2304 0020 7047     		bx	lr
 2305              	.L191:
 2306              		.loc 1 1215 12 view .LVU745
 2307 0022 FF20     		movs	r0, #255
1216:Lib/ssc/src/ecatslv.c **** }
 2308              		.loc 1 1216 1 view .LVU746
 2309 0024 7047     		bx	lr
 2310              	.L194:
 2311 0026 00BF     		.align	2
 2312              	.L193:
 2313 0028 00000000 		.word	.LANCHOR28
 2314 002c 00000000 		.word	.LANCHOR15
 2315 0030 00000000 		.word	.LANCHOR27
 2316 0034 00000000 		.word	.LANCHOR30
 2317 0038 00000000 		.word	.LANCHOR29
 2318              		.cfi_endproc
 2319              	.LFE142:
 2321              		.section	.text.StopOutputHandler,"ax",%progbits
 2322              		.align	1
ARM GAS  /tmp/ccd2INFf.s 			page 68


 2323              		.global	StopOutputHandler
 2324              		.syntax unified
 2325              		.thumb
 2326              		.thumb_func
 2328              	StopOutputHandler:
 2329              	.LFB143:
1217:Lib/ssc/src/ecatslv.c **** 
1218:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1219:Lib/ssc/src/ecatslv.c **** /**
1220:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from OP to SAFEOP
1221:Lib/ssc/src/ecatslv.c ****  \brief  the outputs can be set to an application specific safe state,
1222:Lib/ssc/src/ecatslv.c ****  \brief  the state transition can be delayed by returning NOERROR_INWORK
1223:Lib/ssc/src/ecatslv.c **** 
1224:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1225:Lib/ssc/src/ecatslv.c **** 
1226:Lib/ssc/src/ecatslv.c **** void StopOutputHandler(void)
1227:Lib/ssc/src/ecatslv.c **** {
 2330              		.loc 1 1227 1 is_stmt 1 view -0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 0
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 2334              		@ link register save eliminated.
1228:Lib/ssc/src/ecatslv.c ****     /* reset the flags that outputs were received and that the slave is in OP */
1229:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2335              		.loc 1 1229 5 view .LVU748
 2336              		.loc 1 1229 31 is_stmt 0 view .LVU749
 2337 0000 0023     		movs	r3, #0
 2338 0002 024A     		ldr	r2, .L196
 2339 0004 1370     		strb	r3, [r2]
1230:Lib/ssc/src/ecatslv.c ****     bEcatOutputUpdateRunning = FALSE;
 2340              		.loc 1 1230 5 is_stmt 1 view .LVU750
 2341              		.loc 1 1230 30 is_stmt 0 view .LVU751
 2342 0006 024A     		ldr	r2, .L196+4
 2343 0008 1370     		strb	r3, [r2]
1231:Lib/ssc/src/ecatslv.c **** }
 2344              		.loc 1 1231 1 view .LVU752
 2345 000a 7047     		bx	lr
 2346              	.L197:
 2347              		.align	2
 2348              	.L196:
 2349 000c 00000000 		.word	.LANCHOR13
 2350 0010 00000000 		.word	.LANCHOR31
 2351              		.cfi_endproc
 2352              	.LFE143:
 2354              		.section	.text.StopInputHandler,"ax",%progbits
 2355              		.align	1
 2356              		.global	StopInputHandler
 2357              		.syntax unified
 2358              		.thumb
 2359              		.thumb_func
 2361              	StopInputHandler:
 2362              	.LFB144:
1232:Lib/ssc/src/ecatslv.c **** 
1233:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1234:Lib/ssc/src/ecatslv.c **** /**
1235:Lib/ssc/src/ecatslv.c ****   \brief    This function is called in case of the state transition from SAFEOP to PREOP
1236:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 69


1237:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1238:Lib/ssc/src/ecatslv.c **** 
1239:Lib/ssc/src/ecatslv.c **** void StopInputHandler(void)
1240:Lib/ssc/src/ecatslv.c **** {
 2363              		.loc 1 1240 1 is_stmt 1 view -0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367 0000 08B5     		push	{r3, lr}
 2368              		.cfi_def_cfa_offset 8
 2369              		.cfi_offset 3, -8
 2370              		.cfi_offset 14, -4
1241:Lib/ssc/src/ecatslv.c ****     if(nPdOutputSize > 0)
 2371              		.loc 1 1241 5 view .LVU754
 2372              		.loc 1 1241 22 is_stmt 0 view .LVU755
 2373 0002 1D4B     		ldr	r3, .L204
 2374 0004 1B88     		ldrh	r3, [r3]
 2375              		.loc 1 1241 7 view .LVU756
 2376 0006 002B     		cmp	r3, #0
 2377 0008 2ED1     		bne	.L202
 2378              	.L199:
1242:Lib/ssc/src/ecatslv.c ****     {
1243:Lib/ssc/src/ecatslv.c ****         /* disable the Sync Manager Channel 2 (outputs) */
1244:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1245:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_OUT);
1246:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1247:Lib/ssc/src/ecatslv.c ****     }
1248:Lib/ssc/src/ecatslv.c **** 
1249:Lib/ssc/src/ecatslv.c ****     if(nPdInputSize > 0)
 2379              		.loc 1 1249 5 is_stmt 1 view .LVU757
 2380              		.loc 1 1249 21 is_stmt 0 view .LVU758
 2381 000a 1C4B     		ldr	r3, .L204+4
 2382 000c 1B88     		ldrh	r3, [r3]
 2383              		.loc 1 1249 7 view .LVU759
 2384 000e 002B     		cmp	r3, #0
 2385 0010 2ED1     		bne	.L203
 2386              	.L200:
 2387              	.LBB8:
1250:Lib/ssc/src/ecatslv.c ****     {
1251:Lib/ssc/src/ecatslv.c ****         /*disable Sync Manager 3 (inputs) if no outputs available*/
1252:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1253:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_IN);
1254:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1255:Lib/ssc/src/ecatslv.c ****     }
1256:Lib/ssc/src/ecatslv.c **** 
1257:Lib/ssc/src/ecatslv.c ****     /* reset the events in the AL Event mask register (0x204) */
1258:Lib/ssc/src/ecatslv.c ****     {
1259:Lib/ssc/src/ecatslv.c ****         UINT16 ResetMask = SYNC0_EVENT | SYNC1_EVENT;
 2388              		.loc 1 1259 9 is_stmt 1 view .LVU760
 2389              	.LVL199:
1260:Lib/ssc/src/ecatslv.c ****         ResetMask |= PROCESS_OUTPUT_EVENT;
 2390              		.loc 1 1260 9 view .LVU761
1261:Lib/ssc/src/ecatslv.c ****         ResetMask |= PROCESS_INPUT_EVENT;
 2391              		.loc 1 1261 9 view .LVU762
1262:Lib/ssc/src/ecatslv.c **** 
1263:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1264:Lib/ssc/src/ecatslv.c ****     ResetALEventMask( ~(ResetMask) );
ARM GAS  /tmp/ccd2INFf.s 			page 70


 2392              		.loc 1 1264 5 view .LVU763
 2393 0012 4FF2F330 		movw	r0, #62451
 2394 0016 FFF7FEFF 		bl	ResetALEventMask
 2395              	.LVL200:
 2396              	.LBE8:
1265:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1266:Lib/ssc/src/ecatslv.c ****     }
1267:Lib/ssc/src/ecatslv.c ****     /* reset the flags */
1268:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2397              		.loc 1 1268 5 view .LVU764
 2398              		.loc 1 1268 31 is_stmt 0 view .LVU765
 2399 001a 0023     		movs	r3, #0
 2400 001c 184A     		ldr	r2, .L204+8
 2401 001e 1370     		strb	r3, [r2]
1269:Lib/ssc/src/ecatslv.c ****     bEscIntEnabled = FALSE;
 2402              		.loc 1 1269 5 is_stmt 1 view .LVU766
 2403              		.loc 1 1269 20 is_stmt 0 view .LVU767
 2404 0020 184A     		ldr	r2, .L204+12
 2405 0022 1370     		strb	r3, [r2]
1270:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1271:Lib/ssc/src/ecatslv.c **** 
1272:Lib/ssc/src/ecatslv.c ****     bDcSyncActive = FALSE;
 2406              		.loc 1 1272 5 is_stmt 1 view .LVU768
 2407              		.loc 1 1272 19 is_stmt 0 view .LVU769
 2408 0024 184A     		ldr	r2, .L204+16
 2409 0026 1370     		strb	r3, [r2]
1273:Lib/ssc/src/ecatslv.c ****     bDcRunning = FALSE;
 2410              		.loc 1 1273 5 is_stmt 1 view .LVU770
 2411              		.loc 1 1273 16 is_stmt 0 view .LVU771
 2412 0028 184A     		ldr	r2, .L204+20
 2413 002a 1370     		strb	r3, [r2]
1274:Lib/ssc/src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 2414              		.loc 1 1274 5 is_stmt 1 view .LVU772
 2415              		.loc 1 1274 26 is_stmt 0 view .LVU773
 2416 002c 184A     		ldr	r2, .L204+24
 2417 002e 1370     		strb	r3, [r2]
1275:Lib/ssc/src/ecatslv.c ****     u16SmSync0Value = 0;
 2418              		.loc 1 1275 5 is_stmt 1 view .LVU774
 2419              		.loc 1 1275 21 is_stmt 0 view .LVU775
 2420 0030 184A     		ldr	r2, .L204+28
 2421 0032 1380     		strh	r3, [r2]	@ movhi
1276:Lib/ssc/src/ecatslv.c ****     u16SmSync0Counter = 0;
 2422              		.loc 1 1276 5 is_stmt 1 view .LVU776
 2423              		.loc 1 1276 23 is_stmt 0 view .LVU777
 2424 0034 184A     		ldr	r2, .L204+32
 2425 0036 1380     		strh	r3, [r2]	@ movhi
1277:Lib/ssc/src/ecatslv.c **** 
1278:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 2426              		.loc 1 1278 5 is_stmt 1 view .LVU778
 2427              		.loc 1 1278 18 is_stmt 0 view .LVU779
 2428 0038 184A     		ldr	r2, .L204+36
 2429 003a 1380     		strh	r3, [r2]	@ movhi
1279:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 2430              		.loc 1 1279 5 is_stmt 1 view .LVU780
 2431              		.loc 1 1279 20 is_stmt 0 view .LVU781
 2432 003c 184A     		ldr	r2, .L204+40
 2433 003e 1380     		strh	r3, [r2]	@ movhi
ARM GAS  /tmp/ccd2INFf.s 			page 71


1280:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 2434              		.loc 1 1280 5 is_stmt 1 view .LVU782
 2435              		.loc 1 1280 20 is_stmt 0 view .LVU783
 2436 0040 184A     		ldr	r2, .L204+44
 2437 0042 1380     		strh	r3, [r2]	@ movhi
1281:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 2438              		.loc 1 1281 5 is_stmt 1 view .LVU784
 2439              		.loc 1 1281 18 is_stmt 0 view .LVU785
 2440 0044 184A     		ldr	r2, .L204+48
 2441 0046 1380     		strh	r3, [r2]	@ movhi
1282:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Value = 0;
 2442              		.loc 1 1282 5 is_stmt 1 view .LVU786
 2443              		.loc 1 1282 26 is_stmt 0 view .LVU787
 2444 0048 184A     		ldr	r2, .L204+52
 2445 004a 1380     		strh	r3, [r2]	@ movhi
1283:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Counter = 0;
 2446              		.loc 1 1283 5 is_stmt 1 view .LVU788
 2447              		.loc 1 1283 28 is_stmt 0 view .LVU789
 2448 004c 184A     		ldr	r2, .L204+56
 2449 004e 1380     		strh	r3, [r2]	@ movhi
1284:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1285:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 2450              		.loc 1 1285 5 is_stmt 1 view .LVU790
 2451              		.loc 1 1285 31 is_stmt 0 view .LVU791
 2452 0050 184A     		ldr	r2, .L204+60
 2453 0052 82F84030 		strb	r3, [r2, #64]
1286:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1287:Lib/ssc/src/ecatslv.c **** 
1288:Lib/ssc/src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 2454              		.loc 1 1288 5 is_stmt 1 view .LVU792
 2455              		.loc 1 1288 33 is_stmt 0 view .LVU793
 2456 0056 184A     		ldr	r2, .L204+64
 2457 0058 1380     		strh	r3, [r2]	@ movhi
1289:Lib/ssc/src/ecatslv.c **** 
1290:Lib/ssc/src/ecatslv.c ****     bWdTrigger = FALSE;
 2458              		.loc 1 1290 5 is_stmt 1 view .LVU794
 2459              		.loc 1 1290 16 is_stmt 0 view .LVU795
 2460 005a 184A     		ldr	r2, .L204+68
 2461 005c 1370     		strb	r3, [r2]
1291:Lib/ssc/src/ecatslv.c ****     bEcatInputUpdateRunning = FALSE;
 2462              		.loc 1 1291 5 is_stmt 1 view .LVU796
 2463              		.loc 1 1291 29 is_stmt 0 view .LVU797
 2464 005e 184A     		ldr	r2, .L204+72
 2465 0060 1370     		strb	r3, [r2]
1292:Lib/ssc/src/ecatslv.c **** 
1293:Lib/ssc/src/ecatslv.c ****     /*Indicate no user specified Sync mode*/
1294:Lib/ssc/src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2466              		.loc 1 1294 5 is_stmt 1 view .LVU798
 2467              		.loc 1 1294 20 is_stmt 0 view .LVU799
 2468 0062 184A     		ldr	r2, .L204+76
 2469 0064 1370     		strb	r3, [r2]
1295:Lib/ssc/src/ecatslv.c **** }
 2470              		.loc 1 1295 1 view .LVU800
 2471 0066 08BD     		pop	{r3, pc}
 2472              	.LVL201:
 2473              	.L202:
1245:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
ARM GAS  /tmp/ccd2INFf.s 			page 72


 2474              		.loc 1 1245 9 is_stmt 1 view .LVU801
 2475 0068 0220     		movs	r0, #2
 2476 006a FFF7FEFF 		bl	DisableSyncManChannel
 2477              	.LVL202:
 2478 006e CCE7     		b	.L199
 2479              	.L203:
1253:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2480              		.loc 1 1253 9 view .LVU802
 2481 0070 0320     		movs	r0, #3
 2482 0072 FFF7FEFF 		bl	DisableSyncManChannel
 2483              	.LVL203:
 2484 0076 CCE7     		b	.L200
 2485              	.L205:
 2486              		.align	2
 2487              	.L204:
 2488 0078 00000000 		.word	.LANCHOR7
 2489 007c 00000000 		.word	.LANCHOR4
 2490 0080 00000000 		.word	.LANCHOR13
 2491 0084 00000000 		.word	.LANCHOR14
 2492 0088 00000000 		.word	.LANCHOR15
 2493 008c 00000000 		.word	.LANCHOR25
 2494 0090 00000000 		.word	.LANCHOR26
 2495 0094 00000000 		.word	.LANCHOR18
 2496 0098 00000000 		.word	.LANCHOR19
 2497 009c 00000000 		.word	.LANCHOR21
 2498 00a0 00000000 		.word	.LANCHOR22
 2499 00a4 00000000 		.word	.LANCHOR23
 2500 00a8 00000000 		.word	.LANCHOR24
 2501 00ac 00000000 		.word	.LANCHOR16
 2502 00b0 00000000 		.word	.LANCHOR17
 2503 00b4 00000000 		.word	sSyncManInPar
 2504 00b8 00000000 		.word	.LANCHOR27
 2505 00bc 00000000 		.word	.LANCHOR9
 2506 00c0 00000000 		.word	.LANCHOR32
 2507 00c4 00000000 		.word	bSyncSetByUser
 2508              		.cfi_endproc
 2509              	.LFE144:
 2511              		.section	.text.BackToInitTransition,"ax",%progbits
 2512              		.align	1
 2513              		.global	BackToInitTransition
 2514              		.syntax unified
 2515              		.thumb
 2516              		.thumb_func
 2518              	BackToInitTransition:
 2519              	.LFB145:
1296:Lib/ssc/src/ecatslv.c **** 
1297:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1298:Lib/ssc/src/ecatslv.c **** /**
1299:Lib/ssc/src/ecatslv.c **** \brief    This function is called when a X to Init transition is completed
1300:Lib/ssc/src/ecatslv.c **** 
1301:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1302:Lib/ssc/src/ecatslv.c **** 
1303:Lib/ssc/src/ecatslv.c **** void BackToInitTransition(void)
1304:Lib/ssc/src/ecatslv.c **** {
 2520              		.loc 1 1304 1 view -0
 2521              		.cfi_startproc
 2522              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccd2INFf.s 			page 73


 2523              		@ frame_needed = 0, uses_anonymous_args = 0
 2524              		@ link register save eliminated.
1305:Lib/ssc/src/ecatslv.c ****     /* Reset indication that the user has written a sync mode*/
1306:Lib/ssc/src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2525              		.loc 1 1306 5 view .LVU804
 2526              		.loc 1 1306 20 is_stmt 0 view .LVU805
 2527 0000 014B     		ldr	r3, .L207
 2528 0002 0022     		movs	r2, #0
 2529 0004 1A70     		strb	r2, [r3]
1307:Lib/ssc/src/ecatslv.c **** }
 2530              		.loc 1 1307 1 view .LVU806
 2531 0006 7047     		bx	lr
 2532              	.L208:
 2533              		.align	2
 2534              	.L207:
 2535 0008 00000000 		.word	bSyncSetByUser
 2536              		.cfi_endproc
 2537              	.LFE145:
 2539              		.section	.text.SetALStatus,"ax",%progbits
 2540              		.align	1
 2541              		.global	SetALStatus
 2542              		.syntax unified
 2543              		.thumb
 2544              		.thumb_func
 2546              	SetALStatus:
 2547              	.LVL204:
 2548              	.LFB146:
1308:Lib/ssc/src/ecatslv.c **** 
1309:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1310:Lib/ssc/src/ecatslv.c **** /**
1311:Lib/ssc/src/ecatslv.c ****  \param alStatus        New AL Status (written to register 0x130)
1312:Lib/ssc/src/ecatslv.c ****  \param alStatusCode    New AL Status Code (written to register 0x134)
1313:Lib/ssc/src/ecatslv.c **** 
1314:Lib/ssc/src/ecatslv.c ****   \brief  The function changes the state of the EtherCAT ASIC to the requested.
1315:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1316:Lib/ssc/src/ecatslv.c **** void SetALStatus(UINT8 alStatus, UINT16 alStatusCode)
1317:Lib/ssc/src/ecatslv.c **** {
 2549              		.loc 1 1317 1 is_stmt 1 view -0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 8
 2552              		@ frame_needed = 0, uses_anonymous_args = 0
 2553              		.loc 1 1317 1 is_stmt 0 view .LVU808
 2554 0000 00B5     		push	{lr}
 2555              		.cfi_def_cfa_offset 4
 2556              		.cfi_offset 14, -4
 2557 0002 83B0     		sub	sp, sp, #12
 2558              		.cfi_def_cfa_offset 16
1318:Lib/ssc/src/ecatslv.c ****     UINT16 Value = alStatusCode;
 2559              		.loc 1 1318 5 is_stmt 1 view .LVU809
 2560              		.loc 1 1318 12 is_stmt 0 view .LVU810
 2561 0004 ADF80610 		strh	r1, [sp, #6]	@ movhi
1319:Lib/ssc/src/ecatslv.c **** 
1320:Lib/ssc/src/ecatslv.c ****     /*update global status variable if required*/
1321:Lib/ssc/src/ecatslv.c ****     if(nAlStatus != alStatus)
 2562              		.loc 1 1321 5 is_stmt 1 view .LVU811
 2563              		.loc 1 1321 18 is_stmt 0 view .LVU812
 2564 0008 0F4B     		ldr	r3, .L214
ARM GAS  /tmp/ccd2INFf.s 			page 74


 2565 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2566              		.loc 1 1321 7 view .LVU813
 2567 000c 8342     		cmp	r3, r0
 2568 000e 01D0     		beq	.L210
1322:Lib/ssc/src/ecatslv.c ****     {
1323:Lib/ssc/src/ecatslv.c ****         nAlStatus = alStatus;
 2569              		.loc 1 1323 9 is_stmt 1 view .LVU814
 2570              		.loc 1 1323 19 is_stmt 0 view .LVU815
 2571 0010 0D4B     		ldr	r3, .L214
 2572 0012 1870     		strb	r0, [r3]
 2573              	.L210:
1324:Lib/ssc/src/ecatslv.c ****     }
1325:Lib/ssc/src/ecatslv.c **** 
1326:Lib/ssc/src/ecatslv.c **** 
1327:Lib/ssc/src/ecatslv.c ****     if (alStatusCode != 0xFFFF)
 2574              		.loc 1 1327 5 is_stmt 1 view .LVU816
 2575              		.loc 1 1327 8 is_stmt 0 view .LVU817
 2576 0014 4FF6FF73 		movw	r3, #65535
 2577 0018 9942     		cmp	r1, r3
 2578 001a 0DD1     		bne	.L213
 2579              	.LVL205:
 2580              	.L211:
1328:Lib/ssc/src/ecatslv.c ****     {
1329:Lib/ssc/src/ecatslv.c ****         Value = SWAPWORD(Value);
1330:Lib/ssc/src/ecatslv.c **** 
1331:Lib/ssc/src/ecatslv.c ****         HW_EscWriteWord(Value,ESC_AL_STATUS_CODE_OFFSET);
1332:Lib/ssc/src/ecatslv.c ****     }
1333:Lib/ssc/src/ecatslv.c **** 
1334:Lib/ssc/src/ecatslv.c ****     Value = nAlStatus;
 2581              		.loc 1 1334 5 is_stmt 1 view .LVU818
 2582              		.loc 1 1334 11 is_stmt 0 view .LVU819
 2583 001c 0A4B     		ldr	r3, .L214
 2584 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2585 0020 ADF80630 		strh	r3, [sp, #6]	@ movhi
1335:Lib/ssc/src/ecatslv.c ****     Value = SWAPWORD(Value);
 2586              		.loc 1 1335 5 is_stmt 1 view .LVU820
1336:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(Value,ESC_AL_STATUS_OFFSET);
 2587              		.loc 1 1336 5 view .LVU821
 2588 0024 0222     		movs	r2, #2
 2589 0026 4FF49871 		mov	r1, #304
 2590 002a 0DF10600 		add	r0, sp, #6
 2591 002e FFF7FEFF 		bl	HW_EscWrite
 2592              	.LVL206:
1337:Lib/ssc/src/ecatslv.c **** 
1338:Lib/ssc/src/ecatslv.c **** }
 2593              		.loc 1 1338 1 is_stmt 0 view .LVU822
 2594 0032 03B0     		add	sp, sp, #12
 2595              		.cfi_remember_state
 2596              		.cfi_def_cfa_offset 4
 2597              		@ sp needed
 2598 0034 5DF804FB 		ldr	pc, [sp], #4
 2599              	.LVL207:
 2600              	.L213:
 2601              		.cfi_restore_state
1329:Lib/ssc/src/ecatslv.c **** 
 2602              		.loc 1 1329 9 is_stmt 1 view .LVU823
1331:Lib/ssc/src/ecatslv.c ****     }
ARM GAS  /tmp/ccd2INFf.s 			page 75


 2603              		.loc 1 1331 9 view .LVU824
 2604 0038 0222     		movs	r2, #2
 2605 003a 4FF49A71 		mov	r1, #308
 2606              	.LVL208:
1331:Lib/ssc/src/ecatslv.c ****     }
 2607              		.loc 1 1331 9 is_stmt 0 view .LVU825
 2608 003e 0DF10600 		add	r0, sp, #6
 2609              	.LVL209:
1331:Lib/ssc/src/ecatslv.c ****     }
 2610              		.loc 1 1331 9 view .LVU826
 2611 0042 FFF7FEFF 		bl	HW_EscWrite
 2612              	.LVL210:
1331:Lib/ssc/src/ecatslv.c ****     }
 2613              		.loc 1 1331 9 view .LVU827
 2614 0046 E9E7     		b	.L211
 2615              	.L215:
 2616              		.align	2
 2617              	.L214:
 2618 0048 00000000 		.word	.LANCHOR5
 2619              		.cfi_endproc
 2620              	.LFE146:
 2622              		.section	.text.AL_ControlInd,"ax",%progbits
 2623              		.align	1
 2624              		.global	AL_ControlInd
 2625              		.syntax unified
 2626              		.thumb
 2627              		.thumb_func
 2629              	AL_ControlInd:
 2630              	.LVL211:
 2631              	.LFB147:
1339:Lib/ssc/src/ecatslv.c **** 
1340:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1341:Lib/ssc/src/ecatslv.c **** /**
1342:Lib/ssc/src/ecatslv.c ****  \param    alControl        requested new state
1343:Lib/ssc/src/ecatslv.c ****  \param alStatusCode    requested status code
1344:Lib/ssc/src/ecatslv.c **** 
1345:Lib/ssc/src/ecatslv.c ****  \brief    This function handles the EtherCAT State Machine. It is called
1346:Lib/ssc/src/ecatslv.c ****             * in case of an AL Control event (Bit 0 of AL-Event (Reg 0x220),
1347:Lib/ssc/src/ecatslv.c ****                when the Master has written the AL Control Register (from ECAT_Main),
1348:Lib/ssc/src/ecatslv.c ****               alControl contains the content of the AL Control (Reg 0x120)
1349:Lib/ssc/src/ecatslv.c ****             * in case of a SM-Change event (Bit 4 of AL-Event (Reg 0x220)),
1350:Lib/ssc/src/ecatslv.c ****               when an Activate SYNCM y register is written by the master (from ECAT_Main),
1351:Lib/ssc/src/ecatslv.c ****               alControl contains the actual state (Bit 0-3 of AL Status (Reg 0x130))
1352:Lib/ssc/src/ecatslv.c ****             * in case of a locally expired watchdog (from ECAT_Main),
1353:Lib/ssc/src/ecatslv.c ****               alControl contains the requested new state (SAFE_OP)
1354:Lib/ssc/src/ecatslv.c ****             * in case of an application specific event to change the EtherCAT state (from applicati
1355:Lib/ssc/src/ecatslv.c ****               alControl contains the requested new state (INIT, PRE_OP or SAFE_OP)
1356:Lib/ssc/src/ecatslv.c **** 
1357:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1358:Lib/ssc/src/ecatslv.c **** 
1359:Lib/ssc/src/ecatslv.c **** void AL_ControlInd(UINT8 alControl, UINT16 alStatusCode)
1360:Lib/ssc/src/ecatslv.c **** {
 2632              		.loc 1 1360 1 is_stmt 1 view -0
 2633              		.cfi_startproc
 2634              		@ args = 0, pretend = 0, frame = 0
 2635              		@ frame_needed = 0, uses_anonymous_args = 0
 2636              		.loc 1 1360 1 is_stmt 0 view .LVU829
ARM GAS  /tmp/ccd2INFf.s 			page 76


 2637 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2638              		.cfi_def_cfa_offset 24
 2639              		.cfi_offset 4, -24
 2640              		.cfi_offset 5, -20
 2641              		.cfi_offset 6, -16
 2642              		.cfi_offset 7, -12
 2643              		.cfi_offset 8, -8
 2644              		.cfi_offset 14, -4
 2645 0004 0E46     		mov	r6, r1
1361:Lib/ssc/src/ecatslv.c ****     UINT16        result = 0;
 2646              		.loc 1 1361 5 is_stmt 1 view .LVU830
 2647              	.LVL212:
1362:Lib/ssc/src/ecatslv.c ****     UINT8            bErrAck = 0;
 2648              		.loc 1 1362 5 view .LVU831
1363:Lib/ssc/src/ecatslv.c ****     UINT8         stateTrans;
 2649              		.loc 1 1363 5 view .LVU832
1364:Lib/ssc/src/ecatslv.c ****     /*deactivate ESM timeout counter*/
1365:Lib/ssc/src/ecatslv.c ****     EsmTimeoutCounter = -1;
 2650              		.loc 1 1365 5 view .LVU833
 2651              		.loc 1 1365 23 is_stmt 0 view .LVU834
 2652 0006 474B     		ldr	r3, .L297
 2653 0008 4FF6FF72 		movw	r2, #65535
 2654 000c 1A80     		strh	r2, [r3]	@ movhi
1366:Lib/ssc/src/ecatslv.c ****     bApplEsmPending = TRUE;
 2655              		.loc 1 1366 5 is_stmt 1 view .LVU835
 2656              		.loc 1 1366 21 is_stmt 0 view .LVU836
 2657 000e 464B     		ldr	r3, .L297+4
 2658 0010 0122     		movs	r2, #1
 2659 0012 1A70     		strb	r2, [r3]
1367:Lib/ssc/src/ecatslv.c **** 
1368:Lib/ssc/src/ecatslv.c ****     /* reset the Error Flag in case of acknowledge by the Master */
1369:Lib/ssc/src/ecatslv.c ****     if ( alControl & STATE_CHANGE )
 2660              		.loc 1 1369 5 is_stmt 1 view .LVU837
 2661              		.loc 1 1369 8 is_stmt 0 view .LVU838
 2662 0014 10F01007 		ands	r7, r0, #16
 2663 0018 2BD0     		beq	.L217
1370:Lib/ssc/src/ecatslv.c ****     {
1371:Lib/ssc/src/ecatslv.c ****         bErrAck = 1;
 2664              		.loc 1 1371 9 is_stmt 1 view .LVU839
 2665              	.LVL213:
1372:Lib/ssc/src/ecatslv.c ****         nAlStatus &= ~STATE_CHANGE;
 2666              		.loc 1 1372 9 view .LVU840
 2667              		.loc 1 1372 19 is_stmt 0 view .LVU841
 2668 001a 444A     		ldr	r2, .L297+8
 2669 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2670 001e 23F01003 		bic	r3, r3, #16
 2671 0022 1370     		strb	r3, [r2]
1371:Lib/ssc/src/ecatslv.c ****         nAlStatus &= ~STATE_CHANGE;
 2672              		.loc 1 1371 17 view .LVU842
 2673 0024 0127     		movs	r7, #1
 2674              	.LVL214:
 2675              	.L218:
1373:Lib/ssc/src/ecatslv.c ****         /*enable SM2 is moved to state transition block. First check SM Settings.*/
1374:Lib/ssc/src/ecatslv.c ****     }
1375:Lib/ssc/src/ecatslv.c ****     else if ( (nAlStatus & STATE_CHANGE)
1376:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
1377:Lib/ssc/src/ecatslv.c ****     //               (the error was acknowledged with the same state before independent of the ackn
ARM GAS  /tmp/ccd2INFf.s 			page 77


1378:Lib/ssc/src/ecatslv.c ****     /*Error Acknowledge with 0xX1 is allowed*/
1379:Lib/ssc/src/ecatslv.c ****            && (alControl & STATE_MASK) != STATE_INIT )
1380:Lib/ssc/src/ecatslv.c ****         /* the error flag (Bit 4) is set in the AL-Status and the ErrAck bit (Bit 4)
1381:Lib/ssc/src/ecatslv.c ****            is not set in the AL-Control, so the state cannot be set to a higher state
1382:Lib/ssc/src/ecatslv.c ****            and the new state request will be ignored */
1383:Lib/ssc/src/ecatslv.c ****         return;
1384:Lib/ssc/src/ecatslv.c ****     else
1385:Lib/ssc/src/ecatslv.c ****     {
1386:Lib/ssc/src/ecatslv.c ****         nAlStatus &= STATE_MASK;
1387:Lib/ssc/src/ecatslv.c ****     }
1388:Lib/ssc/src/ecatslv.c **** 
1389:Lib/ssc/src/ecatslv.c ****     /* generate a variable for the state transition
1390:Lib/ssc/src/ecatslv.c ****       (Bit 0-3: new state (AL Control), Bit 4-7: old state (AL Status) */
1391:Lib/ssc/src/ecatslv.c ****     alControl &= STATE_MASK;
 2676              		.loc 1 1391 5 is_stmt 1 view .LVU843
 2677              		.loc 1 1391 15 is_stmt 0 view .LVU844
 2678 0026 00F00F05 		and	r5, r0, #15
 2679              	.LVL215:
1392:Lib/ssc/src/ecatslv.c ****     stateTrans = nAlStatus;
 2680              		.loc 1 1392 5 is_stmt 1 view .LVU845
 2681              		.loc 1 1392 16 is_stmt 0 view .LVU846
 2682 002a 404B     		ldr	r3, .L297+8
 2683 002c 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 2684              	.LVL216:
1393:Lib/ssc/src/ecatslv.c ****     stateTrans <<= 4;
 2685              		.loc 1 1393 5 is_stmt 1 view .LVU847
 2686              		.loc 1 1393 16 is_stmt 0 view .LVU848
 2687 002e 2401     		lsls	r4, r4, #4
 2688              	.LVL217:
 2689              		.loc 1 1393 16 view .LVU849
 2690 0030 E4B2     		uxtb	r4, r4
 2691              	.LVL218:
1394:Lib/ssc/src/ecatslv.c ****     stateTrans += alControl;
 2692              		.loc 1 1394 5 is_stmt 1 view .LVU850
 2693              		.loc 1 1394 16 is_stmt 0 view .LVU851
 2694 0032 2C44     		add	r4, r4, r5
 2695              	.LVL219:
 2696              		.loc 1 1394 16 view .LVU852
 2697 0034 E4B2     		uxtb	r4, r4
 2698              	.LVL220:
1395:Lib/ssc/src/ecatslv.c **** 
1396:Lib/ssc/src/ecatslv.c **** 
1397:Lib/ssc/src/ecatslv.c ****     /* check the SYNCM settings depending on the state transition */
1398:Lib/ssc/src/ecatslv.c ****     switch ( stateTrans )
 2699              		.loc 1 1398 5 is_stmt 1 view .LVU853
 2700 0036 482C     		cmp	r4, #72
 2701 0038 2FD8     		bhi	.L221
 2702 003a 222C     		cmp	r4, #34
 2703 003c 28D3     		bcc	.L282
 2704 003e A4F12203 		sub	r3, r4, #34
 2705 0042 262B     		cmp	r3, #38
 2706 0044 7ED8     		bhi	.L273
 2707 0046 DFE803F0 		tbb	[pc, r3]
 2708              	.L226:
 2709 004a 2F       		.byte	(.L223-.L226)/2
 2710 004b 7D       		.byte	(.L273-.L226)/2
 2711 004c 35       		.byte	(.L227-.L226)/2
ARM GAS  /tmp/ccd2INFf.s 			page 78


 2712 004d 7D       		.byte	(.L273-.L226)/2
 2713 004e 7D       		.byte	(.L273-.L226)/2
 2714 004f 7D       		.byte	(.L273-.L226)/2
 2715 0050 7D       		.byte	(.L273-.L226)/2
 2716 0051 7D       		.byte	(.L273-.L226)/2
 2717 0052 7D       		.byte	(.L273-.L226)/2
 2718 0053 7D       		.byte	(.L273-.L226)/2
 2719 0054 7D       		.byte	(.L273-.L226)/2
 2720 0055 7D       		.byte	(.L273-.L226)/2
 2721 0056 7D       		.byte	(.L273-.L226)/2
 2722 0057 7D       		.byte	(.L273-.L226)/2
 2723 0058 7D       		.byte	(.L273-.L226)/2
 2724 0059 7D       		.byte	(.L273-.L226)/2
 2725 005a 7D       		.byte	(.L273-.L226)/2
 2726 005b 7D       		.byte	(.L273-.L226)/2
 2727 005c 7D       		.byte	(.L273-.L226)/2
 2728 005d 7D       		.byte	(.L273-.L226)/2
 2729 005e 7D       		.byte	(.L273-.L226)/2
 2730 005f 7D       		.byte	(.L273-.L226)/2
 2731 0060 7D       		.byte	(.L273-.L226)/2
 2732 0061 7D       		.byte	(.L273-.L226)/2
 2733 0062 7D       		.byte	(.L273-.L226)/2
 2734 0063 7D       		.byte	(.L273-.L226)/2
 2735 0064 7D       		.byte	(.L273-.L226)/2
 2736 0065 7D       		.byte	(.L273-.L226)/2
 2737 0066 7D       		.byte	(.L273-.L226)/2
 2738 0067 7D       		.byte	(.L273-.L226)/2
 2739 0068 7D       		.byte	(.L273-.L226)/2
 2740 0069 7D       		.byte	(.L273-.L226)/2
 2741 006a 2F       		.byte	(.L223-.L226)/2
 2742 006b 7D       		.byte	(.L273-.L226)/2
 2743 006c 3B       		.byte	(.L225-.L226)/2
 2744 006d 7D       		.byte	(.L273-.L226)/2
 2745 006e 7D       		.byte	(.L273-.L226)/2
 2746 006f 7D       		.byte	(.L273-.L226)/2
 2747 0070 3B       		.byte	(.L225-.L226)/2
 2748              	.LVL221:
 2749 0071 00       		.p2align 1
 2750              	.L217:
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2751              		.loc 1 1375 10 view .LVU854
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2752              		.loc 1 1375 26 is_stmt 0 view .LVU855
 2753 0072 2E4B     		ldr	r3, .L297+8
 2754 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2755              		.loc 1 1375 13 view .LVU856
 2756 0076 13F0100F 		tst	r3, #16
 2757 007a 04D0     		beq	.L219
1379:Lib/ssc/src/ecatslv.c ****         /* the error flag (Bit 4) is set in the AL-Status and the ErrAck bit (Bit 4)
 2758              		.loc 1 1379 12 view .LVU857
 2759 007c 00F00F02 		and	r2, r0, #15
 2760 0080 012A     		cmp	r2, #1
 2761 0082 40F02582 		bne	.L216
 2762              	.L219:
1386:Lib/ssc/src/ecatslv.c ****     }
 2763              		.loc 1 1386 9 is_stmt 1 view .LVU858
ARM GAS  /tmp/ccd2INFf.s 			page 79


1386:Lib/ssc/src/ecatslv.c ****     }
 2764              		.loc 1 1386 19 is_stmt 0 view .LVU859
 2765 0086 03F00F03 		and	r3, r3, #15
 2766 008a 284A     		ldr	r2, .L297+8
 2767 008c 1370     		strb	r3, [r2]
 2768 008e CAE7     		b	.L218
 2769              	.LVL222:
 2770              	.L282:
 2771              		.loc 1 1398 5 view .LVU860
 2772 0090 122C     		cmp	r4, #18
 2773 0092 09D0     		beq	.L223
 2774 0094 4FF00008 		mov	r8, #0
 2775 0098 56E0     		b	.L224
 2776              	.L221:
 2777              		.loc 1 1398 5 view .LVU861
 2778 009a 842C     		cmp	r4, #132
 2779 009c 10D0     		beq	.L225
 2780 009e 882C     		cmp	r4, #136
 2781 00a0 0ED0     		beq	.L225
 2782 00a2 822C     		cmp	r4, #130
 2783 00a4 40F0D280 		bne	.L274
 2784              	.L223:
1399:Lib/ssc/src/ecatslv.c ****     {
1400:Lib/ssc/src/ecatslv.c ****     case INIT_2_PREOP:
1401:Lib/ssc/src/ecatslv.c ****     case OP_2_PREOP:
1402:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_PREOP:
1403:Lib/ssc/src/ecatslv.c ****     case PREOP_2_PREOP:
1404:Lib/ssc/src/ecatslv.c ****         /* in PREOP only the SYNCM settings for SYNCM0 and SYNCM1 (mailbox)
1405:Lib/ssc/src/ecatslv.c ****            are checked, if result is unequal 0, the slave will stay in or
1406:Lib/ssc/src/ecatslv.c ****            switch to INIT and set the ErrorInd Bit (bit 4) of the AL-Status */
1407:Lib/ssc/src/ecatslv.c ****         result = CheckSmSettings(MAILBOX_READ+1);
 2785              		.loc 1 1407 9 is_stmt 1 view .LVU862
 2786              		.loc 1 1407 18 is_stmt 0 view .LVU863
 2787 00a8 0220     		movs	r0, #2
 2788 00aa FFF7FEFF 		bl	CheckSmSettings
 2789              	.LVL223:
 2790              		.loc 1 1407 16 view .LVU864
 2791 00ae 1FFA80F8 		uxth	r8, r0
 2792              	.LVL224:
1408:Lib/ssc/src/ecatslv.c ****         break;
 2793              		.loc 1 1408 9 is_stmt 1 view .LVU865
 2794 00b2 0BE0     		b	.L228
 2795              	.LVL225:
 2796              	.L227:
1409:Lib/ssc/src/ecatslv.c ****     case PREOP_2_SAFEOP:
1410:Lib/ssc/src/ecatslv.c ****         {
1411:Lib/ssc/src/ecatslv.c ****         /* before checking the SYNCM settings for SYNCM2 and SYNCM3 (process data)
1412:Lib/ssc/src/ecatslv.c ****            the expected length of input data (nPdInputSize) and output data (nPdOutputSize)
1413:Lib/ssc/src/ecatslv.c ****             could be adapted (changed by PDO-Assign and/or PDO-Mapping)
1414:Lib/ssc/src/ecatslv.c ****             if result is unequal 0, the slave will stay in PREOP and set
1415:Lib/ssc/src/ecatslv.c ****             the ErrorInd Bit (bit 4) of the AL-Status */
1416:Lib/ssc/src/ecatslv.c ****         result = APPL_GenerateMapping(&nPdInputSize,&nPdOutputSize);
 2797              		.loc 1 1416 9 view .LVU866
 2798              		.loc 1 1416 18 is_stmt 0 view .LVU867
 2799 00b4 1E49     		ldr	r1, .L297+12
 2800              	.LVL226:
 2801              		.loc 1 1416 18 view .LVU868
ARM GAS  /tmp/ccd2INFf.s 			page 80


 2802 00b6 1F48     		ldr	r0, .L297+16
 2803 00b8 FFF7FEFF 		bl	APPL_GenerateMapping
 2804              	.LVL227:
1417:Lib/ssc/src/ecatslv.c **** 
1418:Lib/ssc/src/ecatslv.c ****         if (result != 0)
 2805              		.loc 1 1418 9 is_stmt 1 view .LVU869
 2806              		.loc 1 1418 12 is_stmt 0 view .LVU870
 2807 00bc 8046     		mov	r8, r0
 2808 00be 28B9     		cbnz	r0, .L228
 2809              	.LVL228:
 2810              	.L225:
1419:Lib/ssc/src/ecatslv.c ****             break;
1420:Lib/ssc/src/ecatslv.c ****         }
1421:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_OP:
1422:Lib/ssc/src/ecatslv.c ****     case OP_2_SAFEOP:
1423:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_SAFEOP:
1424:Lib/ssc/src/ecatslv.c ****     case OP_2_OP:
1425:Lib/ssc/src/ecatslv.c ****         /* in SAFEOP or OP the SYNCM settings for all SYNCM are checked
1426:Lib/ssc/src/ecatslv.c ****            if result is unequal 0, the slave will stay in or
1427:Lib/ssc/src/ecatslv.c ****            switch to PREOP and set the ErrorInd Bit (bit 4) of the AL-Status */
1428:Lib/ssc/src/ecatslv.c ****         result = CheckSmSettings(nMaxSyncMan);
 2811              		.loc 1 1428 9 is_stmt 1 view .LVU871
 2812              		.loc 1 1428 18 is_stmt 0 view .LVU872
 2813 00c0 1D4B     		ldr	r3, .L297+20
 2814 00c2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2815 00c4 FFF7FEFF 		bl	CheckSmSettings
 2816              	.LVL229:
 2817              		.loc 1 1428 16 view .LVU873
 2818 00c8 1FFA80F8 		uxth	r8, r0
 2819              	.LVL230:
1429:Lib/ssc/src/ecatslv.c ****         break;
 2820              		.loc 1 1429 9 is_stmt 1 view .LVU874
 2821              	.L228:
1430:Lib/ssc/src/ecatslv.c ****     }
1431:Lib/ssc/src/ecatslv.c **** 
1432:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 2822              		.loc 1 1432 5 view .LVU875
 2823              		.loc 1 1432 8 is_stmt 0 view .LVU876
 2824 00cc B8F1000F 		cmp	r8, #0
 2825 00d0 3AD0     		beq	.L224
1433:Lib/ssc/src/ecatslv.c ****     {
1434:Lib/ssc/src/ecatslv.c ****         /* execute the corresponding local management service(s) depending on the state transition 
1435:Lib/ssc/src/ecatslv.c ****         nEcatStateTrans = 0;
1436:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
1437:Lib/ssc/src/ecatslv.c ****         {
1438:Lib/ssc/src/ecatslv.c ****         case INIT_2_BOOT    :
1439:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
1440:Lib/ssc/src/ecatslv.c ****             break;
1441:Lib/ssc/src/ecatslv.c **** 
1442:Lib/ssc/src/ecatslv.c ****         case BOOT_2_INIT    :
1443:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
1444:Lib/ssc/src/ecatslv.c **** 
1445:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1446:Lib/ssc/src/ecatslv.c **** 
1447:Lib/ssc/src/ecatslv.c ****             break;
1448:Lib/ssc/src/ecatslv.c ****         case INIT_2_PREOP :
1449:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 81


1450:Lib/ssc/src/ecatslv.c ****            UpdateEEPROMLoadedState();
1451:Lib/ssc/src/ecatslv.c **** 
1452:Lib/ssc/src/ecatslv.c ****             if (EepromLoaded == FALSE)
1453:Lib/ssc/src/ecatslv.c ****             {
1454:Lib/ssc/src/ecatslv.c ****                 //return an error if the EEPROM was not loaded correct  (device restart is required
1455:Lib/ssc/src/ecatslv.c ****                 result = ALSTATUSCODE_EE_ERROR;
1456:Lib/ssc/src/ecatslv.c ****             }
1457:Lib/ssc/src/ecatslv.c ****             if (result == 0)
1458:Lib/ssc/src/ecatslv.c ****             {
1459:Lib/ssc/src/ecatslv.c ****             /* MBX_StartMailboxHandler (in mailbox.c) checks if the areas of the mailbox
1460:Lib/ssc/src/ecatslv.c ****                sync managers SYNCM0 and SYNCM1 overlap each other
1461:Lib/ssc/src/ecatslv.c ****               if result is unequal 0, the slave will stay in INIT
1462:Lib/ssc/src/ecatslv.c ****               and sets the ErrorInd Bit (bit 4) of the AL-Status */
1463:Lib/ssc/src/ecatslv.c ****             result = MBX_StartMailboxHandler();
1464:Lib/ssc/src/ecatslv.c ****             if (result == 0)
1465:Lib/ssc/src/ecatslv.c ****             {
1466:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1467:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
1468:Lib/ssc/src/ecatslv.c ****                    if the state transition from INIT to PREOP should be done
1469:Lib/ssc/src/ecatslv.c ****                  if result is unequal 0, the slave will stay in INIT
1470:Lib/ssc/src/ecatslv.c ****                  and sets the ErrorInd Bit (bit 4) of the AL-Status */
1471:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartMailboxHandler();
1472:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
1473:Lib/ssc/src/ecatslv.c ****                 {
1474:Lib/ssc/src/ecatslv.c ****                     bMbxRunning = TRUE;
1475:Lib/ssc/src/ecatslv.c ****                 }
1476:Lib/ssc/src/ecatslv.c ****             }
1477:Lib/ssc/src/ecatslv.c **** 
1478:Lib/ssc/src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
1479:Lib/ssc/src/ecatslv.c ****             {
1480:Lib/ssc/src/ecatslv.c ****                 /*Stop APPL Mbx handler if APPL Start Mbx handler was called before*/
1481:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1482:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
1483:Lib/ssc/src/ecatslv.c **** 
1484:Lib/ssc/src/ecatslv.c ****                  MBX_StopMailboxHandler();
1485:Lib/ssc/src/ecatslv.c ****             }
1486:Lib/ssc/src/ecatslv.c **** 
1487:Lib/ssc/src/ecatslv.c ****             }
1488:Lib/ssc/src/ecatslv.c ****             break;
1489:Lib/ssc/src/ecatslv.c **** 
1490:Lib/ssc/src/ecatslv.c ****         case PREOP_2_SAFEOP:
1491:Lib/ssc/src/ecatslv.c ****             /* start the input handler (function is defined above) */
1492:Lib/ssc/src/ecatslv.c ****             result = StartInputHandler();
1493:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
1494:Lib/ssc/src/ecatslv.c ****             {
1495:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1496:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
1497:Lib/ssc/src/ecatslv.c **** 
1498:Lib/ssc/src/ecatslv.c ****                 if(result == 0)
1499:Lib/ssc/src/ecatslv.c ****                 {
1500:Lib/ssc/src/ecatslv.c ****                     /* initialize the AL Event Mask register (0x204) */
1501:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1502:Lib/ssc/src/ecatslv.c ****                     SetALEventMask( u16ALEventMask );
1503:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1504:Lib/ssc/src/ecatslv.c **** 
1505:Lib/ssc/src/ecatslv.c ****                     bEcatInputUpdateRunning = TRUE;
1506:Lib/ssc/src/ecatslv.c ****                 }
ARM GAS  /tmp/ccd2INFf.s 			page 82


1507:Lib/ssc/src/ecatslv.c ****             }
1508:Lib/ssc/src/ecatslv.c **** 
1509:Lib/ssc/src/ecatslv.c ****             /*if one start input handler returned an error stop the input handler*/
1510:Lib/ssc/src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
1511:Lib/ssc/src/ecatslv.c ****             {
1512:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1513:Lib/ssc/src/ecatslv.c ****                 {
1514:Lib/ssc/src/ecatslv.c ****                     /*Call only the APPL stop handler if the APPL start handler was called before*/
1515:Lib/ssc/src/ecatslv.c ****                     /*The application can react to the state transition in the function APPL_StopIn
1516:Lib/ssc/src/ecatslv.c ****                     APPL_StopInputHandler();
1517:Lib/ssc/src/ecatslv.c ****                 }
1518:Lib/ssc/src/ecatslv.c **** 
1519:Lib/ssc/src/ecatslv.c ****                 StopInputHandler();
1520:Lib/ssc/src/ecatslv.c ****             }
1521:Lib/ssc/src/ecatslv.c ****             break;
1522:Lib/ssc/src/ecatslv.c **** 
1523:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_OP:
1524:Lib/ssc/src/ecatslv.c ****             /* start the output handler (function is defined above) */
1525:Lib/ssc/src/ecatslv.c ****             result = StartOutputHandler();
1526:Lib/ssc/src/ecatslv.c ****             if(result == 0)
1527:Lib/ssc/src/ecatslv.c ****             {
1528:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1529:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
1530:Lib/ssc/src/ecatslv.c **** 
1531:Lib/ssc/src/ecatslv.c ****                 if(result == 0)
1532:Lib/ssc/src/ecatslv.c ****                 {
1533:Lib/ssc/src/ecatslv.c ****                     /*Device is in OPERATINAL*/
1534:Lib/ssc/src/ecatslv.c ****                     bEcatOutputUpdateRunning = TRUE;
1535:Lib/ssc/src/ecatslv.c ****                 }
1536:Lib/ssc/src/ecatslv.c **** 
1537:Lib/ssc/src/ecatslv.c ****             }
1538:Lib/ssc/src/ecatslv.c **** 
1539:Lib/ssc/src/ecatslv.c ****             if ( result != 0 && result != NOERROR_INWORK)
1540:Lib/ssc/src/ecatslv.c ****             {
1541:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1542:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
1543:Lib/ssc/src/ecatslv.c **** 
1544:Lib/ssc/src/ecatslv.c ****                 StopOutputHandler();
1545:Lib/ssc/src/ecatslv.c ****             }
1546:Lib/ssc/src/ecatslv.c **** 
1547:Lib/ssc/src/ecatslv.c ****             break;
1548:Lib/ssc/src/ecatslv.c **** 
1549:Lib/ssc/src/ecatslv.c ****         case OP_2_SAFEOP:
1550:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1551:Lib/ssc/src/ecatslv.c ****             APPL_StopOutputHandler();
1552:Lib/ssc/src/ecatslv.c **** 
1553:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1554:Lib/ssc/src/ecatslv.c **** 
1555:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1556:Lib/ssc/src/ecatslv.c **** 
1557:Lib/ssc/src/ecatslv.c ****             break;
1558:Lib/ssc/src/ecatslv.c **** 
1559:Lib/ssc/src/ecatslv.c ****         case OP_2_PREOP:
1560:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1561:Lib/ssc/src/ecatslv.c ****             result = APPL_StopOutputHandler();
1562:Lib/ssc/src/ecatslv.c **** 
1563:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
ARM GAS  /tmp/ccd2INFf.s 			page 83


1564:Lib/ssc/src/ecatslv.c **** 
1565:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1566:Lib/ssc/src/ecatslv.c **** 
1567:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1568:Lib/ssc/src/ecatslv.c ****                 break;
1569:Lib/ssc/src/ecatslv.c **** 
1570:Lib/ssc/src/ecatslv.c ****             stateTrans = SAFEOP_2_PREOP;
1571:Lib/ssc/src/ecatslv.c **** 
1572:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_PREOP:
1573:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1574:Lib/ssc/src/ecatslv.c ****             APPL_StopInputHandler();
1575:Lib/ssc/src/ecatslv.c ****            
1576:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1577:Lib/ssc/src/ecatslv.c **** 
1578:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1579:Lib/ssc/src/ecatslv.c **** 
1580:Lib/ssc/src/ecatslv.c ****             break;
1581:Lib/ssc/src/ecatslv.c **** 
1582:Lib/ssc/src/ecatslv.c ****         case OP_2_INIT:
1583:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1584:Lib/ssc/src/ecatslv.c ****             result = APPL_StopOutputHandler();
1585:Lib/ssc/src/ecatslv.c **** 
1586:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1587:Lib/ssc/src/ecatslv.c **** 
1588:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1589:Lib/ssc/src/ecatslv.c **** 
1590:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1591:Lib/ssc/src/ecatslv.c ****                 break;
1592:Lib/ssc/src/ecatslv.c ****             
1593:Lib/ssc/src/ecatslv.c ****             stateTrans = SAFEOP_2_INIT;
1594:Lib/ssc/src/ecatslv.c **** 
1595:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_INIT:
1596:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1597:Lib/ssc/src/ecatslv.c ****             result = APPL_StopInputHandler();
1598:Lib/ssc/src/ecatslv.c ****             
1599:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1600:Lib/ssc/src/ecatslv.c **** 
1601:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1602:Lib/ssc/src/ecatslv.c **** 
1603:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1604:Lib/ssc/src/ecatslv.c ****                 break;
1605:Lib/ssc/src/ecatslv.c ****             stateTrans = PREOP_2_INIT;
1606:Lib/ssc/src/ecatslv.c **** 
1607:Lib/ssc/src/ecatslv.c ****         case PREOP_2_INIT:
1608:Lib/ssc/src/ecatslv.c ****             MBX_StopMailboxHandler();
1609:Lib/ssc/src/ecatslv.c ****             result = APPL_StopMailboxHandler();
1610:Lib/ssc/src/ecatslv.c **** 
1611:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1612:Lib/ssc/src/ecatslv.c ****             break;
1613:Lib/ssc/src/ecatslv.c **** 
1614:Lib/ssc/src/ecatslv.c ****         case INIT_2_INIT:
1615:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1616:Lib/ssc/src/ecatslv.c ****         case PREOP_2_PREOP:
1617:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_SAFEOP:
1618:Lib/ssc/src/ecatslv.c ****         case OP_2_OP:
1619:Lib/ssc/src/ecatslv.c ****             if(bErrAck)
1620:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
ARM GAS  /tmp/ccd2INFf.s 			page 84


1621:Lib/ssc/src/ecatslv.c **** 
1622:Lib/ssc/src/ecatslv.c ****             if(!bLocalErrorFlag)
1623:Lib/ssc/src/ecatslv.c ****             {
1624:Lib/ssc/src/ecatslv.c ****                 /*no local error flag is currently active, enable SM*/
1625:Lib/ssc/src/ecatslv.c ****                 if ( nAlStatus & (STATE_SAFEOP | STATE_OP))
1626:Lib/ssc/src/ecatslv.c ****                 {
1627:Lib/ssc/src/ecatslv.c ****                     if(nPdOutputSize > 0)
1628:Lib/ssc/src/ecatslv.c ****                     {
1629:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1630:Lib/ssc/src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_OUT);
1631:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1632:Lib/ssc/src/ecatslv.c ****                     }
1633:Lib/ssc/src/ecatslv.c ****                     else 
1634:Lib/ssc/src/ecatslv.c ****                     if(nPdInputSize > 0)
1635:Lib/ssc/src/ecatslv.c ****                     {
1636:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1637:Lib/ssc/src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_IN);
1638:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1639:Lib/ssc/src/ecatslv.c ****                     }
1640:Lib/ssc/src/ecatslv.c ****                 }
1641:Lib/ssc/src/ecatslv.c ****             }
1642:Lib/ssc/src/ecatslv.c ****             result = NOERROR_NOSTATECHANGE;
1643:Lib/ssc/src/ecatslv.c ****             break;
1644:Lib/ssc/src/ecatslv.c **** 
1645:Lib/ssc/src/ecatslv.c ****         case INIT_2_SAFEOP:
1646:Lib/ssc/src/ecatslv.c ****         case INIT_2_OP:
1647:Lib/ssc/src/ecatslv.c ****         case PREOP_2_OP:
1648:Lib/ssc/src/ecatslv.c ****         case PREOP_2_BOOT:
1649:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_BOOT:
1650:Lib/ssc/src/ecatslv.c ****         case OP_2_BOOT:
1651:Lib/ssc/src/ecatslv.c ****         case BOOT_2_PREOP:
1652:Lib/ssc/src/ecatslv.c ****         case BOOT_2_SAFEOP:
1653:Lib/ssc/src/ecatslv.c ****         case BOOT_2_OP:
1654:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDALCONTROL;
1655:Lib/ssc/src/ecatslv.c ****             break;
1656:Lib/ssc/src/ecatslv.c **** 
1657:Lib/ssc/src/ecatslv.c ****         default:
1658:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_UNKNOWNALCONTROL;
1659:Lib/ssc/src/ecatslv.c ****             break;
1660:Lib/ssc/src/ecatslv.c ****         }
1661:Lib/ssc/src/ecatslv.c ****     }
1662:Lib/ssc/src/ecatslv.c ****     else
1663:Lib/ssc/src/ecatslv.c ****     {
1664:Lib/ssc/src/ecatslv.c ****         /* the checking of the sync manager settings was not successful
1665:Lib/ssc/src/ecatslv.c ****             switch back the state to PREOP or INIT */
1666:Lib/ssc/src/ecatslv.c ****         switch (nAlStatus)
 2826              		.loc 1 1666 9 is_stmt 1 view .LVU877
 2827 00d2 164B     		ldr	r3, .L297+8
 2828 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2829 00d6 042B     		cmp	r3, #4
 2830 00d8 00F0AC81 		beq	.L255
 2831 00dc 082B     		cmp	r3, #8
 2832 00de 00F0A581 		beq	.L256
 2833 00e2 022B     		cmp	r3, #2
 2834 00e4 00F0AA81 		beq	.L257
 2835              	.LVL231:
 2836              	.L246:
ARM GAS  /tmp/ccd2INFf.s 			page 85


1667:Lib/ssc/src/ecatslv.c ****         {
1668:Lib/ssc/src/ecatslv.c ****         case STATE_OP:
1669:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1670:Lib/ssc/src/ecatslv.c ****             APPL_StopOutputHandler();
1671:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1672:Lib/ssc/src/ecatslv.c ****         case STATE_SAFEOP:
1673:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1674:Lib/ssc/src/ecatslv.c ****             APPL_StopInputHandler();
1675:Lib/ssc/src/ecatslv.c **** 
1676:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1677:Lib/ssc/src/ecatslv.c **** 
1678:Lib/ssc/src/ecatslv.c ****         case STATE_PREOP:
1679:Lib/ssc/src/ecatslv.c **** 
1680:Lib/ssc/src/ecatslv.c ****             if ( result == ALSTATUSCODE_INVALIDMBXCFGINPREOP )
1681:Lib/ssc/src/ecatslv.c ****             {
1682:Lib/ssc/src/ecatslv.c ****                 /* the mailbox sync manager settings were wrong, switch back to INIT */
1683:Lib/ssc/src/ecatslv.c ****                 MBX_StopMailboxHandler();
1684:Lib/ssc/src/ecatslv.c ****                 APPL_StopMailboxHandler();
1685:Lib/ssc/src/ecatslv.c **** 
1686:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_INIT;
1687:Lib/ssc/src/ecatslv.c ****             }
1688:Lib/ssc/src/ecatslv.c ****             else
1689:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_PREOP;
1690:Lib/ssc/src/ecatslv.c ****         }
1691:Lib/ssc/src/ecatslv.c ****     }
1692:Lib/ssc/src/ecatslv.c **** 
1693:Lib/ssc/src/ecatslv.c ****     if ( result == NOERROR_INWORK )
 2837              		.loc 1 1693 5 view .LVU878
 2838              		.loc 1 1693 8 is_stmt 0 view .LVU879
 2839 00e8 B8F1FF0F 		cmp	r8, #255
 2840 00ec 40F0C581 		bne	.L243
1694:Lib/ssc/src/ecatslv.c ****     {
1695:Lib/ssc/src/ecatslv.c ****         /* state transition is still in work
1696:Lib/ssc/src/ecatslv.c ****             ECAT_StateChange must be called from the application */
1697:Lib/ssc/src/ecatslv.c ****         bEcatWaitForAlControlRes = TRUE;
 2841              		.loc 1 1697 9 is_stmt 1 view .LVU880
 2842              		.loc 1 1697 34 is_stmt 0 view .LVU881
 2843 00f0 124B     		ldr	r3, .L297+24
 2844 00f2 0122     		movs	r2, #1
 2845 00f4 1A70     		strb	r2, [r3]
1698:Lib/ssc/src/ecatslv.c ****         /* state transition has to be stored */
1699:Lib/ssc/src/ecatslv.c ****         nEcatStateTrans = stateTrans;
 2846              		.loc 1 1699 9 is_stmt 1 view .LVU882
 2847              		.loc 1 1699 25 is_stmt 0 view .LVU883
 2848 00f6 A4B2     		uxth	r4, r4
 2849 00f8 114B     		ldr	r3, .L297+28
 2850 00fa 1C80     		strh	r4, [r3]	@ movhi
1700:Lib/ssc/src/ecatslv.c **** 
1701:Lib/ssc/src/ecatslv.c ****         /*Init ESM timeout counter (will be decremented with the local 1ms timer)*/
1702:Lib/ssc/src/ecatslv.c ****         switch(nEcatStateTrans)
 2851              		.loc 1 1702 9 is_stmt 1 view .LVU884
 2852 00fc 242C     		cmp	r4, #36
 2853 00fe 00F0B581 		beq	.L259
 2854 0102 00F2AD81 		bhi	.L260
 2855 0106 123C     		subs	r4, r4, #18
 2856 0108 A4B2     		uxth	r4, r4
 2857 010a 9442     		cmp	r4, r2
ARM GAS  /tmp/ccd2INFf.s 			page 86


 2858 010c 00F2AA81 		bhi	.L261
1703:Lib/ssc/src/ecatslv.c ****         {
1704:Lib/ssc/src/ecatslv.c ****             case INIT_2_PREOP:
1705:Lib/ssc/src/ecatslv.c ****             case INIT_2_BOOT:
1706:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = PREOPTIMEOUT;
 2859              		.loc 1 1706 17 view .LVU885
 2860              		.loc 1 1706 35 is_stmt 0 view .LVU886
 2861 0110 044B     		ldr	r3, .L297
 2862 0112 4FF4FA62 		mov	r2, #2000
 2863 0116 1A80     		strh	r2, [r3]	@ movhi
1707:Lib/ssc/src/ecatslv.c ****             break;
 2864              		.loc 1 1707 13 is_stmt 1 view .LVU887
 2865              	.L263:
1708:Lib/ssc/src/ecatslv.c ****             case PREOP_2_SAFEOP:
1709:Lib/ssc/src/ecatslv.c ****             case SAFEOP_2_OP:
1710:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = SAFEOP2OPTIMEOUT;
1711:Lib/ssc/src/ecatslv.c ****                 break;
1712:Lib/ssc/src/ecatslv.c ****            default:
1713:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = 200; //Set default timeout value to 200ms
1714:Lib/ssc/src/ecatslv.c ****                 break;
1715:Lib/ssc/src/ecatslv.c ****         }
1716:Lib/ssc/src/ecatslv.c ****         EsmTimeoutCounter -= 50; //subtract 50ms from the timeout to react before the master runs i
 2866              		.loc 1 1716 9 view .LVU888
 2867              		.loc 1 1716 27 is_stmt 0 view .LVU889
 2868 0118 024A     		ldr	r2, .L297
 2869 011a 1388     		ldrh	r3, [r2]
 2870 011c 323B     		subs	r3, r3, #50
 2871 011e 1380     		strh	r3, [r2]	@ movhi
 2872 0120 D6E1     		b	.L216
 2873              	.L298:
 2874 0122 00BF     		.align	2
 2875              	.L297:
 2876 0124 00000000 		.word	.LANCHOR33
 2877 0128 00000000 		.word	.LANCHOR34
 2878 012c 00000000 		.word	.LANCHOR5
 2879 0130 00000000 		.word	.LANCHOR7
 2880 0134 00000000 		.word	.LANCHOR4
 2881 0138 00000000 		.word	.LANCHOR11
 2882 013c 00000000 		.word	.LANCHOR36
 2883 0140 00000000 		.word	.LANCHOR35
 2884              	.LVL232:
 2885              	.L273:
1398:Lib/ssc/src/ecatslv.c ****     {
 2886              		.loc 1 1398 5 view .LVU890
 2887 0144 4FF00008 		mov	r8, #0
 2888              	.LVL233:
 2889              	.L224:
1435:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
 2890              		.loc 1 1435 9 is_stmt 1 view .LVU891
1435:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
 2891              		.loc 1 1435 25 is_stmt 0 view .LVU892
 2892 0148 9D4B     		ldr	r3, .L299
 2893 014a 0022     		movs	r2, #0
 2894 014c 1A80     		strh	r2, [r3]	@ movhi
1436:Lib/ssc/src/ecatslv.c ****         {
 2895              		.loc 1 1436 9 is_stmt 1 view .LVU893
 2896 014e A4F11103 		sub	r3, r4, #17
ARM GAS  /tmp/ccd2INFf.s 			page 87


 2897 0152 772B     		cmp	r3, #119
 2898 0154 00F28F81 		bhi	.L230
 2899 0158 DFE813F0 		tbh	[pc, r3, lsl #1]
 2900              	.L232:
 2901 015c 4001     		.2byte	(.L245-.L232)/2
 2902 015e 8000     		.2byte	(.L244-.L232)/2
 2903 0160 BC01     		.2byte	(.L275-.L232)/2
 2904 0162 6501     		.2byte	(.L234-.L232)/2
 2905 0164 8D01     		.2byte	(.L230-.L232)/2
 2906 0166 8D01     		.2byte	(.L230-.L232)/2
 2907 0168 8D01     		.2byte	(.L230-.L232)/2
 2908 016a 6501     		.2byte	(.L234-.L232)/2
 2909 016c 8D01     		.2byte	(.L230-.L232)/2
 2910 016e 8D01     		.2byte	(.L230-.L232)/2
 2911 0170 8D01     		.2byte	(.L230-.L232)/2
 2912 0172 8D01     		.2byte	(.L230-.L232)/2
 2913 0174 8D01     		.2byte	(.L230-.L232)/2
 2914 0176 8D01     		.2byte	(.L230-.L232)/2
 2915 0178 8D01     		.2byte	(.L230-.L232)/2
 2916 017a 8D01     		.2byte	(.L230-.L232)/2
 2917 017c 2A01     		.2byte	(.L242-.L232)/2
 2918 017e 4201     		.2byte	(.L231-.L232)/2
 2919 0180 6501     		.2byte	(.L234-.L232)/2
 2920 0182 AC00     		.2byte	(.L241-.L232)/2
 2921 0184 8D01     		.2byte	(.L230-.L232)/2
 2922 0186 8D01     		.2byte	(.L230-.L232)/2
 2923 0188 8D01     		.2byte	(.L230-.L232)/2
 2924 018a 6501     		.2byte	(.L234-.L232)/2
 2925 018c 8D01     		.2byte	(.L230-.L232)/2
 2926 018e 8D01     		.2byte	(.L230-.L232)/2
 2927 0190 8D01     		.2byte	(.L230-.L232)/2
 2928 0192 8D01     		.2byte	(.L230-.L232)/2
 2929 0194 8D01     		.2byte	(.L230-.L232)/2
 2930 0196 8D01     		.2byte	(.L230-.L232)/2
 2931 0198 8D01     		.2byte	(.L230-.L232)/2
 2932 019a 8D01     		.2byte	(.L230-.L232)/2
 2933 019c 7B00     		.2byte	(.L240-.L232)/2
 2934 019e 6501     		.2byte	(.L234-.L232)/2
 2935 01a0 8D01     		.2byte	(.L230-.L232)/2
 2936 01a2 6501     		.2byte	(.L234-.L232)/2
 2937 01a4 8D01     		.2byte	(.L230-.L232)/2
 2938 01a6 8D01     		.2byte	(.L230-.L232)/2
 2939 01a8 8D01     		.2byte	(.L230-.L232)/2
 2940 01aa 6501     		.2byte	(.L234-.L232)/2
 2941 01ac 8D01     		.2byte	(.L230-.L232)/2
 2942 01ae 8D01     		.2byte	(.L230-.L232)/2
 2943 01b0 8D01     		.2byte	(.L230-.L232)/2
 2944 01b2 8D01     		.2byte	(.L230-.L232)/2
 2945 01b4 8D01     		.2byte	(.L230-.L232)/2
 2946 01b6 8D01     		.2byte	(.L230-.L232)/2
 2947 01b8 8D01     		.2byte	(.L230-.L232)/2
 2948 01ba 8D01     		.2byte	(.L230-.L232)/2
 2949 01bc 1D01     		.2byte	(.L239-.L232)/2
 2950 01be 0801     		.2byte	(.L238-.L232)/2
 2951 01c0 6501     		.2byte	(.L234-.L232)/2
 2952 01c2 4201     		.2byte	(.L231-.L232)/2
 2953 01c4 8D01     		.2byte	(.L230-.L232)/2
ARM GAS  /tmp/ccd2INFf.s 			page 88


 2954 01c6 8D01     		.2byte	(.L230-.L232)/2
 2955 01c8 8D01     		.2byte	(.L230-.L232)/2
 2956 01ca D200     		.2byte	(.L237-.L232)/2
 2957 01cc 8D01     		.2byte	(.L230-.L232)/2
 2958 01ce 8D01     		.2byte	(.L230-.L232)/2
 2959 01d0 8D01     		.2byte	(.L230-.L232)/2
 2960 01d2 8D01     		.2byte	(.L230-.L232)/2
 2961 01d4 8D01     		.2byte	(.L230-.L232)/2
 2962 01d6 8D01     		.2byte	(.L230-.L232)/2
 2963 01d8 8D01     		.2byte	(.L230-.L232)/2
 2964 01da 8D01     		.2byte	(.L230-.L232)/2
 2965 01dc 8D01     		.2byte	(.L230-.L232)/2
 2966 01de 8D01     		.2byte	(.L230-.L232)/2
 2967 01e0 8D01     		.2byte	(.L230-.L232)/2
 2968 01e2 8D01     		.2byte	(.L230-.L232)/2
 2969 01e4 8D01     		.2byte	(.L230-.L232)/2
 2970 01e6 8D01     		.2byte	(.L230-.L232)/2
 2971 01e8 8D01     		.2byte	(.L230-.L232)/2
 2972 01ea 8D01     		.2byte	(.L230-.L232)/2
 2973 01ec 8D01     		.2byte	(.L230-.L232)/2
 2974 01ee 8D01     		.2byte	(.L230-.L232)/2
 2975 01f0 8D01     		.2byte	(.L230-.L232)/2
 2976 01f2 8D01     		.2byte	(.L230-.L232)/2
 2977 01f4 8D01     		.2byte	(.L230-.L232)/2
 2978 01f6 8D01     		.2byte	(.L230-.L232)/2
 2979 01f8 8D01     		.2byte	(.L230-.L232)/2
 2980 01fa 8D01     		.2byte	(.L230-.L232)/2
 2981 01fc 8D01     		.2byte	(.L230-.L232)/2
 2982 01fe 8D01     		.2byte	(.L230-.L232)/2
 2983 0200 8D01     		.2byte	(.L230-.L232)/2
 2984 0202 8D01     		.2byte	(.L230-.L232)/2
 2985 0204 8D01     		.2byte	(.L230-.L232)/2
 2986 0206 8D01     		.2byte	(.L230-.L232)/2
 2987 0208 8D01     		.2byte	(.L230-.L232)/2
 2988 020a 8D01     		.2byte	(.L230-.L232)/2
 2989 020c 8D01     		.2byte	(.L230-.L232)/2
 2990 020e 8D01     		.2byte	(.L230-.L232)/2
 2991 0210 8D01     		.2byte	(.L230-.L232)/2
 2992 0212 8D01     		.2byte	(.L230-.L232)/2
 2993 0214 8D01     		.2byte	(.L230-.L232)/2
 2994 0216 8D01     		.2byte	(.L230-.L232)/2
 2995 0218 8D01     		.2byte	(.L230-.L232)/2
 2996 021a 8D01     		.2byte	(.L230-.L232)/2
 2997 021c 8D01     		.2byte	(.L230-.L232)/2
 2998 021e 8D01     		.2byte	(.L230-.L232)/2
 2999 0220 8D01     		.2byte	(.L230-.L232)/2
 3000 0222 8D01     		.2byte	(.L230-.L232)/2
 3001 0224 8D01     		.2byte	(.L230-.L232)/2
 3002 0226 8D01     		.2byte	(.L230-.L232)/2
 3003 0228 8D01     		.2byte	(.L230-.L232)/2
 3004 022a 8D01     		.2byte	(.L230-.L232)/2
 3005 022c 8D01     		.2byte	(.L230-.L232)/2
 3006 022e 8D01     		.2byte	(.L230-.L232)/2
 3007 0230 8D01     		.2byte	(.L230-.L232)/2
 3008 0232 8D01     		.2byte	(.L230-.L232)/2
 3009 0234 8D01     		.2byte	(.L230-.L232)/2
 3010 0236 8D01     		.2byte	(.L230-.L232)/2
ARM GAS  /tmp/ccd2INFf.s 			page 89


 3011 0238 8D01     		.2byte	(.L230-.L232)/2
 3012 023a 8D01     		.2byte	(.L230-.L232)/2
 3013 023c 1001     		.2byte	(.L236-.L232)/2
 3014 023e FB00     		.2byte	(.L235-.L232)/2
 3015 0240 6501     		.2byte	(.L234-.L232)/2
 3016 0242 F300     		.2byte	(.L233-.L232)/2
 3017 0244 8D01     		.2byte	(.L230-.L232)/2
 3018 0246 8D01     		.2byte	(.L230-.L232)/2
 3019 0248 8D01     		.2byte	(.L230-.L232)/2
 3020 024a 4201     		.2byte	(.L231-.L232)/2
 3021              	.LVL234:
 3022              		.p2align 1
 3023              	.L274:
1398:Lib/ssc/src/ecatslv.c ****     {
 3024              		.loc 1 1398 5 is_stmt 0 view .LVU894
 3025 024c 4FF00008 		mov	r8, #0
 3026 0250 7AE7     		b	.L224
 3027              	.LVL235:
 3028              	.L240:
1443:Lib/ssc/src/ecatslv.c **** 
 3029              		.loc 1 1443 13 is_stmt 1 view .LVU895
1445:Lib/ssc/src/ecatslv.c **** 
 3030              		.loc 1 1445 13 view .LVU896
 3031 0252 FFF7FEFF 		bl	BackToInitTransition
 3032              	.LVL236:
1447:Lib/ssc/src/ecatslv.c ****         case INIT_2_PREOP :
 3033              		.loc 1 1447 13 view .LVU897
1693:Lib/ssc/src/ecatslv.c ****     {
 3034              		.loc 1 1693 5 view .LVU898
1443:Lib/ssc/src/ecatslv.c **** 
 3035              		.loc 1 1443 20 is_stmt 0 view .LVU899
 3036 0256 4FF01308 		mov	r8, #19
 3037 025a 0EE1     		b	.L243
 3038              	.LVL237:
 3039              	.L244:
1450:Lib/ssc/src/ecatslv.c **** 
 3040              		.loc 1 1450 12 is_stmt 1 view .LVU900
 3041 025c FFF7FEFF 		bl	UpdateEEPROMLoadedState
 3042              	.LVL238:
1452:Lib/ssc/src/ecatslv.c ****             {
 3043              		.loc 1 1452 13 view .LVU901
1452:Lib/ssc/src/ecatslv.c ****             {
 3044              		.loc 1 1452 30 is_stmt 0 view .LVU902
 3045 0260 584B     		ldr	r3, .L299+4
 3046 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1452:Lib/ssc/src/ecatslv.c ****             {
 3047              		.loc 1 1452 16 view .LVU903
 3048 0264 002B     		cmp	r3, #0
 3049 0266 00F0F880 		beq	.L276
 3050              	.LVL239:
1457:Lib/ssc/src/ecatslv.c ****             {
 3051              		.loc 1 1457 13 is_stmt 1 view .LVU904
1457:Lib/ssc/src/ecatslv.c ****             {
 3052              		.loc 1 1457 16 is_stmt 0 view .LVU905
 3053 026a B8F1000F 		cmp	r8, #0
 3054 026e 7FF43BAF 		bne	.L246
1463:Lib/ssc/src/ecatslv.c ****             if (result == 0)
ARM GAS  /tmp/ccd2INFf.s 			page 90


 3055              		.loc 1 1463 13 is_stmt 1 view .LVU906
1463:Lib/ssc/src/ecatslv.c ****             if (result == 0)
 3056              		.loc 1 1463 22 is_stmt 0 view .LVU907
 3057 0272 FFF7FEFF 		bl	MBX_StartMailboxHandler
 3058              	.LVL240:
1464:Lib/ssc/src/ecatslv.c ****             {
 3059              		.loc 1 1464 13 is_stmt 1 view .LVU908
1464:Lib/ssc/src/ecatslv.c ****             {
 3060              		.loc 1 1464 16 is_stmt 0 view .LVU909
 3061 0276 8046     		mov	r8, r0
 3062 0278 68B1     		cbz	r0, .L283
 3063              	.L247:
 3064              	.LVL241:
1478:Lib/ssc/src/ecatslv.c ****             {
 3065              		.loc 1 1478 13 is_stmt 1 view .LVU910
1478:Lib/ssc/src/ecatslv.c ****             {
 3066              		.loc 1 1478 15 is_stmt 0 view .LVU911
 3067 027a B8F1000F 		cmp	r8, #0
 3068 027e 3FF433AF 		beq	.L246
1478:Lib/ssc/src/ecatslv.c ****             {
 3069              		.loc 1 1478 28 discriminator 1 view .LVU912
 3070 0282 B8F1FF0F 		cmp	r8, #255
 3071 0286 3FF42FAF 		beq	.L246
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3072              		.loc 1 1481 17 is_stmt 1 view .LVU913
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3073              		.loc 1 1481 20 is_stmt 0 view .LVU914
 3074 028a 4F4B     		ldr	r3, .L299+8
 3075 028c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3076              		.loc 1 1481 19 view .LVU915
 3077 028e 73B1     		cbz	r3, .L284
 3078              	.L248:
1484:Lib/ssc/src/ecatslv.c ****             }
 3079              		.loc 1 1484 18 is_stmt 1 view .LVU916
 3080 0290 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3081              	.LVL242:
 3082 0294 28E7     		b	.L246
 3083              	.LVL243:
 3084              	.L283:
1466:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
 3085              		.loc 1 1466 17 view .LVU917
1466:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
 3086              		.loc 1 1466 33 is_stmt 0 view .LVU918
 3087 0296 4C4B     		ldr	r3, .L299+8
 3088 0298 0022     		movs	r2, #0
 3089 029a 1A70     		strb	r2, [r3]
1471:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
 3090              		.loc 1 1471 17 is_stmt 1 view .LVU919
1471:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
 3091              		.loc 1 1471 26 is_stmt 0 view .LVU920
 3092 029c FFF7FEFF 		bl	APPL_StartMailboxHandler
 3093              	.LVL244:
1472:Lib/ssc/src/ecatslv.c ****                 {
 3094              		.loc 1 1472 17 is_stmt 1 view .LVU921
1472:Lib/ssc/src/ecatslv.c ****                 {
 3095              		.loc 1 1472 20 is_stmt 0 view .LVU922
ARM GAS  /tmp/ccd2INFf.s 			page 91


 3096 02a0 8046     		mov	r8, r0
 3097 02a2 0028     		cmp	r0, #0
 3098 02a4 E9D1     		bne	.L247
1474:Lib/ssc/src/ecatslv.c ****                 }
 3099              		.loc 1 1474 21 is_stmt 1 view .LVU923
1474:Lib/ssc/src/ecatslv.c ****                 }
 3100              		.loc 1 1474 33 is_stmt 0 view .LVU924
 3101 02a6 494B     		ldr	r3, .L299+12
 3102 02a8 0122     		movs	r2, #1
 3103 02aa 1A70     		strb	r2, [r3]
 3104 02ac E5E7     		b	.L247
 3105              	.LVL245:
 3106              	.L284:
1482:Lib/ssc/src/ecatslv.c **** 
 3107              		.loc 1 1482 21 is_stmt 1 view .LVU925
 3108 02ae FFF7FEFF 		bl	APPL_StopMailboxHandler
 3109              	.LVL246:
 3110 02b2 EDE7     		b	.L248
 3111              	.LVL247:
 3112              	.L241:
1492:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
 3113              		.loc 1 1492 13 view .LVU926
1492:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
 3114              		.loc 1 1492 22 is_stmt 0 view .LVU927
 3115 02b4 FFF7FEFF 		bl	StartInputHandler
 3116              	.LVL248:
1493:Lib/ssc/src/ecatslv.c ****             {
 3117              		.loc 1 1493 13 is_stmt 1 view .LVU928
1493:Lib/ssc/src/ecatslv.c ****             {
 3118              		.loc 1 1493 16 is_stmt 0 view .LVU929
 3119 02b8 8046     		mov	r8, r0
 3120 02ba 68B1     		cbz	r0, .L285
 3121              	.LVL249:
 3122              	.L249:
1510:Lib/ssc/src/ecatslv.c ****             {
 3123              		.loc 1 1510 13 is_stmt 1 view .LVU930
1510:Lib/ssc/src/ecatslv.c ****             {
 3124              		.loc 1 1510 15 is_stmt 0 view .LVU931
 3125 02bc B8F1000F 		cmp	r8, #0
 3126 02c0 3FF412AF 		beq	.L246
1510:Lib/ssc/src/ecatslv.c ****             {
 3127              		.loc 1 1510 28 discriminator 1 view .LVU932
 3128 02c4 B8F1FF0F 		cmp	r8, #255
 3129 02c8 3FF40EAF 		beq	.L246
1512:Lib/ssc/src/ecatslv.c ****                 {
 3130              		.loc 1 1512 17 is_stmt 1 view .LVU933
1512:Lib/ssc/src/ecatslv.c ****                 {
 3131              		.loc 1 1512 20 is_stmt 0 view .LVU934
 3132 02cc 3E4B     		ldr	r3, .L299+8
 3133 02ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1512:Lib/ssc/src/ecatslv.c ****                 {
 3134              		.loc 1 1512 19 view .LVU935
 3135 02d0 9BB1     		cbz	r3, .L286
 3136              	.L250:
1519:Lib/ssc/src/ecatslv.c ****             }
 3137              		.loc 1 1519 17 is_stmt 1 view .LVU936
 3138 02d2 FFF7FEFF 		bl	StopInputHandler
ARM GAS  /tmp/ccd2INFf.s 			page 92


 3139              	.LVL250:
 3140 02d6 07E7     		b	.L246
 3141              	.LVL251:
 3142              	.L285:
1495:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
 3143              		.loc 1 1495 17 view .LVU937
1495:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
 3144              		.loc 1 1495 33 is_stmt 0 view .LVU938
 3145 02d8 3B4B     		ldr	r3, .L299+8
 3146 02da 0022     		movs	r2, #0
 3147 02dc 1A70     		strb	r2, [r3]
1496:Lib/ssc/src/ecatslv.c **** 
 3148              		.loc 1 1496 17 is_stmt 1 view .LVU939
1496:Lib/ssc/src/ecatslv.c **** 
 3149              		.loc 1 1496 26 is_stmt 0 view .LVU940
 3150 02de 3C48     		ldr	r0, .L299+16
 3151              	.LVL252:
1496:Lib/ssc/src/ecatslv.c **** 
 3152              		.loc 1 1496 26 view .LVU941
 3153 02e0 FFF7FEFF 		bl	APPL_StartInputHandler
 3154              	.LVL253:
1498:Lib/ssc/src/ecatslv.c ****                 {
 3155              		.loc 1 1498 17 is_stmt 1 view .LVU942
1498:Lib/ssc/src/ecatslv.c ****                 {
 3156              		.loc 1 1498 19 is_stmt 0 view .LVU943
 3157 02e4 8046     		mov	r8, r0
 3158 02e6 0028     		cmp	r0, #0
 3159 02e8 E8D1     		bne	.L249
1502:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3160              		.loc 1 1502 21 is_stmt 1 view .LVU944
 3161 02ea 394B     		ldr	r3, .L299+16
 3162 02ec 1888     		ldrh	r0, [r3]
 3163              	.LVL254:
1502:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3164              		.loc 1 1502 21 is_stmt 0 view .LVU945
 3165 02ee FFF7FEFF 		bl	SetALEventMask
 3166              	.LVL255:
1505:Lib/ssc/src/ecatslv.c ****                 }
 3167              		.loc 1 1505 21 is_stmt 1 view .LVU946
1505:Lib/ssc/src/ecatslv.c ****                 }
 3168              		.loc 1 1505 45 is_stmt 0 view .LVU947
 3169 02f2 384B     		ldr	r3, .L299+20
 3170 02f4 0122     		movs	r2, #1
 3171 02f6 1A70     		strb	r2, [r3]
 3172 02f8 E0E7     		b	.L249
 3173              	.LVL256:
 3174              	.L286:
1516:Lib/ssc/src/ecatslv.c ****                 }
 3175              		.loc 1 1516 21 is_stmt 1 view .LVU948
 3176 02fa FFF7FEFF 		bl	APPL_StopInputHandler
 3177              	.LVL257:
 3178 02fe E8E7     		b	.L250
 3179              	.LVL258:
 3180              	.L237:
1525:Lib/ssc/src/ecatslv.c ****             if(result == 0)
 3181              		.loc 1 1525 13 view .LVU949
1525:Lib/ssc/src/ecatslv.c ****             if(result == 0)
ARM GAS  /tmp/ccd2INFf.s 			page 93


 3182              		.loc 1 1525 22 is_stmt 0 view .LVU950
 3183 0300 FFF7FEFF 		bl	StartOutputHandler
 3184              	.LVL259:
1526:Lib/ssc/src/ecatslv.c ****             {
 3185              		.loc 1 1526 13 is_stmt 1 view .LVU951
1526:Lib/ssc/src/ecatslv.c ****             {
 3186              		.loc 1 1526 15 is_stmt 0 view .LVU952
 3187 0304 8046     		mov	r8, r0
 3188 0306 68B1     		cbz	r0, .L287
 3189              	.L251:
 3190              	.LVL260:
1539:Lib/ssc/src/ecatslv.c ****             {
 3191              		.loc 1 1539 13 is_stmt 1 view .LVU953
1539:Lib/ssc/src/ecatslv.c ****             {
 3192              		.loc 1 1539 16 is_stmt 0 view .LVU954
 3193 0308 B8F1000F 		cmp	r8, #0
 3194 030c 3FF4ECAE 		beq	.L246
1539:Lib/ssc/src/ecatslv.c ****             {
 3195              		.loc 1 1539 30 discriminator 1 view .LVU955
 3196 0310 B8F1FF0F 		cmp	r8, #255
 3197 0314 3FF4E8AE 		beq	.L246
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3198              		.loc 1 1541 17 is_stmt 1 view .LVU956
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3199              		.loc 1 1541 20 is_stmt 0 view .LVU957
 3200 0318 2B4B     		ldr	r3, .L299+8
 3201 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3202              		.loc 1 1541 19 view .LVU958
 3203 031c 73B1     		cbz	r3, .L288
 3204              	.L252:
1544:Lib/ssc/src/ecatslv.c ****             }
 3205              		.loc 1 1544 17 is_stmt 1 view .LVU959
 3206 031e FFF7FEFF 		bl	StopOutputHandler
 3207              	.LVL261:
 3208 0322 E1E6     		b	.L246
 3209              	.LVL262:
 3210              	.L287:
1528:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
 3211              		.loc 1 1528 17 view .LVU960
1528:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
 3212              		.loc 1 1528 33 is_stmt 0 view .LVU961
 3213 0324 284B     		ldr	r3, .L299+8
 3214 0326 0022     		movs	r2, #0
 3215 0328 1A70     		strb	r2, [r3]
1529:Lib/ssc/src/ecatslv.c **** 
 3216              		.loc 1 1529 17 is_stmt 1 view .LVU962
1529:Lib/ssc/src/ecatslv.c **** 
 3217              		.loc 1 1529 26 is_stmt 0 view .LVU963
 3218 032a FFF7FEFF 		bl	APPL_StartOutputHandler
 3219              	.LVL263:
1531:Lib/ssc/src/ecatslv.c ****                 {
 3220              		.loc 1 1531 17 is_stmt 1 view .LVU964
1531:Lib/ssc/src/ecatslv.c ****                 {
 3221              		.loc 1 1531 19 is_stmt 0 view .LVU965
 3222 032e 8046     		mov	r8, r0
 3223 0330 0028     		cmp	r0, #0
ARM GAS  /tmp/ccd2INFf.s 			page 94


 3224 0332 E9D1     		bne	.L251
1534:Lib/ssc/src/ecatslv.c ****                 }
 3225              		.loc 1 1534 21 is_stmt 1 view .LVU966
1534:Lib/ssc/src/ecatslv.c ****                 }
 3226              		.loc 1 1534 46 is_stmt 0 view .LVU967
 3227 0334 284B     		ldr	r3, .L299+24
 3228 0336 0122     		movs	r2, #1
 3229 0338 1A70     		strb	r2, [r3]
 3230 033a E5E7     		b	.L251
 3231              	.LVL264:
 3232              	.L288:
1542:Lib/ssc/src/ecatslv.c **** 
 3233              		.loc 1 1542 21 is_stmt 1 view .LVU968
 3234 033c FFF7FEFF 		bl	APPL_StopOutputHandler
 3235              	.LVL265:
 3236 0340 EDE7     		b	.L252
 3237              	.LVL266:
 3238              	.L233:
1551:Lib/ssc/src/ecatslv.c **** 
 3239              		.loc 1 1551 13 view .LVU969
 3240 0342 FFF7FEFF 		bl	APPL_StopOutputHandler
 3241              	.LVL267:
1553:Lib/ssc/src/ecatslv.c **** 
 3242              		.loc 1 1553 13 view .LVU970
 3243 0346 FFF7FEFF 		bl	StopOutputHandler
 3244              	.LVL268:
1555:Lib/ssc/src/ecatslv.c **** 
 3245              		.loc 1 1555 13 view .LVU971
1555:Lib/ssc/src/ecatslv.c **** 
 3246              		.loc 1 1555 29 is_stmt 0 view .LVU972
 3247 034a 1F4B     		ldr	r3, .L299+8
 3248 034c 0022     		movs	r2, #0
 3249 034e 1A70     		strb	r2, [r3]
1557:Lib/ssc/src/ecatslv.c **** 
 3250              		.loc 1 1557 13 is_stmt 1 view .LVU973
 3251 0350 CAE6     		b	.L246
 3252              	.L235:
1561:Lib/ssc/src/ecatslv.c **** 
 3253              		.loc 1 1561 13 view .LVU974
1561:Lib/ssc/src/ecatslv.c **** 
 3254              		.loc 1 1561 22 is_stmt 0 view .LVU975
 3255 0352 FFF7FEFF 		bl	APPL_StopOutputHandler
 3256              	.LVL269:
 3257 0356 8046     		mov	r8, r0
 3258              	.LVL270:
1563:Lib/ssc/src/ecatslv.c **** 
 3259              		.loc 1 1563 13 is_stmt 1 view .LVU976
 3260 0358 FFF7FEFF 		bl	StopOutputHandler
 3261              	.LVL271:
1565:Lib/ssc/src/ecatslv.c **** 
 3262              		.loc 1 1565 13 view .LVU977
1565:Lib/ssc/src/ecatslv.c **** 
 3263              		.loc 1 1565 29 is_stmt 0 view .LVU978
 3264 035c 1A4B     		ldr	r3, .L299+8
 3265 035e 0022     		movs	r2, #0
 3266 0360 1A70     		strb	r2, [r3]
1567:Lib/ssc/src/ecatslv.c ****                 break;
ARM GAS  /tmp/ccd2INFf.s 			page 95


 3267              		.loc 1 1567 13 is_stmt 1 view .LVU979
1567:Lib/ssc/src/ecatslv.c ****                 break;
 3268              		.loc 1 1567 16 is_stmt 0 view .LVU980
 3269 0362 B8F1000F 		cmp	r8, #0
 3270 0366 7FF4BFAE 		bne	.L246
 3271              	.LVL272:
1570:Lib/ssc/src/ecatslv.c **** 
 3272              		.loc 1 1570 24 view .LVU981
 3273 036a 4224     		movs	r4, #66
 3274              	.LVL273:
 3275              	.L238:
1574:Lib/ssc/src/ecatslv.c ****            
 3276              		.loc 1 1574 13 is_stmt 1 view .LVU982
 3277 036c FFF7FEFF 		bl	APPL_StopInputHandler
 3278              	.LVL274:
1576:Lib/ssc/src/ecatslv.c **** 
 3279              		.loc 1 1576 13 view .LVU983
 3280 0370 FFF7FEFF 		bl	StopInputHandler
 3281              	.LVL275:
1578:Lib/ssc/src/ecatslv.c **** 
 3282              		.loc 1 1578 13 view .LVU984
1578:Lib/ssc/src/ecatslv.c **** 
 3283              		.loc 1 1578 29 is_stmt 0 view .LVU985
 3284 0374 144B     		ldr	r3, .L299+8
 3285 0376 0022     		movs	r2, #0
 3286 0378 1A70     		strb	r2, [r3]
1580:Lib/ssc/src/ecatslv.c **** 
 3287              		.loc 1 1580 13 is_stmt 1 view .LVU986
 3288 037a B5E6     		b	.L246
 3289              	.LVL276:
 3290              	.L236:
1584:Lib/ssc/src/ecatslv.c **** 
 3291              		.loc 1 1584 13 view .LVU987
1584:Lib/ssc/src/ecatslv.c **** 
 3292              		.loc 1 1584 22 is_stmt 0 view .LVU988
 3293 037c FFF7FEFF 		bl	APPL_StopOutputHandler
 3294              	.LVL277:
 3295 0380 8046     		mov	r8, r0
 3296              	.LVL278:
1586:Lib/ssc/src/ecatslv.c **** 
 3297              		.loc 1 1586 13 is_stmt 1 view .LVU989
 3298 0382 FFF7FEFF 		bl	StopOutputHandler
 3299              	.LVL279:
1588:Lib/ssc/src/ecatslv.c **** 
 3300              		.loc 1 1588 13 view .LVU990
1588:Lib/ssc/src/ecatslv.c **** 
 3301              		.loc 1 1588 29 is_stmt 0 view .LVU991
 3302 0386 104B     		ldr	r3, .L299+8
 3303 0388 0022     		movs	r2, #0
 3304 038a 1A70     		strb	r2, [r3]
1590:Lib/ssc/src/ecatslv.c ****                 break;
 3305              		.loc 1 1590 13 is_stmt 1 view .LVU992
1590:Lib/ssc/src/ecatslv.c ****                 break;
 3306              		.loc 1 1590 16 is_stmt 0 view .LVU993
 3307 038c B8F1000F 		cmp	r8, #0
 3308 0390 7FF4AAAE 		bne	.L246
 3309              	.LVL280:
ARM GAS  /tmp/ccd2INFf.s 			page 96


1593:Lib/ssc/src/ecatslv.c **** 
 3310              		.loc 1 1593 24 view .LVU994
 3311 0394 4124     		movs	r4, #65
 3312              	.LVL281:
 3313              	.L239:
1597:Lib/ssc/src/ecatslv.c ****             
 3314              		.loc 1 1597 13 is_stmt 1 view .LVU995
1597:Lib/ssc/src/ecatslv.c ****             
 3315              		.loc 1 1597 22 is_stmt 0 view .LVU996
 3316 0396 FFF7FEFF 		bl	APPL_StopInputHandler
 3317              	.LVL282:
 3318 039a 8046     		mov	r8, r0
 3319              	.LVL283:
1599:Lib/ssc/src/ecatslv.c **** 
 3320              		.loc 1 1599 13 is_stmt 1 view .LVU997
 3321 039c FFF7FEFF 		bl	StopInputHandler
 3322              	.LVL284:
1601:Lib/ssc/src/ecatslv.c **** 
 3323              		.loc 1 1601 13 view .LVU998
1601:Lib/ssc/src/ecatslv.c **** 
 3324              		.loc 1 1601 29 is_stmt 0 view .LVU999
 3325 03a0 094B     		ldr	r3, .L299+8
 3326 03a2 0022     		movs	r2, #0
 3327 03a4 1A70     		strb	r2, [r3]
1603:Lib/ssc/src/ecatslv.c ****                 break;
 3328              		.loc 1 1603 13 is_stmt 1 view .LVU1000
1603:Lib/ssc/src/ecatslv.c ****                 break;
 3329              		.loc 1 1603 16 is_stmt 0 view .LVU1001
 3330 03a6 B8F1000F 		cmp	r8, #0
 3331 03aa 7FF49DAE 		bne	.L246
 3332              	.LVL285:
1605:Lib/ssc/src/ecatslv.c **** 
 3333              		.loc 1 1605 24 view .LVU1002
 3334 03ae 2124     		movs	r4, #33
 3335              	.LVL286:
 3336              	.L242:
1608:Lib/ssc/src/ecatslv.c ****             result = APPL_StopMailboxHandler();
 3337              		.loc 1 1608 13 is_stmt 1 view .LVU1003
 3338 03b0 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3339              	.LVL287:
1609:Lib/ssc/src/ecatslv.c **** 
 3340              		.loc 1 1609 13 view .LVU1004
1609:Lib/ssc/src/ecatslv.c **** 
 3341              		.loc 1 1609 22 is_stmt 0 view .LVU1005
 3342 03b4 FFF7FEFF 		bl	APPL_StopMailboxHandler
 3343              	.LVL288:
 3344 03b8 8046     		mov	r8, r0
 3345              	.LVL289:
1611:Lib/ssc/src/ecatslv.c ****             break;
 3346              		.loc 1 1611 13 is_stmt 1 view .LVU1006
 3347 03ba FFF7FEFF 		bl	BackToInitTransition
 3348              	.LVL290:
1612:Lib/ssc/src/ecatslv.c **** 
 3349              		.loc 1 1612 13 view .LVU1007
 3350 03be 93E6     		b	.L246
 3351              	.L300:
 3352              		.align	2
ARM GAS  /tmp/ccd2INFf.s 			page 97


 3353              	.L299:
 3354 03c0 00000000 		.word	.LANCHOR35
 3355 03c4 00000000 		.word	.LANCHOR0
 3356 03c8 00000000 		.word	.LANCHOR34
 3357 03cc 00000000 		.word	bMbxRunning
 3358 03d0 00000000 		.word	.LANCHOR12
 3359 03d4 00000000 		.word	.LANCHOR32
 3360 03d8 00000000 		.word	.LANCHOR31
 3361              	.LVL291:
 3362              	.L245:
1615:Lib/ssc/src/ecatslv.c ****         case PREOP_2_PREOP:
 3363              		.loc 1 1615 13 view .LVU1008
 3364 03dc FFF7FEFF 		bl	BackToInitTransition
 3365              	.LVL292:
 3366              	.L231:
1619:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
 3367              		.loc 1 1619 13 view .LVU1009
1619:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
 3368              		.loc 1 1619 15 is_stmt 0 view .LVU1010
 3369 03e0 8FB9     		cbnz	r7, .L289
 3370              	.L253:
1622:Lib/ssc/src/ecatslv.c ****             {
 3371              		.loc 1 1622 13 is_stmt 1 view .LVU1011
1622:Lib/ssc/src/ecatslv.c ****             {
 3372              		.loc 1 1622 16 is_stmt 0 view .LVU1012
 3373 03e2 504B     		ldr	r3, .L301
 3374 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1622:Lib/ssc/src/ecatslv.c ****             {
 3375              		.loc 1 1622 15 view .LVU1013
 3376 03e6 002B     		cmp	r3, #0
 3377 03e8 77D1     		bne	.L277
1625:Lib/ssc/src/ecatslv.c ****                 {
 3378              		.loc 1 1625 17 is_stmt 1 view .LVU1014
1625:Lib/ssc/src/ecatslv.c ****                 {
 3379              		.loc 1 1625 32 is_stmt 0 view .LVU1015
 3380 03ea 4F4B     		ldr	r3, .L301+4
 3381 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1625:Lib/ssc/src/ecatslv.c ****                 {
 3382              		.loc 1 1625 20 view .LVU1016
 3383 03ee 13F00C0F 		tst	r3, #12
 3384 03f2 75D0     		beq	.L278
1627:Lib/ssc/src/ecatslv.c ****                     {
 3385              		.loc 1 1627 21 is_stmt 1 view .LVU1017
1627:Lib/ssc/src/ecatslv.c ****                     {
 3386              		.loc 1 1627 38 is_stmt 0 view .LVU1018
 3387 03f4 4D4B     		ldr	r3, .L301+8
 3388 03f6 1B88     		ldrh	r3, [r3]
1627:Lib/ssc/src/ecatslv.c ****                     {
 3389              		.loc 1 1627 23 view .LVU1019
 3390 03f8 4BB9     		cbnz	r3, .L290
1634:Lib/ssc/src/ecatslv.c ****                     {
 3391              		.loc 1 1634 21 is_stmt 1 view .LVU1020
1634:Lib/ssc/src/ecatslv.c ****                     {
 3392              		.loc 1 1634 37 is_stmt 0 view .LVU1021
 3393 03fa 4D4B     		ldr	r3, .L301+12
 3394 03fc 1B88     		ldrh	r3, [r3]
1634:Lib/ssc/src/ecatslv.c ****                     {
ARM GAS  /tmp/ccd2INFf.s 			page 98


 3395              		.loc 1 1634 23 view .LVU1022
 3396 03fe 63B9     		cbnz	r3, .L291
1642:Lib/ssc/src/ecatslv.c ****             break;
 3397              		.loc 1 1642 20 view .LVU1023
 3398 0400 4FF0FE08 		mov	r8, #254
 3399 0404 39E0     		b	.L243
 3400              	.L289:
1620:Lib/ssc/src/ecatslv.c **** 
 3401              		.loc 1 1620 17 is_stmt 1 view .LVU1024
 3402 0406 2046     		mov	r0, r4
 3403 0408 FFF7FEFF 		bl	APPL_AckErrorInd
 3404              	.LVL293:
 3405 040c E9E7     		b	.L253
 3406              	.L290:
1630:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3407              		.loc 1 1630 25 view .LVU1025
 3408 040e 0220     		movs	r0, #2
 3409 0410 FFF7FEFF 		bl	EnableSyncManChannel
 3410              	.LVL294:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3411              		.loc 1 1642 20 is_stmt 0 view .LVU1026
 3412 0414 4FF0FE08 		mov	r8, #254
 3413 0418 2FE0     		b	.L243
 3414              	.L291:
1637:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3415              		.loc 1 1637 25 is_stmt 1 view .LVU1027
 3416 041a 0320     		movs	r0, #3
 3417 041c FFF7FEFF 		bl	EnableSyncManChannel
 3418              	.LVL295:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3419              		.loc 1 1642 20 is_stmt 0 view .LVU1028
 3420 0420 4FF0FE08 		mov	r8, #254
 3421 0424 29E0     		b	.L243
 3422              	.L234:
1654:Lib/ssc/src/ecatslv.c ****             break;
 3423              		.loc 1 1654 20 view .LVU1029
 3424 0426 4FF01108 		mov	r8, #17
 3425 042a 26E0     		b	.L243
 3426              	.LVL296:
 3427              	.L256:
1670:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
 3428              		.loc 1 1670 13 is_stmt 1 view .LVU1030
 3429 042c FFF7FEFF 		bl	APPL_StopOutputHandler
 3430              	.LVL297:
1671:Lib/ssc/src/ecatslv.c ****         case STATE_SAFEOP:
 3431              		.loc 1 1671 13 view .LVU1031
 3432 0430 FFF7FEFF 		bl	StopOutputHandler
 3433              	.LVL298:
 3434              	.L255:
1674:Lib/ssc/src/ecatslv.c **** 
 3435              		.loc 1 1674 13 view .LVU1032
 3436 0434 FFF7FEFF 		bl	APPL_StopInputHandler
 3437              	.LVL299:
1676:Lib/ssc/src/ecatslv.c **** 
 3438              		.loc 1 1676 13 view .LVU1033
 3439 0438 FFF7FEFF 		bl	StopInputHandler
 3440              	.LVL300:
ARM GAS  /tmp/ccd2INFf.s 			page 99


 3441              	.L257:
1680:Lib/ssc/src/ecatslv.c ****             {
 3442              		.loc 1 1680 13 view .LVU1034
1680:Lib/ssc/src/ecatslv.c ****             {
 3443              		.loc 1 1680 16 is_stmt 0 view .LVU1035
 3444 043c B8F1160F 		cmp	r8, #22
 3445 0440 03D0     		beq	.L292
1689:Lib/ssc/src/ecatslv.c ****         }
 3446              		.loc 1 1689 17 is_stmt 1 view .LVU1036
1689:Lib/ssc/src/ecatslv.c ****         }
 3447              		.loc 1 1689 27 is_stmt 0 view .LVU1037
 3448 0442 394B     		ldr	r3, .L301+4
 3449 0444 0222     		movs	r2, #2
 3450 0446 1A70     		strb	r2, [r3]
 3451 0448 4EE6     		b	.L246
 3452              	.L292:
1683:Lib/ssc/src/ecatslv.c ****                 APPL_StopMailboxHandler();
 3453              		.loc 1 1683 17 is_stmt 1 view .LVU1038
 3454 044a FFF7FEFF 		bl	MBX_StopMailboxHandler
 3455              	.LVL301:
1684:Lib/ssc/src/ecatslv.c **** 
 3456              		.loc 1 1684 17 view .LVU1039
 3457 044e FFF7FEFF 		bl	APPL_StopMailboxHandler
 3458              	.LVL302:
1686:Lib/ssc/src/ecatslv.c ****             }
 3459              		.loc 1 1686 17 view .LVU1040
1686:Lib/ssc/src/ecatslv.c ****             }
 3460              		.loc 1 1686 27 is_stmt 0 view .LVU1041
 3461 0452 354B     		ldr	r3, .L301+4
 3462 0454 0122     		movs	r2, #1
 3463 0456 1A70     		strb	r2, [r3]
 3464 0458 46E6     		b	.L246
 3465              	.LVL303:
 3466              	.L276:
1455:Lib/ssc/src/ecatslv.c ****             }
 3467              		.loc 1 1455 24 view .LVU1042
 3468 045a 4FF05108 		mov	r8, #81
 3469 045e 43E6     		b	.L246
 3470              	.LVL304:
 3471              	.L260:
1702:Lib/ssc/src/ecatslv.c ****         {
 3472              		.loc 1 1702 9 view .LVU1043
 3473 0460 482C     		cmp	r4, #72
 3474 0462 03D0     		beq	.L259
 3475              	.L261:
1713:Lib/ssc/src/ecatslv.c ****                 break;
 3476              		.loc 1 1713 17 is_stmt 1 view .LVU1044
1713:Lib/ssc/src/ecatslv.c ****                 break;
 3477              		.loc 1 1713 35 is_stmt 0 view .LVU1045
 3478 0464 334B     		ldr	r3, .L301+16
 3479 0466 C822     		movs	r2, #200
 3480 0468 1A80     		strh	r2, [r3]	@ movhi
1714:Lib/ssc/src/ecatslv.c ****         }
 3481              		.loc 1 1714 17 is_stmt 1 view .LVU1046
 3482 046a 55E6     		b	.L263
 3483              	.L259:
1710:Lib/ssc/src/ecatslv.c ****                 break;
ARM GAS  /tmp/ccd2INFf.s 			page 100


 3484              		.loc 1 1710 17 view .LVU1047
1710:Lib/ssc/src/ecatslv.c ****                 break;
 3485              		.loc 1 1710 35 is_stmt 0 view .LVU1048
 3486 046c 314B     		ldr	r3, .L301+16
 3487 046e 42F22832 		movw	r2, #9000
 3488 0472 1A80     		strh	r2, [r3]	@ movhi
1711:Lib/ssc/src/ecatslv.c ****            default:
 3489              		.loc 1 1711 17 is_stmt 1 view .LVU1049
 3490 0474 50E6     		b	.L263
 3491              	.LVL305:
 3492              	.L230:
1436:Lib/ssc/src/ecatslv.c ****         {
 3493              		.loc 1 1436 9 is_stmt 0 view .LVU1050
 3494 0476 4FF01208 		mov	r8, #18
 3495              	.LVL306:
 3496              	.L243:
1717:Lib/ssc/src/ecatslv.c **** 
1718:Lib/ssc/src/ecatslv.c ****     }
1719:Lib/ssc/src/ecatslv.c ****     else if ( alControl != (nAlStatus & STATE_MASK) )
 3497              		.loc 1 1719 10 is_stmt 1 view .LVU1051
 3498              		.loc 1 1719 39 is_stmt 0 view .LVU1052
 3499 047a 2B4B     		ldr	r3, .L301+4
 3500 047c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3501              		.loc 1 1719 13 view .LVU1053
 3502 047e 00F00F03 		and	r3, r0, #15
 3503 0482 9D42     		cmp	r5, r3
 3504 0484 47D0     		beq	.L264
1720:Lib/ssc/src/ecatslv.c ****     {
1721:Lib/ssc/src/ecatslv.c ****         /* The slave state has changed */
1722:Lib/ssc/src/ecatslv.c **** 
1723:Lib/ssc/src/ecatslv.c ****         if ( (result != 0 || alStatusCode != 0) && ((alControl | nAlStatus) & STATE_OP) )
 3505              		.loc 1 1723 9 is_stmt 1 view .LVU1054
 3506              		.loc 1 1723 12 is_stmt 0 view .LVU1055
 3507 0486 B8F1000F 		cmp	r8, #0
 3508 048a 00D1     		bne	.L265
 3509              		.loc 1 1723 27 discriminator 2 view .LVU1056
 3510 048c 66B1     		cbz	r6, .L266
 3511              	.L265:
 3512              		.loc 1 1723 77 discriminator 3 view .LVU1057
 3513 048e 2843     		orrs	r0, r0, r5
 3514              		.loc 1 1723 49 discriminator 3 view .LVU1058
 3515 0490 10F0080F 		tst	r0, #8
 3516 0494 08D0     		beq	.L266
1724:Lib/ssc/src/ecatslv.c ****         {
1725:Lib/ssc/src/ecatslv.c ****             /* the local application requested to leave the state OP so we have to disable the SM2
1726:Lib/ssc/src/ecatslv.c ****                and make the state change from OP to SAFEOP by calling StopOutputHandler */
1727:Lib/ssc/src/ecatslv.c **** 
1728:Lib/ssc/src/ecatslv.c ****             //only execute StopOutputHandler() if Output update is still running
1729:Lib/ssc/src/ecatslv.c ****             if(bEcatOutputUpdateRunning)
 3517              		.loc 1 1729 13 is_stmt 1 view .LVU1059
 3518              		.loc 1 1729 16 is_stmt 0 view .LVU1060
 3519 0496 284B     		ldr	r3, .L301+20
 3520 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3521              		.loc 1 1729 15 view .LVU1061
 3522 049a 23BB     		cbnz	r3, .L293
 3523              	.L267:
1730:Lib/ssc/src/ecatslv.c ****             {
ARM GAS  /tmp/ccd2INFf.s 			page 101


1731:Lib/ssc/src/ecatslv.c ****                 APPL_StopOutputHandler();
1732:Lib/ssc/src/ecatslv.c **** 
1733:Lib/ssc/src/ecatslv.c ****                 StopOutputHandler();
1734:Lib/ssc/src/ecatslv.c ****             }
1735:Lib/ssc/src/ecatslv.c **** 
1736:Lib/ssc/src/ecatslv.c ****             if(nPdOutputSize > 0)
 3524              		.loc 1 1736 13 is_stmt 1 view .LVU1062
 3525              		.loc 1 1736 30 is_stmt 0 view .LVU1063
 3526 049c 234B     		ldr	r3, .L301+8
 3527 049e 1B88     		ldrh	r3, [r3]
 3528              		.loc 1 1736 15 view .LVU1064
 3529 04a0 33BB     		cbnz	r3, .L294
1737:Lib/ssc/src/ecatslv.c ****             {
1738:Lib/ssc/src/ecatslv.c ****                 /* disable the Sync Manager Channel 2 (outputs) */
1739:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1740:Lib/ssc/src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_OUT);
1741:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1742:Lib/ssc/src/ecatslv.c ****             }
1743:Lib/ssc/src/ecatslv.c ****             else
1744:Lib/ssc/src/ecatslv.c ****                 if(nPdInputSize > 0)
 3530              		.loc 1 1744 17 is_stmt 1 view .LVU1065
 3531              		.loc 1 1744 33 is_stmt 0 view .LVU1066
 3532 04a2 234B     		ldr	r3, .L301+12
 3533 04a4 1B88     		ldrh	r3, [r3]
 3534              		.loc 1 1744 19 view .LVU1067
 3535 04a6 3BBB     		cbnz	r3, .L295
 3536              	.L266:
1745:Lib/ssc/src/ecatslv.c ****             {
1746:Lib/ssc/src/ecatslv.c ****                 /*disable Sync Manager 3 (inputs) if no outputs available*/
1747:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1748:Lib/ssc/src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_IN);
1749:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1750:Lib/ssc/src/ecatslv.c ****             }
1751:Lib/ssc/src/ecatslv.c **** 
1752:Lib/ssc/src/ecatslv.c ****         }
1753:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 3537              		.loc 1 1753 9 is_stmt 1 view .LVU1068
 3538              		.loc 1 1753 12 is_stmt 0 view .LVU1069
 3539 04a8 B8F1000F 		cmp	r8, #0
 3540 04ac 2CD0     		beq	.L269
1754:Lib/ssc/src/ecatslv.c ****         {
1755:Lib/ssc/src/ecatslv.c ****             if ( nAlStatus == STATE_OP )
 3541              		.loc 1 1755 13 is_stmt 1 view .LVU1070
 3542              		.loc 1 1755 28 is_stmt 0 view .LVU1071
 3543 04ae 1E4B     		ldr	r3, .L301+4
 3544 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3545              		.loc 1 1755 16 view .LVU1072
 3546 04b2 082B     		cmp	r3, #8
 3547 04b4 24D0     		beq	.L296
 3548              	.L270:
1756:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_SAFEOP;
1757:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
1758:Lib/ssc/src/ecatslv.c ****                reset in case of a coming successful state transition */
1759:Lib/ssc/src/ecatslv.c ****             nAlStatus |= STATE_CHANGE;
 3549              		.loc 1 1759 13 is_stmt 1 view .LVU1073
 3550              		.loc 1 1759 23 is_stmt 0 view .LVU1074
 3551 04b6 1C4A     		ldr	r2, .L301+4
ARM GAS  /tmp/ccd2INFf.s 			page 102


 3552 04b8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3553 04ba 43F01003 		orr	r3, r3, #16
 3554 04be 1370     		strb	r3, [r2]
 3555              	.L271:
 3556              	.LVL307:
1760:Lib/ssc/src/ecatslv.c ****         }
1761:Lib/ssc/src/ecatslv.c ****         else
1762:Lib/ssc/src/ecatslv.c ****         {
1763:Lib/ssc/src/ecatslv.c ****             /* state transition was successful */
1764:Lib/ssc/src/ecatslv.c ****             if ( alStatusCode != 0 )
1765:Lib/ssc/src/ecatslv.c ****             {
1766:Lib/ssc/src/ecatslv.c ****                 /* state change request from the user */
1767:Lib/ssc/src/ecatslv.c ****                 result = alStatusCode;
1768:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
1769:Lib/ssc/src/ecatslv.c ****             }
1770:Lib/ssc/src/ecatslv.c ****             /* acknowledge the new state */
1771:Lib/ssc/src/ecatslv.c ****             nAlStatus = alControl;
1772:Lib/ssc/src/ecatslv.c ****         }
1773:Lib/ssc/src/ecatslv.c **** 
1774:Lib/ssc/src/ecatslv.c ****         bEcatWaitForAlControlRes = FALSE;
 3557              		.loc 1 1774 9 is_stmt 1 view .LVU1075
 3558              		.loc 1 1774 34 is_stmt 0 view .LVU1076
 3559 04c0 1E4B     		ldr	r3, .L301+24
 3560 04c2 0022     		movs	r2, #0
 3561 04c4 1A70     		strb	r2, [r3]
1775:Lib/ssc/src/ecatslv.c **** 
1776:Lib/ssc/src/ecatslv.c ****         /* write the AL Status register */
1777:Lib/ssc/src/ecatslv.c ****         SetALStatus(nAlStatus, result);
 3562              		.loc 1 1777 9 is_stmt 1 view .LVU1077
 3563 04c6 4146     		mov	r1, r8
 3564 04c8 174B     		ldr	r3, .L301+4
 3565 04ca 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3566 04cc FFF7FEFF 		bl	SetALStatus
 3567              	.LVL308:
 3568              	.L216:
1778:Lib/ssc/src/ecatslv.c ****     }
1779:Lib/ssc/src/ecatslv.c ****     else
1780:Lib/ssc/src/ecatslv.c ****     {
1781:Lib/ssc/src/ecatslv.c ****         /* Error acknowledgement without a state transition */
1782:Lib/ssc/src/ecatslv.c **** 
1783:Lib/ssc/src/ecatslv.c ****          bEcatWaitForAlControlRes = FALSE;
1784:Lib/ssc/src/ecatslv.c **** 
1785:Lib/ssc/src/ecatslv.c ****         /* AL-Status has to be updated and AL-Status-Code has to be reset
1786:Lib/ssc/src/ecatslv.c ****            if the the error bit was acknowledged */
1787:Lib/ssc/src/ecatslv.c ****         SetALStatus(nAlStatus, 0);
1788:Lib/ssc/src/ecatslv.c ****     }
1789:Lib/ssc/src/ecatslv.c **** 
1790:Lib/ssc/src/ecatslv.c **** }
 3569              		.loc 1 1790 1 is_stmt 0 view .LVU1078
 3570 04d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3571              	.LVL309:
 3572              	.L275:
1439:Lib/ssc/src/ecatslv.c ****             break;
 3573              		.loc 1 1439 20 view .LVU1079
 3574 04d4 4FF01308 		mov	r8, #19
 3575 04d8 CFE7     		b	.L243
 3576              	.L277:
ARM GAS  /tmp/ccd2INFf.s 			page 103


1642:Lib/ssc/src/ecatslv.c ****             break;
 3577              		.loc 1 1642 20 view .LVU1080
 3578 04da 4FF0FE08 		mov	r8, #254
 3579 04de CCE7     		b	.L243
 3580              	.L278:
 3581 04e0 4FF0FE08 		mov	r8, #254
 3582 04e4 C9E7     		b	.L243
 3583              	.LVL310:
 3584              	.L293:
1731:Lib/ssc/src/ecatslv.c **** 
 3585              		.loc 1 1731 17 is_stmt 1 view .LVU1081
 3586 04e6 FFF7FEFF 		bl	APPL_StopOutputHandler
 3587              	.LVL311:
1733:Lib/ssc/src/ecatslv.c ****             }
 3588              		.loc 1 1733 17 view .LVU1082
 3589 04ea FFF7FEFF 		bl	StopOutputHandler
 3590              	.LVL312:
 3591 04ee D5E7     		b	.L267
 3592              	.L294:
1740:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3593              		.loc 1 1740 17 view .LVU1083
 3594 04f0 0220     		movs	r0, #2
 3595 04f2 FFF7FEFF 		bl	DisableSyncManChannel
 3596              	.LVL313:
 3597 04f6 D7E7     		b	.L266
 3598              	.L295:
1748:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3599              		.loc 1 1748 17 view .LVU1084
 3600 04f8 0320     		movs	r0, #3
 3601 04fa FFF7FEFF 		bl	DisableSyncManChannel
 3602              	.LVL314:
 3603 04fe D3E7     		b	.L266
 3604              	.L296:
1756:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
 3605              		.loc 1 1756 17 view .LVU1085
1756:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
 3606              		.loc 1 1756 27 is_stmt 0 view .LVU1086
 3607 0500 094B     		ldr	r3, .L301+4
 3608 0502 0422     		movs	r2, #4
 3609 0504 1A70     		strb	r2, [r3]
 3610 0506 D6E7     		b	.L270
 3611              	.L269:
1764:Lib/ssc/src/ecatslv.c ****             {
 3612              		.loc 1 1764 13 is_stmt 1 view .LVU1087
1764:Lib/ssc/src/ecatslv.c ****             {
 3613              		.loc 1 1764 16 is_stmt 0 view .LVU1088
 3614 0508 16B1     		cbz	r6, .L272
1767:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
 3615              		.loc 1 1767 17 is_stmt 1 view .LVU1089
 3616              	.LVL315:
1768:Lib/ssc/src/ecatslv.c ****             }
 3617              		.loc 1 1768 17 view .LVU1090
1768:Lib/ssc/src/ecatslv.c ****             }
 3618              		.loc 1 1768 27 is_stmt 0 view .LVU1091
 3619 050a 45F01005 		orr	r5, r5, #16
 3620              	.LVL316:
1767:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
ARM GAS  /tmp/ccd2INFf.s 			page 104


 3621              		.loc 1 1767 24 view .LVU1092
 3622 050e B046     		mov	r8, r6
 3623              	.LVL317:
 3624              	.L272:
1771:Lib/ssc/src/ecatslv.c ****         }
 3625              		.loc 1 1771 13 is_stmt 1 view .LVU1093
1771:Lib/ssc/src/ecatslv.c ****         }
 3626              		.loc 1 1771 23 is_stmt 0 view .LVU1094
 3627 0510 054B     		ldr	r3, .L301+4
 3628 0512 1D70     		strb	r5, [r3]
 3629 0514 D4E7     		b	.L271
 3630              	.LVL318:
 3631              	.L264:
1783:Lib/ssc/src/ecatslv.c **** 
 3632              		.loc 1 1783 10 is_stmt 1 view .LVU1095
1783:Lib/ssc/src/ecatslv.c **** 
 3633              		.loc 1 1783 35 is_stmt 0 view .LVU1096
 3634 0516 0021     		movs	r1, #0
 3635 0518 084B     		ldr	r3, .L301+24
 3636 051a 1970     		strb	r1, [r3]
1787:Lib/ssc/src/ecatslv.c ****     }
 3637              		.loc 1 1787 9 is_stmt 1 view .LVU1097
 3638 051c FFF7FEFF 		bl	SetALStatus
 3639              	.LVL319:
 3640 0520 D6E7     		b	.L216
 3641              	.L302:
 3642 0522 00BF     		.align	2
 3643              	.L301:
 3644 0524 00000000 		.word	.LANCHOR28
 3645 0528 00000000 		.word	.LANCHOR5
 3646 052c 00000000 		.word	.LANCHOR7
 3647 0530 00000000 		.word	.LANCHOR4
 3648 0534 00000000 		.word	.LANCHOR33
 3649 0538 00000000 		.word	.LANCHOR31
 3650 053c 00000000 		.word	.LANCHOR36
 3651              		.cfi_endproc
 3652              	.LFE147:
 3654              		.section	.text.AL_ControlRes,"ax",%progbits
 3655              		.align	1
 3656              		.global	AL_ControlRes
 3657              		.syntax unified
 3658              		.thumb
 3659              		.thumb_func
 3661              	AL_ControlRes:
 3662              	.LFB148:
1791:Lib/ssc/src/ecatslv.c **** 
1792:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1793:Lib/ssc/src/ecatslv.c **** /**
1794:Lib/ssc/src/ecatslv.c **** 
1795:Lib/ssc/src/ecatslv.c ****  \brief    This function is called cyclic if a state transition is pending (bEcatWaitForAlControlRe
1796:Lib/ssc/src/ecatslv.c ****  \brief    If the ESM timeout is expired the state transition will be rejected. Otherwise the appli
1797:Lib/ssc/src/ecatslv.c ****  \brief    If the pending state transition is triggered by the application the transition need to b
1798:Lib/ssc/src/ecatslv.c ****   *////////////////////////////////////////////////////////////////////////////////////////
1799:Lib/ssc/src/ecatslv.c **** void AL_ControlRes(void)
1800:Lib/ssc/src/ecatslv.c **** {
 3663              		.loc 1 1800 1 view -0
 3664              		.cfi_startproc
ARM GAS  /tmp/ccd2INFf.s 			page 105


 3665              		@ args = 0, pretend = 0, frame = 0
 3666              		@ frame_needed = 0, uses_anonymous_args = 0
 3667 0000 38B5     		push	{r3, r4, r5, lr}
 3668              		.cfi_def_cfa_offset 16
 3669              		.cfi_offset 3, -16
 3670              		.cfi_offset 4, -12
 3671              		.cfi_offset 5, -8
 3672              		.cfi_offset 14, -4
1801:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 3673              		.loc 1 1801 5 view .LVU1099
 3674              		.loc 1 1801 8 is_stmt 0 view .LVU1100
 3675 0002 784B     		ldr	r3, .L343
 3676 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3677              		.loc 1 1801 7 view .LVU1101
 3678 0006 002B     		cmp	r3, #0
 3679 0008 3BD0     		beq	.L303
 3680              	.LBB9:
1802:Lib/ssc/src/ecatslv.c ****     {
1803:Lib/ssc/src/ecatslv.c ****         UINT16 result = 0;
 3681              		.loc 1 1803 9 is_stmt 1 view .LVU1102
 3682              	.LVL320:
1804:Lib/ssc/src/ecatslv.c ****         UINT8 Status = 0;
 3683              		.loc 1 1804 9 view .LVU1103
1805:Lib/ssc/src/ecatslv.c ****         UINT16 StatusCode = 0;
 3684              		.loc 1 1805 9 view .LVU1104
1806:Lib/ssc/src/ecatslv.c **** 
1807:Lib/ssc/src/ecatslv.c ****         if(EsmTimeoutCounter == 0)
 3685              		.loc 1 1807 9 view .LVU1105
 3686              		.loc 1 1807 30 is_stmt 0 view .LVU1106
 3687 000a 774B     		ldr	r3, .L343+4
 3688 000c B3F90030 		ldrsh	r3, [r3]
 3689              		.loc 1 1807 11 view .LVU1107
 3690 0010 002B     		cmp	r3, #0
 3691 0012 62D1     		bne	.L305
1808:Lib/ssc/src/ecatslv.c ****         {
1809:Lib/ssc/src/ecatslv.c ****             Status =  (UINT8)(nEcatStateTrans >> 4);
 3692              		.loc 1 1809 13 is_stmt 1 view .LVU1108
 3693              		.loc 1 1809 23 is_stmt 0 view .LVU1109
 3694 0014 754B     		ldr	r3, .L343+8
 3695 0016 1B88     		ldrh	r3, [r3]
 3696              		.loc 1 1809 20 view .LVU1110
 3697 0018 C3F30714 		ubfx	r4, r3, #4, #8
 3698              	.LVL321:
1810:Lib/ssc/src/ecatslv.c **** 
1811:Lib/ssc/src/ecatslv.c ****             /* ESM timeout expired*/
1812:Lib/ssc/src/ecatslv.c ****             switch(nEcatStateTrans)
 3699              		.loc 1 1812 13 is_stmt 1 view .LVU1111
 3700 001c 242B     		cmp	r3, #36
 3701 001e 34D0     		beq	.L306
 3702 0020 11D8     		bhi	.L307
 3703 0022 123B     		subs	r3, r3, #18
 3704 0024 9BB2     		uxth	r3, r3
 3705 0026 012B     		cmp	r3, #1
 3706 0028 00F2D680 		bhi	.L338
1813:Lib/ssc/src/ecatslv.c ****             {
1814:Lib/ssc/src/ecatslv.c ****                 case INIT_2_PREOP:
1815:Lib/ssc/src/ecatslv.c ****                 case INIT_2_BOOT:
ARM GAS  /tmp/ccd2INFf.s 			page 106


1816:Lib/ssc/src/ecatslv.c **** 
1817:Lib/ssc/src/ecatslv.c ****                     if(!bApplEsmPending)
 3707              		.loc 1 1817 21 view .LVU1112
 3708              		.loc 1 1817 24 is_stmt 0 view .LVU1113
 3709 002c 704B     		ldr	r3, .L343+12
 3710 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3711              		.loc 1 1817 23 view .LVU1114
 3712 0030 43B3     		cbz	r3, .L339
 3713              	.L311:
1818:Lib/ssc/src/ecatslv.c ****                         APPL_StopMailboxHandler();
1819:Lib/ssc/src/ecatslv.c **** 
1820:Lib/ssc/src/ecatslv.c ****                     MBX_StopMailboxHandler();
 3714              		.loc 1 1820 21 is_stmt 1 view .LVU1115
 3715 0032 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3716              	.LVL322:
1821:Lib/ssc/src/ecatslv.c ****                     if(bLocalErrorFlag)
 3717              		.loc 1 1821 21 view .LVU1116
 3718              		.loc 1 1821 24 is_stmt 0 view .LVU1117
 3719 0036 6F4B     		ldr	r3, .L343+16
 3720 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3721              		.loc 1 1821 23 view .LVU1118
 3722 003a 002B     		cmp	r3, #0
 3723 003c 00F0CE80 		beq	.L329
1822:Lib/ssc/src/ecatslv.c ****                     {
1823:Lib/ssc/src/ecatslv.c ****                         /*Set application specified error*/
1824:Lib/ssc/src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
 3724              		.loc 1 1824 25 is_stmt 1 view .LVU1119
 3725              		.loc 1 1824 36 is_stmt 0 view .LVU1120
 3726 0040 6D4B     		ldr	r3, .L343+20
 3727 0042 1D88     		ldrh	r5, [r3]
 3728              	.LVL323:
 3729              		.loc 1 1824 36 view .LVU1121
 3730 0044 12E0     		b	.L308
 3731              	.LVL324:
 3732              	.L307:
1812:Lib/ssc/src/ecatslv.c ****             {
 3733              		.loc 1 1812 13 view .LVU1122
 3734 0046 482B     		cmp	r3, #72
 3735 0048 0FD1     		bne	.L340
1825:Lib/ssc/src/ecatslv.c ****                     }
1826:Lib/ssc/src/ecatslv.c ****                     else
1827:Lib/ssc/src/ecatslv.c ****                     {
1828:Lib/ssc/src/ecatslv.c ****                         /*Set unspecified error*/
1829:Lib/ssc/src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1830:Lib/ssc/src/ecatslv.c ****                     }
1831:Lib/ssc/src/ecatslv.c ****                 break;
1832:Lib/ssc/src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1833:Lib/ssc/src/ecatslv.c ****                     if(!bApplEsmPending)
1834:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
1835:Lib/ssc/src/ecatslv.c **** 
1836:Lib/ssc/src/ecatslv.c ****                     StopInputHandler();
1837:Lib/ssc/src/ecatslv.c ****                     
1838:Lib/ssc/src/ecatslv.c ****                     if(bLocalErrorFlag)
1839:Lib/ssc/src/ecatslv.c ****                     {
1840:Lib/ssc/src/ecatslv.c ****                         /*Set application specified error*/
1841:Lib/ssc/src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
1842:Lib/ssc/src/ecatslv.c ****                     }
ARM GAS  /tmp/ccd2INFf.s 			page 107


1843:Lib/ssc/src/ecatslv.c ****                     else
1844:Lib/ssc/src/ecatslv.c ****                     {
1845:Lib/ssc/src/ecatslv.c ****                         /*Set unspecified error*/
1846:Lib/ssc/src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1847:Lib/ssc/src/ecatslv.c ****                     }
1848:Lib/ssc/src/ecatslv.c ****                 break;
1849:Lib/ssc/src/ecatslv.c ****                 case SAFEOP_2_OP:
1850:Lib/ssc/src/ecatslv.c ****                     if(bDcSyncActive)
 3736              		.loc 1 1850 21 is_stmt 1 view .LVU1123
 3737              		.loc 1 1850 24 is_stmt 0 view .LVU1124
 3738 004a 6C4B     		ldr	r3, .L343+24
 3739 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3740              		.loc 1 1850 23 view .LVU1125
 3741 004e 63B3     		cbz	r3, .L313
1851:Lib/ssc/src/ecatslv.c ****                     {
1852:Lib/ssc/src/ecatslv.c ****                         /*SafeOP to OP timeout expired check which AL status code need to be writte
1853:Lib/ssc/src/ecatslv.c ****                         if(!bDcRunning) //
 3742              		.loc 1 1853 25 is_stmt 1 view .LVU1126
 3743              		.loc 1 1853 28 is_stmt 0 view .LVU1127
 3744 0050 6B4B     		ldr	r3, .L343+28
 3745 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3746              		.loc 1 1853 27 view .LVU1128
 3747 0054 002B     		cmp	r3, #0
 3748 0056 30D0     		beq	.L331
1854:Lib/ssc/src/ecatslv.c ****                         {
1855:Lib/ssc/src/ecatslv.c ****                             /*no Sync0 signal received*/
1856:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_NOSYNCERROR;
1857:Lib/ssc/src/ecatslv.c ****                         }
1858:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1859:Lib/ssc/src/ecatslv.c ****                         else if(!bEcatFirstOutputsReceived && (nPdOutputSize > 0))
 3749              		.loc 1 1859 30 is_stmt 1 view .LVU1129
 3750              		.loc 1 1859 33 is_stmt 0 view .LVU1130
 3751 0058 6A4B     		ldr	r3, .L343+32
 3752 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3753              		.loc 1 1859 32 view .LVU1131
 3754 005c 002B     		cmp	r3, #0
 3755 005e 33D1     		bne	.L332
 3756              		.loc 1 1859 78 discriminator 1 view .LVU1132
 3757 0060 694B     		ldr	r3, .L343+36
 3758 0062 1B88     		ldrh	r3, [r3]
 3759              		.loc 1 1859 60 discriminator 1 view .LVU1133
 3760 0064 93BB     		cbnz	r3, .L333
1860:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1861:Lib/ssc/src/ecatslv.c ****                         {
1862:Lib/ssc/src/ecatslv.c ****                             /*no process data received*/
1863:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
1864:Lib/ssc/src/ecatslv.c ****                         }
1865:Lib/ssc/src/ecatslv.c ****                         else
1866:Lib/ssc/src/ecatslv.c ****                         {
1867:Lib/ssc/src/ecatslv.c ****                             /*SM/Sync Sequence is not valid*/
1868:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SYNCERROR;
 3761              		.loc 1 1868 40 view .LVU1134
 3762 0066 1A25     		movs	r5, #26
 3763 0068 28E0     		b	.L314
 3764              	.L340:
1812:Lib/ssc/src/ecatslv.c ****             {
 3765              		.loc 1 1812 13 view .LVU1135
ARM GAS  /tmp/ccd2INFf.s 			page 108


 3766 006a 0025     		movs	r5, #0
 3767              	.LVL325:
 3768              	.L308:
1869:Lib/ssc/src/ecatslv.c ****                         }
1870:Lib/ssc/src/ecatslv.c ****                     }
1871:Lib/ssc/src/ecatslv.c ****                     else
1872:Lib/ssc/src/ecatslv.c ****                     {
1873:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1874:Lib/ssc/src/ecatslv.c ****                         if (nPdOutputSize > 0)
1875:Lib/ssc/src/ecatslv.c ****                         {
1876:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
1877:Lib/ssc/src/ecatslv.c ****                         }
1878:Lib/ssc/src/ecatslv.c ****                         else
1879:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1880:Lib/ssc/src/ecatslv.c ****                         {
1881:Lib/ssc/src/ecatslv.c ****                             /*Set valid state transition even if timeout expired*/
1882:Lib/ssc/src/ecatslv.c ****                             Status = STATE_OP;
1883:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
1884:Lib/ssc/src/ecatslv.c ****                             /* Slave is OPERATIONAL */
1885:Lib/ssc/src/ecatslv.c ****                             bEcatOutputUpdateRunning = TRUE;
1886:Lib/ssc/src/ecatslv.c ****                         }
1887:Lib/ssc/src/ecatslv.c ****                     }
1888:Lib/ssc/src/ecatslv.c **** 
1889:Lib/ssc/src/ecatslv.c ****                     /*Stop handler on failed transition*/
1890:Lib/ssc/src/ecatslv.c ****                     if(StatusCode != 0)
1891:Lib/ssc/src/ecatslv.c ****                     {
1892:Lib/ssc/src/ecatslv.c ****                         if(!bApplEsmPending)
1893:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
1894:Lib/ssc/src/ecatslv.c **** 
1895:Lib/ssc/src/ecatslv.c ****                         StopOutputHandler();
1896:Lib/ssc/src/ecatslv.c ****                     }
1897:Lib/ssc/src/ecatslv.c ****                 break;
1898:Lib/ssc/src/ecatslv.c ****             }
1899:Lib/ssc/src/ecatslv.c ****         } //ESM timeout
1900:Lib/ssc/src/ecatslv.c ****         else
1901:Lib/ssc/src/ecatslv.c ****         {
1902:Lib/ssc/src/ecatslv.c ****             /*Call application specific transition function and complete transition it the function
1903:Lib/ssc/src/ecatslv.c ****             switch(nEcatStateTrans)
1904:Lib/ssc/src/ecatslv.c ****             {
1905:Lib/ssc/src/ecatslv.c ****                 case INIT_2_PREOP:
1906:Lib/ssc/src/ecatslv.c ****                 case INIT_2_BOOT:
1907:Lib/ssc/src/ecatslv.c ****                     if(bApplEsmPending)
1908:Lib/ssc/src/ecatslv.c ****                     {
1909:Lib/ssc/src/ecatslv.c ****                         bApplEsmPending = FALSE;
1910:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
1911:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartMailboxHandler();
1912:Lib/ssc/src/ecatslv.c **** 
1913:Lib/ssc/src/ecatslv.c ****                         if(result == 0)
1914:Lib/ssc/src/ecatslv.c ****                         {
1915:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition was successful => set active mail
1916:Lib/ssc/src/ecatslv.c ****                             bMbxRunning = TRUE;
1917:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
1918:Lib/ssc/src/ecatslv.c ****                         }
1919:Lib/ssc/src/ecatslv.c ****                         else
1920:Lib/ssc/src/ecatslv.c ****                         {
1921:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition failed.
1922:Lib/ssc/src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
ARM GAS  /tmp/ccd2INFf.s 			page 109


1923:Lib/ssc/src/ecatslv.c **** 
1924:Lib/ssc/src/ecatslv.c ****                             if(result != NOERROR_INWORK)
1925:Lib/ssc/src/ecatslv.c ****                             {
1926:Lib/ssc/src/ecatslv.c ****                                 APPL_StopMailboxHandler();
1927:Lib/ssc/src/ecatslv.c ****                                 MBX_StopMailboxHandler();
1928:Lib/ssc/src/ecatslv.c ****                             }
1929:Lib/ssc/src/ecatslv.c ****                         }
1930:Lib/ssc/src/ecatslv.c ****                     }
1931:Lib/ssc/src/ecatslv.c ****                 break;
1932:Lib/ssc/src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1933:Lib/ssc/src/ecatslv.c ****                     if(bApplEsmPending)
1934:Lib/ssc/src/ecatslv.c ****                     {
1935:Lib/ssc/src/ecatslv.c ****                         bApplEsmPending = FALSE;
1936:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
1937:Lib/ssc/src/ecatslv.c **** 
1938:Lib/ssc/src/ecatslv.c ****                         if(result == 0)
1939:Lib/ssc/src/ecatslv.c ****                         {
1940:Lib/ssc/src/ecatslv.c ****                             bEcatInputUpdateRunning = TRUE;
1941:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
1942:Lib/ssc/src/ecatslv.c ****                         }
1943:Lib/ssc/src/ecatslv.c ****                         else
1944:Lib/ssc/src/ecatslv.c ****                         {
1945:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition failed.
1946:Lib/ssc/src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
1947:Lib/ssc/src/ecatslv.c **** 
1948:Lib/ssc/src/ecatslv.c ****                             if(result != NOERROR_INWORK)
1949:Lib/ssc/src/ecatslv.c ****                             {
1950:Lib/ssc/src/ecatslv.c ****                                 APPL_StopInputHandler();
1951:Lib/ssc/src/ecatslv.c ****                                 StopInputHandler();
1952:Lib/ssc/src/ecatslv.c ****                             }
1953:Lib/ssc/src/ecatslv.c ****                         }
1954:Lib/ssc/src/ecatslv.c ****                     }
1955:Lib/ssc/src/ecatslv.c ****                 break;
1956:Lib/ssc/src/ecatslv.c ****                 case SAFEOP_2_OP:
1957:Lib/ssc/src/ecatslv.c ****                    if(bApplEsmPending)
1958:Lib/ssc/src/ecatslv.c ****                     {
1959:Lib/ssc/src/ecatslv.c ****                         if(bDcSyncActive)
1960:Lib/ssc/src/ecatslv.c ****                         {
1961:Lib/ssc/src/ecatslv.c ****                             if(i16WaitForPllRunningTimeout > 0 && i16WaitForPllRunningTimeout <= i1
1962:Lib/ssc/src/ecatslv.c ****                             {
1963:Lib/ssc/src/ecatslv.c ****                                 /*Pll sequence valid for 200ms (set in APPL_StartOutputHandler() )
1964:Lib/ssc/src/ecatslv.c ****                                 acknowledge state transition to OP */
1965:Lib/ssc/src/ecatslv.c **** 
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningTimeout = 0;
1967:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
1968:Lib/ssc/src/ecatslv.c **** 
1969:Lib/ssc/src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
1970:Lib/ssc/src/ecatslv.c **** 
1971:Lib/ssc/src/ecatslv.c ****                                 if(result == 0)
1972:Lib/ssc/src/ecatslv.c ****                                 {
1973:Lib/ssc/src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1974:Lib/ssc/src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
1975:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
1976:Lib/ssc/src/ecatslv.c ****                                 }
1977:Lib/ssc/src/ecatslv.c ****                                 else
1978:Lib/ssc/src/ecatslv.c ****                                 {
1979:Lib/ssc/src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
ARM GAS  /tmp/ccd2INFf.s 			page 110


1980:Lib/ssc/src/ecatslv.c ****                                     {
1981:Lib/ssc/src/ecatslv.c ****                                         APPL_StopOutputHandler();
1982:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
1983:Lib/ssc/src/ecatslv.c ****                                     }
1984:Lib/ssc/src/ecatslv.c ****                                 }
1985:Lib/ssc/src/ecatslv.c ****                             }
1986:Lib/ssc/src/ecatslv.c ****                         }
1987:Lib/ssc/src/ecatslv.c ****                         else
1988:Lib/ssc/src/ecatslv.c ****                         {
1989:Lib/ssc/src/ecatslv.c ****                             if(nPdOutputSize == 0 || bEcatFirstOutputsReceived)
1990:Lib/ssc/src/ecatslv.c ****                             {
1991:Lib/ssc/src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
1992:Lib/ssc/src/ecatslv.c **** 
1993:Lib/ssc/src/ecatslv.c ****                                 if(result == 0)
1994:Lib/ssc/src/ecatslv.c ****                                 {
1995:Lib/ssc/src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1996:Lib/ssc/src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
1997:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
1998:Lib/ssc/src/ecatslv.c ****                                 }
1999:Lib/ssc/src/ecatslv.c ****                                 else
2000:Lib/ssc/src/ecatslv.c ****                                 {
2001:Lib/ssc/src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
2002:Lib/ssc/src/ecatslv.c ****                                     {
2003:Lib/ssc/src/ecatslv.c ****                                         APPL_StopOutputHandler();
2004:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
2005:Lib/ssc/src/ecatslv.c ****                                     }
2006:Lib/ssc/src/ecatslv.c ****                                 }
2007:Lib/ssc/src/ecatslv.c ****                             }
2008:Lib/ssc/src/ecatslv.c ****                         }       
2009:Lib/ssc/src/ecatslv.c ****                     }             
2010:Lib/ssc/src/ecatslv.c ****                 break;
2011:Lib/ssc/src/ecatslv.c ****             }//Switch - transition
2012:Lib/ssc/src/ecatslv.c ****         }
2013:Lib/ssc/src/ecatslv.c **** 
2014:Lib/ssc/src/ecatslv.c ****         if(Status != 0)
 3769              		.loc 1 2014 9 is_stmt 1 view .LVU1136
 3770              		.loc 1 2014 11 is_stmt 0 view .LVU1137
 3771 006c 4CB1     		cbz	r4, .L303
 3772              	.LVL326:
 3773              	.L322:
2015:Lib/ssc/src/ecatslv.c ****         {
2016:Lib/ssc/src/ecatslv.c ****             /*Pending state transition finished => write AL Status and AL Status Code*/
2017:Lib/ssc/src/ecatslv.c ****             bEcatWaitForAlControlRes = FALSE;
 3774              		.loc 1 2017 13 is_stmt 1 view .LVU1138
 3775              		.loc 1 2017 38 is_stmt 0 view .LVU1139
 3776 006e 5D4B     		ldr	r3, .L343
 3777 0070 0022     		movs	r2, #0
 3778 0072 1A70     		strb	r2, [r3]
2018:Lib/ssc/src/ecatslv.c **** 
2019:Lib/ssc/src/ecatslv.c ****             if (StatusCode != 0)
 3779              		.loc 1 2019 13 is_stmt 1 view .LVU1140
 3780              		.loc 1 2019 16 is_stmt 0 view .LVU1141
 3781 0074 0DB1     		cbz	r5, .L327
2020:Lib/ssc/src/ecatslv.c ****             {
2021:Lib/ssc/src/ecatslv.c ****                 Status |= STATE_CHANGE;
 3782              		.loc 1 2021 17 is_stmt 1 view .LVU1142
 3783              		.loc 1 2021 24 is_stmt 0 view .LVU1143
ARM GAS  /tmp/ccd2INFf.s 			page 111


 3784 0076 44F01004 		orr	r4, r4, #16
 3785              	.LVL327:
 3786              	.L327:
2022:Lib/ssc/src/ecatslv.c ****             }
2023:Lib/ssc/src/ecatslv.c **** 
2024:Lib/ssc/src/ecatslv.c ****             SetALStatus(Status,StatusCode);
 3787              		.loc 1 2024 13 is_stmt 1 view .LVU1144
 3788 007a 2946     		mov	r1, r5
 3789 007c 2046     		mov	r0, r4
 3790 007e FFF7FEFF 		bl	SetALStatus
 3791              	.LVL328:
 3792              	.L303:
 3793              		.loc 1 2024 13 is_stmt 0 view .LVU1145
 3794              	.LBE9:
2025:Lib/ssc/src/ecatslv.c ****         }
2026:Lib/ssc/src/ecatslv.c ****     }// Pending state transition (bEcatWaitForAlControlRes == true)
2027:Lib/ssc/src/ecatslv.c **** }
 3795              		.loc 1 2027 1 view .LVU1146
 3796 0082 38BD     		pop	{r3, r4, r5, pc}
 3797              	.LVL329:
 3798              	.L339:
 3799              	.LBB10:
1818:Lib/ssc/src/ecatslv.c **** 
 3800              		.loc 1 1818 25 is_stmt 1 view .LVU1147
 3801 0084 FFF7FEFF 		bl	APPL_StopMailboxHandler
 3802              	.LVL330:
 3803 0088 D3E7     		b	.L311
 3804              	.L306:
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3805              		.loc 1 1833 21 view .LVU1148
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3806              		.loc 1 1833 24 is_stmt 0 view .LVU1149
 3807 008a 594B     		ldr	r3, .L343+12
 3808 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3809              		.loc 1 1833 23 view .LVU1150
 3810 008e 4BB1     		cbz	r3, .L341
 3811              	.L312:
1836:Lib/ssc/src/ecatslv.c ****                     
 3812              		.loc 1 1836 21 is_stmt 1 view .LVU1151
 3813 0090 FFF7FEFF 		bl	StopInputHandler
 3814              	.LVL331:
1838:Lib/ssc/src/ecatslv.c ****                     {
 3815              		.loc 1 1838 21 view .LVU1152
1838:Lib/ssc/src/ecatslv.c ****                     {
 3816              		.loc 1 1838 24 is_stmt 0 view .LVU1153
 3817 0094 574B     		ldr	r3, .L343+16
 3818 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1838:Lib/ssc/src/ecatslv.c ****                     {
 3819              		.loc 1 1838 23 view .LVU1154
 3820 0098 002B     		cmp	r3, #0
 3821 009a 00F0A180 		beq	.L330
1841:Lib/ssc/src/ecatslv.c ****                     }
 3822              		.loc 1 1841 25 is_stmt 1 view .LVU1155
1841:Lib/ssc/src/ecatslv.c ****                     }
 3823              		.loc 1 1841 36 is_stmt 0 view .LVU1156
 3824 009e 564B     		ldr	r3, .L343+20
ARM GAS  /tmp/ccd2INFf.s 			page 112


 3825 00a0 1D88     		ldrh	r5, [r3]
 3826              	.LVL332:
1841:Lib/ssc/src/ecatslv.c ****                     }
 3827              		.loc 1 1841 36 view .LVU1157
 3828 00a2 E3E7     		b	.L308
 3829              	.LVL333:
 3830              	.L341:
1834:Lib/ssc/src/ecatslv.c **** 
 3831              		.loc 1 1834 25 is_stmt 1 view .LVU1158
 3832 00a4 FFF7FEFF 		bl	APPL_StopInputHandler
 3833              	.LVL334:
 3834 00a8 F2E7     		b	.L312
 3835              	.L313:
1874:Lib/ssc/src/ecatslv.c ****                         {
 3836              		.loc 1 1874 25 view .LVU1159
1874:Lib/ssc/src/ecatslv.c ****                         {
 3837              		.loc 1 1874 43 is_stmt 0 view .LVU1160
 3838 00aa 574B     		ldr	r3, .L343+36
 3839 00ac 1D88     		ldrh	r5, [r3]
1874:Lib/ssc/src/ecatslv.c ****                         {
 3840              		.loc 1 1874 28 view .LVU1161
 3841 00ae 7DB9     		cbnz	r5, .L334
1882:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
 3842              		.loc 1 1882 29 is_stmt 1 view .LVU1162
 3843              	.LVL335:
1883:Lib/ssc/src/ecatslv.c ****                             /* Slave is OPERATIONAL */
 3844              		.loc 1 1883 29 view .LVU1163
1885:Lib/ssc/src/ecatslv.c ****                         }
 3845              		.loc 1 1885 29 view .LVU1164
1885:Lib/ssc/src/ecatslv.c ****                         }
 3846              		.loc 1 1885 54 is_stmt 0 view .LVU1165
 3847 00b0 564B     		ldr	r3, .L343+40
 3848 00b2 0122     		movs	r2, #1
 3849 00b4 1A70     		strb	r2, [r3]
1890:Lib/ssc/src/ecatslv.c ****                     {
 3850              		.loc 1 1890 21 is_stmt 1 view .LVU1166
1882:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
 3851              		.loc 1 1882 36 is_stmt 0 view .LVU1167
 3852 00b6 0824     		movs	r4, #8
 3853 00b8 D8E7     		b	.L308
 3854              	.LVL336:
 3855              	.L331:
1856:Lib/ssc/src/ecatslv.c ****                         }
 3856              		.loc 1 1856 40 view .LVU1168
 3857 00ba 2D25     		movs	r5, #45
 3858              	.L314:
 3859              	.LVL337:
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3860              		.loc 1 1892 25 is_stmt 1 view .LVU1169
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3861              		.loc 1 1892 28 is_stmt 0 view .LVU1170
 3862 00bc 4C4B     		ldr	r3, .L343+12
 3863 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3864              		.loc 1 1892 27 view .LVU1171
 3865 00c0 43B1     		cbz	r3, .L342
 3866              	.L315:
ARM GAS  /tmp/ccd2INFf.s 			page 113


1895:Lib/ssc/src/ecatslv.c ****                     }
 3867              		.loc 1 1895 25 is_stmt 1 view .LVU1172
 3868 00c2 FFF7FEFF 		bl	StopOutputHandler
 3869              	.LVL338:
 3870 00c6 D1E7     		b	.L308
 3871              	.LVL339:
 3872              	.L332:
1868:Lib/ssc/src/ecatslv.c ****                         }
 3873              		.loc 1 1868 40 is_stmt 0 view .LVU1173
 3874 00c8 1A25     		movs	r5, #26
 3875 00ca F7E7     		b	.L314
 3876              	.L333:
1863:Lib/ssc/src/ecatslv.c ****                         }
 3877              		.loc 1 1863 40 view .LVU1174
 3878 00cc 1B25     		movs	r5, #27
 3879 00ce F5E7     		b	.L314
 3880              	.L334:
1876:Lib/ssc/src/ecatslv.c ****                         }
 3881              		.loc 1 1876 40 view .LVU1175
 3882 00d0 1B25     		movs	r5, #27
 3883 00d2 F3E7     		b	.L314
 3884              	.LVL340:
 3885              	.L342:
1893:Lib/ssc/src/ecatslv.c **** 
 3886              		.loc 1 1893 29 is_stmt 1 view .LVU1176
 3887 00d4 FFF7FEFF 		bl	APPL_StopOutputHandler
 3888              	.LVL341:
 3889 00d8 F3E7     		b	.L315
 3890              	.LVL342:
 3891              	.L305:
1903:Lib/ssc/src/ecatslv.c ****             {
 3892              		.loc 1 1903 13 view .LVU1177
 3893 00da 444B     		ldr	r3, .L343+8
 3894 00dc 1B88     		ldrh	r3, [r3]
 3895 00de 242B     		cmp	r3, #36
 3896 00e0 40D0     		beq	.L316
 3897 00e2 16D8     		bhi	.L317
 3898 00e4 123B     		subs	r3, r3, #18
 3899 00e6 9BB2     		uxth	r3, r3
 3900 00e8 012B     		cmp	r3, #1
 3901 00ea CAD8     		bhi	.L303
1907:Lib/ssc/src/ecatslv.c ****                     {
 3902              		.loc 1 1907 21 view .LVU1178
1907:Lib/ssc/src/ecatslv.c ****                     {
 3903              		.loc 1 1907 24 is_stmt 0 view .LVU1179
 3904 00ec 404B     		ldr	r3, .L343+12
 3905 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1907:Lib/ssc/src/ecatslv.c ****                     {
 3906              		.loc 1 1907 23 view .LVU1180
 3907 00f0 002B     		cmp	r3, #0
 3908 00f2 C6D0     		beq	.L303
1909:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
 3909              		.loc 1 1909 25 is_stmt 1 view .LVU1181
1909:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
 3910              		.loc 1 1909 41 is_stmt 0 view .LVU1182
 3911 00f4 3E4B     		ldr	r3, .L343+12
 3912 00f6 0022     		movs	r2, #0
ARM GAS  /tmp/ccd2INFf.s 			page 114


 3913 00f8 1A70     		strb	r2, [r3]
1911:Lib/ssc/src/ecatslv.c **** 
 3914              		.loc 1 1911 25 is_stmt 1 view .LVU1183
1911:Lib/ssc/src/ecatslv.c **** 
 3915              		.loc 1 1911 34 is_stmt 0 view .LVU1184
 3916 00fa FFF7FEFF 		bl	APPL_StartMailboxHandler
 3917              	.LVL343:
1913:Lib/ssc/src/ecatslv.c ****                         {
 3918              		.loc 1 1913 25 is_stmt 1 view .LVU1185
1913:Lib/ssc/src/ecatslv.c ****                         {
 3919              		.loc 1 1913 27 is_stmt 0 view .LVU1186
 3920 00fe 0546     		mov	r5, r0
 3921 0100 48BB     		cbnz	r0, .L320
1916:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 3922              		.loc 1 1916 29 is_stmt 1 view .LVU1187
1916:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 3923              		.loc 1 1916 41 is_stmt 0 view .LVU1188
 3924 0102 434B     		ldr	r3, .L343+44
 3925 0104 0122     		movs	r2, #1
 3926 0106 1A70     		strb	r2, [r3]
1917:Lib/ssc/src/ecatslv.c ****                         }
 3927              		.loc 1 1917 29 is_stmt 1 view .LVU1189
1917:Lib/ssc/src/ecatslv.c ****                         }
 3928              		.loc 1 1917 63 is_stmt 0 view .LVU1190
 3929 0108 384B     		ldr	r3, .L343+8
 3930 010a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
1917:Lib/ssc/src/ecatslv.c ****                         }
 3931              		.loc 1 1917 36 view .LVU1191
 3932 010c 04F00F04 		and	r4, r4, #15
 3933              	.LVL344:
1917:Lib/ssc/src/ecatslv.c ****                         }
 3934              		.loc 1 1917 36 view .LVU1192
 3935 0110 ACE7     		b	.L308
 3936              	.LVL345:
 3937              	.L317:
1903:Lib/ssc/src/ecatslv.c ****             {
 3938              		.loc 1 1903 13 view .LVU1193
 3939 0112 482B     		cmp	r3, #72
 3940 0114 B5D1     		bne	.L303
1957:Lib/ssc/src/ecatslv.c ****                     {
 3941              		.loc 1 1957 20 is_stmt 1 view .LVU1194
1957:Lib/ssc/src/ecatslv.c ****                     {
 3942              		.loc 1 1957 23 is_stmt 0 view .LVU1195
 3943 0116 364B     		ldr	r3, .L343+12
 3944 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1957:Lib/ssc/src/ecatslv.c ****                     {
 3945              		.loc 1 1957 22 view .LVU1196
 3946 011a 002B     		cmp	r3, #0
 3947 011c B1D0     		beq	.L303
1959:Lib/ssc/src/ecatslv.c ****                         {
 3948              		.loc 1 1959 25 is_stmt 1 view .LVU1197
1959:Lib/ssc/src/ecatslv.c ****                         {
 3949              		.loc 1 1959 28 is_stmt 0 view .LVU1198
 3950 011e 374B     		ldr	r3, .L343+24
 3951 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1959:Lib/ssc/src/ecatslv.c ****                         {
 3952              		.loc 1 1959 27 view .LVU1199
ARM GAS  /tmp/ccd2INFf.s 			page 115


 3953 0122 002B     		cmp	r3, #0
 3954 0124 3FD0     		beq	.L323
1961:Lib/ssc/src/ecatslv.c ****                             {
 3955              		.loc 1 1961 29 is_stmt 1 view .LVU1200
1961:Lib/ssc/src/ecatslv.c ****                             {
 3956              		.loc 1 1961 60 is_stmt 0 view .LVU1201
 3957 0126 3B4B     		ldr	r3, .L343+48
 3958 0128 B3F90030 		ldrsh	r3, [r3]
1961:Lib/ssc/src/ecatslv.c ****                             {
 3959              		.loc 1 1961 31 view .LVU1202
 3960 012c 002B     		cmp	r3, #0
 3961 012e A8DD     		ble	.L303
1961:Lib/ssc/src/ecatslv.c ****                             {
 3962              		.loc 1 1961 95 discriminator 1 view .LVU1203
 3963 0130 394A     		ldr	r2, .L343+52
 3964 0132 B2F90020 		ldrsh	r2, [r2]
1961:Lib/ssc/src/ecatslv.c ****                             {
 3965              		.loc 1 1961 64 discriminator 1 view .LVU1204
 3966 0136 9342     		cmp	r3, r2
 3967 0138 A3DC     		bgt	.L303
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
 3968              		.loc 1 1966 33 is_stmt 1 view .LVU1205
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
 3969              		.loc 1 1966 61 is_stmt 0 view .LVU1206
 3970 013a 0023     		movs	r3, #0
 3971 013c 354A     		ldr	r2, .L343+48
 3972 013e 1380     		strh	r3, [r2]	@ movhi
1967:Lib/ssc/src/ecatslv.c **** 
 3973              		.loc 1 1967 33 is_stmt 1 view .LVU1207
1967:Lib/ssc/src/ecatslv.c **** 
 3974              		.loc 1 1967 57 is_stmt 0 view .LVU1208
 3975 0140 354A     		ldr	r2, .L343+52
 3976 0142 1380     		strh	r3, [r2]	@ movhi
1969:Lib/ssc/src/ecatslv.c **** 
 3977              		.loc 1 1969 33 is_stmt 1 view .LVU1209
1969:Lib/ssc/src/ecatslv.c **** 
 3978              		.loc 1 1969 42 is_stmt 0 view .LVU1210
 3979 0144 FFF7FEFF 		bl	APPL_StartOutputHandler
 3980              	.LVL346:
1971:Lib/ssc/src/ecatslv.c ****                                 {
 3981              		.loc 1 1971 33 is_stmt 1 view .LVU1211
1971:Lib/ssc/src/ecatslv.c ****                                 {
 3982              		.loc 1 1971 35 is_stmt 0 view .LVU1212
 3983 0148 0546     		mov	r5, r0
 3984 014a 20BB     		cbnz	r0, .L324
1974:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 3985              		.loc 1 1974 37 is_stmt 1 view .LVU1213
1974:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 3986              		.loc 1 1974 62 is_stmt 0 view .LVU1214
 3987 014c 2F4B     		ldr	r3, .L343+40
 3988 014e 0122     		movs	r2, #1
 3989 0150 1A70     		strb	r2, [r3]
1975:Lib/ssc/src/ecatslv.c ****                                 }
 3990              		.loc 1 1975 37 is_stmt 1 view .LVU1215
 3991              	.LVL347:
2014:Lib/ssc/src/ecatslv.c ****         {
 3992              		.loc 1 2014 9 view .LVU1216
ARM GAS  /tmp/ccd2INFf.s 			page 116


1975:Lib/ssc/src/ecatslv.c ****                                 }
 3993              		.loc 1 1975 44 is_stmt 0 view .LVU1217
 3994 0152 0824     		movs	r4, #8
 3995 0154 8BE7     		b	.L322
 3996              	.LVL348:
 3997              	.L320:
1924:Lib/ssc/src/ecatslv.c ****                             {
 3998              		.loc 1 1924 29 is_stmt 1 view .LVU1218
1924:Lib/ssc/src/ecatslv.c ****                             {
 3999              		.loc 1 1924 31 is_stmt 0 view .LVU1219
 4000 0156 FF28     		cmp	r0, #255
 4001 0158 93D0     		beq	.L303
1926:Lib/ssc/src/ecatslv.c ****                                 MBX_StopMailboxHandler();
 4002              		.loc 1 1926 33 is_stmt 1 view .LVU1220
 4003 015a FFF7FEFF 		bl	APPL_StopMailboxHandler
 4004              	.LVL349:
1927:Lib/ssc/src/ecatslv.c ****                             }
 4005              		.loc 1 1927 33 view .LVU1221
 4006 015e FFF7FEFF 		bl	MBX_StopMailboxHandler
 4007              	.LVL350:
2014:Lib/ssc/src/ecatslv.c ****         {
 4008              		.loc 1 2014 9 view .LVU1222
 4009 0162 8EE7     		b	.L303
 4010              	.LVL351:
 4011              	.L316:
1933:Lib/ssc/src/ecatslv.c ****                     {
 4012              		.loc 1 1933 21 view .LVU1223
1933:Lib/ssc/src/ecatslv.c ****                     {
 4013              		.loc 1 1933 24 is_stmt 0 view .LVU1224
 4014 0164 224B     		ldr	r3, .L343+12
 4015 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1933:Lib/ssc/src/ecatslv.c ****                     {
 4016              		.loc 1 1933 23 view .LVU1225
 4017 0168 002B     		cmp	r3, #0
 4018 016a 8AD0     		beq	.L303
1935:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
 4019              		.loc 1 1935 25 is_stmt 1 view .LVU1226
1935:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
 4020              		.loc 1 1935 41 is_stmt 0 view .LVU1227
 4021 016c 204B     		ldr	r3, .L343+12
 4022 016e 0022     		movs	r2, #0
 4023 0170 1A70     		strb	r2, [r3]
1936:Lib/ssc/src/ecatslv.c **** 
 4024              		.loc 1 1936 25 is_stmt 1 view .LVU1228
1936:Lib/ssc/src/ecatslv.c **** 
 4025              		.loc 1 1936 34 is_stmt 0 view .LVU1229
 4026 0172 2A48     		ldr	r0, .L343+56
 4027 0174 FFF7FEFF 		bl	APPL_StartInputHandler
 4028              	.LVL352:
1938:Lib/ssc/src/ecatslv.c ****                         {
 4029              		.loc 1 1938 25 is_stmt 1 view .LVU1230
1938:Lib/ssc/src/ecatslv.c ****                         {
 4030              		.loc 1 1938 27 is_stmt 0 view .LVU1231
 4031 0178 0546     		mov	r5, r0
 4032 017a 20B9     		cbnz	r0, .L321
1940:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
 4033              		.loc 1 1940 29 is_stmt 1 view .LVU1232
ARM GAS  /tmp/ccd2INFf.s 			page 117


1940:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
 4034              		.loc 1 1940 53 is_stmt 0 view .LVU1233
 4035 017c 284B     		ldr	r3, .L343+60
 4036 017e 0122     		movs	r2, #1
 4037 0180 1A70     		strb	r2, [r3]
1941:Lib/ssc/src/ecatslv.c ****                         }
 4038              		.loc 1 1941 29 is_stmt 1 view .LVU1234
 4039              	.LVL353:
2014:Lib/ssc/src/ecatslv.c ****         {
 4040              		.loc 1 2014 9 view .LVU1235
1941:Lib/ssc/src/ecatslv.c ****                         }
 4041              		.loc 1 1941 36 is_stmt 0 view .LVU1236
 4042 0182 0424     		movs	r4, #4
 4043 0184 73E7     		b	.L322
 4044              	.LVL354:
 4045              	.L321:
1948:Lib/ssc/src/ecatslv.c ****                             {
 4046              		.loc 1 1948 29 is_stmt 1 view .LVU1237
1948:Lib/ssc/src/ecatslv.c ****                             {
 4047              		.loc 1 1948 31 is_stmt 0 view .LVU1238
 4048 0186 FF28     		cmp	r0, #255
 4049 0188 3FF47BAF 		beq	.L303
1950:Lib/ssc/src/ecatslv.c ****                                 StopInputHandler();
 4050              		.loc 1 1950 33 is_stmt 1 view .LVU1239
 4051 018c FFF7FEFF 		bl	APPL_StopInputHandler
 4052              	.LVL355:
1951:Lib/ssc/src/ecatslv.c ****                             }
 4053              		.loc 1 1951 33 view .LVU1240
 4054 0190 FFF7FEFF 		bl	StopInputHandler
 4055              	.LVL356:
2014:Lib/ssc/src/ecatslv.c ****         {
 4056              		.loc 1 2014 9 view .LVU1241
 4057 0194 75E7     		b	.L303
 4058              	.LVL357:
 4059              	.L324:
1979:Lib/ssc/src/ecatslv.c ****                                     {
 4060              		.loc 1 1979 37 view .LVU1242
1979:Lib/ssc/src/ecatslv.c ****                                     {
 4061              		.loc 1 1979 39 is_stmt 0 view .LVU1243
 4062 0196 FF28     		cmp	r0, #255
 4063 0198 3FF473AF 		beq	.L303
1981:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
 4064              		.loc 1 1981 41 is_stmt 1 view .LVU1244
 4065 019c FFF7FEFF 		bl	APPL_StopOutputHandler
 4066              	.LVL358:
1982:Lib/ssc/src/ecatslv.c ****                                     }
 4067              		.loc 1 1982 41 view .LVU1245
 4068 01a0 FFF7FEFF 		bl	StopOutputHandler
 4069              	.LVL359:
2014:Lib/ssc/src/ecatslv.c ****         {
 4070              		.loc 1 2014 9 view .LVU1246
 4071 01a4 6DE7     		b	.L303
 4072              	.LVL360:
 4073              	.L323:
1989:Lib/ssc/src/ecatslv.c ****                             {
 4074              		.loc 1 1989 29 view .LVU1247
1989:Lib/ssc/src/ecatslv.c ****                             {
ARM GAS  /tmp/ccd2INFf.s 			page 118


 4075              		.loc 1 1989 46 is_stmt 0 view .LVU1248
 4076 01a6 184B     		ldr	r3, .L343+36
 4077 01a8 1B88     		ldrh	r3, [r3]
1989:Lib/ssc/src/ecatslv.c ****                             {
 4078              		.loc 1 1989 31 view .LVU1249
 4079 01aa 23B1     		cbz	r3, .L325
1989:Lib/ssc/src/ecatslv.c ****                             {
 4080              		.loc 1 1989 51 discriminator 1 view .LVU1250
 4081 01ac 154B     		ldr	r3, .L343+32
 4082 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4083 01b0 002B     		cmp	r3, #0
 4084 01b2 3FF466AF 		beq	.L303
 4085              	.L325:
1991:Lib/ssc/src/ecatslv.c **** 
 4086              		.loc 1 1991 33 is_stmt 1 view .LVU1251
1991:Lib/ssc/src/ecatslv.c **** 
 4087              		.loc 1 1991 42 is_stmt 0 view .LVU1252
 4088 01b6 FFF7FEFF 		bl	APPL_StartOutputHandler
 4089              	.LVL361:
1993:Lib/ssc/src/ecatslv.c ****                                 {
 4090              		.loc 1 1993 33 is_stmt 1 view .LVU1253
1993:Lib/ssc/src/ecatslv.c ****                                 {
 4091              		.loc 1 1993 35 is_stmt 0 view .LVU1254
 4092 01ba 0546     		mov	r5, r0
 4093 01bc 20B9     		cbnz	r0, .L326
1996:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4094              		.loc 1 1996 37 is_stmt 1 view .LVU1255
1996:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4095              		.loc 1 1996 62 is_stmt 0 view .LVU1256
 4096 01be 134B     		ldr	r3, .L343+40
 4097 01c0 0122     		movs	r2, #1
 4098 01c2 1A70     		strb	r2, [r3]
1997:Lib/ssc/src/ecatslv.c ****                                 }
 4099              		.loc 1 1997 37 is_stmt 1 view .LVU1257
 4100              	.LVL362:
2014:Lib/ssc/src/ecatslv.c ****         {
 4101              		.loc 1 2014 9 view .LVU1258
1997:Lib/ssc/src/ecatslv.c ****                                 }
 4102              		.loc 1 1997 44 is_stmt 0 view .LVU1259
 4103 01c4 0824     		movs	r4, #8
 4104 01c6 52E7     		b	.L322
 4105              	.LVL363:
 4106              	.L326:
2001:Lib/ssc/src/ecatslv.c ****                                     {
 4107              		.loc 1 2001 37 is_stmt 1 view .LVU1260
2001:Lib/ssc/src/ecatslv.c ****                                     {
 4108              		.loc 1 2001 39 is_stmt 0 view .LVU1261
 4109 01c8 FF28     		cmp	r0, #255
 4110 01ca 3FF45AAF 		beq	.L303
2003:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
 4111              		.loc 1 2003 41 is_stmt 1 view .LVU1262
 4112 01ce FFF7FEFF 		bl	APPL_StopOutputHandler
 4113              	.LVL364:
2004:Lib/ssc/src/ecatslv.c ****                                     }
 4114              		.loc 1 2004 41 view .LVU1263
 4115 01d2 FFF7FEFF 		bl	StopOutputHandler
 4116              	.LVL365:
ARM GAS  /tmp/ccd2INFf.s 			page 119


2014:Lib/ssc/src/ecatslv.c ****         {
 4117              		.loc 1 2014 9 view .LVU1264
 4118 01d6 54E7     		b	.L303
 4119              	.LVL366:
 4120              	.L338:
1812:Lib/ssc/src/ecatslv.c ****             {
 4121              		.loc 1 1812 13 is_stmt 0 view .LVU1265
 4122 01d8 0025     		movs	r5, #0
 4123 01da 47E7     		b	.L308
 4124              	.L329:
1829:Lib/ssc/src/ecatslv.c ****                     }
 4125              		.loc 1 1829 36 view .LVU1266
 4126 01dc 0125     		movs	r5, #1
 4127 01de 45E7     		b	.L308
 4128              	.L330:
1846:Lib/ssc/src/ecatslv.c ****                     }
 4129              		.loc 1 1846 36 view .LVU1267
 4130 01e0 0125     		movs	r5, #1
 4131 01e2 43E7     		b	.L308
 4132              	.L344:
 4133              		.align	2
 4134              	.L343:
 4135 01e4 00000000 		.word	.LANCHOR36
 4136 01e8 00000000 		.word	.LANCHOR33
 4137 01ec 00000000 		.word	.LANCHOR35
 4138 01f0 00000000 		.word	.LANCHOR34
 4139 01f4 00000000 		.word	.LANCHOR28
 4140 01f8 00000000 		.word	.LANCHOR29
 4141 01fc 00000000 		.word	.LANCHOR15
 4142 0200 00000000 		.word	.LANCHOR25
 4143 0204 00000000 		.word	.LANCHOR13
 4144 0208 00000000 		.word	.LANCHOR7
 4145 020c 00000000 		.word	.LANCHOR31
 4146 0210 00000000 		.word	bMbxRunning
 4147 0214 00000000 		.word	.LANCHOR27
 4148 0218 00000000 		.word	.LANCHOR30
 4149 021c 00000000 		.word	.LANCHOR12
 4150 0220 00000000 		.word	.LANCHOR32
 4151              	.LBE10:
 4152              		.cfi_endproc
 4153              	.LFE148:
 4155              		.section	.text.DC_CheckWatchdog,"ax",%progbits
 4156              		.align	1
 4157              		.global	DC_CheckWatchdog
 4158              		.syntax unified
 4159              		.thumb
 4160              		.thumb_func
 4162              	DC_CheckWatchdog:
 4163              	.LFB149:
2028:Lib/ssc/src/ecatslv.c **** 
2029:Lib/ssc/src/ecatslv.c **** 
2030:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2031:Lib/ssc/src/ecatslv.c **** /**
2032:Lib/ssc/src/ecatslv.c **** 
2033:Lib/ssc/src/ecatslv.c ****  \brief    This function checks the current Sync state and set the local flags
2034:Lib/ssc/src/ecatslv.c ****  The analyse of the local flags is handled in "CheckIfEcatError"
2035:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccd2INFf.s 			page 120


2036:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2037:Lib/ssc/src/ecatslv.c **** void DC_CheckWatchdog(void)
2038:Lib/ssc/src/ecatslv.c **** {
 4164              		.loc 1 2038 1 is_stmt 1 view -0
 4165              		.cfi_startproc
 4166              		@ args = 0, pretend = 0, frame = 0
 4167              		@ frame_needed = 0, uses_anonymous_args = 0
 4168              		@ link register save eliminated.
2039:Lib/ssc/src/ecatslv.c ****     if(bDcSyncActive)
 4169              		.loc 1 2039 5 view .LVU1269
 4170              		.loc 1 2039 8 is_stmt 0 view .LVU1270
 4171 0000 2C4B     		ldr	r3, .L354
 4172 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4173              		.loc 1 2039 7 view .LVU1271
 4174 0004 002B     		cmp	r3, #0
 4175 0006 54D0     		beq	.L345
2040:Lib/ssc/src/ecatslv.c ****     {
2041:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM4*/
2042:Lib/ssc/src/ecatslv.c ****         /*If Sync0 watchdog is enabled and expired*/
2043:Lib/ssc/src/ecatslv.c ****         if((Sync0WdValue > 0) && (Sync0WdCounter >= Sync0WdValue))
 4176              		.loc 1 2043 9 is_stmt 1 view .LVU1272
 4177              		.loc 1 2043 26 is_stmt 0 view .LVU1273
 4178 0008 2B4B     		ldr	r3, .L354+4
 4179 000a 1B88     		ldrh	r3, [r3]
 4180              		.loc 1 2043 11 view .LVU1274
 4181 000c 3BB1     		cbz	r3, .L347
 4182              		.loc 1 2043 50 discriminator 1 view .LVU1275
 4183 000e 2B4A     		ldr	r2, .L354+8
 4184 0010 1288     		ldrh	r2, [r2]
 4185              		.loc 1 2043 31 discriminator 1 view .LVU1276
 4186 0012 9342     		cmp	r3, r2
 4187 0014 03D8     		bhi	.L347
2044:Lib/ssc/src/ecatslv.c ****         {
2045:Lib/ssc/src/ecatslv.c ****                 /*Sync0 watchdog expired*/
2046:Lib/ssc/src/ecatslv.c **** 
2047:Lib/ssc/src/ecatslv.c **** 					bDcRunning = FALSE;        
 4188              		.loc 1 2047 6 is_stmt 1 view .LVU1277
 4189              		.loc 1 2047 17 is_stmt 0 view .LVU1278
 4190 0016 2A4B     		ldr	r3, .L354+12
 4191 0018 0022     		movs	r2, #0
 4192 001a 1A70     		strb	r2, [r3]
 4193 001c 09E0     		b	.L348
 4194              	.L347:
2048:Lib/ssc/src/ecatslv.c ****         }
2049:Lib/ssc/src/ecatslv.c ****         else
2050:Lib/ssc/src/ecatslv.c ****         {
2051:Lib/ssc/src/ecatslv.c ****             if(Sync0WdCounter < Sync0WdValue)
 4195              		.loc 1 2051 13 is_stmt 1 view .LVU1279
 4196              		.loc 1 2051 31 is_stmt 0 view .LVU1280
 4197 001e 274A     		ldr	r2, .L354+8
 4198 0020 1288     		ldrh	r2, [r2]
 4199              		.loc 1 2051 15 view .LVU1281
 4200 0022 9342     		cmp	r3, r2
 4201 0024 02D9     		bls	.L349
2052:Lib/ssc/src/ecatslv.c ****             {
2053:Lib/ssc/src/ecatslv.c ****                 Sync0WdCounter ++;
 4202              		.loc 1 2053 17 is_stmt 1 view .LVU1282
ARM GAS  /tmp/ccd2INFf.s 			page 121


 4203              		.loc 1 2053 32 is_stmt 0 view .LVU1283
 4204 0026 0132     		adds	r2, r2, #1
 4205 0028 244B     		ldr	r3, .L354+8
 4206 002a 1A80     		strh	r2, [r3]	@ movhi
 4207              	.L349:
2054:Lib/ssc/src/ecatslv.c ****             }
2055:Lib/ssc/src/ecatslv.c **** 
2056:Lib/ssc/src/ecatslv.c ****             bDcRunning = TRUE;
 4208              		.loc 1 2056 13 is_stmt 1 view .LVU1284
 4209              		.loc 1 2056 24 is_stmt 0 view .LVU1285
 4210 002c 244B     		ldr	r3, .L354+12
 4211 002e 0122     		movs	r2, #1
 4212 0030 1A70     		strb	r2, [r3]
 4213              	.L348:
2057:Lib/ssc/src/ecatslv.c ****         }
2058:Lib/ssc/src/ecatslv.c **** 
2059:Lib/ssc/src/ecatslv.c ****         if(bDcRunning)
 4214              		.loc 1 2059 9 is_stmt 1 view .LVU1286
 4215              		.loc 1 2059 12 is_stmt 0 view .LVU1287
 4216 0032 234B     		ldr	r3, .L354+12
 4217 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4218              		.loc 1 2059 11 view .LVU1288
 4219 0036 4BB1     		cbz	r3, .L350
2060:Lib/ssc/src/ecatslv.c ****         {
2061:Lib/ssc/src/ecatslv.c ****             /*Check the Sync1 cycle if Sync1 Wd is enabled*/
2062:Lib/ssc/src/ecatslv.c ****             if(Sync1WdValue > 0)
 4220              		.loc 1 2062 13 is_stmt 1 view .LVU1289
 4221              		.loc 1 2062 29 is_stmt 0 view .LVU1290
 4222 0038 224B     		ldr	r3, .L354+16
 4223 003a 1B88     		ldrh	r3, [r3]
 4224              		.loc 1 2062 15 view .LVU1291
 4225 003c 33B1     		cbz	r3, .L350
2063:Lib/ssc/src/ecatslv.c ****             {
2064:Lib/ssc/src/ecatslv.c ****                 if(Sync1WdCounter < Sync1WdValue)
 4226              		.loc 1 2064 17 is_stmt 1 view .LVU1292
 4227              		.loc 1 2064 35 is_stmt 0 view .LVU1293
 4228 003e 224A     		ldr	r2, .L354+20
 4229 0040 1288     		ldrh	r2, [r2]
 4230              		.loc 1 2064 19 view .LVU1294
 4231 0042 9342     		cmp	r3, r2
 4232 0044 18D9     		bls	.L351
2065:Lib/ssc/src/ecatslv.c ****                 {
2066:Lib/ssc/src/ecatslv.c ****                     Sync1WdCounter ++;
 4233              		.loc 1 2066 21 is_stmt 1 view .LVU1295
 4234              		.loc 1 2066 36 is_stmt 0 view .LVU1296
 4235 0046 0132     		adds	r2, r2, #1
 4236 0048 1F4B     		ldr	r3, .L354+20
 4237 004a 1A80     		strh	r2, [r3]	@ movhi
 4238              	.L350:
2067:Lib/ssc/src/ecatslv.c ****                 }
2068:Lib/ssc/src/ecatslv.c ****                 else
2069:Lib/ssc/src/ecatslv.c ****                 {
2070:Lib/ssc/src/ecatslv.c ****                     /*Sync1 watchdog expired*/
2071:Lib/ssc/src/ecatslv.c ****                     bDcRunning = FALSE;
2072:Lib/ssc/src/ecatslv.c ****                 }
2073:Lib/ssc/src/ecatslv.c ****             }
2074:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccd2INFf.s 			page 122


2075:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM4*/
2076:Lib/ssc/src/ecatslv.c **** 
2077:Lib/ssc/src/ecatslv.c ****         if(bDcRunning)
 4239              		.loc 1 2077 9 is_stmt 1 view .LVU1297
 4240              		.loc 1 2077 12 is_stmt 0 view .LVU1298
 4241 004c 1C4B     		ldr	r3, .L354+12
 4242 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4243              		.loc 1 2077 11 view .LVU1299
 4244 0050 4BB3     		cbz	r3, .L352
2078:Lib/ssc/src/ecatslv.c ****         {
2079:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) COE3*/
2080:Lib/ssc/src/ecatslv.c ****            if(sSyncManOutPar.u16SmEventMissedCounter < sErrorSettings.u16SyncErrorCounterLimit)
 4245              		.loc 1 2080 12 is_stmt 1 view .LVU1300
 4246              		.loc 1 2080 29 is_stmt 0 view .LVU1301
 4247 0052 1E4B     		ldr	r3, .L354+24
 4248 0054 1A8D     		ldrh	r2, [r3, #40]
 4249              		.loc 1 2080 70 view .LVU1302
 4250 0056 1E4B     		ldr	r3, .L354+28
 4251 0058 1B89     		ldrh	r3, [r3, #8]
 4252              		.loc 1 2080 14 view .LVU1303
 4253 005a 9A42     		cmp	r2, r3
 4254 005c 10D2     		bcs	.L353
2081:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) COE3*/
2082:Lib/ssc/src/ecatslv.c ****             {
2083:Lib/ssc/src/ecatslv.c ****                 bSmSyncSequenceValid = TRUE;
 4255              		.loc 1 2083 17 is_stmt 1 view .LVU1304
 4256              		.loc 1 2083 38 is_stmt 0 view .LVU1305
 4257 005e 1D4B     		ldr	r3, .L354+32
 4258 0060 0122     		movs	r2, #1
 4259 0062 1A70     		strb	r2, [r3]
2084:Lib/ssc/src/ecatslv.c **** 
2085:Lib/ssc/src/ecatslv.c ****                 /*Wait for PLL is active increment the Pll valid counter*/
2086:Lib/ssc/src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
 4260              		.loc 1 2086 17 is_stmt 1 view .LVU1306
 4261              		.loc 1 2086 48 is_stmt 0 view .LVU1307
 4262 0064 1C4B     		ldr	r3, .L354+36
 4263 0066 B3F90030 		ldrsh	r3, [r3]
 4264              		.loc 1 2086 19 view .LVU1308
 4265 006a 002B     		cmp	r3, #0
 4266 006c 21DD     		ble	.L345
2087:Lib/ssc/src/ecatslv.c ****                 {
2088:Lib/ssc/src/ecatslv.c ****                     i16WaitForPllRunningCnt++;
 4267              		.loc 1 2088 21 is_stmt 1 view .LVU1309
 4268              		.loc 1 2088 44 is_stmt 0 view .LVU1310
 4269 006e 1B4A     		ldr	r2, .L354+40
 4270 0070 1388     		ldrh	r3, [r2]
 4271 0072 0133     		adds	r3, r3, #1
 4272 0074 1380     		strh	r3, [r2]	@ movhi
 4273 0076 7047     		bx	lr
 4274              	.L351:
2071:Lib/ssc/src/ecatslv.c ****                 }
 4275              		.loc 1 2071 21 is_stmt 1 view .LVU1311
2071:Lib/ssc/src/ecatslv.c ****                 }
 4276              		.loc 1 2071 32 is_stmt 0 view .LVU1312
 4277 0078 114B     		ldr	r3, .L354+12
 4278 007a 0022     		movs	r2, #0
 4279 007c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccd2INFf.s 			page 123


 4280 007e E5E7     		b	.L350
 4281              	.L353:
2089:Lib/ssc/src/ecatslv.c ****                 }
2090:Lib/ssc/src/ecatslv.c ****             }
2091:Lib/ssc/src/ecatslv.c ****             else if(bSmSyncSequenceValid)
 4282              		.loc 1 2091 18 is_stmt 1 view .LVU1313
 4283              		.loc 1 2091 21 is_stmt 0 view .LVU1314
 4284 0080 144B     		ldr	r3, .L354+32
 4285 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4286              		.loc 1 2091 20 view .LVU1315
 4287 0084 ABB1     		cbz	r3, .L345
2092:Lib/ssc/src/ecatslv.c ****             {
2093:Lib/ssc/src/ecatslv.c ****                 bSmSyncSequenceValid = FALSE;
 4288              		.loc 1 2093 17 is_stmt 1 view .LVU1316
 4289              		.loc 1 2093 38 is_stmt 0 view .LVU1317
 4290 0086 134B     		ldr	r3, .L354+32
 4291 0088 0022     		movs	r2, #0
 4292 008a 1A70     		strb	r2, [r3]
2094:Lib/ssc/src/ecatslv.c ****                 sSyncManOutPar.u8SyncError = 1;
 4293              		.loc 1 2094 17 is_stmt 1 view .LVU1318
 4294              		.loc 1 2094 44 is_stmt 0 view .LVU1319
 4295 008c 0F4B     		ldr	r3, .L354+24
 4296 008e 0122     		movs	r2, #1
 4297 0090 83F84020 		strb	r2, [r3, #64]
2095:Lib/ssc/src/ecatslv.c **** 
2096:Lib/ssc/src/ecatslv.c ****                 /*Wait for PLL is active reset the Pll valid counter*/
2097:Lib/ssc/src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
 4298              		.loc 1 2097 17 is_stmt 1 view .LVU1320
 4299              		.loc 1 2097 48 is_stmt 0 view .LVU1321
 4300 0094 104B     		ldr	r3, .L354+36
 4301 0096 B3F90030 		ldrsh	r3, [r3]
 4302              		.loc 1 2097 19 view .LVU1322
 4303 009a 002B     		cmp	r3, #0
 4304 009c 09DD     		ble	.L345
2098:Lib/ssc/src/ecatslv.c ****                 {
2099:Lib/ssc/src/ecatslv.c ****                     i16WaitForPllRunningCnt = 0;
 4305              		.loc 1 2099 21 is_stmt 1 view .LVU1323
 4306              		.loc 1 2099 45 is_stmt 0 view .LVU1324
 4307 009e 0F4B     		ldr	r3, .L354+40
 4308 00a0 0022     		movs	r2, #0
 4309 00a2 1A80     		strh	r2, [r3]	@ movhi
 4310 00a4 7047     		bx	lr
 4311              	.L352:
2100:Lib/ssc/src/ecatslv.c ****                 }
2101:Lib/ssc/src/ecatslv.c ****             }
2102:Lib/ssc/src/ecatslv.c ****         }
2103:Lib/ssc/src/ecatslv.c ****         else if(bSmSyncSequenceValid)
 4312              		.loc 1 2103 14 is_stmt 1 view .LVU1325
 4313              		.loc 1 2103 17 is_stmt 0 view .LVU1326
 4314 00a6 0B4B     		ldr	r3, .L354+32
 4315 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4316              		.loc 1 2103 16 view .LVU1327
 4317 00aa 13B1     		cbz	r3, .L345
2104:Lib/ssc/src/ecatslv.c ****         {
2105:Lib/ssc/src/ecatslv.c ****             bSmSyncSequenceValid = FALSE;
 4318              		.loc 1 2105 13 is_stmt 1 view .LVU1328
 4319              		.loc 1 2105 34 is_stmt 0 view .LVU1329
ARM GAS  /tmp/ccd2INFf.s 			page 124


 4320 00ac 094B     		ldr	r3, .L354+32
 4321 00ae 0022     		movs	r2, #0
 4322 00b0 1A70     		strb	r2, [r3]
 4323              	.L345:
2106:Lib/ssc/src/ecatslv.c ****         }
2107:Lib/ssc/src/ecatslv.c **** 
2108:Lib/ssc/src/ecatslv.c ****     }
2109:Lib/ssc/src/ecatslv.c **** }
 4324              		.loc 1 2109 1 view .LVU1330
 4325 00b2 7047     		bx	lr
 4326              	.L355:
 4327              		.align	2
 4328              	.L354:
 4329 00b4 00000000 		.word	.LANCHOR15
 4330 00b8 00000000 		.word	.LANCHOR21
 4331 00bc 00000000 		.word	.LANCHOR22
 4332 00c0 00000000 		.word	.LANCHOR25
 4333 00c4 00000000 		.word	.LANCHOR24
 4334 00c8 00000000 		.word	.LANCHOR23
 4335 00cc 00000000 		.word	sSyncManOutPar
 4336 00d0 00000000 		.word	sErrorSettings
 4337 00d4 00000000 		.word	.LANCHOR26
 4338 00d8 00000000 		.word	.LANCHOR27
 4339 00dc 00000000 		.word	.LANCHOR30
 4340              		.cfi_endproc
 4341              	.LFE149:
 4343              		.section	.text.CheckIfEcatError,"ax",%progbits
 4344              		.align	1
 4345              		.global	CheckIfEcatError
 4346              		.syntax unified
 4347              		.thumb
 4348              		.thumb_func
 4350              	CheckIfEcatError:
 4351              	.LFB150:
2110:Lib/ssc/src/ecatslv.c **** 
2111:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2112:Lib/ssc/src/ecatslv.c **** /**
2113:Lib/ssc/src/ecatslv.c **** 
2114:Lib/ssc/src/ecatslv.c ****  \brief    Checks communication and synchronisation variables and update AL status / AL status code
2115:Lib/ssc/src/ecatslv.c **** 
2116:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2117:Lib/ssc/src/ecatslv.c **** void CheckIfEcatError(void)
2118:Lib/ssc/src/ecatslv.c **** {
 4352              		.loc 1 2118 1 is_stmt 1 view -0
 4353              		.cfi_startproc
 4354              		@ args = 0, pretend = 0, frame = 8
 4355              		@ frame_needed = 0, uses_anonymous_args = 0
 4356 0000 00B5     		push	{lr}
 4357              		.cfi_def_cfa_offset 4
 4358              		.cfi_offset 14, -4
 4359 0002 83B0     		sub	sp, sp, #12
 4360              		.cfi_def_cfa_offset 16
2119:Lib/ssc/src/ecatslv.c ****    /*if the watchdog is enabled check the the process data watchdog in the ESC
2120:Lib/ssc/src/ecatslv.c ****    and set the AL status code 0x1B if the watchdog expired*/
2121:Lib/ssc/src/ecatslv.c ****    if (EcatWdValue != 0)
 4361              		.loc 1 2121 4 view .LVU1332
 4362              		.loc 1 2121 20 is_stmt 0 view .LVU1333
ARM GAS  /tmp/ccd2INFf.s 			page 125


 4363 0004 1D4B     		ldr	r3, .L367
 4364 0006 1B88     		ldrh	r3, [r3]
 4365              		.loc 1 2121 7 view .LVU1334
 4366 0008 73B9     		cbnz	r3, .L363
 4367              	.L357:
2122:Lib/ssc/src/ecatslv.c ****    {
2123:Lib/ssc/src/ecatslv.c ****       /*watchdog time is set => watchdog is active*/
2124:Lib/ssc/src/ecatslv.c ****       UINT16 WdStatusOK = 0;
2125:Lib/ssc/src/ecatslv.c **** 
2126:Lib/ssc/src/ecatslv.c ****       HW_EscReadWord(WdStatusOK, ESC_PD_WD_STATE);
2127:Lib/ssc/src/ecatslv.c ****       WdStatusOK = SWAPWORD(WdStatusOK);
2128:Lib/ssc/src/ecatslv.c **** 
2129:Lib/ssc/src/ecatslv.c ****       /*ECATCHANGE_START(V5.11) ECAT4*/
2130:Lib/ssc/src/ecatslv.c ****       if (!(WdStatusOK & ESC_PD_WD_TRIGGER_MASK) && (nPdOutputSize > 0))
2131:Lib/ssc/src/ecatslv.c ****       {
2132:Lib/ssc/src/ecatslv.c ****          /*The device is in OP state*/
2133:Lib/ssc/src/ecatslv.c **** 
2134:Lib/ssc/src/ecatslv.c ****          if (bEcatOutputUpdateRunning)
2135:Lib/ssc/src/ecatslv.c ****          {
2136:Lib/ssc/src/ecatslv.c ****             AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SMWATCHDOG);
2137:Lib/ssc/src/ecatslv.c ****             return;
2138:Lib/ssc/src/ecatslv.c ****          }
2139:Lib/ssc/src/ecatslv.c **** 
2140:Lib/ssc/src/ecatslv.c ****          else
2141:Lib/ssc/src/ecatslv.c ****          {
2142:Lib/ssc/src/ecatslv.c ****             bEcatFirstOutputsReceived = FALSE;
2143:Lib/ssc/src/ecatslv.c ****          }
2144:Lib/ssc/src/ecatslv.c ****       }
2145:Lib/ssc/src/ecatslv.c ****       /*ECATCHANGE_END(V5.11) ECAT4*/
2146:Lib/ssc/src/ecatslv.c ****    }
2147:Lib/ssc/src/ecatslv.c ****  
2148:Lib/ssc/src/ecatslv.c ****    if(bDcSyncActive)
 4368              		.loc 1 2148 4 is_stmt 1 view .LVU1335
 4369              		.loc 1 2148 7 is_stmt 0 view .LVU1336
 4370 000a 1D4B     		ldr	r3, .L367+4
 4371 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4372              		.loc 1 2148 6 view .LVU1337
 4373 000e 43B1     		cbz	r3, .L356
2149:Lib/ssc/src/ecatslv.c ****    {
2150:Lib/ssc/src/ecatslv.c ****        if(bEcatOutputUpdateRunning)
 4374              		.loc 1 2150 8 is_stmt 1 view .LVU1338
 4375              		.loc 1 2150 11 is_stmt 0 view .LVU1339
 4376 0010 1C4B     		ldr	r3, .L367+8
 4377 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4378              		.loc 1 2150 10 view .LVU1340
 4379 0014 2BB1     		cbz	r3, .L356
2151:Lib/ssc/src/ecatslv.c ****        {
2152:Lib/ssc/src/ecatslv.c ****            /*Slave is in OP state*/
2153:Lib/ssc/src/ecatslv.c ****            if(!bDcRunning)
 4380              		.loc 1 2153 12 is_stmt 1 view .LVU1341
 4381              		.loc 1 2153 15 is_stmt 0 view .LVU1342
 4382 0016 1C4B     		ldr	r3, .L367+12
 4383 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4384              		.loc 1 2153 14 view .LVU1343
 4385 001a 23B3     		cbz	r3, .L364
2154:Lib/ssc/src/ecatslv.c ****            {
2155:Lib/ssc/src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_FATALSYNCERROR);
ARM GAS  /tmp/ccd2INFf.s 			page 126


2156:Lib/ssc/src/ecatslv.c ****                return;
2157:Lib/ssc/src/ecatslv.c ****            }
2158:Lib/ssc/src/ecatslv.c ****            else if(!bSmSyncSequenceValid)
 4386              		.loc 1 2158 17 is_stmt 1 view .LVU1344
 4387              		.loc 1 2158 20 is_stmt 0 view .LVU1345
 4388 001c 1B4B     		ldr	r3, .L367+16
 4389 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4390              		.loc 1 2158 19 view .LVU1346
 4391 0020 33B3     		cbz	r3, .L365
 4392              	.L356:
2159:Lib/ssc/src/ecatslv.c ****            {
2160:Lib/ssc/src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SYNCERROR);
2161:Lib/ssc/src/ecatslv.c ****                return;
2162:Lib/ssc/src/ecatslv.c ****            }
2163:Lib/ssc/src/ecatslv.c ****         
2164:Lib/ssc/src/ecatslv.c ****        }
2165:Lib/ssc/src/ecatslv.c ****    }
2166:Lib/ssc/src/ecatslv.c **** }
 4393              		.loc 1 2166 1 view .LVU1347
 4394 0022 03B0     		add	sp, sp, #12
 4395              		.cfi_remember_state
 4396              		.cfi_def_cfa_offset 4
 4397              		@ sp needed
 4398 0024 5DF804FB 		ldr	pc, [sp], #4
 4399              	.L363:
 4400              		.cfi_restore_state
 4401              	.LBB11:
2124:Lib/ssc/src/ecatslv.c **** 
 4402              		.loc 1 2124 7 is_stmt 1 view .LVU1348
2124:Lib/ssc/src/ecatslv.c **** 
 4403              		.loc 1 2124 14 is_stmt 0 view .LVU1349
 4404 0028 0023     		movs	r3, #0
 4405 002a ADF80630 		strh	r3, [sp, #6]	@ movhi
2126:Lib/ssc/src/ecatslv.c ****       WdStatusOK = SWAPWORD(WdStatusOK);
 4406              		.loc 1 2126 7 is_stmt 1 view .LVU1350
 4407 002e 0222     		movs	r2, #2
 4408 0030 4FF48861 		mov	r1, #1088
 4409 0034 0DF10600 		add	r0, sp, #6
 4410 0038 FFF7FEFF 		bl	HW_EscRead
 4411              	.LVL367:
2127:Lib/ssc/src/ecatslv.c **** 
 4412              		.loc 1 2127 7 view .LVU1351
2127:Lib/ssc/src/ecatslv.c **** 
 4413              		.loc 1 2127 18 is_stmt 0 view .LVU1352
 4414 003c BDF80630 		ldrh	r3, [sp, #6]
2130:Lib/ssc/src/ecatslv.c ****       {
 4415              		.loc 1 2130 7 is_stmt 1 view .LVU1353
2130:Lib/ssc/src/ecatslv.c ****       {
 4416              		.loc 1 2130 10 is_stmt 0 view .LVU1354
 4417 0040 13F0010F 		tst	r3, #1
 4418 0044 E1D1     		bne	.L357
2130:Lib/ssc/src/ecatslv.c ****       {
 4419              		.loc 1 2130 68 discriminator 1 view .LVU1355
 4420 0046 124B     		ldr	r3, .L367+20
 4421 0048 1B88     		ldrh	r3, [r3]
2130:Lib/ssc/src/ecatslv.c ****       {
 4422              		.loc 1 2130 50 discriminator 1 view .LVU1356
ARM GAS  /tmp/ccd2INFf.s 			page 127


 4423 004a 002B     		cmp	r3, #0
 4424 004c DDD0     		beq	.L357
2134:Lib/ssc/src/ecatslv.c ****          {
 4425              		.loc 1 2134 10 is_stmt 1 view .LVU1357
2134:Lib/ssc/src/ecatslv.c ****          {
 4426              		.loc 1 2134 14 is_stmt 0 view .LVU1358
 4427 004e 0D4B     		ldr	r3, .L367+8
 4428 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2134:Lib/ssc/src/ecatslv.c ****          {
 4429              		.loc 1 2134 13 view .LVU1359
 4430 0052 1BB9     		cbnz	r3, .L366
2142:Lib/ssc/src/ecatslv.c ****          }
 4431              		.loc 1 2142 13 is_stmt 1 view .LVU1360
2142:Lib/ssc/src/ecatslv.c ****          }
 4432              		.loc 1 2142 39 is_stmt 0 view .LVU1361
 4433 0054 0F4B     		ldr	r3, .L367+24
 4434 0056 0022     		movs	r2, #0
 4435 0058 1A70     		strb	r2, [r3]
 4436 005a D6E7     		b	.L357
 4437              	.L366:
2136:Lib/ssc/src/ecatslv.c ****             return;
 4438              		.loc 1 2136 13 is_stmt 1 view .LVU1362
 4439 005c 1B21     		movs	r1, #27
 4440 005e 0420     		movs	r0, #4
 4441 0060 FFF7FEFF 		bl	AL_ControlInd
 4442              	.LVL368:
2137:Lib/ssc/src/ecatslv.c ****          }
 4443              		.loc 1 2137 13 view .LVU1363
 4444 0064 DDE7     		b	.L356
 4445              	.L364:
 4446              	.LBE11:
2155:Lib/ssc/src/ecatslv.c ****                return;
 4447              		.loc 1 2155 16 view .LVU1364
 4448 0066 2C21     		movs	r1, #44
 4449 0068 0420     		movs	r0, #4
 4450 006a FFF7FEFF 		bl	AL_ControlInd
 4451              	.LVL369:
2156:Lib/ssc/src/ecatslv.c ****            }
 4452              		.loc 1 2156 16 view .LVU1365
 4453 006e D8E7     		b	.L356
 4454              	.L365:
2160:Lib/ssc/src/ecatslv.c ****                return;
 4455              		.loc 1 2160 16 view .LVU1366
 4456 0070 1A21     		movs	r1, #26
 4457 0072 0420     		movs	r0, #4
 4458 0074 FFF7FEFF 		bl	AL_ControlInd
 4459              	.LVL370:
2161:Lib/ssc/src/ecatslv.c ****            }
 4460              		.loc 1 2161 16 view .LVU1367
 4461 0078 D3E7     		b	.L356
 4462              	.L368:
 4463 007a 00BF     		.align	2
 4464              	.L367:
 4465 007c 00000000 		.word	.LANCHOR20
 4466 0080 00000000 		.word	.LANCHOR15
 4467 0084 00000000 		.word	.LANCHOR31
 4468 0088 00000000 		.word	.LANCHOR25
ARM GAS  /tmp/ccd2INFf.s 			page 128


 4469 008c 00000000 		.word	.LANCHOR26
 4470 0090 00000000 		.word	.LANCHOR7
 4471 0094 00000000 		.word	.LANCHOR13
 4472              		.cfi_endproc
 4473              	.LFE150:
 4475              		.section	.text.ECAT_StateChange,"ax",%progbits
 4476              		.align	1
 4477              		.global	ECAT_StateChange
 4478              		.syntax unified
 4479              		.thumb
 4480              		.thumb_func
 4482              	ECAT_StateChange:
 4483              	.LVL371:
 4484              	.LFB151:
2167:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2168:Lib/ssc/src/ecatslv.c **** /**
2169:Lib/ssc/src/ecatslv.c ****  \param    alStatus: requested state
2170:Lib/ssc/src/ecatslv.c ****  \param    alStatusCode: value for the AL-Status register
2171:Lib/ssc/src/ecatslv.c ****  
2172:Lib/ssc/src/ecatslv.c ****  \brief    This function changes the state of the EtherCAT slave if the requested state
2173:Lib/ssc/src/ecatslv.c ****              is lower than the actual state, otherwise the error condition will be reset.
2174:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2175:Lib/ssc/src/ecatslv.c **** 
2176:Lib/ssc/src/ecatslv.c **** void ECAT_StateChange(UINT8 alStatus, UINT16 alStatusCode)
2177:Lib/ssc/src/ecatslv.c **** {
 4485              		.loc 1 2177 1 view -0
 4486              		.cfi_startproc
 4487              		@ args = 0, pretend = 0, frame = 0
 4488              		@ frame_needed = 0, uses_anonymous_args = 0
 4489              		.loc 1 2177 1 is_stmt 0 view .LVU1369
 4490 0000 10B5     		push	{r4, lr}
 4491              		.cfi_def_cfa_offset 8
 4492              		.cfi_offset 4, -8
 4493              		.cfi_offset 14, -4
 4494 0002 0C46     		mov	r4, r1
2178:Lib/ssc/src/ecatslv.c ****     UINT8 Status = alStatus;
 4495              		.loc 1 2178 5 is_stmt 1 view .LVU1370
 4496              	.LVL372:
2179:Lib/ssc/src/ecatslv.c **** 
2180:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 4497              		.loc 1 2180 5 view .LVU1371
 4498              		.loc 1 2180 8 is_stmt 0 view .LVU1372
 4499 0004 434B     		ldr	r3, .L394
 4500 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4501              		.loc 1 2180 7 view .LVU1373
 4502 0008 002B     		cmp	r3, #0
 4503 000a 53D0     		beq	.L370
2181:Lib/ssc/src/ecatslv.c ****     {
2182:Lib/ssc/src/ecatslv.c ****         /*State transition is pending*/
2183:Lib/ssc/src/ecatslv.c **** 
2184:Lib/ssc/src/ecatslv.c ****         if(bApplEsmPending)
 4504              		.loc 1 2184 9 is_stmt 1 view .LVU1374
 4505              		.loc 1 2184 12 is_stmt 0 view .LVU1375
 4506 000c 424B     		ldr	r3, .L394+4
 4507 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4508              		.loc 1 2184 11 view .LVU1376
 4509 0010 4BB1     		cbz	r3, .L371
ARM GAS  /tmp/ccd2INFf.s 			page 129


2185:Lib/ssc/src/ecatslv.c ****         {
2186:Lib/ssc/src/ecatslv.c ****             /*The generic stack has currently control of the state transition.
2187:Lib/ssc/src/ecatslv.c ****             In case on an local error force ESM timeout*/
2188:Lib/ssc/src/ecatslv.c ****             if(alStatusCode != 0)
 4510              		.loc 1 2188 13 is_stmt 1 view .LVU1377
 4511              		.loc 1 2188 15 is_stmt 0 view .LVU1378
 4512 0012 41B3     		cbz	r1, .L369
2189:Lib/ssc/src/ecatslv.c ****             {
2190:Lib/ssc/src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4513              		.loc 1 2190 17 is_stmt 1 view .LVU1379
 4514              		.loc 1 2190 33 is_stmt 0 view .LVU1380
 4515 0014 414B     		ldr	r3, .L394+8
 4516 0016 0122     		movs	r2, #1
 4517 0018 1A70     		strb	r2, [r3]
2191:Lib/ssc/src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4518              		.loc 1 2191 17 is_stmt 1 view .LVU1381
 4519              		.loc 1 2191 35 is_stmt 0 view .LVU1382
 4520 001a 414B     		ldr	r3, .L394+12
 4521 001c 1980     		strh	r1, [r3]	@ movhi
2192:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = 0;
 4522              		.loc 1 2192 17 is_stmt 1 view .LVU1383
 4523              		.loc 1 2192 35 is_stmt 0 view .LVU1384
 4524 001e 414B     		ldr	r3, .L394+16
 4525 0020 0022     		movs	r2, #0
 4526 0022 1A80     		strh	r2, [r3]	@ movhi
 4527 0024 1FE0     		b	.L369
 4528              	.L371:
2193:Lib/ssc/src/ecatslv.c ****             }
2194:Lib/ssc/src/ecatslv.c ****         }
2195:Lib/ssc/src/ecatslv.c ****         else
2196:Lib/ssc/src/ecatslv.c ****         {
2197:Lib/ssc/src/ecatslv.c ****             /*complete the state transition*/
2198:Lib/ssc/src/ecatslv.c **** 
2199:Lib/ssc/src/ecatslv.c ****             if(alStatusCode != 0)
 4529              		.loc 1 2199 13 is_stmt 1 view .LVU1385
 4530              		.loc 1 2199 15 is_stmt 0 view .LVU1386
 4531 0026 59B3     		cbz	r1, .L373
2200:Lib/ssc/src/ecatslv.c ****             {
2201:Lib/ssc/src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4532              		.loc 1 2201 17 is_stmt 1 view .LVU1387
 4533              		.loc 1 2201 33 is_stmt 0 view .LVU1388
 4534 0028 3C4B     		ldr	r3, .L394+8
 4535 002a 0122     		movs	r2, #1
 4536 002c 1A70     		strb	r2, [r3]
2202:Lib/ssc/src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4537              		.loc 1 2202 17 is_stmt 1 view .LVU1389
 4538              		.loc 1 2202 35 is_stmt 0 view .LVU1390
 4539 002e 3C4B     		ldr	r3, .L394+12
 4540 0030 1980     		strh	r1, [r3]	@ movhi
2203:Lib/ssc/src/ecatslv.c **** 
2204:Lib/ssc/src/ecatslv.c ****                 /*State transition failed due to local application reasons*/
2205:Lib/ssc/src/ecatslv.c ****                 switch(nEcatStateTrans)
 4541              		.loc 1 2205 17 is_stmt 1 view .LVU1391
 4542 0032 3D4B     		ldr	r3, .L394+20
 4543 0034 1B88     		ldrh	r3, [r3]
 4544 0036 242B     		cmp	r3, #36
 4545 0038 1DD0     		beq	.L374
ARM GAS  /tmp/ccd2INFf.s 			page 130


 4546              		.loc 1 2205 17 is_stmt 0 view .LVU1392
 4547 003a 15D8     		bhi	.L375
 4548 003c 123B     		subs	r3, r3, #18
 4549 003e 9BB2     		uxth	r3, r3
 4550 0040 9342     		cmp	r3, r2
 4551 0042 03D8     		bhi	.L376
2206:Lib/ssc/src/ecatslv.c ****                 {
2207:Lib/ssc/src/ecatslv.c ****                     case INIT_2_PREOP:
2208:Lib/ssc/src/ecatslv.c ****                     case INIT_2_BOOT:
2209:Lib/ssc/src/ecatslv.c ****                           APPL_StopMailboxHandler();
 4552              		.loc 1 2209 27 is_stmt 1 view .LVU1393
 4553 0044 FFF7FEFF 		bl	APPL_StopMailboxHandler
 4554              	.LVL373:
2210:Lib/ssc/src/ecatslv.c ****                           MBX_StopMailboxHandler();
 4555              		.loc 1 2210 27 view .LVU1394
 4556 0048 FFF7FEFF 		bl	MBX_StopMailboxHandler
 4557              	.LVL374:
2211:Lib/ssc/src/ecatslv.c ****                     break;
 4558              		.loc 1 2211 21 view .LVU1395
 4559              	.L376:
2212:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2213:Lib/ssc/src/ecatslv.c ****                           APPL_StopInputHandler();
2214:Lib/ssc/src/ecatslv.c ****                           StopInputHandler();
2215:Lib/ssc/src/ecatslv.c ****                     break;
2216:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
2217:Lib/ssc/src/ecatslv.c ****                           APPL_StopOutputHandler();
2218:Lib/ssc/src/ecatslv.c ****                           StopOutputHandler();
2219:Lib/ssc/src/ecatslv.c ****                     break;
2220:Lib/ssc/src/ecatslv.c ****                 }
2221:Lib/ssc/src/ecatslv.c **** 
2222:Lib/ssc/src/ecatslv.c ****                 /*In case of a failed state transition the */
2223:Lib/ssc/src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans >> 4);
 4560              		.loc 1 2223 17 view .LVU1396
 4561              		.loc 1 2223 27 is_stmt 0 view .LVU1397
 4562 004c 364B     		ldr	r3, .L394+20
 4563 004e 1888     		ldrh	r0, [r3]
 4564              		.loc 1 2223 24 view .LVU1398
 4565 0050 C0F30710 		ubfx	r0, r0, #4, #8
 4566              	.LVL375:
 4567              	.L379:
2224:Lib/ssc/src/ecatslv.c ****             }
2225:Lib/ssc/src/ecatslv.c ****             else
2226:Lib/ssc/src/ecatslv.c ****             {
2227:Lib/ssc/src/ecatslv.c ****                 /*State transition succeed*/
2228:Lib/ssc/src/ecatslv.c ****                  
2229:Lib/ssc/src/ecatslv.c ****                 switch(nEcatStateTrans)
2230:Lib/ssc/src/ecatslv.c ****                 {
2231:Lib/ssc/src/ecatslv.c ****                     case INIT_2_PREOP:
2232:Lib/ssc/src/ecatslv.c ****                     case INIT_2_BOOT:
2233:Lib/ssc/src/ecatslv.c ****                         bMbxRunning = TRUE;
2234:Lib/ssc/src/ecatslv.c ****                     break;
2235:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2236:Lib/ssc/src/ecatslv.c ****                         bEcatInputUpdateRunning = TRUE;
2237:Lib/ssc/src/ecatslv.c ****                     break;
2238:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
2239:Lib/ssc/src/ecatslv.c ****                           bEcatOutputUpdateRunning = TRUE;
2240:Lib/ssc/src/ecatslv.c ****                     break;
ARM GAS  /tmp/ccd2INFf.s 			page 131


2241:Lib/ssc/src/ecatslv.c ****                 }
2242:Lib/ssc/src/ecatslv.c **** 
2243:Lib/ssc/src/ecatslv.c ****                 /*In case of a failed state transition the */
2244:Lib/ssc/src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
2245:Lib/ssc/src/ecatslv.c ****             }
2246:Lib/ssc/src/ecatslv.c ****                 /*Pending state transition finished => write AL Status and AL Status Code*/
2247:Lib/ssc/src/ecatslv.c ****                 bEcatWaitForAlControlRes = FALSE;
 4568              		.loc 1 2247 17 is_stmt 1 view .LVU1399
 4569              		.loc 1 2247 42 is_stmt 0 view .LVU1400
 4570 0054 2F4B     		ldr	r3, .L394
 4571 0056 0022     		movs	r2, #0
 4572 0058 1A70     		strb	r2, [r3]
2248:Lib/ssc/src/ecatslv.c **** 
2249:Lib/ssc/src/ecatslv.c ****                 if(alStatusCode != 0)
 4573              		.loc 1 2249 17 is_stmt 1 view .LVU1401
 4574              		.loc 1 2249 19 is_stmt 0 view .LVU1402
 4575 005a 0CB1     		cbz	r4, .L385
2250:Lib/ssc/src/ecatslv.c ****                     Status |= STATE_CHANGE;
 4576              		.loc 1 2250 21 is_stmt 1 view .LVU1403
 4577              		.loc 1 2250 28 is_stmt 0 view .LVU1404
 4578 005c 40F01000 		orr	r0, r0, #16
 4579              	.LVL376:
 4580              	.L385:
2251:Lib/ssc/src/ecatslv.c **** 
2252:Lib/ssc/src/ecatslv.c ****                 SetALStatus(Status,alStatusCode);
 4581              		.loc 1 2252 17 is_stmt 1 view .LVU1405
 4582 0060 2146     		mov	r1, r4
 4583 0062 FFF7FEFF 		bl	SetALStatus
 4584              	.LVL377:
 4585              	.L369:
2253:Lib/ssc/src/ecatslv.c **** 
2254:Lib/ssc/src/ecatslv.c ****         }// state transition need to be completed by the local application
2255:Lib/ssc/src/ecatslv.c ****     }//State transition pending
2256:Lib/ssc/src/ecatslv.c ****     else
2257:Lib/ssc/src/ecatslv.c ****     {
2258:Lib/ssc/src/ecatslv.c ****         if ( alStatusCode != 0 )
2259:Lib/ssc/src/ecatslv.c ****         {
2260:Lib/ssc/src/ecatslv.c ****             /* Local error has happened, we change the state if necessary */
2261:Lib/ssc/src/ecatslv.c ****             bLocalErrorFlag = TRUE;
2262:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
2263:Lib/ssc/src/ecatslv.c ****     
2264:Lib/ssc/src/ecatslv.c ****             if ( (alStatus & STATE_MASK) < (nAlStatus & STATE_MASK) )
2265:Lib/ssc/src/ecatslv.c ****             {
2266:Lib/ssc/src/ecatslv.c ****                 AL_ControlInd(alStatus, alStatusCode);
2267:Lib/ssc/src/ecatslv.c ****             }
2268:Lib/ssc/src/ecatslv.c ****         }
2269:Lib/ssc/src/ecatslv.c ****         else if (bLocalErrorFlag)
2270:Lib/ssc/src/ecatslv.c ****         {
2271:Lib/ssc/src/ecatslv.c ****             /*a local error is gone */
2272:Lib/ssc/src/ecatslv.c ****             if ( (nAlStatus & STATE_MASK) == (STATE_SAFEOP | STATE_OP) )
2273:Lib/ssc/src/ecatslv.c ****             {
2274:Lib/ssc/src/ecatslv.c ****                 if(nPdOutputSize > 0)
2275:Lib/ssc/src/ecatslv.c ****                 {
2276:Lib/ssc/src/ecatslv.c ****                     /* we have to enable the output process data SyncManger (default: SM2),
2277:Lib/ssc/src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2278:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2279:Lib/ssc/src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_OUT);
ARM GAS  /tmp/ccd2INFf.s 			page 132


2280:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2281:Lib/ssc/src/ecatslv.c ****                 }
2282:Lib/ssc/src/ecatslv.c ****                 else 
2283:Lib/ssc/src/ecatslv.c ****                     if (nPdInputSize > 0)
2284:Lib/ssc/src/ecatslv.c ****                 {
2285:Lib/ssc/src/ecatslv.c ****                     /* we have to enable the input process data SyncManger (default: SM3),
2286:Lib/ssc/src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2287:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2288:Lib/ssc/src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_IN);
2289:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2290:Lib/ssc/src/ecatslv.c ****                 }
2291:Lib/ssc/src/ecatslv.c ****             }
2292:Lib/ssc/src/ecatslv.c ****             bLocalErrorFlag = FALSE;
2293:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
2294:Lib/ssc/src/ecatslv.c ****         }
2295:Lib/ssc/src/ecatslv.c ****     }
2296:Lib/ssc/src/ecatslv.c **** }
 4586              		.loc 1 2296 1 is_stmt 0 view .LVU1406
 4587 0066 10BD     		pop	{r4, pc}
 4588              	.LVL378:
 4589              	.L375:
2205:Lib/ssc/src/ecatslv.c ****                 {
 4590              		.loc 1 2205 17 view .LVU1407
 4591 0068 482B     		cmp	r3, #72
 4592 006a EFD1     		bne	.L376
2217:Lib/ssc/src/ecatslv.c ****                           StopOutputHandler();
 4593              		.loc 1 2217 27 is_stmt 1 view .LVU1408
 4594 006c FFF7FEFF 		bl	APPL_StopOutputHandler
 4595              	.LVL379:
2218:Lib/ssc/src/ecatslv.c ****                     break;
 4596              		.loc 1 2218 27 view .LVU1409
 4597 0070 FFF7FEFF 		bl	StopOutputHandler
 4598              	.LVL380:
2219:Lib/ssc/src/ecatslv.c ****                 }
 4599              		.loc 1 2219 21 view .LVU1410
 4600 0074 EAE7     		b	.L376
 4601              	.LVL381:
 4602              	.L374:
2213:Lib/ssc/src/ecatslv.c ****                           StopInputHandler();
 4603              		.loc 1 2213 27 view .LVU1411
 4604 0076 FFF7FEFF 		bl	APPL_StopInputHandler
 4605              	.LVL382:
2214:Lib/ssc/src/ecatslv.c ****                     break;
 4606              		.loc 1 2214 27 view .LVU1412
 4607 007a FFF7FEFF 		bl	StopInputHandler
 4608              	.LVL383:
2215:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
 4609              		.loc 1 2215 21 view .LVU1413
 4610 007e E5E7     		b	.L376
 4611              	.LVL384:
 4612              	.L373:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4613              		.loc 1 2229 17 view .LVU1414
 4614 0080 294B     		ldr	r3, .L394+20
 4615 0082 1888     		ldrh	r0, [r3]
 4616              	.LVL385:
2229:Lib/ssc/src/ecatslv.c ****                 {
ARM GAS  /tmp/ccd2INFf.s 			page 133


 4617              		.loc 1 2229 17 is_stmt 0 view .LVU1415
 4618 0084 2428     		cmp	r0, #36
 4619 0086 11D0     		beq	.L380
 4620 0088 0AD8     		bhi	.L381
 4621 008a A0F11203 		sub	r3, r0, #18
 4622 008e 9BB2     		uxth	r3, r3
 4623 0090 012B     		cmp	r3, #1
 4624 0092 02D8     		bhi	.L382
2233:Lib/ssc/src/ecatslv.c ****                     break;
 4625              		.loc 1 2233 25 is_stmt 1 view .LVU1416
2233:Lib/ssc/src/ecatslv.c ****                     break;
 4626              		.loc 1 2233 37 is_stmt 0 view .LVU1417
 4627 0094 254B     		ldr	r3, .L394+24
 4628 0096 0122     		movs	r2, #1
 4629 0098 1A70     		strb	r2, [r3]
2234:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
 4630              		.loc 1 2234 21 is_stmt 1 view .LVU1418
 4631              	.L382:
2244:Lib/ssc/src/ecatslv.c ****             }
 4632              		.loc 1 2244 17 view .LVU1419
2244:Lib/ssc/src/ecatslv.c ****             }
 4633              		.loc 1 2244 24 is_stmt 0 view .LVU1420
 4634 009a 00F00F00 		and	r0, r0, #15
 4635              	.LVL386:
2244:Lib/ssc/src/ecatslv.c ****             }
 4636              		.loc 1 2244 24 view .LVU1421
 4637 009e D9E7     		b	.L379
 4638              	.LVL387:
 4639              	.L381:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4640              		.loc 1 2229 17 view .LVU1422
 4641 00a0 4828     		cmp	r0, #72
 4642 00a2 FAD1     		bne	.L382
2239:Lib/ssc/src/ecatslv.c ****                     break;
 4643              		.loc 1 2239 27 is_stmt 1 view .LVU1423
2239:Lib/ssc/src/ecatslv.c ****                     break;
 4644              		.loc 1 2239 52 is_stmt 0 view .LVU1424
 4645 00a4 224B     		ldr	r3, .L394+28
 4646 00a6 0122     		movs	r2, #1
 4647 00a8 1A70     		strb	r2, [r3]
2240:Lib/ssc/src/ecatslv.c ****                 }
 4648              		.loc 1 2240 21 is_stmt 1 view .LVU1425
 4649 00aa F6E7     		b	.L382
 4650              	.L380:
2236:Lib/ssc/src/ecatslv.c ****                     break;
 4651              		.loc 1 2236 25 view .LVU1426
2236:Lib/ssc/src/ecatslv.c ****                     break;
 4652              		.loc 1 2236 49 is_stmt 0 view .LVU1427
 4653 00ac 214B     		ldr	r3, .L394+32
 4654 00ae 0122     		movs	r2, #1
 4655 00b0 1A70     		strb	r2, [r3]
2237:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
 4656              		.loc 1 2237 21 is_stmt 1 view .LVU1428
 4657 00b2 F2E7     		b	.L382
 4658              	.LVL388:
 4659              	.L370:
2258:Lib/ssc/src/ecatslv.c ****         {
ARM GAS  /tmp/ccd2INFf.s 			page 134


 4660              		.loc 1 2258 9 view .LVU1429
2258:Lib/ssc/src/ecatslv.c ****         {
 4661              		.loc 1 2258 12 is_stmt 0 view .LVU1430
 4662 00b4 79B1     		cbz	r1, .L386
2261:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
 4663              		.loc 1 2261 13 is_stmt 1 view .LVU1431
2261:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
 4664              		.loc 1 2261 29 is_stmt 0 view .LVU1432
 4665 00b6 194B     		ldr	r3, .L394+8
 4666 00b8 0122     		movs	r2, #1
 4667 00ba 1A70     		strb	r2, [r3]
2262:Lib/ssc/src/ecatslv.c ****     
 4668              		.loc 1 2262 13 is_stmt 1 view .LVU1433
2262:Lib/ssc/src/ecatslv.c ****     
 4669              		.loc 1 2262 31 is_stmt 0 view .LVU1434
 4670 00bc 184B     		ldr	r3, .L394+12
 4671 00be 1980     		strh	r1, [r3]	@ movhi
2264:Lib/ssc/src/ecatslv.c ****             {
 4672              		.loc 1 2264 13 is_stmt 1 view .LVU1435
2264:Lib/ssc/src/ecatslv.c ****             {
 4673              		.loc 1 2264 55 is_stmt 0 view .LVU1436
 4674 00c0 1D4B     		ldr	r3, .L394+36
 4675 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2264:Lib/ssc/src/ecatslv.c ****             {
 4676              		.loc 1 2264 16 view .LVU1437
 4677 00c4 00F00F02 		and	r2, r0, #15
 4678 00c8 03F00F03 		and	r3, r3, #15
 4679 00cc 9A42     		cmp	r2, r3
 4680 00ce CAD2     		bcs	.L369
2266:Lib/ssc/src/ecatslv.c ****             }
 4681              		.loc 1 2266 17 is_stmt 1 view .LVU1438
 4682 00d0 FFF7FEFF 		bl	AL_ControlInd
 4683              	.LVL389:
2266:Lib/ssc/src/ecatslv.c ****             }
 4684              		.loc 1 2266 17 is_stmt 0 view .LVU1439
 4685 00d4 C7E7     		b	.L369
 4686              	.LVL390:
 4687              	.L386:
2269:Lib/ssc/src/ecatslv.c ****         {
 4688              		.loc 1 2269 14 is_stmt 1 view .LVU1440
2269:Lib/ssc/src/ecatslv.c ****         {
 4689              		.loc 1 2269 18 is_stmt 0 view .LVU1441
 4690 00d6 114B     		ldr	r3, .L394+8
 4691 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2269:Lib/ssc/src/ecatslv.c ****         {
 4692              		.loc 1 2269 17 view .LVU1442
 4693 00da 002B     		cmp	r3, #0
 4694 00dc C3D0     		beq	.L369
2272:Lib/ssc/src/ecatslv.c ****             {
 4695              		.loc 1 2272 13 is_stmt 1 view .LVU1443
2272:Lib/ssc/src/ecatslv.c ****             {
 4696              		.loc 1 2272 29 is_stmt 0 view .LVU1444
 4697 00de 164B     		ldr	r3, .L394+36
 4698 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2272:Lib/ssc/src/ecatslv.c ****             {
 4699              		.loc 1 2272 16 view .LVU1445
 4700 00e2 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccd2INFf.s 			page 135


 4701 00e6 0C2B     		cmp	r3, #12
 4702 00e8 05D0     		beq	.L392
 4703              	.LVL391:
 4704              	.L387:
2292:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
 4705              		.loc 1 2292 13 is_stmt 1 view .LVU1446
2292:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
 4706              		.loc 1 2292 29 is_stmt 0 view .LVU1447
 4707 00ea 0023     		movs	r3, #0
 4708 00ec 0B4A     		ldr	r2, .L394+8
 4709 00ee 1370     		strb	r3, [r2]
2293:Lib/ssc/src/ecatslv.c ****         }
 4710              		.loc 1 2293 13 is_stmt 1 view .LVU1448
2293:Lib/ssc/src/ecatslv.c ****         }
 4711              		.loc 1 2293 31 is_stmt 0 view .LVU1449
 4712 00f0 0B4A     		ldr	r2, .L394+12
 4713 00f2 1380     		strh	r3, [r2]	@ movhi
 4714              		.loc 1 2296 1 view .LVU1450
 4715 00f4 B7E7     		b	.L369
 4716              	.LVL392:
 4717              	.L392:
2274:Lib/ssc/src/ecatslv.c ****                 {
 4718              		.loc 1 2274 17 is_stmt 1 view .LVU1451
2274:Lib/ssc/src/ecatslv.c ****                 {
 4719              		.loc 1 2274 34 is_stmt 0 view .LVU1452
 4720 00f6 114B     		ldr	r3, .L394+40
 4721 00f8 1B88     		ldrh	r3, [r3]
2274:Lib/ssc/src/ecatslv.c ****                 {
 4722              		.loc 1 2274 19 view .LVU1453
 4723 00fa 3BB9     		cbnz	r3, .L393
2283:Lib/ssc/src/ecatslv.c ****                 {
 4724              		.loc 1 2283 21 is_stmt 1 view .LVU1454
2283:Lib/ssc/src/ecatslv.c ****                 {
 4725              		.loc 1 2283 38 is_stmt 0 view .LVU1455
 4726 00fc 104B     		ldr	r3, .L394+44
 4727 00fe 1B88     		ldrh	r3, [r3]
2283:Lib/ssc/src/ecatslv.c ****                 {
 4728              		.loc 1 2283 24 view .LVU1456
 4729 0100 002B     		cmp	r3, #0
 4730 0102 F2D0     		beq	.L387
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4731              		.loc 1 2288 21 is_stmt 1 view .LVU1457
 4732 0104 0320     		movs	r0, #3
 4733              	.LVL393:
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4734              		.loc 1 2288 21 is_stmt 0 view .LVU1458
 4735 0106 FFF7FEFF 		bl	EnableSyncManChannel
 4736              	.LVL394:
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4737              		.loc 1 2288 21 view .LVU1459
 4738 010a EEE7     		b	.L387
 4739              	.LVL395:
 4740              	.L393:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4741              		.loc 1 2279 21 is_stmt 1 view .LVU1460
 4742 010c 0220     		movs	r0, #2
 4743              	.LVL396:
ARM GAS  /tmp/ccd2INFf.s 			page 136


2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4744              		.loc 1 2279 21 is_stmt 0 view .LVU1461
 4745 010e FFF7FEFF 		bl	EnableSyncManChannel
 4746              	.LVL397:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4747              		.loc 1 2279 21 view .LVU1462
 4748 0112 EAE7     		b	.L387
 4749              	.L395:
 4750              		.align	2
 4751              	.L394:
 4752 0114 00000000 		.word	.LANCHOR36
 4753 0118 00000000 		.word	.LANCHOR34
 4754 011c 00000000 		.word	.LANCHOR28
 4755 0120 00000000 		.word	.LANCHOR29
 4756 0124 00000000 		.word	.LANCHOR33
 4757 0128 00000000 		.word	.LANCHOR35
 4758 012c 00000000 		.word	bMbxRunning
 4759 0130 00000000 		.word	.LANCHOR31
 4760 0134 00000000 		.word	.LANCHOR32
 4761 0138 00000000 		.word	.LANCHOR5
 4762 013c 00000000 		.word	.LANCHOR7
 4763 0140 00000000 		.word	.LANCHOR4
 4764              		.cfi_endproc
 4765              	.LFE151:
 4767              		.section	.text.ECAT_Init,"ax",%progbits
 4768              		.align	1
 4769              		.global	ECAT_Init
 4770              		.syntax unified
 4771              		.thumb
 4772              		.thumb_func
 4774              	ECAT_Init:
 4775              	.LFB152:
2297:Lib/ssc/src/ecatslv.c **** 
2298:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2299:Lib/ssc/src/ecatslv.c **** /**
2300:Lib/ssc/src/ecatslv.c **** 
2301:Lib/ssc/src/ecatslv.c ****  \brief    This function initialize the EtherCAT Slave Interface.
2302:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2303:Lib/ssc/src/ecatslv.c **** 
2304:Lib/ssc/src/ecatslv.c **** void ECAT_Init(void)
2305:Lib/ssc/src/ecatslv.c **** {
 4776              		.loc 1 2305 1 is_stmt 1 view -0
 4777              		.cfi_startproc
 4778              		@ args = 0, pretend = 0, frame = 8
 4779              		@ frame_needed = 0, uses_anonymous_args = 0
 4780 0000 10B5     		push	{r4, lr}
 4781              		.cfi_def_cfa_offset 8
 4782              		.cfi_offset 4, -8
 4783              		.cfi_offset 14, -4
 4784 0002 82B0     		sub	sp, sp, #8
 4785              		.cfi_def_cfa_offset 16
2306:Lib/ssc/src/ecatslv.c ****     UINT8 i;
 4786              		.loc 1 2306 5 view .LVU1464
 4787              	.LBB12:
2307:Lib/ssc/src/ecatslv.c **** 
2308:Lib/ssc/src/ecatslv.c ****     /*Get Maximum Number of SyncManagers and supported DPRAM size*/
2309:Lib/ssc/src/ecatslv.c ****     {
ARM GAS  /tmp/ccd2INFf.s 			page 137


2310:Lib/ssc/src/ecatslv.c ****     UINT16 TmpVar = 0;
 4788              		.loc 1 2310 5 view .LVU1465
 4789              		.loc 1 2310 12 is_stmt 0 view .LVU1466
 4790 0004 0024     		movs	r4, #0
 4791 0006 ADF80640 		strh	r4, [sp, #6]	@ movhi
2311:Lib/ssc/src/ecatslv.c **** 
2312:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(TmpVar, ESC_COMM_INFO_OFFSET);
 4792              		.loc 1 2312 5 is_stmt 1 view .LVU1467
 4793 000a 0222     		movs	r2, #2
 4794 000c 0421     		movs	r1, #4
 4795 000e 0DF10600 		add	r0, sp, #6
 4796 0012 FFF7FEFF 		bl	HW_EscRead
 4797              	.LVL398:
2313:Lib/ssc/src/ecatslv.c **** 
2314:Lib/ssc/src/ecatslv.c ****     TmpVar = SWAPWORD(TmpVar);
 4798              		.loc 1 2314 5 view .LVU1468
 4799              		.loc 1 2314 12 is_stmt 0 view .LVU1469
 4800 0016 BDF80630 		ldrh	r3, [sp, #6]
2315:Lib/ssc/src/ecatslv.c ****     nMaxSyncMan = (UINT8) ((TmpVar & ESC_SM_CHANNELS_MASK)>> ESC_SM_CHANNELS_SHIFT);
 4801              		.loc 1 2315 5 is_stmt 1 view .LVU1470
 4802              		.loc 1 2315 19 is_stmt 0 view .LVU1471
 4803 001a 1B0A     		lsrs	r3, r3, #8
 4804              		.loc 1 2315 17 view .LVU1472
 4805 001c 274A     		ldr	r2, .L400
 4806 001e 1370     		strb	r3, [r2]
2316:Lib/ssc/src/ecatslv.c **** 
2317:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(TmpVar, ESC_DPRAM_SIZE_OFFSET);
 4807              		.loc 1 2317 5 is_stmt 1 view .LVU1473
 4808 0020 0222     		movs	r2, #2
 4809 0022 0621     		movs	r1, #6
 4810 0024 0DEB0100 		add	r0, sp, r1
 4811 0028 FFF7FEFF 		bl	HW_EscRead
 4812              	.LVL399:
2318:Lib/ssc/src/ecatslv.c ****     TmpVar = SWAPWORD(TmpVar);
 4813              		.loc 1 2318 5 view .LVU1474
 4814              		.loc 1 2318 12 is_stmt 0 view .LVU1475
 4815 002c BDF80630 		ldrh	r3, [sp, #6]
2319:Lib/ssc/src/ecatslv.c **** 
2320:Lib/ssc/src/ecatslv.c ****     //get max address (register + DPRAM size in Byte (in the register it is stored in KB))
2321:Lib/ssc/src/ecatslv.c ****     /* ECATCHANGE_START(V5.11) ESC1*/
2322:Lib/ssc/src/ecatslv.c ****     nMaxEscAddress = (UINT16) ((TmpVar & ESC_DPRAM_SIZE_MASK) << 10) + 0xFFF;
 4816              		.loc 1 2322 5 is_stmt 1 view .LVU1476
 4817              		.loc 1 2322 22 is_stmt 0 view .LVU1477
 4818 0030 9B02     		lsls	r3, r3, #10
 4819 0032 9BB2     		uxth	r3, r3
 4820              		.loc 1 2322 70 view .LVU1478
 4821 0034 03F6FF73 		addw	r3, r3, #4095
 4822              		.loc 1 2322 20 view .LVU1479
 4823 0038 214A     		ldr	r2, .L400+4
 4824 003a 1380     		strh	r3, [r2]	@ movhi
 4825              	.LBE12:
2323:Lib/ssc/src/ecatslv.c ****     /* ECATCHANGE_END(V5.11) ESC1*/
2324:Lib/ssc/src/ecatslv.c ****     }
2325:Lib/ssc/src/ecatslv.c **** 
2326:Lib/ssc/src/ecatslv.c ****     /* Get EEPROM loaded information */
2327:Lib/ssc/src/ecatslv.c ****     UpdateEEPROMLoadedState();
 4826              		.loc 1 2327 5 is_stmt 1 view .LVU1480
ARM GAS  /tmp/ccd2INFf.s 			page 138


 4827 003c FFF7FEFF 		bl	UpdateEEPROMLoadedState
 4828              	.LVL400:
2328:Lib/ssc/src/ecatslv.c **** 
2329:Lib/ssc/src/ecatslv.c ****     /* disable all Sync Manager channels */
2330:Lib/ssc/src/ecatslv.c ****     for (i = 0; i < nMaxSyncMan; i++)
 4829              		.loc 1 2330 5 view .LVU1481
 4830              		.loc 1 2330 5 is_stmt 0 view .LVU1482
 4831 0040 04E0     		b	.L397
 4832              	.LVL401:
 4833              	.L398:
2331:Lib/ssc/src/ecatslv.c ****     {
2332:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2333:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(i);
 4834              		.loc 1 2333 9 is_stmt 1 discriminator 3 view .LVU1483
 4835 0042 2046     		mov	r0, r4
 4836 0044 FFF7FEFF 		bl	DisableSyncManChannel
 4837              	.LVL402:
2330:Lib/ssc/src/ecatslv.c ****     {
 4838              		.loc 1 2330 34 discriminator 3 view .LVU1484
2330:Lib/ssc/src/ecatslv.c ****     {
 4839              		.loc 1 2330 35 is_stmt 0 discriminator 3 view .LVU1485
 4840 0048 0134     		adds	r4, r4, #1
 4841              	.LVL403:
2330:Lib/ssc/src/ecatslv.c ****     {
 4842              		.loc 1 2330 35 discriminator 3 view .LVU1486
 4843 004a E4B2     		uxtb	r4, r4
 4844              	.LVL404:
 4845              	.L397:
2330:Lib/ssc/src/ecatslv.c ****     {
 4846              		.loc 1 2330 17 is_stmt 1 discriminator 1 view .LVU1487
2330:Lib/ssc/src/ecatslv.c ****     {
 4847              		.loc 1 2330 19 is_stmt 0 discriminator 1 view .LVU1488
 4848 004c 1B4B     		ldr	r3, .L400
 4849 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2330:Lib/ssc/src/ecatslv.c ****     {
 4850              		.loc 1 2330 5 discriminator 1 view .LVU1489
 4851 0050 A342     		cmp	r3, r4
 4852 0052 F6D8     		bhi	.L398
2334:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2335:Lib/ssc/src/ecatslv.c ****     }
2336:Lib/ssc/src/ecatslv.c **** 
2337:Lib/ssc/src/ecatslv.c ****     /* initialize the mailbox handler */
2338:Lib/ssc/src/ecatslv.c ****     MBX_Init();
 4853              		.loc 1 2338 5 is_stmt 1 view .LVU1490
 4854 0054 FFF7FEFF 		bl	MBX_Init
 4855              	.LVL405:
2339:Lib/ssc/src/ecatslv.c **** 
2340:Lib/ssc/src/ecatslv.c ****     /* initialize variables */
2341:Lib/ssc/src/ecatslv.c ****     bApplEsmPending = FALSE;
 4856              		.loc 1 2341 5 view .LVU1491
 4857              		.loc 1 2341 21 is_stmt 0 view .LVU1492
 4858 0058 0024     		movs	r4, #0
 4859              	.LVL406:
 4860              		.loc 1 2341 21 view .LVU1493
 4861 005a 1A4B     		ldr	r3, .L400+8
 4862 005c 1C70     		strb	r4, [r3]
2342:Lib/ssc/src/ecatslv.c ****     bEcatWaitForAlControlRes = FALSE;
ARM GAS  /tmp/ccd2INFf.s 			page 139


 4863              		.loc 1 2342 5 is_stmt 1 view .LVU1494
 4864              		.loc 1 2342 30 is_stmt 0 view .LVU1495
 4865 005e 1A4B     		ldr	r3, .L400+12
 4866 0060 1C70     		strb	r4, [r3]
2343:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 4867              		.loc 1 2343 5 is_stmt 1 view .LVU1496
 4868              		.loc 1 2343 31 is_stmt 0 view .LVU1497
 4869 0062 1A4B     		ldr	r3, .L400+16
 4870 0064 1C70     		strb	r4, [r3]
2344:Lib/ssc/src/ecatslv.c ****      bEcatOutputUpdateRunning = FALSE;
 4871              		.loc 1 2344 6 is_stmt 1 view .LVU1498
 4872              		.loc 1 2344 31 is_stmt 0 view .LVU1499
 4873 0066 1A4B     		ldr	r3, .L400+20
 4874 0068 1C70     		strb	r4, [r3]
2345:Lib/ssc/src/ecatslv.c ****      bEcatInputUpdateRunning = FALSE;
 4875              		.loc 1 2345 6 is_stmt 1 view .LVU1500
 4876              		.loc 1 2345 30 is_stmt 0 view .LVU1501
 4877 006a 1A4B     		ldr	r3, .L400+24
 4878 006c 1C70     		strb	r4, [r3]
2346:Lib/ssc/src/ecatslv.c ****     bWdTrigger = FALSE;
 4879              		.loc 1 2346 5 is_stmt 1 view .LVU1502
 4880              		.loc 1 2346 16 is_stmt 0 view .LVU1503
 4881 006e 1A4B     		ldr	r3, .L400+28
 4882 0070 1C70     		strb	r4, [r3]
2347:Lib/ssc/src/ecatslv.c ****     EcatWdValue = 0;
 4883              		.loc 1 2347 5 is_stmt 1 view .LVU1504
 4884              		.loc 1 2347 17 is_stmt 0 view .LVU1505
 4885 0072 1A4B     		ldr	r3, .L400+32
 4886 0074 1C80     		strh	r4, [r3]	@ movhi
2348:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 4887              		.loc 1 2348 5 is_stmt 1 view .LVU1506
 4888              		.loc 1 2348 20 is_stmt 0 view .LVU1507
 4889 0076 1A4B     		ldr	r3, .L400+36
 4890 0078 1C80     		strh	r4, [r3]	@ movhi
2349:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 4891              		.loc 1 2349 5 is_stmt 1 view .LVU1508
 4892              		.loc 1 2349 18 is_stmt 0 view .LVU1509
 4893 007a 1A4B     		ldr	r3, .L400+40
 4894 007c 1C80     		strh	r4, [r3]	@ movhi
2350:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 4895              		.loc 1 2350 5 is_stmt 1 view .LVU1510
 4896              		.loc 1 2350 20 is_stmt 0 view .LVU1511
 4897 007e 1A4B     		ldr	r3, .L400+44
 4898 0080 1C80     		strh	r4, [r3]	@ movhi
2351:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 4899              		.loc 1 2351 5 is_stmt 1 view .LVU1512
 4900              		.loc 1 2351 18 is_stmt 0 view .LVU1513
 4901 0082 1A4B     		ldr	r3, .L400+48
 4902 0084 1C80     		strh	r4, [r3]	@ movhi
2352:Lib/ssc/src/ecatslv.c ****     bDcSyncActive = FALSE;
 4903              		.loc 1 2352 5 is_stmt 1 view .LVU1514
 4904              		.loc 1 2352 19 is_stmt 0 view .LVU1515
 4905 0086 1A4B     		ldr	r3, .L400+52
 4906 0088 1C70     		strb	r4, [r3]
2353:Lib/ssc/src/ecatslv.c ****     bLocalErrorFlag = FALSE;
 4907              		.loc 1 2353 5 is_stmt 1 view .LVU1516
 4908              		.loc 1 2353 21 is_stmt 0 view .LVU1517
ARM GAS  /tmp/ccd2INFf.s 			page 140


 4909 008a 1A4B     		ldr	r3, .L400+56
 4910 008c 1C70     		strb	r4, [r3]
2354:Lib/ssc/src/ecatslv.c ****     u16LocalErrorCode = 0x00;
 4911              		.loc 1 2354 5 is_stmt 1 view .LVU1518
 4912              		.loc 1 2354 23 is_stmt 0 view .LVU1519
 4913 008e 1A4B     		ldr	r3, .L400+60
 4914 0090 1C80     		strh	r4, [r3]	@ movhi
2355:Lib/ssc/src/ecatslv.c **** 
2356:Lib/ssc/src/ecatslv.c ****     u16ALEventMask = 0;
 4915              		.loc 1 2356 5 is_stmt 1 view .LVU1520
 4916              		.loc 1 2356 20 is_stmt 0 view .LVU1521
 4917 0092 1A4B     		ldr	r3, .L400+64
 4918 0094 1C80     		strh	r4, [r3]	@ movhi
2357:Lib/ssc/src/ecatslv.c ****     nPdOutputSize = 0;
 4919              		.loc 1 2357 5 is_stmt 1 view .LVU1522
 4920              		.loc 1 2357 19 is_stmt 0 view .LVU1523
 4921 0096 1A4B     		ldr	r3, .L400+68
 4922 0098 1C80     		strh	r4, [r3]	@ movhi
2358:Lib/ssc/src/ecatslv.c ****     nPdInputSize = 0;
 4923              		.loc 1 2358 5 is_stmt 1 view .LVU1524
 4924              		.loc 1 2358 18 is_stmt 0 view .LVU1525
 4925 009a 1A4B     		ldr	r3, .L400+72
 4926 009c 1C80     		strh	r4, [r3]	@ movhi
2359:Lib/ssc/src/ecatslv.c **** 
2360:Lib/ssc/src/ecatslv.c ****     /* initialize the AL Status register */
2361:Lib/ssc/src/ecatslv.c ****     nAlStatus    = STATE_INIT;
 4927              		.loc 1 2361 5 is_stmt 1 view .LVU1526
 4928              		.loc 1 2361 18 is_stmt 0 view .LVU1527
 4929 009e 0120     		movs	r0, #1
 4930 00a0 194B     		ldr	r3, .L400+76
 4931 00a2 1870     		strb	r0, [r3]
2362:Lib/ssc/src/ecatslv.c ****     SetALStatus(nAlStatus, 0);
 4932              		.loc 1 2362 5 is_stmt 1 view .LVU1528
 4933 00a4 2146     		mov	r1, r4
 4934 00a6 FFF7FEFF 		bl	SetALStatus
 4935              	.LVL407:
2363:Lib/ssc/src/ecatslv.c ****     nEcatStateTrans = 0;
 4936              		.loc 1 2363 5 view .LVU1529
 4937              		.loc 1 2363 21 is_stmt 0 view .LVU1530
 4938 00aa 184B     		ldr	r3, .L400+80
 4939 00ac 1C80     		strh	r4, [r3]	@ movhi
2364:Lib/ssc/src/ecatslv.c **** 
2365:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT5*/
2366:Lib/ssc/src/ecatslv.c ****     bEscIntEnabled = FALSE;
 4940              		.loc 1 2366 5 is_stmt 1 view .LVU1531
 4941              		.loc 1 2366 20 is_stmt 0 view .LVU1532
 4942 00ae 184B     		ldr	r3, .L400+84
 4943 00b0 1C70     		strb	r4, [r3]
2367:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT5*/
2368:Lib/ssc/src/ecatslv.c **** 
2369:Lib/ssc/src/ecatslv.c ****     /* initialize the COE part */
2370:Lib/ssc/src/ecatslv.c ****     COE_Init();
 4944              		.loc 1 2370 5 is_stmt 1 view .LVU1533
 4945 00b2 FFF7FEFF 		bl	COE_Init
 4946              	.LVL408:
2371:Lib/ssc/src/ecatslv.c **** }
 4947              		.loc 1 2371 1 is_stmt 0 view .LVU1534
ARM GAS  /tmp/ccd2INFf.s 			page 141


 4948 00b6 02B0     		add	sp, sp, #8
 4949              		.cfi_def_cfa_offset 8
 4950              		@ sp needed
 4951 00b8 10BD     		pop	{r4, pc}
 4952              	.L401:
 4953 00ba 00BF     		.align	2
 4954              	.L400:
 4955 00bc 00000000 		.word	.LANCHOR11
 4956 00c0 00000000 		.word	.LANCHOR2
 4957 00c4 00000000 		.word	.LANCHOR34
 4958 00c8 00000000 		.word	.LANCHOR36
 4959 00cc 00000000 		.word	.LANCHOR13
 4960 00d0 00000000 		.word	.LANCHOR31
 4961 00d4 00000000 		.word	.LANCHOR32
 4962 00d8 00000000 		.word	.LANCHOR9
 4963 00dc 00000000 		.word	.LANCHOR20
 4964 00e0 00000000 		.word	.LANCHOR22
 4965 00e4 00000000 		.word	.LANCHOR21
 4966 00e8 00000000 		.word	.LANCHOR23
 4967 00ec 00000000 		.word	.LANCHOR24
 4968 00f0 00000000 		.word	.LANCHOR15
 4969 00f4 00000000 		.word	.LANCHOR28
 4970 00f8 00000000 		.word	.LANCHOR29
 4971 00fc 00000000 		.word	.LANCHOR12
 4972 0100 00000000 		.word	.LANCHOR7
 4973 0104 00000000 		.word	.LANCHOR4
 4974 0108 00000000 		.word	.LANCHOR5
 4975 010c 00000000 		.word	.LANCHOR35
 4976 0110 00000000 		.word	.LANCHOR14
 4977              		.cfi_endproc
 4978              	.LFE152:
 4980              		.section	.text.ECAT_Main,"ax",%progbits
 4981              		.align	1
 4982              		.global	ECAT_Main
 4983              		.syntax unified
 4984              		.thumb
 4985              		.thumb_func
 4987              	ECAT_Main:
 4988              	.LFB153:
2372:Lib/ssc/src/ecatslv.c **** 
2373:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2374:Lib/ssc/src/ecatslv.c **** /**
2375:Lib/ssc/src/ecatslv.c ****  \brief        This function has to be called cyclically.
2376:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2377:Lib/ssc/src/ecatslv.c **** 
2378:Lib/ssc/src/ecatslv.c **** void ECAT_Main(void)
2379:Lib/ssc/src/ecatslv.c **** {
 4989              		.loc 1 2379 1 is_stmt 1 view -0
 4990              		.cfi_startproc
 4991              		@ args = 0, pretend = 0, frame = 8
 4992              		@ frame_needed = 0, uses_anonymous_args = 0
 4993 0000 10B5     		push	{r4, lr}
 4994              		.cfi_def_cfa_offset 8
 4995              		.cfi_offset 4, -8
 4996              		.cfi_offset 14, -4
 4997 0002 82B0     		sub	sp, sp, #8
 4998              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccd2INFf.s 			page 142


2380:Lib/ssc/src/ecatslv.c ****     UINT16 ALEventReg;
 4999              		.loc 1 2380 5 view .LVU1536
2381:Lib/ssc/src/ecatslv.c ****     UINT16 EscAlControl = 0x0000;
 5000              		.loc 1 2381 5 view .LVU1537
 5001              		.loc 1 2381 12 is_stmt 0 view .LVU1538
 5002 0004 0023     		movs	r3, #0
 5003 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
2382:Lib/ssc/src/ecatslv.c ****     UINT16 sm1Activate = SM_SETTING_ENABLE_VALUE;
 5004              		.loc 1 2382 5 is_stmt 1 view .LVU1539
 5005              		.loc 1 2382 12 is_stmt 0 view .LVU1540
 5006 000a 0123     		movs	r3, #1
 5007 000c ADF80430 		strh	r3, [sp, #4]	@ movhi
2383:Lib/ssc/src/ecatslv.c **** 
2384:Lib/ssc/src/ecatslv.c ****     /* check if services are stored in the mailbox */
2385:Lib/ssc/src/ecatslv.c ****     MBX_Main();
 5008              		.loc 1 2385 5 is_stmt 1 view .LVU1541
 5009 0010 FFF7FEFF 		bl	MBX_Main
 5010              	.LVL409:
2386:Lib/ssc/src/ecatslv.c **** 
2387:Lib/ssc/src/ecatslv.c **** 
2388:Lib/ssc/src/ecatslv.c ****     if ( bMbxRunning )
 5011              		.loc 1 2388 5 view .LVU1542
 5012              		.loc 1 2388 10 is_stmt 0 view .LVU1543
 5013 0014 484B     		ldr	r3, .L423
 5014 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5015              		.loc 1 2388 8 view .LVU1544
 5016 0018 002B     		cmp	r3, #0
 5017 001a 4CD1     		bne	.L416
 5018              	.L403:
2389:Lib/ssc/src/ecatslv.c ****     {
2390:Lib/ssc/src/ecatslv.c ****         /* Slave is at least in PREOP, Mailbox is running */
2391:Lib/ssc/src/ecatslv.c ****         /* get the Activate-Byte of SM 1 (Register 0x80E) to check if a mailbox repeat request was 
2392:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(sm1Activate,(ESC_SYNCMAN_ACTIVE_OFFSET + SIZEOF_SM_REGISTER));
2393:Lib/ssc/src/ecatslv.c ****         sm1Activate = SWAPWORD(sm1Activate);
2394:Lib/ssc/src/ecatslv.c ****     }
2395:Lib/ssc/src/ecatslv.c **** 
2396:Lib/ssc/src/ecatslv.c ****     /* Read AL Event-Register from ESC */
2397:Lib/ssc/src/ecatslv.c ****     ALEventReg = HW_GetALEventRegister();
 5019              		.loc 1 2397 5 is_stmt 1 view .LVU1545
 5020              		.loc 1 2397 18 is_stmt 0 view .LVU1546
 5021 001c FFF7FEFF 		bl	HW_GetALEventRegister
 5022              	.LVL410:
 5023 0020 0446     		mov	r4, r0
 5024              	.LVL411:
2398:Lib/ssc/src/ecatslv.c ****     ALEventReg = SWAPWORD(ALEventReg);
 5025              		.loc 1 2398 5 is_stmt 1 view .LVU1547
2399:Lib/ssc/src/ecatslv.c **** 
2400:Lib/ssc/src/ecatslv.c **** 
2401:Lib/ssc/src/ecatslv.c ****     if ((ALEventReg & AL_CONTROL_EVENT) && !bEcatWaitForAlControlRes)
 5026              		.loc 1 2401 5 view .LVU1548
 5027              		.loc 1 2401 8 is_stmt 0 view .LVU1549
 5028 0022 10F0010F 		tst	r0, #1
 5029 0026 03D0     		beq	.L404
 5030              		.loc 1 2401 44 discriminator 1 view .LVU1550
 5031 0028 444B     		ldr	r3, .L423+4
 5032 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5033              		.loc 1 2401 41 discriminator 1 view .LVU1551
ARM GAS  /tmp/ccd2INFf.s 			page 143


 5034 002c 002B     		cmp	r3, #0
 5035 002e 49D0     		beq	.L417
 5036              	.L404:
2402:Lib/ssc/src/ecatslv.c ****     {
2403:Lib/ssc/src/ecatslv.c ****         /* AL Control event is set, get the AL Control register sent by the Master to acknowledge t
2404:Lib/ssc/src/ecatslv.c ****           (that the corresponding bit in the AL Event register will be reset) */
2405:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord( EscAlControl, ESC_AL_CONTROL_OFFSET);
2406:Lib/ssc/src/ecatslv.c ****         EscAlControl = SWAPWORD(EscAlControl);
2407:Lib/ssc/src/ecatslv.c **** 
2408:Lib/ssc/src/ecatslv.c **** 
2409:Lib/ssc/src/ecatslv.c ****         /* reset AL Control event and the SM Change event (because the Sync Manager settings will b
2410:Lib/ssc/src/ecatslv.c ****            in AL_ControlInd, too)*/
2411:Lib/ssc/src/ecatslv.c ****         ALEventReg &= ~((AL_CONTROL_EVENT) | (SM_CHANGE_EVENT));
2412:Lib/ssc/src/ecatslv.c **** 
2413:Lib/ssc/src/ecatslv.c ****         AL_ControlInd((UINT8)EscAlControl, 0); /* in AL_ControlInd the state transition will be che
2414:Lib/ssc/src/ecatslv.c ****         
2415:Lib/ssc/src/ecatslv.c ****         /* SM-Change-Event was handled too */
2416:Lib/ssc/src/ecatslv.c ****     }
2417:Lib/ssc/src/ecatslv.c **** 
2418:Lib/ssc/src/ecatslv.c ****     if ( (ALEventReg & SM_CHANGE_EVENT) && !bEcatWaitForAlControlRes && (nAlStatus & STATE_CHANGE) 
 5037              		.loc 1 2418 5 is_stmt 1 view .LVU1552
 5038              		.loc 1 2418 8 is_stmt 0 view .LVU1553
 5039 0030 14F0100F 		tst	r4, #16
 5040 0034 0BD0     		beq	.L405
 5041              		.loc 1 2418 44 discriminator 1 view .LVU1554
 5042 0036 414B     		ldr	r3, .L423+4
 5043 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5044              		.loc 1 2418 41 discriminator 1 view .LVU1555
 5045 003a 43B9     		cbnz	r3, .L405
 5046              		.loc 1 2418 84 discriminator 2 view .LVU1556
 5047 003c 404B     		ldr	r3, .L423+8
 5048 003e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5049              		.loc 1 2418 70 discriminator 2 view .LVU1557
 5050 0040 10F0100F 		tst	r0, #16
 5051 0044 03D1     		bne	.L405
 5052              		.loc 1 2418 119 discriminator 3 view .LVU1558
 5053 0046 20F01003 		bic	r3, r0, #16
 5054              		.loc 1 2418 105 discriminator 3 view .LVU1559
 5055 004a 012B     		cmp	r3, #1
 5056 004c 4AD1     		bne	.L418
 5057              	.L405:
2419:Lib/ssc/src/ecatslv.c ****     {
2420:Lib/ssc/src/ecatslv.c ****         /* the SM Change event is set (Bit 4 of Register 0x220), when the Byte 6 (Enable, Lo-Byte o
2421:Lib/ssc/src/ecatslv.c ****            of a Sync Manager channel was written */
2422:Lib/ssc/src/ecatslv.c ****         ALEventReg &= ~(SM_CHANGE_EVENT);
2423:Lib/ssc/src/ecatslv.c **** 
2424:Lib/ssc/src/ecatslv.c ****         /* AL_ControlInd is called with the actual state, so that the correct SM settings will be c
2425:Lib/ssc/src/ecatslv.c ****         AL_ControlInd(nAlStatus & STATE_MASK, 0);
2426:Lib/ssc/src/ecatslv.c ****     }
2427:Lib/ssc/src/ecatslv.c **** 
2428:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 5058              		.loc 1 2428 5 is_stmt 1 view .LVU1560
 5059              		.loc 1 2428 8 is_stmt 0 view .LVU1561
 5060 004e 3B4B     		ldr	r3, .L423+4
 5061 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5062              		.loc 1 2428 7 view .LVU1562
 5063 0052 002B     		cmp	r3, #0
ARM GAS  /tmp/ccd2INFf.s 			page 144


 5064 0054 4FD1     		bne	.L419
 5065              	.L406:
2429:Lib/ssc/src/ecatslv.c ****     {
2430:Lib/ssc/src/ecatslv.c ****         AL_ControlRes();
2431:Lib/ssc/src/ecatslv.c ****     }
2432:Lib/ssc/src/ecatslv.c **** 	
2433:Lib/ssc/src/ecatslv.c ****     /*The order of mailbox event processing was changed to prevent race condition errors.
2434:Lib/ssc/src/ecatslv.c ****         The SM1 activate Byte (Register 0x80E) was read before reading AL Event register.
2435:Lib/ssc/src/ecatslv.c ****         1. Handle Mailbox Read event
2436:Lib/ssc/src/ecatslv.c ****         2. Handle repeat toggle request
2437:Lib/ssc/src/ecatslv.c ****         3. Handle Mailbox write event
2438:Lib/ssc/src/ecatslv.c ****     */
2439:Lib/ssc/src/ecatslv.c ****     if ( bMbxRunning )
 5066              		.loc 1 2439 5 is_stmt 1 view .LVU1563
 5067              		.loc 1 2439 10 is_stmt 0 view .LVU1564
 5068 0056 384B     		ldr	r3, .L423
 5069 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5070              		.loc 1 2439 8 view .LVU1565
 5071 005a 53B3     		cbz	r3, .L402
2440:Lib/ssc/src/ecatslv.c ****     {
2441:Lib/ssc/src/ecatslv.c ****         /*SnycManger change event (0x220:4) could be acknowledged by reading the SM1 control regist
2442:Lib/ssc/src/ecatslv.c ****         => check if the SyncManger 1 is still enabled*/
2443:Lib/ssc/src/ecatslv.c ****         if(!(sm1Activate & SM_SETTING_ENABLE_VALUE))
 5072              		.loc 1 2443 9 is_stmt 1 view .LVU1566
 5073              		.loc 1 2443 26 is_stmt 0 view .LVU1567
 5074 005c BDF80430 		ldrh	r3, [sp, #4]
 5075              		.loc 1 2443 11 view .LVU1568
 5076 0060 13F0010F 		tst	r3, #1
 5077 0064 4AD0     		beq	.L420
 5078              	.L408:
2444:Lib/ssc/src/ecatslv.c ****             AL_ControlInd(nAlStatus & STATE_MASK, 0);
2445:Lib/ssc/src/ecatslv.c **** 
2446:Lib/ssc/src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_READ_EVENT) )
 5079              		.loc 1 2446 9 is_stmt 1 view .LVU1569
 5080              		.loc 1 2446 12 is_stmt 0 view .LVU1570
 5081 0066 14F4007F 		tst	r4, #512
 5082 006a 4FD1     		bne	.L421
 5083              	.L409:
2447:Lib/ssc/src/ecatslv.c ****         {
2448:Lib/ssc/src/ecatslv.c ****             /* SM 1 (Mailbox Read) event is set, when the mailbox was read from the master,
2449:Lib/ssc/src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be written,
2450:Lib/ssc/src/ecatslv.c ****                by writing the first byte the mailbox is locked, too */
2451:Lib/ssc/src/ecatslv.c ****             u16dummy = 0;
2452:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
2453:Lib/ssc/src/ecatslv.c **** 
2454:Lib/ssc/src/ecatslv.c ****             /* the Mailbox Read event in the variable ALEventReg shall be reset before calling
2455:Lib/ssc/src/ecatslv.c ****                MBX_MailboxReadInd, where a new mailbox datagram (if available) could be stored in t
2456:Lib/ssc/src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_READ_EVENT);
2457:Lib/ssc/src/ecatslv.c ****             MBX_MailboxReadInd();
2458:Lib/ssc/src/ecatslv.c ****         }
2459:Lib/ssc/src/ecatslv.c **** 
2460:Lib/ssc/src/ecatslv.c ****         DISABLE_MBX_INT;
 5084              		.loc 1 2460 24 is_stmt 1 view .LVU1571
2461:Lib/ssc/src/ecatslv.c ****         /* bMbxRepeatToggle holds the last state of the Repeat Bit (Bit 1) */
2462:Lib/ssc/src/ecatslv.c **** 
2463:Lib/ssc/src/ecatslv.c ****         if ( ( (sm1Activate & SM_SETTING_REPAET_REQ_MASK) && !bMbxRepeatToggle )
 5085              		.loc 1 2463 9 view .LVU1572
ARM GAS  /tmp/ccd2INFf.s 			page 145


 5086              		.loc 1 2463 29 is_stmt 0 view .LVU1573
 5087 006c BDF80430 		ldrh	r3, [sp, #4]
 5088              		.loc 1 2463 12 view .LVU1574
 5089 0070 13F00203 		ands	r3, r3, #2
 5090 0074 02D0     		beq	.L410
 5091              		.loc 1 2463 62 discriminator 1 view .LVU1575
 5092 0076 334A     		ldr	r2, .L423+12
 5093 0078 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5094              		.loc 1 2463 59 discriminator 1 view .LVU1576
 5095 007a 1AB1     		cbz	r2, .L411
 5096              	.L410:
2464:Lib/ssc/src/ecatslv.c ****             ||( !(sm1Activate & SM_SETTING_REPAET_REQ_MASK) && bMbxRepeatToggle ))
 5097              		.loc 1 2464 13 view .LVU1577
 5098 007c A3B9     		cbnz	r3, .L412
 5099              		.loc 1 2464 61 discriminator 1 view .LVU1578
 5100 007e 314B     		ldr	r3, .L423+12
 5101 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5102 0082 8BB1     		cbz	r3, .L412
 5103              	.L411:
2465:Lib/ssc/src/ecatslv.c ****         {
2466:Lib/ssc/src/ecatslv.c ****             /* Repeat Bit (Bit 1) has toggled, there is a repeat request, in MBX_MailboxRepeatReq t
2467:Lib/ssc/src/ecatslv.c ****                response will put in the send mailbox again */
2468:Lib/ssc/src/ecatslv.c ****             MBX_MailboxRepeatReq();
 5104              		.loc 1 2468 13 is_stmt 1 view .LVU1579
 5105 0084 FFF7FEFF 		bl	MBX_MailboxRepeatReq
 5106              	.LVL412:
2469:Lib/ssc/src/ecatslv.c ****             /* acknowledge the repeat request after the send mailbox was updated by writing the Rep
2470:Lib/ssc/src/ecatslv.c ****                in the Repeat Ack Bit (Bit 1) of the PDI Ctrl-Byte of SM 1 (Register 0x80F) */
2471:Lib/ssc/src/ecatslv.c ****             if(bMbxRepeatToggle)
 5107              		.loc 1 2471 13 view .LVU1580
 5108              		.loc 1 2471 16 is_stmt 0 view .LVU1581
 5109 0088 2E4B     		ldr	r3, .L423+12
 5110 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5111              		.loc 1 2471 15 view .LVU1582
 5112 008c 002B     		cmp	r3, #0
 5113 008e 48D0     		beq	.L413
2472:Lib/ssc/src/ecatslv.c ****                 sm1Activate |= SM_SETTING_REPEAT_ACK; //set repeat acknowledge bit (bit 9)
 5114              		.loc 1 2472 17 is_stmt 1 view .LVU1583
 5115              		.loc 1 2472 29 is_stmt 0 view .LVU1584
 5116 0090 BDF80430 		ldrh	r3, [sp, #4]
 5117 0094 43F40073 		orr	r3, r3, #512
 5118 0098 ADF80430 		strh	r3, [sp, #4]	@ movhi
 5119              	.L414:
2473:Lib/ssc/src/ecatslv.c ****             else
2474:Lib/ssc/src/ecatslv.c ****                 sm1Activate &= ~SM_SETTING_REPEAT_ACK; //clear repeat acknowledge bit (bit 9)
2475:Lib/ssc/src/ecatslv.c **** 
2476:Lib/ssc/src/ecatslv.c ****             sm1Activate = SWAPWORD(sm1Activate);
 5120              		.loc 1 2476 13 is_stmt 1 view .LVU1585
2477:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(sm1Activate,(ESC_SYNCMAN_ACTIVE_OFFSET + SIZEOF_SM_REGISTER));
 5121              		.loc 1 2477 13 view .LVU1586
 5122 009c 0222     		movs	r2, #2
 5123 009e 40F60E01 		movw	r1, #2062
 5124 00a2 01A8     		add	r0, sp, #4
 5125 00a4 FFF7FEFF 		bl	HW_EscWrite
 5126              	.LVL413:
 5127              	.L412:
2478:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccd2INFf.s 			page 146


2479:Lib/ssc/src/ecatslv.c ****         ENABLE_MBX_INT;
 5128              		.loc 1 2479 23 view .LVU1587
2480:Lib/ssc/src/ecatslv.c **** 
2481:Lib/ssc/src/ecatslv.c ****         /* Reload the AlEvent because it may be changed due to a SM disable, enable in case of an r
2482:Lib/ssc/src/ecatslv.c ****         ALEventReg = HW_GetALEventRegister();
 5129              		.loc 1 2482 9 view .LVU1588
 5130              		.loc 1 2482 22 is_stmt 0 view .LVU1589
 5131 00a8 FFF7FEFF 		bl	HW_GetALEventRegister
 5132              	.LVL414:
2483:Lib/ssc/src/ecatslv.c ****         ALEventReg = SWAPWORD(ALEventReg);
 5133              		.loc 1 2483 9 is_stmt 1 view .LVU1590
2484:Lib/ssc/src/ecatslv.c **** 
2485:Lib/ssc/src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_WRITE_EVENT) )
 5134              		.loc 1 2485 9 view .LVU1591
 5135              		.loc 1 2485 12 is_stmt 0 view .LVU1592
 5136 00ac 10F4807F 		tst	r0, #256
 5137 00b0 3ED1     		bne	.L422
 5138              	.LVL415:
 5139              	.L402:
2486:Lib/ssc/src/ecatslv.c ****         {
2487:Lib/ssc/src/ecatslv.c ****             /* SM 0 (Mailbox Write) event is set, when the mailbox was written from the master,
2488:Lib/ssc/src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be read,
2489:Lib/ssc/src/ecatslv.c ****                which will be done in MBX_CheckAndCopyMailbox */
2490:Lib/ssc/src/ecatslv.c ****             /* the Mailbox Write event in the variable ALEventReg shall be reset before calling
2491:Lib/ssc/src/ecatslv.c ****                MBX_CheckAndCopyMailbox, where the received mailbox datagram will be processed */
2492:Lib/ssc/src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_WRITE_EVENT);
2493:Lib/ssc/src/ecatslv.c ****             MBX_CheckAndCopyMailbox();
2494:Lib/ssc/src/ecatslv.c **** 
2495:Lib/ssc/src/ecatslv.c ****         }
2496:Lib/ssc/src/ecatslv.c ****     }
2497:Lib/ssc/src/ecatslv.c **** }
 5140              		.loc 1 2497 1 view .LVU1593
 5141 00b2 02B0     		add	sp, sp, #8
 5142              		.cfi_remember_state
 5143              		.cfi_def_cfa_offset 8
 5144              		@ sp needed
 5145 00b4 10BD     		pop	{r4, pc}
 5146              	.L416:
 5147              		.cfi_restore_state
2392:Lib/ssc/src/ecatslv.c ****         sm1Activate = SWAPWORD(sm1Activate);
 5148              		.loc 1 2392 9 is_stmt 1 view .LVU1594
 5149 00b6 0222     		movs	r2, #2
 5150 00b8 40F60E01 		movw	r1, #2062
 5151 00bc 01A8     		add	r0, sp, #4
 5152 00be FFF7FEFF 		bl	HW_EscRead
 5153              	.LVL416:
2393:Lib/ssc/src/ecatslv.c ****     }
 5154              		.loc 1 2393 9 view .LVU1595
 5155 00c2 ABE7     		b	.L403
 5156              	.L417:
2405:Lib/ssc/src/ecatslv.c ****         EscAlControl = SWAPWORD(EscAlControl);
 5157              		.loc 1 2405 9 view .LVU1596
 5158 00c4 0222     		movs	r2, #2
 5159 00c6 4FF49071 		mov	r1, #288
 5160 00ca 0DF10600 		add	r0, sp, #6
 5161 00ce FFF7FEFF 		bl	HW_EscRead
 5162              	.LVL417:
ARM GAS  /tmp/ccd2INFf.s 			page 147


2406:Lib/ssc/src/ecatslv.c **** 
 5163              		.loc 1 2406 9 view .LVU1597
2411:Lib/ssc/src/ecatslv.c **** 
 5164              		.loc 1 2411 9 view .LVU1598
2411:Lib/ssc/src/ecatslv.c **** 
 5165              		.loc 1 2411 20 is_stmt 0 view .LVU1599
 5166 00d2 24F01104 		bic	r4, r4, #17
 5167              	.LVL418:
2411:Lib/ssc/src/ecatslv.c **** 
 5168              		.loc 1 2411 20 view .LVU1600
 5169 00d6 A4B2     		uxth	r4, r4
2413:Lib/ssc/src/ecatslv.c ****         
 5170              		.loc 1 2413 9 is_stmt 1 view .LVU1601
 5171 00d8 0021     		movs	r1, #0
 5172 00da 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 5173 00de FFF7FEFF 		bl	AL_ControlInd
 5174              	.LVL419:
 5175 00e2 A5E7     		b	.L404
 5176              	.LVL420:
 5177              	.L418:
2422:Lib/ssc/src/ecatslv.c **** 
 5178              		.loc 1 2422 9 view .LVU1602
2422:Lib/ssc/src/ecatslv.c **** 
 5179              		.loc 1 2422 20 is_stmt 0 view .LVU1603
 5180 00e4 24F01004 		bic	r4, r4, #16
 5181              	.LVL421:
2422:Lib/ssc/src/ecatslv.c **** 
 5182              		.loc 1 2422 20 view .LVU1604
 5183 00e8 A4B2     		uxth	r4, r4
2425:Lib/ssc/src/ecatslv.c ****     }
 5184              		.loc 1 2425 9 is_stmt 1 view .LVU1605
 5185 00ea 0021     		movs	r1, #0
 5186 00ec 00F00F00 		and	r0, r0, #15
 5187 00f0 FFF7FEFF 		bl	AL_ControlInd
 5188              	.LVL422:
 5189 00f4 ABE7     		b	.L405
 5190              	.LVL423:
 5191              	.L419:
2430:Lib/ssc/src/ecatslv.c ****     }
 5192              		.loc 1 2430 9 view .LVU1606
 5193 00f6 FFF7FEFF 		bl	AL_ControlRes
 5194              	.LVL424:
 5195 00fa ACE7     		b	.L406
 5196              	.L420:
2444:Lib/ssc/src/ecatslv.c **** 
 5197              		.loc 1 2444 13 view .LVU1607
 5198 00fc 104B     		ldr	r3, .L423+8
 5199 00fe 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5200 0100 0021     		movs	r1, #0
 5201 0102 00F00F00 		and	r0, r0, #15
 5202 0106 FFF7FEFF 		bl	AL_ControlInd
 5203              	.LVL425:
 5204 010a ACE7     		b	.L408
 5205              	.L421:
2451:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
 5206              		.loc 1 2451 13 view .LVU1608
2451:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
ARM GAS  /tmp/ccd2INFf.s 			page 148


 5207              		.loc 1 2451 22 is_stmt 0 view .LVU1609
 5208 010c 0E48     		ldr	r0, .L423+16
 5209 010e 0023     		movs	r3, #0
 5210 0110 0380     		strh	r3, [r0]	@ movhi
2452:Lib/ssc/src/ecatslv.c **** 
 5211              		.loc 1 2452 13 is_stmt 1 view .LVU1610
 5212 0112 0222     		movs	r2, #2
 5213 0114 0D4B     		ldr	r3, .L423+20
 5214 0116 1988     		ldrh	r1, [r3]
 5215 0118 FFF7FEFF 		bl	HW_EscWrite
 5216              	.LVL426:
2456:Lib/ssc/src/ecatslv.c ****             MBX_MailboxReadInd();
 5217              		.loc 1 2456 13 view .LVU1611
2457:Lib/ssc/src/ecatslv.c ****         }
 5218              		.loc 1 2457 13 view .LVU1612
 5219 011c FFF7FEFF 		bl	MBX_MailboxReadInd
 5220              	.LVL427:
 5221 0120 A4E7     		b	.L409
 5222              	.L413:
2474:Lib/ssc/src/ecatslv.c **** 
 5223              		.loc 1 2474 17 view .LVU1613
2474:Lib/ssc/src/ecatslv.c **** 
 5224              		.loc 1 2474 29 is_stmt 0 view .LVU1614
 5225 0122 BDF80430 		ldrh	r3, [sp, #4]
 5226 0126 23F40073 		bic	r3, r3, #512
 5227 012a ADF80430 		strh	r3, [sp, #4]	@ movhi
 5228 012e B5E7     		b	.L414
 5229              	.LVL428:
 5230              	.L422:
2492:Lib/ssc/src/ecatslv.c ****             MBX_CheckAndCopyMailbox();
 5231              		.loc 1 2492 13 is_stmt 1 view .LVU1615
2493:Lib/ssc/src/ecatslv.c **** 
 5232              		.loc 1 2493 13 view .LVU1616
 5233 0130 FFF7FEFF 		bl	MBX_CheckAndCopyMailbox
 5234              	.LVL429:
 5235              		.loc 1 2497 1 is_stmt 0 view .LVU1617
 5236 0134 BDE7     		b	.L402
 5237              	.L424:
 5238 0136 00BF     		.align	2
 5239              	.L423:
 5240 0138 00000000 		.word	bMbxRunning
 5241 013c 00000000 		.word	.LANCHOR36
 5242 0140 00000000 		.word	.LANCHOR5
 5243 0144 00000000 		.word	bMbxRepeatToggle
 5244 0148 00000000 		.word	.LANCHOR37
 5245 014c 00000000 		.word	u16EscAddrSendMbx
 5246              		.cfi_endproc
 5247              	.LFE153:
 5249              		.global	EepromLoaded
 5250              		.global	SyncManInfo
 5251              		.global	SMActivate
 5252              		.global	u16dummy
 5253              		.global	u16ALEventMask
 5254              		.global	nEscAddrInputData
 5255              		.global	nEscAddrOutputData
 5256              		.global	EcatWdValue
 5257              		.global	nAlStatus
ARM GAS  /tmp/ccd2INFf.s 			page 149


 5258              		.global	nMaxEscAddress
 5259              		.global	nMaxSyncMan
 5260              		.global	nPdOutputSize
 5261              		.global	nPdInputSize
 5262              		.global	nEcatStateTrans
 5263              		.global	bEcatWaitForAlControlRes
 5264              		.global	bApplEsmPending
 5265              		.global	u16LocalErrorCode
 5266              		.global	bLocalErrorFlag
 5267              		.global	b3BufferMode
 5268              		.global	bEscIntEnabled
 5269              		.global	LatchInputSync0Counter
 5270              		.global	LatchInputSync0Value
 5271              		.global	Sync1WdValue
 5272              		.global	Sync1WdCounter
 5273              		.global	Sync0WdValue
 5274              		.global	Sync0WdCounter
 5275              		.global	i16WaitForPllRunningCnt
 5276              		.global	i16WaitForPllRunningTimeout
 5277              		.global	bSmSyncSequenceValid
 5278              		.global	u16SmSync0Value
 5279              		.global	u16SmSync0Counter
 5280              		.global	bDcRunning
 5281              		.global	EsmTimeoutCounter
 5282              		.global	bDcSyncActive
 5283              		.global	bWdTrigger
 5284              		.global	bEcatFirstOutputsReceived
 5285              		.global	bEcatInputUpdateRunning
 5286              		.global	bEcatOutputUpdateRunning
 5287              		.section	.bss.EcatWdValue,"aw",%nobits
 5288              		.align	1
 5289              		.set	.LANCHOR20,. + 0
 5292              	EcatWdValue:
 5293 0000 0000     		.space	2
 5294              		.section	.bss.EepromLoaded,"aw",%nobits
 5295              		.set	.LANCHOR0,. + 0
 5298              	EepromLoaded:
 5299 0000 00       		.space	1
 5300              		.section	.bss.EsmTimeoutCounter,"aw",%nobits
 5301              		.align	1
 5302              		.set	.LANCHOR33,. + 0
 5305              	EsmTimeoutCounter:
 5306 0000 0000     		.space	2
 5307              		.section	.bss.LatchInputSync0Counter,"aw",%nobits
 5308              		.align	1
 5309              		.set	.LANCHOR17,. + 0
 5312              	LatchInputSync0Counter:
 5313 0000 0000     		.space	2
 5314              		.section	.bss.LatchInputSync0Value,"aw",%nobits
 5315              		.align	1
 5316              		.set	.LANCHOR16,. + 0
 5319              	LatchInputSync0Value:
 5320 0000 0000     		.space	2
 5321              		.section	.bss.SMActivate,"aw",%nobits
 5322              		.align	1
 5323              		.set	.LANCHOR10,. + 0
 5326              	SMActivate:
ARM GAS  /tmp/ccd2INFf.s 			page 150


 5327 0000 0000     		.space	2
 5328              		.section	.bss.Sync0WdCounter,"aw",%nobits
 5329              		.align	1
 5330              		.set	.LANCHOR22,. + 0
 5333              	Sync0WdCounter:
 5334 0000 0000     		.space	2
 5335              		.section	.bss.Sync0WdValue,"aw",%nobits
 5336              		.align	1
 5337              		.set	.LANCHOR21,. + 0
 5340              	Sync0WdValue:
 5341 0000 0000     		.space	2
 5342              		.section	.bss.Sync1WdCounter,"aw",%nobits
 5343              		.align	1
 5344              		.set	.LANCHOR23,. + 0
 5347              	Sync1WdCounter:
 5348 0000 0000     		.space	2
 5349              		.section	.bss.Sync1WdValue,"aw",%nobits
 5350              		.align	1
 5351              		.set	.LANCHOR24,. + 0
 5354              	Sync1WdValue:
 5355 0000 0000     		.space	2
 5356              		.section	.bss.SyncManInfo,"aw",%nobits
 5357              		.align	2
 5358              		.set	.LANCHOR1,. + 0
 5361              	SyncManInfo:
 5362 0000 00000000 		.space	8
 5362      00000000 
 5363              		.section	.bss.b3BufferMode,"aw",%nobits
 5364              		.set	.LANCHOR3,. + 0
 5367              	b3BufferMode:
 5368 0000 00       		.space	1
 5369              		.section	.bss.bApplEsmPending,"aw",%nobits
 5370              		.set	.LANCHOR34,. + 0
 5373              	bApplEsmPending:
 5374 0000 00       		.space	1
 5375              		.section	.bss.bDcRunning,"aw",%nobits
 5376              		.set	.LANCHOR25,. + 0
 5379              	bDcRunning:
 5380 0000 00       		.space	1
 5381              		.section	.bss.bDcSyncActive,"aw",%nobits
 5382              		.set	.LANCHOR15,. + 0
 5385              	bDcSyncActive:
 5386 0000 00       		.space	1
 5387              		.section	.bss.bEcatFirstOutputsReceived,"aw",%nobits
 5388              		.set	.LANCHOR13,. + 0
 5391              	bEcatFirstOutputsReceived:
 5392 0000 00       		.space	1
 5393              		.section	.bss.bEcatInputUpdateRunning,"aw",%nobits
 5394              		.set	.LANCHOR32,. + 0
 5397              	bEcatInputUpdateRunning:
 5398 0000 00       		.space	1
 5399              		.section	.bss.bEcatOutputUpdateRunning,"aw",%nobits
 5400              		.set	.LANCHOR31,. + 0
 5403              	bEcatOutputUpdateRunning:
 5404 0000 00       		.space	1
 5405              		.section	.bss.bEcatWaitForAlControlRes,"aw",%nobits
 5406              		.set	.LANCHOR36,. + 0
ARM GAS  /tmp/ccd2INFf.s 			page 151


 5409              	bEcatWaitForAlControlRes:
 5410 0000 00       		.space	1
 5411              		.section	.bss.bEscIntEnabled,"aw",%nobits
 5412              		.set	.LANCHOR14,. + 0
 5415              	bEscIntEnabled:
 5416 0000 00       		.space	1
 5417              		.section	.bss.bLocalErrorFlag,"aw",%nobits
 5418              		.set	.LANCHOR28,. + 0
 5421              	bLocalErrorFlag:
 5422 0000 00       		.space	1
 5423              		.section	.bss.bSmSyncSequenceValid,"aw",%nobits
 5424              		.set	.LANCHOR26,. + 0
 5427              	bSmSyncSequenceValid:
 5428 0000 00       		.space	1
 5429              		.section	.bss.bWdTrigger,"aw",%nobits
 5430              		.set	.LANCHOR9,. + 0
 5433              	bWdTrigger:
 5434 0000 00       		.space	1
 5435              		.section	.bss.i16WaitForPllRunningCnt,"aw",%nobits
 5436              		.align	1
 5437              		.set	.LANCHOR30,. + 0
 5440              	i16WaitForPllRunningCnt:
 5441 0000 0000     		.space	2
 5442              		.section	.bss.i16WaitForPllRunningTimeout,"aw",%nobits
 5443              		.align	1
 5444              		.set	.LANCHOR27,. + 0
 5447              	i16WaitForPllRunningTimeout:
 5448 0000 0000     		.space	2
 5449              		.section	.bss.nAlStatus,"aw",%nobits
 5450              		.set	.LANCHOR5,. + 0
 5453              	nAlStatus:
 5454 0000 00       		.space	1
 5455              		.section	.bss.nEcatStateTrans,"aw",%nobits
 5456              		.align	1
 5457              		.set	.LANCHOR35,. + 0
 5460              	nEcatStateTrans:
 5461 0000 0000     		.space	2
 5462              		.section	.bss.nEscAddrInputData,"aw",%nobits
 5463              		.align	1
 5464              		.set	.LANCHOR6,. + 0
 5467              	nEscAddrInputData:
 5468 0000 0000     		.space	2
 5469              		.section	.bss.nEscAddrOutputData,"aw",%nobits
 5470              		.align	1
 5471              		.set	.LANCHOR8,. + 0
 5474              	nEscAddrOutputData:
 5475 0000 0000     		.space	2
 5476              		.section	.bss.nMaxEscAddress,"aw",%nobits
 5477              		.align	1
 5478              		.set	.LANCHOR2,. + 0
 5481              	nMaxEscAddress:
 5482 0000 0000     		.space	2
 5483              		.section	.bss.nMaxSyncMan,"aw",%nobits
 5484              		.set	.LANCHOR11,. + 0
 5487              	nMaxSyncMan:
 5488 0000 00       		.space	1
 5489              		.section	.bss.nPdInputSize,"aw",%nobits
ARM GAS  /tmp/ccd2INFf.s 			page 152


 5490              		.align	1
 5491              		.set	.LANCHOR4,. + 0
 5494              	nPdInputSize:
 5495 0000 0000     		.space	2
 5496              		.section	.bss.nPdOutputSize,"aw",%nobits
 5497              		.align	1
 5498              		.set	.LANCHOR7,. + 0
 5501              	nPdOutputSize:
 5502 0000 0000     		.space	2
 5503              		.section	.bss.u16ALEventMask,"aw",%nobits
 5504              		.align	1
 5505              		.set	.LANCHOR12,. + 0
 5508              	u16ALEventMask:
 5509 0000 0000     		.space	2
 5510              		.section	.bss.u16LocalErrorCode,"aw",%nobits
 5511              		.align	1
 5512              		.set	.LANCHOR29,. + 0
 5515              	u16LocalErrorCode:
 5516 0000 0000     		.space	2
 5517              		.section	.bss.u16SmSync0Counter,"aw",%nobits
 5518              		.align	1
 5519              		.set	.LANCHOR19,. + 0
 5522              	u16SmSync0Counter:
 5523 0000 0000     		.space	2
 5524              		.section	.bss.u16SmSync0Value,"aw",%nobits
 5525              		.align	1
 5526              		.set	.LANCHOR18,. + 0
 5529              	u16SmSync0Value:
 5530 0000 0000     		.space	2
 5531              		.section	.bss.u16dummy,"aw",%nobits
 5532              		.align	1
 5533              		.set	.LANCHOR37,. + 0
 5536              	u16dummy:
 5537 0000 0000     		.space	2
 5538              		.text
 5539              	.Letext0:
 5540              		.file 2 "Lib/ssc/include/esc.h"
 5541              		.file 3 "Lib/ssc/include/ecatslv.h"
 5542              		.file 4 "Lib/ssc/include/mailbox.h"
 5543              		.file 5 "Lib/ssc/include/objdef.h"
 5544              		.file 6 "Lib/ssc/include/el9800hw.h"
 5545              		.file 7 "Lib/ssc/include/ecatcoe.h"
 5546              		.file 8 "Lib/ssc_app/include/el9800appl.h"
 5547              		.file 9 "Lib/ssc_app/include/ecatappl.h"
 5548              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 5549              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
ARM GAS  /tmp/ccd2INFf.s 			page 153


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ecatslv.c
     /tmp/ccd2INFf.s:20     .text.ResetALEventMask:0000000000000000 $t
     /tmp/ccd2INFf.s:26     .text.ResetALEventMask:0000000000000000 ResetALEventMask
     /tmp/ccd2INFf.s:79     .text.SetALEventMask:0000000000000000 $t
     /tmp/ccd2INFf.s:85     .text.SetALEventMask:0000000000000000 SetALEventMask
     /tmp/ccd2INFf.s:137    .text.UpdateEEPROMLoadedState:0000000000000000 $t
     /tmp/ccd2INFf.s:143    .text.UpdateEEPROMLoadedState:0000000000000000 UpdateEEPROMLoadedState
     /tmp/ccd2INFf.s:203    .text.UpdateEEPROMLoadedState:000000000000003c $d
     /tmp/ccd2INFf.s:208    .text.GetSyncMan:0000000000000000 $t
     /tmp/ccd2INFf.s:214    .text.GetSyncMan:0000000000000000 GetSyncMan
     /tmp/ccd2INFf.s:245    .text.GetSyncMan:0000000000000018 $d
     /tmp/ccd2INFf.s:250    .text.DisableSyncManChannel:0000000000000000 $t
     /tmp/ccd2INFf.s:256    .text.DisableSyncManChannel:0000000000000000 DisableSyncManChannel
     /tmp/ccd2INFf.s:313    .text.EnableSyncManChannel:0000000000000000 $t
     /tmp/ccd2INFf.s:319    .text.EnableSyncManChannel:0000000000000000 EnableSyncManChannel
     /tmp/ccd2INFf.s:376    .text.CheckSmSettings:0000000000000000 $t
     /tmp/ccd2INFf.s:382    .text.CheckSmSettings:0000000000000000 CheckSmSettings
     /tmp/ccd2INFf.s:1013   .text.CheckSmSettings:000000000000027c $d
     /tmp/ccd2INFf.s:1026   .text.CheckSmSettings:00000000000002a4 $t
     /tmp/ccd2INFf.s:1076   .text.StartInputHandler:0000000000000000 $t
     /tmp/ccd2INFf.s:1082   .text.StartInputHandler:0000000000000000 StartInputHandler
     /tmp/ccd2INFf.s:1447   .text.StartInputHandler:00000000000001b4 $d
     /tmp/ccd2INFf.s:1464   .text.StartInputHandler:00000000000001ec $t
     /tmp/ccd2INFf.s:2001   .text.StartInputHandler:0000000000000434 $d
     /tmp/ccd2INFf.s:2028   .text.StartInputHandler:0000000000000494 $t
     /tmp/ccd2INFf.s:2248   .text.StartInputHandler:000000000000057c $d
     /tmp/ccd2INFf.s:2259   .text.StartOutputHandler:0000000000000000 $t
     /tmp/ccd2INFf.s:2265   .text.StartOutputHandler:0000000000000000 StartOutputHandler
     /tmp/ccd2INFf.s:2313   .text.StartOutputHandler:0000000000000028 $d
     /tmp/ccd2INFf.s:2322   .text.StopOutputHandler:0000000000000000 $t
     /tmp/ccd2INFf.s:2328   .text.StopOutputHandler:0000000000000000 StopOutputHandler
     /tmp/ccd2INFf.s:2349   .text.StopOutputHandler:000000000000000c $d
     /tmp/ccd2INFf.s:2355   .text.StopInputHandler:0000000000000000 $t
     /tmp/ccd2INFf.s:2361   .text.StopInputHandler:0000000000000000 StopInputHandler
     /tmp/ccd2INFf.s:2488   .text.StopInputHandler:0000000000000078 $d
     /tmp/ccd2INFf.s:2512   .text.BackToInitTransition:0000000000000000 $t
     /tmp/ccd2INFf.s:2518   .text.BackToInitTransition:0000000000000000 BackToInitTransition
     /tmp/ccd2INFf.s:2535   .text.BackToInitTransition:0000000000000008 $d
     /tmp/ccd2INFf.s:2540   .text.SetALStatus:0000000000000000 $t
     /tmp/ccd2INFf.s:2546   .text.SetALStatus:0000000000000000 SetALStatus
     /tmp/ccd2INFf.s:2618   .text.SetALStatus:0000000000000048 $d
     /tmp/ccd2INFf.s:2623   .text.AL_ControlInd:0000000000000000 $t
     /tmp/ccd2INFf.s:2629   .text.AL_ControlInd:0000000000000000 AL_ControlInd
     /tmp/ccd2INFf.s:2709   .text.AL_ControlInd:000000000000004a $d
     /tmp/ccd2INFf.s:2876   .text.AL_ControlInd:0000000000000124 $d
     /tmp/ccd2INFf.s:2887   .text.AL_ControlInd:0000000000000144 $t
     /tmp/ccd2INFf.s:2901   .text.AL_ControlInd:000000000000015c $d
     /tmp/ccd2INFf.s:3022   .text.AL_ControlInd:000000000000024c $t
     /tmp/ccd2INFf.s:3354   .text.AL_ControlInd:00000000000003c0 $d
     /tmp/ccd2INFf.s:3364   .text.AL_ControlInd:00000000000003dc $t
     /tmp/ccd2INFf.s:3644   .text.AL_ControlInd:0000000000000524 $d
     /tmp/ccd2INFf.s:3655   .text.AL_ControlRes:0000000000000000 $t
     /tmp/ccd2INFf.s:3661   .text.AL_ControlRes:0000000000000000 AL_ControlRes
     /tmp/ccd2INFf.s:4135   .text.AL_ControlRes:00000000000001e4 $d
     /tmp/ccd2INFf.s:4156   .text.DC_CheckWatchdog:0000000000000000 $t
     /tmp/ccd2INFf.s:4162   .text.DC_CheckWatchdog:0000000000000000 DC_CheckWatchdog
ARM GAS  /tmp/ccd2INFf.s 			page 154


     /tmp/ccd2INFf.s:4329   .text.DC_CheckWatchdog:00000000000000b4 $d
     /tmp/ccd2INFf.s:4344   .text.CheckIfEcatError:0000000000000000 $t
     /tmp/ccd2INFf.s:4350   .text.CheckIfEcatError:0000000000000000 CheckIfEcatError
     /tmp/ccd2INFf.s:4465   .text.CheckIfEcatError:000000000000007c $d
     /tmp/ccd2INFf.s:4476   .text.ECAT_StateChange:0000000000000000 $t
     /tmp/ccd2INFf.s:4482   .text.ECAT_StateChange:0000000000000000 ECAT_StateChange
     /tmp/ccd2INFf.s:4752   .text.ECAT_StateChange:0000000000000114 $d
     /tmp/ccd2INFf.s:4768   .text.ECAT_Init:0000000000000000 $t
     /tmp/ccd2INFf.s:4774   .text.ECAT_Init:0000000000000000 ECAT_Init
     /tmp/ccd2INFf.s:4955   .text.ECAT_Init:00000000000000bc $d
     /tmp/ccd2INFf.s:4981   .text.ECAT_Main:0000000000000000 $t
     /tmp/ccd2INFf.s:4987   .text.ECAT_Main:0000000000000000 ECAT_Main
     /tmp/ccd2INFf.s:5240   .text.ECAT_Main:0000000000000138 $d
     /tmp/ccd2INFf.s:5298   .bss.EepromLoaded:0000000000000000 EepromLoaded
     /tmp/ccd2INFf.s:5361   .bss.SyncManInfo:0000000000000000 SyncManInfo
     /tmp/ccd2INFf.s:5326   .bss.SMActivate:0000000000000000 SMActivate
     /tmp/ccd2INFf.s:5536   .bss.u16dummy:0000000000000000 u16dummy
     /tmp/ccd2INFf.s:5508   .bss.u16ALEventMask:0000000000000000 u16ALEventMask
     /tmp/ccd2INFf.s:5467   .bss.nEscAddrInputData:0000000000000000 nEscAddrInputData
     /tmp/ccd2INFf.s:5474   .bss.nEscAddrOutputData:0000000000000000 nEscAddrOutputData
     /tmp/ccd2INFf.s:5292   .bss.EcatWdValue:0000000000000000 EcatWdValue
     /tmp/ccd2INFf.s:5453   .bss.nAlStatus:0000000000000000 nAlStatus
     /tmp/ccd2INFf.s:5481   .bss.nMaxEscAddress:0000000000000000 nMaxEscAddress
     /tmp/ccd2INFf.s:5487   .bss.nMaxSyncMan:0000000000000000 nMaxSyncMan
     /tmp/ccd2INFf.s:5501   .bss.nPdOutputSize:0000000000000000 nPdOutputSize
     /tmp/ccd2INFf.s:5494   .bss.nPdInputSize:0000000000000000 nPdInputSize
     /tmp/ccd2INFf.s:5460   .bss.nEcatStateTrans:0000000000000000 nEcatStateTrans
     /tmp/ccd2INFf.s:5409   .bss.bEcatWaitForAlControlRes:0000000000000000 bEcatWaitForAlControlRes
     /tmp/ccd2INFf.s:5373   .bss.bApplEsmPending:0000000000000000 bApplEsmPending
     /tmp/ccd2INFf.s:5515   .bss.u16LocalErrorCode:0000000000000000 u16LocalErrorCode
     /tmp/ccd2INFf.s:5421   .bss.bLocalErrorFlag:0000000000000000 bLocalErrorFlag
     /tmp/ccd2INFf.s:5367   .bss.b3BufferMode:0000000000000000 b3BufferMode
     /tmp/ccd2INFf.s:5415   .bss.bEscIntEnabled:0000000000000000 bEscIntEnabled
     /tmp/ccd2INFf.s:5312   .bss.LatchInputSync0Counter:0000000000000000 LatchInputSync0Counter
     /tmp/ccd2INFf.s:5319   .bss.LatchInputSync0Value:0000000000000000 LatchInputSync0Value
     /tmp/ccd2INFf.s:5354   .bss.Sync1WdValue:0000000000000000 Sync1WdValue
     /tmp/ccd2INFf.s:5347   .bss.Sync1WdCounter:0000000000000000 Sync1WdCounter
     /tmp/ccd2INFf.s:5340   .bss.Sync0WdValue:0000000000000000 Sync0WdValue
     /tmp/ccd2INFf.s:5333   .bss.Sync0WdCounter:0000000000000000 Sync0WdCounter
     /tmp/ccd2INFf.s:5440   .bss.i16WaitForPllRunningCnt:0000000000000000 i16WaitForPllRunningCnt
     /tmp/ccd2INFf.s:5447   .bss.i16WaitForPllRunningTimeout:0000000000000000 i16WaitForPllRunningTimeout
     /tmp/ccd2INFf.s:5427   .bss.bSmSyncSequenceValid:0000000000000000 bSmSyncSequenceValid
     /tmp/ccd2INFf.s:5529   .bss.u16SmSync0Value:0000000000000000 u16SmSync0Value
     /tmp/ccd2INFf.s:5522   .bss.u16SmSync0Counter:0000000000000000 u16SmSync0Counter
     /tmp/ccd2INFf.s:5379   .bss.bDcRunning:0000000000000000 bDcRunning
     /tmp/ccd2INFf.s:5305   .bss.EsmTimeoutCounter:0000000000000000 EsmTimeoutCounter
     /tmp/ccd2INFf.s:5385   .bss.bDcSyncActive:0000000000000000 bDcSyncActive
     /tmp/ccd2INFf.s:5433   .bss.bWdTrigger:0000000000000000 bWdTrigger
     /tmp/ccd2INFf.s:5391   .bss.bEcatFirstOutputsReceived:0000000000000000 bEcatFirstOutputsReceived
     /tmp/ccd2INFf.s:5397   .bss.bEcatInputUpdateRunning:0000000000000000 bEcatInputUpdateRunning
     /tmp/ccd2INFf.s:5403   .bss.bEcatOutputUpdateRunning:0000000000000000 bEcatOutputUpdateRunning
     /tmp/ccd2INFf.s:5288   .bss.EcatWdValue:0000000000000000 $d
     /tmp/ccd2INFf.s:5299   .bss.EepromLoaded:0000000000000000 $d
     /tmp/ccd2INFf.s:5301   .bss.EsmTimeoutCounter:0000000000000000 $d
     /tmp/ccd2INFf.s:5308   .bss.LatchInputSync0Counter:0000000000000000 $d
     /tmp/ccd2INFf.s:5315   .bss.LatchInputSync0Value:0000000000000000 $d
     /tmp/ccd2INFf.s:5322   .bss.SMActivate:0000000000000000 $d
ARM GAS  /tmp/ccd2INFf.s 			page 155


     /tmp/ccd2INFf.s:5329   .bss.Sync0WdCounter:0000000000000000 $d
     /tmp/ccd2INFf.s:5336   .bss.Sync0WdValue:0000000000000000 $d
     /tmp/ccd2INFf.s:5343   .bss.Sync1WdCounter:0000000000000000 $d
     /tmp/ccd2INFf.s:5350   .bss.Sync1WdValue:0000000000000000 $d
     /tmp/ccd2INFf.s:5357   .bss.SyncManInfo:0000000000000000 $d
     /tmp/ccd2INFf.s:5368   .bss.b3BufferMode:0000000000000000 $d
     /tmp/ccd2INFf.s:5374   .bss.bApplEsmPending:0000000000000000 $d
     /tmp/ccd2INFf.s:5380   .bss.bDcRunning:0000000000000000 $d
     /tmp/ccd2INFf.s:5386   .bss.bDcSyncActive:0000000000000000 $d
     /tmp/ccd2INFf.s:5392   .bss.bEcatFirstOutputsReceived:0000000000000000 $d
     /tmp/ccd2INFf.s:5398   .bss.bEcatInputUpdateRunning:0000000000000000 $d
     /tmp/ccd2INFf.s:5404   .bss.bEcatOutputUpdateRunning:0000000000000000 $d
     /tmp/ccd2INFf.s:5410   .bss.bEcatWaitForAlControlRes:0000000000000000 $d
     /tmp/ccd2INFf.s:5416   .bss.bEscIntEnabled:0000000000000000 $d
     /tmp/ccd2INFf.s:5422   .bss.bLocalErrorFlag:0000000000000000 $d
     /tmp/ccd2INFf.s:5428   .bss.bSmSyncSequenceValid:0000000000000000 $d
     /tmp/ccd2INFf.s:5434   .bss.bWdTrigger:0000000000000000 $d
     /tmp/ccd2INFf.s:5436   .bss.i16WaitForPllRunningCnt:0000000000000000 $d
     /tmp/ccd2INFf.s:5443   .bss.i16WaitForPllRunningTimeout:0000000000000000 $d
     /tmp/ccd2INFf.s:5454   .bss.nAlStatus:0000000000000000 $d
     /tmp/ccd2INFf.s:5456   .bss.nEcatStateTrans:0000000000000000 $d
     /tmp/ccd2INFf.s:5463   .bss.nEscAddrInputData:0000000000000000 $d
     /tmp/ccd2INFf.s:5470   .bss.nEscAddrOutputData:0000000000000000 $d
     /tmp/ccd2INFf.s:5477   .bss.nMaxEscAddress:0000000000000000 $d
     /tmp/ccd2INFf.s:5488   .bss.nMaxSyncMan:0000000000000000 $d
     /tmp/ccd2INFf.s:5490   .bss.nPdInputSize:0000000000000000 $d
     /tmp/ccd2INFf.s:5497   .bss.nPdOutputSize:0000000000000000 $d
     /tmp/ccd2INFf.s:5504   .bss.u16ALEventMask:0000000000000000 $d
     /tmp/ccd2INFf.s:5511   .bss.u16LocalErrorCode:0000000000000000 $d
     /tmp/ccd2INFf.s:5518   .bss.u16SmSync0Counter:0000000000000000 $d
     /tmp/ccd2INFf.s:5525   .bss.u16SmSync0Value:0000000000000000 $d
     /tmp/ccd2INFf.s:5532   .bss.u16dummy:0000000000000000 $d
     /tmp/ccd2INFf.s:2749   .text.AL_ControlInd:0000000000000071 $d
     /tmp/ccd2INFf.s:2749   .text.AL_ControlInd:0000000000000072 $t

UNDEFINED SYMBOLS
HW_EscRead
HAL_NVIC_DisableIRQ
HW_EscWrite
HAL_NVIC_EnableIRQ
sSyncManOutPar
sSyncManInPar
u16EscAddrSendMbx
u16SendMbxSize
u16EscAddrReceiveMbx
u16ReceiveMbxSize
bSyncSetByUser
PDO_InputMapping
sCycleDiag
APPL_GenerateMapping
MBX_StartMailboxHandler
MBX_StopMailboxHandler
APPL_StartMailboxHandler
APPL_StopMailboxHandler
APPL_StartInputHandler
APPL_StopInputHandler
APPL_StartOutputHandler
ARM GAS  /tmp/ccd2INFf.s 			page 156


APPL_StopOutputHandler
bMbxRunning
APPL_AckErrorInd
sErrorSettings
MBX_Init
COE_Init
MBX_Main
HW_GetALEventRegister
MBX_MailboxRepeatReq
MBX_MailboxReadInd
MBX_CheckAndCopyMailbox
bMbxRepeatToggle
