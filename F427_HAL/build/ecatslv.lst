ARM GAS  /tmp/ccWTp91B.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ecatslv.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ResetALEventMask,"ax",%progbits
  20              		.align	1
  21              		.global	ResetALEventMask
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ResetALEventMask:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "Lib/ssc/src/ecatslv.c"
   1:Lib/ssc/src/ecatslv.c **** /**
   2:Lib/ssc/src/ecatslv.c **** \addtogroup ESM EtherCAT State Machine
   3:Lib/ssc/src/ecatslv.c **** @{
   4:Lib/ssc/src/ecatslv.c **** */
   5:Lib/ssc/src/ecatslv.c **** 
   6:Lib/ssc/src/ecatslv.c **** /**
   7:Lib/ssc/src/ecatslv.c **** \file ecatslv.c
   8:Lib/ssc/src/ecatslv.c **** \author EthercatSSC@beckhoff.com
   9:Lib/ssc/src/ecatslv.c **** \brief Implementation
  10:Lib/ssc/src/ecatslv.c **** This file contains the EtherCAT State Machine.
  11:Lib/ssc/src/ecatslv.c **** 
  12:Lib/ssc/src/ecatslv.c **** \version 5.11
  13:Lib/ssc/src/ecatslv.c **** 
  14:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.10:<br>
  15:Lib/ssc/src/ecatslv.c **** V5.11 COE3: change 0x10F3.2 (Sync Error limit) from UINT32 to UINT16 (according to the ETG.1020)<br
  16:Lib/ssc/src/ecatslv.c **** V5.11 DIAG4: change parameter handling in DIAG_CreateNewMessage()<br>
  17:Lib/ssc/src/ecatslv.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  18:Lib/ssc/src/ecatslv.c **** V5.11 ECAT4: enhance SM/Sync monitoring for input/output only slaves<br>
  19:Lib/ssc/src/ecatslv.c **** V5.11 ECAT5: "Add missing ""bEscAlEventEnbaled"" initialization if ""AL_EVENT_ENBALED"" is 0"""<br>
  20:Lib/ssc/src/ecatslv.c **** V5.11 ECAT7: add missing big endian swapping<br>
  21:Lib/ssc/src/ecatslv.c **** V5.11 ESC1: update max address calculation<br>
  22:Lib/ssc/src/ecatslv.c **** V5.11 ESM1: update calculation of subordinated cycles<br>
  23:Lib/ssc/src/ecatslv.c **** V5.11 ESM2: DC_SUPPORTED, Sync0 is not supported and Sync0 is generated according register values t
  24:Lib/ssc/src/ecatslv.c **** V5.11 ESM3: update checking of the user configured sync type<br>
  25:Lib/ssc/src/ecatslv.c **** V5.11 ESM4: prevent to go from ErrSafeOP to OP without re enabling Sync0/1<br>
  26:Lib/ssc/src/ecatslv.c **** V5.11 ESM5: DPRAM range was double checked<br>
  27:Lib/ssc/src/ecatslv.c **** V5.11 ESM6: in the SO transition wait by default until the master has send process data<br>
  28:Lib/ssc/src/ecatslv.c **** V5.11 HW1: "move hardware independent functions ""HW_DisableSyncManChannel()"", ""HW_EnableSyncManC
  29:Lib/ssc/src/ecatslv.c **** V5.11 HW2: check during ESM handling if the SM address and length is aligned according the ESC acce
ARM GAS  /tmp/ccWTp91B.s 			page 2


  30:Lib/ssc/src/ecatslv.c **** V5.11 TEST9: "add behaviour 0x2020.7 (SDO requests on 0x3006.0 are set to pending until an FoE read
  31:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.01:<br>
  32:Lib/ssc/src/ecatslv.c **** V5.10 COE1: Define one entry description for all 0x1C3x objects and change data type of SI11,12,13 
  33:Lib/ssc/src/ecatslv.c **** V5.10 DIAG1: Define diagmessage textIDs<br>
  34:Lib/ssc/src/ecatslv.c **** V5.10 ECAT13: Update Synchronisation handling (FreeRun,SM Sync, Sync0, Sync1)<br>
  35:Lib/ssc/src/ecatslv.c ****               Compare DC UINT configuration (by ESC Config data) vs. DC activation register setting
  36:Lib/ssc/src/ecatslv.c ****               Update 0x1C3x entries<br>
  37:Lib/ssc/src/ecatslv.c **** V5.10 ESC2: Check if defined SM settings do not exceed the available DPRAM range (in error case AL 
  38:Lib/ssc/src/ecatslv.c **** V5.10 ESC3: Handle DC cControl register values in case of 32Bit ESC access (a Sync activation mask 
  39:Lib/ssc/src/ecatslv.c **** V5.10 ESC4: Mask lower 4 Bit of AL status to get Run led value<br>
  40:Lib/ssc/src/ecatslv.c ****             Invalid RunLed code was calculated if ESC set ECAT Run Led<br>
  41:Lib/ssc/src/ecatslv.c **** V5.10 ESC5: Add missing swapping<br>
  42:Lib/ssc/src/ecatslv.c **** V5.10 ESM2: Update "bApplEsmPending" flag during a transition to a lower state<br>
  43:Lib/ssc/src/ecatslv.c **** V5.10 ESM3: Add "volatile" directive for ESM dummy variables<br>
  44:Lib/ssc/src/ecatslv.c **** V5.10 HW5: Block ESC interrupts during Timer ISR<br>
  45:Lib/ssc/src/ecatslv.c **** V5.10 TEST9: Add option to prevent SM3 unlock during PS<br>
  46:Lib/ssc/src/ecatslv.c **** <br>Changes to version V5.0:<br>
  47:Lib/ssc/src/ecatslv.c **** V5.01 APPL3: Include library demo application<br>
  48:Lib/ssc/src/ecatslv.c **** V5.01 ESC2: Add missed value swapping<br>
  49:Lib/ssc/src/ecatslv.c **** V5.01 ESM1: Don't overwrite the error reason in case of an failed PS transition<br>
  50:Lib/ssc/src/ecatslv.c **** V5.01 ESM2: Don't check the "appl trigger" flag in case on an regular transition to a lower state (
  51:Lib/ssc/src/ecatslv.c **** V5.01 ESM3: Call Error acknowledge indication only if error was acknowledged by the master<br>
  52:Lib/ssc/src/ecatslv.c **** V5.01 HW3: Update blink code of an SM watchdog error<br>
  53:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.42:<br>
  54:Lib/ssc/src/ecatslv.c **** V5.0 ECAT1: Support Explicit Device ID.<br>
  55:Lib/ssc/src/ecatslv.c **** V5.0 ECAT2: Application specific functions are moved to application files.<br>
  56:Lib/ssc/src/ecatslv.c **** V5.0 ECAT3: Global dummy variables used for dummy ESC operations.<br>
  57:Lib/ssc/src/ecatslv.c **** V5.0 ESC1: ESC 32Bit Access added.<br>
  58:Lib/ssc/src/ecatslv.c **** V5.0 ESC2: Support ESC EtherCAT LED Indication.<br>
  59:Lib/ssc/src/ecatslv.c **** V5.0 ESC3: Support EEPROM Emulation.<br>
  60:Lib/ssc/src/ecatslv.c **** V5.0 ESM1: Update "LocalErrorFlag" handling.<br>
  61:Lib/ssc/src/ecatslv.c **** V5.0 ESM2: Update Error Acknowledge by ALControl INIT (without error acknowledge)<br>
  62:Lib/ssc/src/ecatslv.c **** V5.0 ESM3: Handle pending ESM transition<br>
  63:Lib/ssc/src/ecatslv.c **** V5.0 ESM4: ECAT_StateChange() will only be called form application. In case of an communication err
  64:Lib/ssc/src/ecatslv.c **** V5.0 MBX1: Support configuration without mailbox protocol support.<br>
  65:Lib/ssc/src/ecatslv.c **** V5.0 TEST1: Add test application. See Application Note ET9300 for more details.<br>
  66:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.40:<br>
  67:Lib/ssc/src/ecatslv.c **** V4.42 ESM1: Reset local error flag if master set the acknowledge bit (0x120.4)<br>
  68:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.30:<br>
  69:Lib/ssc/src/ecatslv.c **** V4.40 ESM5: Enable output SyncManager if local error acknowledged<br>
  70:Lib/ssc/src/ecatslv.c **** V4.40 HW0: Use common hardware access functions<br>
  71:Lib/ssc/src/ecatslv.c **** V4.40 PDO3: Add support if only input process data is used<br>
  72:Lib/ssc/src/ecatslv.c **** V4.40 ECAT4: Add read SM activation register to acknowledge SM Change event<br>
  73:Lib/ssc/src/ecatslv.c **** V4.40 PDO2: Check if max process data size was exceed<br>
  74:Lib/ssc/src/ecatslv.c **** V4.40 DIAG1: add diagnosis message support<br>
  75:Lib/ssc/src/ecatslv.c **** V4.40 ESM4: Change Check WD setup; add define OP_PD_REQUIRED (defines if process data required in s
  76:Lib/ssc/src/ecatslv.c **** V4.40 WD1: change WD behaviour depending if process data required in OP state<br>
  77:Lib/ssc/src/ecatslv.c **** V4.40 MBX4: Change processing order of mailbox SyncManager flags<br>
  78:Lib/ssc/src/ecatslv.c **** V4.40 ECAT1: Merge content of HW_Main (spihw.c /mcihw.c) to ECAT_Main<br>
  79:Lib/ssc/src/ecatslv.c **** V4.40 ECAT2: Added CheckIfLocalError() to check local flags and set ALStatus /Al Status code if req
  80:Lib/ssc/src/ecatslv.c **** V4.40 ESM2: Add AL_ControlRes() to complete pending state requests. Change SafeOP to OP state respo
  81:Lib/ssc/src/ecatslv.c **** V4.40 ESM1: Prevent double call of StopOutputHandler()<br>
  82:Lib/ssc/src/ecatslv.c **** V4.40 BOOT1: Enable Mailbox SyncManger on state change to BOOT state (to enable FoE)<br>
  83:Lib/ssc/src/ecatslv.c **** V4.40 ESM3: Change State machine behaviour according to ETG.1000 V1.0.2 (state change #26)<br>
  84:Lib/ssc/src/ecatslv.c **** V4.40 LED1: Set error blink code<br>
  85:Lib/ssc/src/ecatslv.c **** V4.40 TIMER1: Added DC_CheckWatchdog() triggered from ECAT_CheckTimer(). Change local Sync0 watchdo
  86:Lib/ssc/src/ecatslv.c **** V4.40 WD1: Change check process data watchdog settings<br>
ARM GAS  /tmp/ccWTp91B.s 			page 3


  87:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.20:<br>
  88:Lib/ssc/src/ecatslv.c **** V4.30 OBJ 3: initialize the object dictionary in state change INIT->PREOP; clear object dictionary 
  89:Lib/ssc/src/ecatslv.c **** V4.30 SYNC: add 0x1C32:10; 0x1C33:10 (Sync0 cycle), change synchronisation control functionality<br
  90:Lib/ssc/src/ecatslv.c **** V4.30 CiA402: add CiA402_Init() call in state change from PREOP to SAFEOP if DC synchronisation is 
  91:Lib/ssc/src/ecatslv.c ****                    else the Init function is called when bus cycle time is calculated [CalcSMCycleT
  92:Lib/ssc/src/ecatslv.c ****                    trigger error handling if the EtherCAT state machine gets a transition from OP t
  93:Lib/ssc/src/ecatslv.c **** V4.20 ECAT 1: add LEGACY_MODE behaviour in ECAT_CheckWatchdog()<br>
  94:Lib/ssc/src/ecatslv.c **** V4.20 DC 1: Add DC pending state machine handling and Dc watchdog functionality<br>
  95:Lib/ssc/src/ecatslv.c **** V4.20 ESM 2: Add State transition from BOOT to INIT<br>
  96:Lib/ssc/src/ecatslv.c **** V4.20 ESM 1: Non LEGACY_MODE State change handling<br>
  97:Lib/ssc/src/ecatslv.c **** V4.11 Renamed the function parameter "code" of Function "SendSmFailedEmergency() to avoid<br>
  98:Lib/ssc/src/ecatslv.c **** problems with some compilers"<br>
  99:Lib/ssc/src/ecatslv.c **** V4.11 ECAT 1: Fixed a possible problem with state change Init -> SafeOP. The output syncmanager<br>
 100:Lib/ssc/src/ecatslv.c **** was enabled by the state change-flag and not by the actual state<br>
 101:Lib/ssc/src/ecatslv.c **** V4.11 LED 1: Clear the error LED during error acknowledgement<br>
 102:Lib/ssc/src/ecatslv.c **** V4.11 ESC 1: fixed size of MBXHEADER in the TFOEMBX struct <br>
 103:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.08:<br>
 104:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 1: clear bEcatOutputsReceived in startMailboxhandler()<br>
 105:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 2: clear bEcatOutputsReceived in stopMailboxhandler()<br>
 106:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 3: when switching from INIT to BOOT the SM settings shall be checked<br>
 107:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 4: APPL_StartInputHandler shall always be called and bEcatInputUpdateRunning shall alway
 108:Lib/ssc/src/ecatslv.c ****               in StartInputHandler independent of the input size<br>
 109:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 5: AL_ControlInd: the error acknowledge behaviour was changed<br>
 110:Lib/ssc/src/ecatslv.c ****               according to the protocol enhancements and the conformance test<br>
 111:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 6: AL_ControlInd: if a state transitions failed the corresponding stop function is<br>
 112:Lib/ssc/src/ecatslv.c ****               called to get a consistent set of variables<br>
 113:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 7: the local application requested to leave the state OP so we have to disable the SM2<b
 114:Lib/ssc/src/ecatslv.c ****                    and make the state change from OP to SAFEOP by calling StopOutputHandler<br>
 115:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 8: the AL Status Code has to be reset if the error was acknowledged by the master<br>
 116:Lib/ssc/src/ecatslv.c **** V4.10 ECAT 9: ECAT_StateChange: when waiting for a State Change response from the application the<b
 117:Lib/ssc/src/ecatslv.c ****               AL Status shall only be written if the final state was reached<br>
 118:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.07:<br>
 119:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 1: The watchdog value was not rounded up<br>
 120:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 2: The value of u16WdValue was not set 0 if the register 0x420 is 0<br>
 121:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 3: The AlStatusCode is changed as parameter of the function AL_ControlInd<br>
 122:Lib/ssc/src/ecatslv.c **** V4.08 ECAT 4: In a state transition OP2PREOP, SAFEOP2INIT or OP2INIT is requested,<br>
 123:Lib/ssc/src/ecatslv.c ****               this was not working correctly if one of the application functions<br>
 124:Lib/ssc/src/ecatslv.c ****               APPL_StopInputHandler or APPL_StopOutputHandler were returning NOERROR_INWORK<br>
 125:Lib/ssc/src/ecatslv.c ****               (because only the first state transition was made in that case)<br>
 126:Lib/ssc/src/ecatslv.c **** V4.08 AOE 1:    AoE was added<br>
 127:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.06:<br>
 128:Lib/ssc/src/ecatslv.c **** V4.07 ECAT 1: The sources for SPI and MCI were merged (in ecat_def.h<br>
 129:Lib/ssc/src/ecatslv.c ****                    set the switch MCI_HW to 1 when using the MCI,<br>
 130:Lib/ssc/src/ecatslv.c ****                    set the switch SPI_HW to 1 when using the SPI<br>
 131:Lib/ssc/src/ecatslv.c **** <br>Changes to version V4.00:<br>
 132:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 1: The Output sync Manager was not disabled when the state OP was left<br>
 133:Lib/ssc/src/ecatslv.c ****               by a local request (watchdog or io error)<br>
 134:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 2: APPL_StopOutputHandler returns an UINT16<br>
 135:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 3: TwinCAT compatibility mode: The state transition to OP is allowed when the<br>
 136:Lib/ssc/src/ecatslv.c ****                     WD-Trigger-Bit of the SM2-Control-Byte (0x814.6) is FALSE, in that case the<br>
 137:Lib/ssc/src/ecatslv.c ****                     watchdog will not be started before the outputs were received the first time<br
 138:Lib/ssc/src/ecatslv.c **** V4.01 ECAT 4: "else" was too much<br>
 139:Lib/ssc/src/ecatslv.c **** <br>Changes to version V3.20:<br>
 140:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 1: The handling of the Sync Manager Parameter was included according to<br>
 141:Lib/ssc/src/ecatslv.c ****               the EtherCAT Guidelines and Protocol Enhancements Specification<br>
 142:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 2: The output sync manager is initialized during the state transition<br>
 143:Lib/ssc/src/ecatslv.c ****               from PREOP to SAFEOP that the master can check if the slave could update<br>
ARM GAS  /tmp/ccWTp91B.s 			page 4


 144:Lib/ssc/src/ecatslv.c ****               inputs and outputs before switching the slave to OP<br>
 145:Lib/ssc/src/ecatslv.c ****               behaviour according to the EtherCAT Guidelines and Protocol Enhancements Specificatio
 146:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 3: The watchdog will be enabled in SAFE-OP that it can be checked if the last SM event<b
 147:Lib/ssc/src/ecatslv.c ****               was received during the watchdog time before switching to OP<br>
 148:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 4: The function CheckSmChannelParameters is included in the function<br>
 149:Lib/ssc/src/ecatslv.c ****               CheckSmSettings to get a better overview<br>
 150:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 5: In synchronous mode the slave should support 1- and 3-buffer mode, 3-buffer mode<br>
 151:Lib/ssc/src/ecatslv.c ****               should be the standard setting, because the controlling if the process data was updat
 152:Lib/ssc/src/ecatslv.c ****               should be done with the TxPDO Toggle, but the 1-buffer mode should be setable too,<br
 153:Lib/ssc/src/ecatslv.c ****               that the master could easily check if all slaves are synchronous by checking the<br>
 154:Lib/ssc/src/ecatslv.c ****               the working counter (if the outputs were not read or the inputs were not written<br>
 155:Lib/ssc/src/ecatslv.c ****               the ESC of the slave would not increment the working counter with expected value<br>
 156:Lib/ssc/src/ecatslv.c ****               if the 1-buffer mode is running)<br>
 157:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 6: The function ECAT_StateChange was added, which the application should call if a local
 158:Lib/ssc/src/ecatslv.c ****                    is detected (with the parameters alStatus = STATE_SAFEOP, alStatusCode = error c
 159:Lib/ssc/src/ecatslv.c ****                    or gone (with the parameters alStatus = STATE_OP, alStatusCode = 0)<br>
 160:Lib/ssc/src/ecatslv.c ****                    or if one of the functions APPL_StartMailboxHandler, APPL_StopMailboxHandler, AP
 161:Lib/ssc/src/ecatslv.c ****                    APPL_StopInputHandler, APPL_StartOutputHandler, APPL_StopOutputHandler has retur
 162:Lib/ssc/src/ecatslv.c ****                    to acknowledge the last state transition (with the parameters alStatus = new AL-
 163:Lib/ssc/src/ecatslv.c ****                    new AL-Status-Code)<br>
 164:Lib/ssc/src/ecatslv.c **** V4.00 ECAT 7: The return values for the AL-StatusCode were changed to UINT16
 165:Lib/ssc/src/ecatslv.c **** */
 166:Lib/ssc/src/ecatslv.c **** 
 167:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 168:Lib/ssc/src/ecatslv.c **** ------
 169:Lib/ssc/src/ecatslv.c **** ------    Includes
 170:Lib/ssc/src/ecatslv.c **** ------
 171:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 172:Lib/ssc/src/ecatslv.c **** 
 173:Lib/ssc/src/ecatslv.c **** #define    _ECATSLV_    1
 174:Lib/ssc/src/ecatslv.c **** #include "ecatslv.h"
 175:Lib/ssc/src/ecatslv.c **** #undef    _ECATSLV_
 176:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT10*/
 177:Lib/ssc/src/ecatslv.c **** /*remove definition of _ECATSLV_ (#ifdef is used in ecatslv.h)*/
 178:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT10*/
 179:Lib/ssc/src/ecatslv.c **** 
 180:Lib/ssc/src/ecatslv.c **** #include "ecatappl.h"
 181:Lib/ssc/src/ecatslv.c **** 
 182:Lib/ssc/src/ecatslv.c **** 
 183:Lib/ssc/src/ecatslv.c **** 
 184:Lib/ssc/src/ecatslv.c **** 
 185:Lib/ssc/src/ecatslv.c **** #include "mailbox.h"
 186:Lib/ssc/src/ecatslv.c **** 
 187:Lib/ssc/src/ecatslv.c **** #include "ecatcoe.h"
 188:Lib/ssc/src/ecatslv.c **** #include "objdef.h"
 189:Lib/ssc/src/ecatslv.c **** 
 190:Lib/ssc/src/ecatslv.c **** 
 191:Lib/ssc/src/ecatslv.c **** 
 192:Lib/ssc/src/ecatslv.c **** #include "el9800appl.h"
 193:Lib/ssc/src/ecatslv.c **** 
 194:Lib/ssc/src/ecatslv.c **** /*--------------------------------------------------------------------------------------
 195:Lib/ssc/src/ecatslv.c **** ------
 196:Lib/ssc/src/ecatslv.c **** ------    local Types and Defines
 197:Lib/ssc/src/ecatslv.c **** ------
 198:Lib/ssc/src/ecatslv.c **** --------------------------------------------------------------------------------------*/
 199:Lib/ssc/src/ecatslv.c **** 
 200:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 5


 201:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 202:Lib/ssc/src/ecatslv.c **** ------
 203:Lib/ssc/src/ecatslv.c **** ------    local variables and constants
 204:Lib/ssc/src/ecatslv.c **** ------
 205:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 206:Lib/ssc/src/ecatslv.c **** UINT16    u16ALEventMask;                      // Value which will be written to the 0x204 register
 207:Lib/ssc/src/ecatslv.c **** 
 208:Lib/ssc/src/ecatslv.c **** /*Dummy variable to trigger read or writes events in the ESC*/
 209:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16    u16dummy;
 210:Lib/ssc/src/ecatslv.c **** 
 211:Lib/ssc/src/ecatslv.c **** 
 212:Lib/ssc/src/ecatslv.c ****         VARVOLATILE UINT16 SMActivate = 0;
 213:Lib/ssc/src/ecatslv.c **** 
 214:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 215:Lib/ssc/src/ecatslv.c **** TSYNCMAN		SyncManInfo;
 216:Lib/ssc/src/ecatslv.c **** 
 217:Lib/ssc/src/ecatslv.c **** //indicates if the EEPORM was loaded correct
 218:Lib/ssc/src/ecatslv.c **** BOOL EepromLoaded = FALSE;
 219:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 220:Lib/ssc/src/ecatslv.c **** ------
 221:Lib/ssc/src/ecatslv.c **** ------    local functions
 222:Lib/ssc/src/ecatslv.c **** ------
 223:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 224:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 225:Lib/ssc/src/ecatslv.c **** /**
 226:Lib/ssc/src/ecatslv.c ****  \param    intMask        interrupt mask (disabled interrupt shall be zero)
 227:Lib/ssc/src/ecatslv.c **** 
 228:Lib/ssc/src/ecatslv.c ****  \brief    This function makes an logical and with the AL Event Mask register (0x204)
 229:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 230:Lib/ssc/src/ecatslv.c **** void ResetALEventMask(UINT16 intMask)
 231:Lib/ssc/src/ecatslv.c **** {
  30              		.loc 1 231 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 231 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              		.cfi_def_cfa_offset 24
  42 0004 0446     		mov	r4, r0
 232:Lib/ssc/src/ecatslv.c ****     UINT16 mask;
  43              		.loc 1 232 5 is_stmt 1 view .LVU2
 233:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
  44              		.loc 1 233 5 view .LVU3
  45 0006 0222     		movs	r2, #2
  46 0008 4FF40171 		mov	r1, #516
  47 000c 0DF10600 		add	r0, sp, #6
  48              	.LVL1:
  49              		.loc 1 233 5 is_stmt 0 view .LVU4
  50 0010 FFF7FEFF 		bl	HW_EscRead
  51              	.LVL2:
 234:Lib/ssc/src/ecatslv.c ****     
 235:Lib/ssc/src/ecatslv.c ****     mask &= intMask;
ARM GAS  /tmp/ccWTp91B.s 			page 6


  52              		.loc 1 235 5 is_stmt 1 view .LVU5
  53              		.loc 1 235 10 is_stmt 0 view .LVU6
  54 0014 BDF80600 		ldrh	r0, [sp, #6]
  55 0018 0440     		ands	r4, r4, r0
  56 001a ADF80640 		strh	r4, [sp, #6]	@ movhi
 236:Lib/ssc/src/ecatslv.c **** 
 237:Lib/ssc/src/ecatslv.c ****     DISABLE_ESC_INT();
  57              		.loc 1 237 5 is_stmt 1 view .LVU7
  58              	.LVL3:
  59              	.LBB22:
  60              	.LBI22:
  61              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.2
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2021
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
ARM GAS  /tmp/ccWTp91B.s 			page 7


  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
ARM GAS  /tmp/ccWTp91B.s 			page 8


 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 9


 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm4.h **** #endif
 212:Drivers/CMSIS/Include/core_cm4.h **** 
 213:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:Drivers/CMSIS/Include/core_cm4.h **** /**
 215:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 10


 217:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:Drivers/CMSIS/Include/core_cm4.h **** */
 221:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 222:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** #else
 224:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:Drivers/CMSIS/Include/core_cm4.h **** #endif
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 230:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:Drivers/CMSIS/Include/core_cm4.h **** 
 234:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h **** 
 237:Drivers/CMSIS/Include/core_cm4.h **** 
 238:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 239:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 240:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 243:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 244:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 245:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 246:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 247:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 248:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:Drivers/CMSIS/Include/core_cm4.h **** */
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** /**
 255:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:Drivers/CMSIS/Include/core_cm4.h ****   @{
 259:Drivers/CMSIS/Include/core_cm4.h ****  */
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h **** /**
 262:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:Drivers/CMSIS/Include/core_cm4.h ****  */
 264:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 265:Drivers/CMSIS/Include/core_cm4.h **** {
 266:Drivers/CMSIS/Include/core_cm4.h ****   struct
 267:Drivers/CMSIS/Include/core_cm4.h ****   {
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
ARM GAS  /tmp/ccWTp91B.s 			page 11


 274:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 281:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** 
 284:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** 
 287:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** 
 290:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** 
 293:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm4.h **** 
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:Drivers/CMSIS/Include/core_cm4.h **** 
 299:Drivers/CMSIS/Include/core_cm4.h **** 
 300:Drivers/CMSIS/Include/core_cm4.h **** /**
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:Drivers/CMSIS/Include/core_cm4.h ****  */
 303:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 304:Drivers/CMSIS/Include/core_cm4.h **** {
 305:Drivers/CMSIS/Include/core_cm4.h ****   struct
 306:Drivers/CMSIS/Include/core_cm4.h ****   {
 307:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 314:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 316:Drivers/CMSIS/Include/core_cm4.h **** 
 317:Drivers/CMSIS/Include/core_cm4.h **** 
 318:Drivers/CMSIS/Include/core_cm4.h **** /**
 319:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:Drivers/CMSIS/Include/core_cm4.h ****  */
 321:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 322:Drivers/CMSIS/Include/core_cm4.h **** {
 323:Drivers/CMSIS/Include/core_cm4.h ****   struct
 324:Drivers/CMSIS/Include/core_cm4.h ****   {
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
ARM GAS  /tmp/ccWTp91B.s 			page 12


 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 340:Drivers/CMSIS/Include/core_cm4.h **** 
 341:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 342:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** 
 345:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** 
 348:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** 
 351:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** 
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** 
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** 
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** 
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm4.h **** 
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm4.h **** 
 372:Drivers/CMSIS/Include/core_cm4.h **** 
 373:Drivers/CMSIS/Include/core_cm4.h **** /**
 374:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:Drivers/CMSIS/Include/core_cm4.h ****  */
 376:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 377:Drivers/CMSIS/Include/core_cm4.h **** {
 378:Drivers/CMSIS/Include/core_cm4.h ****   struct
 379:Drivers/CMSIS/Include/core_cm4.h ****   {
 380:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 387:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 13


 388:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** 
 392:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** 
 398:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** 
 401:Drivers/CMSIS/Include/core_cm4.h **** /**
 402:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:Drivers/CMSIS/Include/core_cm4.h ****   @{
 406:Drivers/CMSIS/Include/core_cm4.h ****  */
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /**
 409:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:Drivers/CMSIS/Include/core_cm4.h ****  */
 411:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 412:Drivers/CMSIS/Include/core_cm4.h **** {
 413:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 430:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:Drivers/CMSIS/Include/core_cm4.h **** 
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** /**
 436:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:Drivers/CMSIS/Include/core_cm4.h ****   @{
 440:Drivers/CMSIS/Include/core_cm4.h ****  */
 441:Drivers/CMSIS/Include/core_cm4.h **** 
 442:Drivers/CMSIS/Include/core_cm4.h **** /**
 443:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccWTp91B.s 			page 14


 445:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 446:Drivers/CMSIS/Include/core_cm4.h **** {
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 469:Drivers/CMSIS/Include/core_cm4.h **** 
 470:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** 
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 15


 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm4.h **** 
 521:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** 
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** 
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
 553:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
ARM GAS  /tmp/ccWTp91B.s 			page 16


 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** 
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
ARM GAS  /tmp/ccWTp91B.s 			page 17


 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** 
 644:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm4.h **** 
 666:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 18


 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** 
 699:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** 
 702:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** 
 705:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:Drivers/CMSIS/Include/core_cm4.h **** 
 713:Drivers/CMSIS/Include/core_cm4.h **** 
 714:Drivers/CMSIS/Include/core_cm4.h **** /**
 715:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:Drivers/CMSIS/Include/core_cm4.h ****   @{
 719:Drivers/CMSIS/Include/core_cm4.h ****  */
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** /**
 722:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:Drivers/CMSIS/Include/core_cm4.h ****  */
 724:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 725:Drivers/CMSIS/Include/core_cm4.h **** {
 726:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
ARM GAS  /tmp/ccWTp91B.s 			page 19


 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:Drivers/CMSIS/Include/core_cm4.h **** 
 735:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:Drivers/CMSIS/Include/core_cm4.h **** 
 753:Drivers/CMSIS/Include/core_cm4.h **** 
 754:Drivers/CMSIS/Include/core_cm4.h **** /**
 755:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:Drivers/CMSIS/Include/core_cm4.h ****   @{
 759:Drivers/CMSIS/Include/core_cm4.h ****  */
 760:Drivers/CMSIS/Include/core_cm4.h **** 
 761:Drivers/CMSIS/Include/core_cm4.h **** /**
 762:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:Drivers/CMSIS/Include/core_cm4.h ****  */
 764:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 765:Drivers/CMSIS/Include/core_cm4.h **** {
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 771:Drivers/CMSIS/Include/core_cm4.h **** 
 772:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** 
 776:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** 
 779:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** 
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
ARM GAS  /tmp/ccWTp91B.s 			page 20


 787:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:Drivers/CMSIS/Include/core_cm4.h **** 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** /**
 807:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:Drivers/CMSIS/Include/core_cm4.h ****   @{
 811:Drivers/CMSIS/Include/core_cm4.h ****  */
 812:Drivers/CMSIS/Include/core_cm4.h **** 
 813:Drivers/CMSIS/Include/core_cm4.h **** /**
 814:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:Drivers/CMSIS/Include/core_cm4.h ****  */
 816:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 817:Drivers/CMSIS/Include/core_cm4.h **** {
 818:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 819:Drivers/CMSIS/Include/core_cm4.h ****   {
 820:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 829:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
ARM GAS  /tmp/ccWTp91B.s 			page 21


 844:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:Drivers/CMSIS/Include/core_cm4.h **** 
 853:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** 
 857:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** 
 860:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** 
 863:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** 
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** 
 875:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:Drivers/CMSIS/Include/core_cm4.h **** 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 886:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:Drivers/CMSIS/Include/core_cm4.h **** 
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** /**
 895:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:Drivers/CMSIS/Include/core_cm4.h ****   @{
 899:Drivers/CMSIS/Include/core_cm4.h ****  */
 900:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 22


 901:Drivers/CMSIS/Include/core_cm4.h **** /**
 902:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:Drivers/CMSIS/Include/core_cm4.h ****  */
 904:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 905:Drivers/CMSIS/Include/core_cm4.h **** {
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 930:Drivers/CMSIS/Include/core_cm4.h **** 
 931:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** 
 935:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** 
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** 
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** 
 947:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** 
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** 
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
ARM GAS  /tmp/ccWTp91B.s 			page 23


 958:Drivers/CMSIS/Include/core_cm4.h **** 
 959:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** 
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** 
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** 
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** 
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** 
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** 
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** 
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:Drivers/CMSIS/Include/core_cm4.h **** 
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:Drivers/CMSIS/Include/core_cm4.h **** 
 986:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:Drivers/CMSIS/Include/core_cm4.h **** 
 994:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:Drivers/CMSIS/Include/core_cm4.h **** 
 998:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1000:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:Drivers/CMSIS/Include/core_cm4.h **** 
1002:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:Drivers/CMSIS/Include/core_cm4.h **** 
1006:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:Drivers/CMSIS/Include/core_cm4.h **** 
1010:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** 
1014:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
ARM GAS  /tmp/ccWTp91B.s 			page 24


1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** 
1017:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** 
1020:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** 
1023:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** 
1026:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** 
1029:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** 
1032:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:Drivers/CMSIS/Include/core_cm4.h **** 
1038:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:Drivers/CMSIS/Include/core_cm4.h **** 
1040:Drivers/CMSIS/Include/core_cm4.h **** 
1041:Drivers/CMSIS/Include/core_cm4.h **** /**
1042:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:Drivers/CMSIS/Include/core_cm4.h ****   @{
1046:Drivers/CMSIS/Include/core_cm4.h ****  */
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /**
1049:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:Drivers/CMSIS/Include/core_cm4.h ****  */
1051:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1052:Drivers/CMSIS/Include/core_cm4.h **** {
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1057:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
ARM GAS  /tmp/ccWTp91B.s 			page 25


1072:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1078:Drivers/CMSIS/Include/core_cm4.h **** 
1079:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:Drivers/CMSIS/Include/core_cm4.h **** 
1083:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:Drivers/CMSIS/Include/core_cm4.h **** 
1087:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** 
1091:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** 
1094:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:Drivers/CMSIS/Include/core_cm4.h **** 
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:Drivers/CMSIS/Include/core_cm4.h **** 
1100:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** 
1118:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** 
1121:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** 
1124:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** 
1127:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
ARM GAS  /tmp/ccWTp91B.s 			page 26


1129:Drivers/CMSIS/Include/core_cm4.h **** 
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:Drivers/CMSIS/Include/core_cm4.h **** 
1133:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:Drivers/CMSIS/Include/core_cm4.h **** 
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:Drivers/CMSIS/Include/core_cm4.h **** 
1140:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** 
1153:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** 
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:Drivers/CMSIS/Include/core_cm4.h **** 
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1171:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:Drivers/CMSIS/Include/core_cm4.h **** 
1173:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** 
1177:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 27


1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:Drivers/CMSIS/Include/core_cm4.h **** 
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:Drivers/CMSIS/Include/core_cm4.h **** 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:Drivers/CMSIS/Include/core_cm4.h **** /**
1204:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:Drivers/CMSIS/Include/core_cm4.h ****   @{
1208:Drivers/CMSIS/Include/core_cm4.h ****  */
1209:Drivers/CMSIS/Include/core_cm4.h **** 
1210:Drivers/CMSIS/Include/core_cm4.h **** /**
1211:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:Drivers/CMSIS/Include/core_cm4.h ****  */
1213:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1214:Drivers/CMSIS/Include/core_cm4.h **** {
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1227:Drivers/CMSIS/Include/core_cm4.h **** 
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:Drivers/CMSIS/Include/core_cm4.h **** 
1230:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
ARM GAS  /tmp/ccWTp91B.s 			page 28


1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** 
1254:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** 
1283:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** 
1289:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** 
1299:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccWTp91B.s 			page 29


1300:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:Drivers/CMSIS/Include/core_cm4.h ****   @{
1304:Drivers/CMSIS/Include/core_cm4.h ****  */
1305:Drivers/CMSIS/Include/core_cm4.h **** 
1306:Drivers/CMSIS/Include/core_cm4.h **** /**
1307:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:Drivers/CMSIS/Include/core_cm4.h ****  */
1309:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1310:Drivers/CMSIS/Include/core_cm4.h **** {
1311:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** 
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** 
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** 
1342:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
ARM GAS  /tmp/ccWTp91B.s 			page 30


1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** 
1397:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:Drivers/CMSIS/Include/core_cm4.h **** 
1408:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** 
1411:Drivers/CMSIS/Include/core_cm4.h **** /**
1412:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
ARM GAS  /tmp/ccWTp91B.s 			page 31


1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:Drivers/CMSIS/Include/core_cm4.h ****   @{
1416:Drivers/CMSIS/Include/core_cm4.h ****  */
1417:Drivers/CMSIS/Include/core_cm4.h **** 
1418:Drivers/CMSIS/Include/core_cm4.h **** /**
1419:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:Drivers/CMSIS/Include/core_cm4.h ****  */
1421:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1422:Drivers/CMSIS/Include/core_cm4.h **** {
1423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1428:Drivers/CMSIS/Include/core_cm4.h **** 
1429:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** 
1436:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** 
1439:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** 
1442:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** 
1448:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** 
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** 
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** 
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:Drivers/CMSIS/Include/core_cm4.h **** 
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
ARM GAS  /tmp/ccWTp91B.s 			page 32


1471:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:Drivers/CMSIS/Include/core_cm4.h **** 
1473:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** 
1477:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** 
1480:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** 
1486:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** 
1489:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** 
1492:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** 
1495:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** 
1501:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** 
1504:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:Drivers/CMSIS/Include/core_cm4.h **** 
1513:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:Drivers/CMSIS/Include/core_cm4.h **** 
1515:Drivers/CMSIS/Include/core_cm4.h **** 
1516:Drivers/CMSIS/Include/core_cm4.h **** /**
1517:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:Drivers/CMSIS/Include/core_cm4.h ****   @{
1521:Drivers/CMSIS/Include/core_cm4.h ****  */
1522:Drivers/CMSIS/Include/core_cm4.h **** 
1523:Drivers/CMSIS/Include/core_cm4.h **** /**
1524:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
ARM GAS  /tmp/ccWTp91B.s 			page 33


1528:Drivers/CMSIS/Include/core_cm4.h **** */
1529:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h **** /**
1532:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:Drivers/CMSIS/Include/core_cm4.h **** */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:Drivers/CMSIS/Include/core_cm4.h **** 
1539:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** /**
1543:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:Drivers/CMSIS/Include/core_cm4.h ****   @{
1547:Drivers/CMSIS/Include/core_cm4.h ****  */
1548:Drivers/CMSIS/Include/core_cm4.h **** 
1549:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:Drivers/CMSIS/Include/core_cm4.h **** 
1559:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1570:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:Drivers/CMSIS/Include/core_cm4.h **** #endif
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:Drivers/CMSIS/Include/core_cm4.h **** 
1576:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1581:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1583:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1584:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
ARM GAS  /tmp/ccWTp91B.s 			page 34


1585:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1586:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1587:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1588:Drivers/CMSIS/Include/core_cm4.h **** /**
1589:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:Drivers/CMSIS/Include/core_cm4.h **** */
1591:Drivers/CMSIS/Include/core_cm4.h **** 
1592:Drivers/CMSIS/Include/core_cm4.h **** 
1593:Drivers/CMSIS/Include/core_cm4.h **** 
1594:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:Drivers/CMSIS/Include/core_cm4.h **** /**
1596:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:Drivers/CMSIS/Include/core_cm4.h ****   @{
1600:Drivers/CMSIS/Include/core_cm4.h ****  */
1601:Drivers/CMSIS/Include/core_cm4.h **** 
1602:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1606:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:Drivers/CMSIS/Include/core_cm4.h **** #else
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:Drivers/CMSIS/Include/core_cm4.h **** 
1622:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1626:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1627:Drivers/CMSIS/Include/core_cm4.h **** #else
1628:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:Drivers/CMSIS/Include/core_cm4.h **** 
1634:Drivers/CMSIS/Include/core_cm4.h **** 
1635:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
ARM GAS  /tmp/ccWTp91B.s 			page 35


1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** 
1644:Drivers/CMSIS/Include/core_cm4.h **** /**
1645:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1649:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:Drivers/CMSIS/Include/core_cm4.h ****  */
1653:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:Drivers/CMSIS/Include/core_cm4.h **** {
1655:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1656:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:Drivers/CMSIS/Include/core_cm4.h **** 
1658:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:Drivers/CMSIS/Include/core_cm4.h ****  */
1684:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:Drivers/CMSIS/Include/core_cm4.h **** {
1686:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:Drivers/CMSIS/Include/core_cm4.h ****   {
1688:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1689:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1691:Drivers/CMSIS/Include/core_cm4.h ****   }
1692:Drivers/CMSIS/Include/core_cm4.h **** }
1693:Drivers/CMSIS/Include/core_cm4.h **** 
1694:Drivers/CMSIS/Include/core_cm4.h **** 
1695:Drivers/CMSIS/Include/core_cm4.h **** /**
1696:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  /tmp/ccWTp91B.s 			page 36


1699:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:Drivers/CMSIS/Include/core_cm4.h ****  */
1703:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:Drivers/CMSIS/Include/core_cm4.h **** {
1705:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:Drivers/CMSIS/Include/core_cm4.h ****   {
1707:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:Drivers/CMSIS/Include/core_cm4.h ****   }
1709:Drivers/CMSIS/Include/core_cm4.h ****   else
1710:Drivers/CMSIS/Include/core_cm4.h ****   {
1711:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1712:Drivers/CMSIS/Include/core_cm4.h ****   }
1713:Drivers/CMSIS/Include/core_cm4.h **** }
1714:Drivers/CMSIS/Include/core_cm4.h **** 
1715:Drivers/CMSIS/Include/core_cm4.h **** 
1716:Drivers/CMSIS/Include/core_cm4.h **** /**
1717:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1718:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:Drivers/CMSIS/Include/core_cm4.h ****  */
1722:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
  62              		.loc 2 1722 22 view .LVU8
  63              	.LBB23:
1723:Drivers/CMSIS/Include/core_cm4.h **** {
1724:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  64              		.loc 2 1724 3 view .LVU9
1725:Drivers/CMSIS/Include/core_cm4.h ****   {
1726:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  65              		.loc 2 1726 5 view .LVU10
  66              		.loc 2 1726 43 is_stmt 0 view .LVU11
  67 001e 094C     		ldr	r4, .L3
  68 0020 4FF40005 		mov	r5, #8388608
  69 0024 C4F88050 		str	r5, [r4, #128]
1727:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
  70              		.loc 2 1727 5 is_stmt 1 view .LVU12
  71              	.LBB24:
  72              	.LBI24:
  73              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/ccWTp91B.s 			page 37


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccWTp91B.s 			page 38


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccWTp91B.s 			page 39


 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
ARM GAS  /tmp/ccWTp91B.s 			page 40


 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccWTp91B.s 			page 41


 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  74              		.loc 3 269 27 view .LVU13
  75              	.LBB25:
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  76              		.loc 3 271 3 view .LVU14
  77              		.syntax unified
  78              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  79 0028 BFF34F8F 		dsb 0xF
  80              	@ 0 "" 2
  81              		.thumb
  82              		.syntax unified
  83              	.LBE25:
  84              	.LBE24:
1728:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
  85              		.loc 2 1728 5 view .LVU15
  86              	.LBB26:
  87              	.LBI26:
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  88              		.loc 3 258 27 view .LVU16
  89              	.LBB27:
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  90              		.loc 3 260 3 view .LVU17
  91              		.syntax unified
  92              	@ 260 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  93 002c BFF36F8F 		isb 0xF
  94              	@ 0 "" 2
  95              	.LVL4:
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  96              		.loc 3 260 3 is_stmt 0 view .LVU18
  97              		.thumb
  98              		.syntax unified
  99              	.LBE27:
ARM GAS  /tmp/ccWTp91B.s 			page 42


 100              	.LBE26:
 101              	.LBE23:
 102              	.LBE22:
 238:Lib/ssc/src/ecatslv.c **** 
 239:Lib/ssc/src/ecatslv.c **** 
 240:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
 103              		.loc 1 240 5 is_stmt 1 view .LVU19
 104 0030 0222     		movs	r2, #2
 105 0032 4FF40171 		mov	r1, #516
 106 0036 0DF10600 		add	r0, sp, #6
 107 003a FFF7FEFF 		bl	HW_EscWrite
 108              	.LVL5:
 241:Lib/ssc/src/ecatslv.c ****     ENABLE_ESC_INT();
 109              		.loc 1 241 5 view .LVU20
 110              	.LBB28:
 111              	.LBI28:
1684:Drivers/CMSIS/Include/core_cm4.h **** {
 112              		.loc 2 1684 22 view .LVU21
 113              	.LBB29:
1686:Drivers/CMSIS/Include/core_cm4.h ****   {
 114              		.loc 2 1686 3 view .LVU22
1688:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 115              		.loc 2 1688 5 view .LVU23
1689:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 116              		.loc 2 1689 5 view .LVU24
1689:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 117              		.loc 2 1689 43 is_stmt 0 view .LVU25
 118 003e 2560     		str	r5, [r4]
1690:Drivers/CMSIS/Include/core_cm4.h ****   }
 119              		.loc 2 1690 5 is_stmt 1 view .LVU26
 120              	.LVL6:
1690:Drivers/CMSIS/Include/core_cm4.h ****   }
 121              		.loc 2 1690 5 is_stmt 0 view .LVU27
 122              	.LBE29:
 123              	.LBE28:
 242:Lib/ssc/src/ecatslv.c **** }
 124              		.loc 1 242 1 view .LVU28
 125 0040 03B0     		add	sp, sp, #12
 126              		.cfi_def_cfa_offset 12
 127              		@ sp needed
 128 0042 30BD     		pop	{r4, r5, pc}
 129              	.L4:
 130              		.align	2
 131              	.L3:
 132 0044 00E100E0 		.word	-536813312
 133              		.cfi_endproc
 134              	.LFE134:
 136              		.section	.text.SetALEventMask,"ax",%progbits
 137              		.align	1
 138              		.global	SetALEventMask
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	SetALEventMask:
 144              	.LVL7:
 145              	.LFB135:
 243:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 43


 244:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 245:Lib/ssc/src/ecatslv.c **** /**
 246:Lib/ssc/src/ecatslv.c ****  \param    intMask        interrupt mask (enabled interrupt shall be one)
 247:Lib/ssc/src/ecatslv.c **** 
 248:Lib/ssc/src/ecatslv.c ****   \brief    This function makes an logical or with the AL Event Mask register (0x204)
 249:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 250:Lib/ssc/src/ecatslv.c **** void SetALEventMask(UINT16 intMask)
 251:Lib/ssc/src/ecatslv.c **** {
 146              		.loc 1 251 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		.loc 1 251 1 is_stmt 0 view .LVU30
 151 0000 30B5     		push	{r4, r5, lr}
 152              		.cfi_def_cfa_offset 12
 153              		.cfi_offset 4, -12
 154              		.cfi_offset 5, -8
 155              		.cfi_offset 14, -4
 156 0002 83B0     		sub	sp, sp, #12
 157              		.cfi_def_cfa_offset 24
 158 0004 0446     		mov	r4, r0
 252:Lib/ssc/src/ecatslv.c ****     UINT16 mask;
 159              		.loc 1 252 5 is_stmt 1 view .LVU31
 253:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
 160              		.loc 1 253 5 view .LVU32
 161 0006 0222     		movs	r2, #2
 162 0008 4FF40171 		mov	r1, #516
 163 000c 0DF10600 		add	r0, sp, #6
 164              	.LVL8:
 165              		.loc 1 253 5 is_stmt 0 view .LVU33
 166 0010 FFF7FEFF 		bl	HW_EscRead
 167              	.LVL9:
 254:Lib/ssc/src/ecatslv.c ****     
 255:Lib/ssc/src/ecatslv.c ****     mask |= intMask;
 168              		.loc 1 255 5 is_stmt 1 view .LVU34
 169              		.loc 1 255 10 is_stmt 0 view .LVU35
 170 0014 BDF80600 		ldrh	r0, [sp, #6]
 171 0018 0443     		orrs	r4, r4, r0
 172 001a ADF80640 		strh	r4, [sp, #6]	@ movhi
 256:Lib/ssc/src/ecatslv.c **** 
 257:Lib/ssc/src/ecatslv.c ****     DISABLE_ESC_INT();
 173              		.loc 1 257 5 is_stmt 1 view .LVU36
 174              	.LVL10:
 175              	.LBB30:
 176              	.LBI30:
1722:Drivers/CMSIS/Include/core_cm4.h **** {
 177              		.loc 2 1722 22 view .LVU37
 178              	.LBB31:
1724:Drivers/CMSIS/Include/core_cm4.h ****   {
 179              		.loc 2 1724 3 view .LVU38
1726:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 180              		.loc 2 1726 5 view .LVU39
1726:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 181              		.loc 2 1726 43 is_stmt 0 view .LVU40
 182 001e 094C     		ldr	r4, .L7
 183 0020 4FF40005 		mov	r5, #8388608
 184 0024 C4F88050 		str	r5, [r4, #128]
ARM GAS  /tmp/ccWTp91B.s 			page 44


1727:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
 185              		.loc 2 1727 5 is_stmt 1 view .LVU41
 186              	.LBB32:
 187              	.LBI32:
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 188              		.loc 3 269 27 view .LVU42
 189              	.LBB33:
 190              		.loc 3 271 3 view .LVU43
 191              		.syntax unified
 192              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 193 0028 BFF34F8F 		dsb 0xF
 194              	@ 0 "" 2
 195              		.thumb
 196              		.syntax unified
 197              	.LBE33:
 198              	.LBE32:
 199              		.loc 2 1728 5 view .LVU44
 200              	.LBB34:
 201              	.LBI34:
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 202              		.loc 3 258 27 view .LVU45
 203              	.LBB35:
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 204              		.loc 3 260 3 view .LVU46
 205              		.syntax unified
 206              	@ 260 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 207 002c BFF36F8F 		isb 0xF
 208              	@ 0 "" 2
 209              	.LVL11:
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 210              		.loc 3 260 3 is_stmt 0 view .LVU47
 211              		.thumb
 212              		.syntax unified
 213              	.LBE35:
 214              	.LBE34:
 215              	.LBE31:
 216              	.LBE30:
 258:Lib/ssc/src/ecatslv.c **** 
 259:Lib/ssc/src/ecatslv.c **** 
 260:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
 217              		.loc 1 260 5 is_stmt 1 view .LVU48
 218 0030 0222     		movs	r2, #2
 219 0032 4FF40171 		mov	r1, #516
 220 0036 0DF10600 		add	r0, sp, #6
 221 003a FFF7FEFF 		bl	HW_EscWrite
 222              	.LVL12:
 261:Lib/ssc/src/ecatslv.c ****     ENABLE_ESC_INT();
 223              		.loc 1 261 5 view .LVU49
 224              	.LBB36:
 225              	.LBI36:
1684:Drivers/CMSIS/Include/core_cm4.h **** {
 226              		.loc 2 1684 22 view .LVU50
 227              	.LBB37:
1686:Drivers/CMSIS/Include/core_cm4.h ****   {
 228              		.loc 2 1686 3 view .LVU51
1688:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 229              		.loc 2 1688 5 view .LVU52
ARM GAS  /tmp/ccWTp91B.s 			page 45


1689:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 230              		.loc 2 1689 5 view .LVU53
1689:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 231              		.loc 2 1689 43 is_stmt 0 view .LVU54
 232 003e 2560     		str	r5, [r4]
1690:Drivers/CMSIS/Include/core_cm4.h ****   }
 233              		.loc 2 1690 5 is_stmt 1 view .LVU55
 234              	.LVL13:
1690:Drivers/CMSIS/Include/core_cm4.h ****   }
 235              		.loc 2 1690 5 is_stmt 0 view .LVU56
 236              	.LBE37:
 237              	.LBE36:
 262:Lib/ssc/src/ecatslv.c **** }
 238              		.loc 1 262 1 view .LVU57
 239 0040 03B0     		add	sp, sp, #12
 240              		.cfi_def_cfa_offset 12
 241              		@ sp needed
 242 0042 30BD     		pop	{r4, r5, pc}
 243              	.L8:
 244              		.align	2
 245              	.L7:
 246 0044 00E100E0 		.word	-536813312
 247              		.cfi_endproc
 248              	.LFE135:
 250              		.section	.text.UpdateEEPROMLoadedState,"ax",%progbits
 251              		.align	1
 252              		.global	UpdateEEPROMLoadedState
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 257              	UpdateEEPROMLoadedState:
 258              	.LFB136:
 263:Lib/ssc/src/ecatslv.c **** 
 264:Lib/ssc/src/ecatslv.c **** 
 265:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 266:Lib/ssc/src/ecatslv.c **** /**
 267:Lib/ssc/src/ecatslv.c **** 
 268:Lib/ssc/src/ecatslv.c **** \brief    This function reads the EEPROM loaded state
 269:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 270:Lib/ssc/src/ecatslv.c **** void UpdateEEPROMLoadedState(void)
 271:Lib/ssc/src/ecatslv.c **** {
 259              		.loc 1 271 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 8
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 00B5     		push	{lr}
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 14, -4
 266 0002 83B0     		sub	sp, sp, #12
 267              		.cfi_def_cfa_offset 16
 268              	.LBB38:
 272:Lib/ssc/src/ecatslv.c ****     {
 273:Lib/ssc/src/ecatslv.c ****        UINT16 TmpVar = 0;
 269              		.loc 1 273 8 view .LVU59
 270              		.loc 1 273 15 is_stmt 0 view .LVU60
 271 0004 0023     		movs	r3, #0
 272 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
ARM GAS  /tmp/ccWTp91B.s 			page 46


 274:Lib/ssc/src/ecatslv.c ****        //read EEPROM loaded information
 275:Lib/ssc/src/ecatslv.c ****        HW_EscReadWord(TmpVar, ESC_EEPROM_CONTROL_OFFSET);
 273              		.loc 1 275 8 is_stmt 1 view .LVU61
 274 000a 0222     		movs	r2, #2
 275 000c 40F20251 		movw	r1, #1282
 276 0010 0DF10600 		add	r0, sp, #6
 277 0014 FFF7FEFF 		bl	HW_EscRead
 278              	.LVL14:
 276:Lib/ssc/src/ecatslv.c ****        TmpVar = SWAPWORD(TmpVar);
 279              		.loc 1 276 8 view .LVU62
 280              		.loc 1 276 15 is_stmt 0 view .LVU63
 281 0018 BDF80630 		ldrh	r3, [sp, #6]
 277:Lib/ssc/src/ecatslv.c **** 
 278:Lib/ssc/src/ecatslv.c ****        if (((TmpVar & ESC_EEPROM_ERROR_CRC) > 0)
 282              		.loc 1 278 8 is_stmt 1 view .LVU64
 283              		.loc 1 278 11 is_stmt 0 view .LVU65
 284 001c 13F4006F 		tst	r3, #2048
 285 0020 02D1     		bne	.L10
 279:Lib/ssc/src/ecatslv.c ****           || ((TmpVar & ESC_EEPROM_ERROR_LOAD) > 0))
 286              		.loc 1 279 11 view .LVU66
 287 0022 13F4805F 		tst	r3, #4096
 288 0026 05D0     		beq	.L11
 289              	.L10:
 280:Lib/ssc/src/ecatslv.c ****        {
 281:Lib/ssc/src/ecatslv.c ****           EepromLoaded = FALSE;
 290              		.loc 1 281 11 is_stmt 1 view .LVU67
 291              		.loc 1 281 24 is_stmt 0 view .LVU68
 292 0028 044B     		ldr	r3, .L14
 293 002a 0022     		movs	r2, #0
 294 002c 1A70     		strb	r2, [r3]
 295              	.L9:
 296              	.LBE38:
 282:Lib/ssc/src/ecatslv.c ****        }
 283:Lib/ssc/src/ecatslv.c ****        else
 284:Lib/ssc/src/ecatslv.c ****        {
 285:Lib/ssc/src/ecatslv.c ****           EepromLoaded = TRUE;
 286:Lib/ssc/src/ecatslv.c ****        }
 287:Lib/ssc/src/ecatslv.c ****     }
 288:Lib/ssc/src/ecatslv.c **** }
 297              		.loc 1 288 1 view .LVU69
 298 002e 03B0     		add	sp, sp, #12
 299              		.cfi_remember_state
 300              		.cfi_def_cfa_offset 4
 301              		@ sp needed
 302 0030 5DF804FB 		ldr	pc, [sp], #4
 303              	.L11:
 304              		.cfi_restore_state
 305              	.LBB39:
 285:Lib/ssc/src/ecatslv.c ****        }
 306              		.loc 1 285 11 is_stmt 1 view .LVU70
 285:Lib/ssc/src/ecatslv.c ****        }
 307              		.loc 1 285 24 is_stmt 0 view .LVU71
 308 0034 014B     		ldr	r3, .L14
 309 0036 0122     		movs	r2, #1
 310 0038 1A70     		strb	r2, [r3]
 311              	.LBE39:
 312              		.loc 1 288 1 view .LVU72
ARM GAS  /tmp/ccWTp91B.s 			page 47


 313 003a F8E7     		b	.L9
 314              	.L15:
 315              		.align	2
 316              	.L14:
 317 003c 00000000 		.word	.LANCHOR0
 318              		.cfi_endproc
 319              	.LFE136:
 321              		.section	.text.GetSyncMan,"ax",%progbits
 322              		.align	1
 323              		.global	GetSyncMan
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	GetSyncMan:
 329              	.LVL15:
 330              	.LFB137:
 289:Lib/ssc/src/ecatslv.c **** 
 290:Lib/ssc/src/ecatslv.c **** 
 291:Lib/ssc/src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 292:Lib/ssc/src/ecatslv.c **** ------
 293:Lib/ssc/src/ecatslv.c **** ------    functions
 294:Lib/ssc/src/ecatslv.c **** ------
 295:Lib/ssc/src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 296:Lib/ssc/src/ecatslv.c **** 
 297:Lib/ssc/src/ecatslv.c **** 
 298:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 299:Lib/ssc/src/ecatslv.c **** /**
 300:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 301:Lib/ssc/src/ecatslv.c **** 
 302:Lib/ssc/src/ecatslv.c ****  \return     pPdSyncMan        Pointer to the settings of requested SYNC Manager channel
 303:Lib/ssc/src/ecatslv.c **** 
 304:Lib/ssc/src/ecatslv.c ****  \brief    This function is called to read the SYNC Manager channel descriptions of the
 305:Lib/ssc/src/ecatslv.c ****              process data SYNC Managers.
 306:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 307:Lib/ssc/src/ecatslv.c **** 
 308:Lib/ssc/src/ecatslv.c **** TSYNCMAN ESCMEM * GetSyncMan( UINT8 channel )
 309:Lib/ssc/src/ecatslv.c **** {
 331              		.loc 1 309 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		.loc 1 309 1 is_stmt 0 view .LVU74
 336 0000 10B5     		push	{r4, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 4, -8
 339              		.cfi_offset 14, -4
 310:Lib/ssc/src/ecatslv.c ****     HW_EscRead((MEM_ADDR *)&SyncManInfo, ESC_SYNCMAN_REG_OFFSET + (channel * SIZEOF_SM_REGISTER), S
 340              		.loc 1 310 5 is_stmt 1 view .LVU75
 341              		.loc 1 310 65 is_stmt 0 view .LVU76
 342 0002 00F58071 		add	r1, r0, #256
 343              		.loc 1 310 5 view .LVU77
 344 0006 044C     		ldr	r4, .L18
 345 0008 0822     		movs	r2, #8
 346 000a C900     		lsls	r1, r1, #3
 347 000c 2046     		mov	r0, r4
 348              	.LVL16:
 349              		.loc 1 310 5 view .LVU78
ARM GAS  /tmp/ccWTp91B.s 			page 48


 350 000e FFF7FEFF 		bl	HW_EscRead
 351              	.LVL17:
 311:Lib/ssc/src/ecatslv.c **** 
 312:Lib/ssc/src/ecatslv.c **** 
 313:Lib/ssc/src/ecatslv.c ****     return &SyncManInfo;
 352              		.loc 1 313 5 is_stmt 1 view .LVU79
 314:Lib/ssc/src/ecatslv.c **** }
 353              		.loc 1 314 1 is_stmt 0 view .LVU80
 354 0012 2046     		mov	r0, r4
 355 0014 10BD     		pop	{r4, pc}
 356              	.L19:
 357 0016 00BF     		.align	2
 358              	.L18:
 359 0018 00000000 		.word	.LANCHOR1
 360              		.cfi_endproc
 361              	.LFE137:
 363              		.section	.text.DisableSyncManChannel,"ax",%progbits
 364              		.align	1
 365              		.global	DisableSyncManChannel
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 370              	DisableSyncManChannel:
 371              	.LVL18:
 372              	.LFB138:
 315:Lib/ssc/src/ecatslv.c **** 
 316:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 317:Lib/ssc/src/ecatslv.c **** /**
 318:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 319:Lib/ssc/src/ecatslv.c **** 
 320:Lib/ssc/src/ecatslv.c ****  \brief    This function disables a Sync Manager channel
 321:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 322:Lib/ssc/src/ecatslv.c **** void DisableSyncManChannel(UINT8 channel)
 323:Lib/ssc/src/ecatslv.c **** {
 373              		.loc 1 323 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		.loc 1 323 1 is_stmt 0 view .LVU82
 378 0000 10B5     		push	{r4, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 4, -8
 381              		.cfi_offset 14, -4
 382 0002 82B0     		sub	sp, sp, #8
 383              		.cfi_def_cfa_offset 16
 324:Lib/ssc/src/ecatslv.c ****     UINT16 Offset;
 384              		.loc 1 324 5 is_stmt 1 view .LVU83
 325:Lib/ssc/src/ecatslv.c ****     //The register 0x806 is only readable from PDI => writing 0 is valid
 326:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16 smStatus = SM_SETTING_PDI_DISABLE;
 385              		.loc 1 326 5 view .LVU84
 386              		.loc 1 326 24 is_stmt 0 view .LVU85
 387 0004 4FF48073 		mov	r3, #256
 388 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
 327:Lib/ssc/src/ecatslv.c ****     Offset = (ESC_SYNCMAN_ACTIVE_OFFSET + (SIZEOF_SM_REGISTER*channel));
 389              		.loc 1 327 5 is_stmt 1 view .LVU86
 390              		.loc 1 327 41 is_stmt 0 view .LVU87
 391 000c C400     		lsls	r4, r0, #3
ARM GAS  /tmp/ccWTp91B.s 			page 49


 392              		.loc 1 327 12 view .LVU88
 393 000e 04F60604 		addw	r4, r4, #2054
 394              	.LVL19:
 328:Lib/ssc/src/ecatslv.c **** 
 329:Lib/ssc/src/ecatslv.c **** 
 330:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(smStatus,Offset);
 395              		.loc 1 330 5 is_stmt 1 view .LVU89
 396 0012 0222     		movs	r2, #2
 397 0014 2146     		mov	r1, r4
 398 0016 0DF10600 		add	r0, sp, #6
 399              	.LVL20:
 400              		.loc 1 330 5 is_stmt 0 view .LVU90
 401 001a FFF7FEFF 		bl	HW_EscWrite
 402              	.LVL21:
 403              	.L21:
 331:Lib/ssc/src/ecatslv.c ****     
 332:Lib/ssc/src/ecatslv.c ****     /*wait until SyncManager is disabled*/
 333:Lib/ssc/src/ecatslv.c ****     do
 404              		.loc 1 333 5 is_stmt 1 discriminator 1 view .LVU91
 334:Lib/ssc/src/ecatslv.c ****     {
 335:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(smStatus, Offset);
 405              		.loc 1 335 9 discriminator 1 view .LVU92
 406 001e 0222     		movs	r2, #2
 407 0020 2146     		mov	r1, r4
 408 0022 0DF10600 		add	r0, sp, #6
 409 0026 FFF7FEFF 		bl	HW_EscRead
 410              	.LVL22:
 336:Lib/ssc/src/ecatslv.c ****     }while(!(smStatus & SM_SETTING_PDI_DISABLE));
 411              		.loc 1 336 11 discriminator 1 view .LVU93
 412              		.loc 1 336 23 is_stmt 0 discriminator 1 view .LVU94
 413 002a BDF80630 		ldrh	r3, [sp, #6]
 414              		.loc 1 336 5 discriminator 1 view .LVU95
 415 002e 13F4807F 		tst	r3, #256
 416 0032 F4D0     		beq	.L21
 337:Lib/ssc/src/ecatslv.c **** }
 417              		.loc 1 337 1 view .LVU96
 418 0034 02B0     		add	sp, sp, #8
 419              		.cfi_def_cfa_offset 8
 420              		@ sp needed
 421 0036 10BD     		pop	{r4, pc}
 422              		.loc 1 337 1 view .LVU97
 423              		.cfi_endproc
 424              	.LFE138:
 426              		.section	.text.EnableSyncManChannel,"ax",%progbits
 427              		.align	1
 428              		.global	EnableSyncManChannel
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 433              	EnableSyncManChannel:
 434              	.LVL23:
 435              	.LFB139:
 338:Lib/ssc/src/ecatslv.c **** 
 339:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 340:Lib/ssc/src/ecatslv.c **** /**
 341:Lib/ssc/src/ecatslv.c ****  \param     channel        Sync Manager channel
 342:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 50


 343:Lib/ssc/src/ecatslv.c ****  \brief    This function enables a Sync Manager channel
 344:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 345:Lib/ssc/src/ecatslv.c **** void EnableSyncManChannel(UINT8 channel)
 346:Lib/ssc/src/ecatslv.c **** {
 436              		.loc 1 346 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		.loc 1 346 1 is_stmt 0 view .LVU99
 441 0000 10B5     		push	{r4, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 4, -8
 444              		.cfi_offset 14, -4
 445 0002 82B0     		sub	sp, sp, #8
 446              		.cfi_def_cfa_offset 16
 347:Lib/ssc/src/ecatslv.c ****     UINT16 Offset;
 447              		.loc 1 347 5 is_stmt 1 view .LVU100
 348:Lib/ssc/src/ecatslv.c ****     //The register 0x806 is only readable from PDI => writing 0 is valid
 349:Lib/ssc/src/ecatslv.c ****     VARVOLATILE UINT16 smStatus = 0x0000;
 448              		.loc 1 349 5 view .LVU101
 449              		.loc 1 349 24 is_stmt 0 view .LVU102
 450 0004 0023     		movs	r3, #0
 451 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
 350:Lib/ssc/src/ecatslv.c ****     Offset = (ESC_SYNCMAN_ACTIVE_OFFSET + (SIZEOF_SM_REGISTER*channel));
 452              		.loc 1 350 5 is_stmt 1 view .LVU103
 453              		.loc 1 350 41 is_stmt 0 view .LVU104
 454 000a C400     		lsls	r4, r0, #3
 455              		.loc 1 350 12 view .LVU105
 456 000c 04F60604 		addw	r4, r4, #2054
 457              	.LVL24:
 351:Lib/ssc/src/ecatslv.c **** 
 352:Lib/ssc/src/ecatslv.c **** 
 353:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(smStatus,Offset);
 458              		.loc 1 353 5 is_stmt 1 view .LVU106
 459 0010 0222     		movs	r2, #2
 460 0012 2146     		mov	r1, r4
 461 0014 0DF10600 		add	r0, sp, #6
 462              	.LVL25:
 463              		.loc 1 353 5 is_stmt 0 view .LVU107
 464 0018 FFF7FEFF 		bl	HW_EscWrite
 465              	.LVL26:
 466              	.L24:
 354:Lib/ssc/src/ecatslv.c ****     
 355:Lib/ssc/src/ecatslv.c ****     /*wait until SyncManager is enabled*/
 356:Lib/ssc/src/ecatslv.c ****     do
 467              		.loc 1 356 5 is_stmt 1 discriminator 1 view .LVU108
 357:Lib/ssc/src/ecatslv.c ****     {
 358:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(smStatus,Offset);
 468              		.loc 1 358 9 discriminator 1 view .LVU109
 469 001c 0222     		movs	r2, #2
 470 001e 2146     		mov	r1, r4
 471 0020 0DF10600 		add	r0, sp, #6
 472 0024 FFF7FEFF 		bl	HW_EscRead
 473              	.LVL27:
 359:Lib/ssc/src/ecatslv.c **** 
 360:Lib/ssc/src/ecatslv.c ****     }while((smStatus & SM_SETTING_PDI_DISABLE));
 474              		.loc 1 360 11 discriminator 1 view .LVU110
ARM GAS  /tmp/ccWTp91B.s 			page 51


 475              		.loc 1 360 22 is_stmt 0 discriminator 1 view .LVU111
 476 0028 BDF80630 		ldrh	r3, [sp, #6]
 477              		.loc 1 360 5 discriminator 1 view .LVU112
 478 002c 13F4807F 		tst	r3, #256
 479 0030 F4D1     		bne	.L24
 361:Lib/ssc/src/ecatslv.c **** }
 480              		.loc 1 361 1 view .LVU113
 481 0032 02B0     		add	sp, sp, #8
 482              		.cfi_def_cfa_offset 8
 483              		@ sp needed
 484 0034 10BD     		pop	{r4, pc}
 485              		.loc 1 361 1 view .LVU114
 486              		.cfi_endproc
 487              	.LFE139:
 489              		.section	.text.CheckSmSettings,"ax",%progbits
 490              		.align	1
 491              		.global	CheckSmSettings
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 496              	CheckSmSettings:
 497              	.LVL28:
 498              	.LFB140:
 362:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 363:Lib/ssc/src/ecatslv.c **** 
 364:Lib/ssc/src/ecatslv.c **** 
 365:Lib/ssc/src/ecatslv.c **** 
 366:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 367:Lib/ssc/src/ecatslv.c **** /**
 368:Lib/ssc/src/ecatslv.c ****  \param  maxChannel    last SM channel which should be checked
 369:Lib/ssc/src/ecatslv.c **** 
 370:Lib/ssc/src/ecatslv.c ****  \return                 0: okay else AL Status Code
 371:Lib/ssc/src/ecatslv.c **** 
 372:Lib/ssc/src/ecatslv.c ****  \brief    This function checks all SM channels
 373:Lib/ssc/src/ecatslv.c **** 
 374:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 375:Lib/ssc/src/ecatslv.c **** 
 376:Lib/ssc/src/ecatslv.c **** UINT8    CheckSmSettings(UINT8 maxChannel)
 377:Lib/ssc/src/ecatslv.c **** {
 499              		.loc 1 377 1 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		.loc 1 377 1 is_stmt 0 view .LVU116
 504 0000 38B5     		push	{r3, r4, r5, lr}
 505              		.cfi_def_cfa_offset 16
 506              		.cfi_offset 3, -16
 507              		.cfi_offset 4, -12
 508              		.cfi_offset 5, -8
 509              		.cfi_offset 14, -4
 378:Lib/ssc/src/ecatslv.c ****     UINT8 i;
 510              		.loc 1 378 5 is_stmt 1 view .LVU117
 379:Lib/ssc/src/ecatslv.c ****     UINT8 result = 0;
 511              		.loc 1 379 5 view .LVU118
 512              	.LVL29:
 380:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM *pSyncMan;
 513              		.loc 1 380 5 view .LVU119
ARM GAS  /tmp/ccWTp91B.s 			page 52


 381:Lib/ssc/src/ecatslv.c ****     UINT16 SMLength = 0;
 514              		.loc 1 381 5 view .LVU120
 382:Lib/ssc/src/ecatslv.c ****     UINT16 SMAddress = 0;
 515              		.loc 1 382 5 view .LVU121
 383:Lib/ssc/src/ecatslv.c **** 
 384:Lib/ssc/src/ecatslv.c ****     //Check if max address defines are within the available ESC address range
 385:Lib/ssc/src/ecatslv.c ****     if((nMaxEscAddress < MAX_PD_WRITE_ADDRESS)
 516              		.loc 1 385 5 view .LVU122
 386:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_PD_READ_ADDRESS)
 387:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM5*/
 388:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_WRITE_ADDRESS)
 389:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM5*/
 390:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_READ_ADDRESS))
 517              		.loc 1 390 9 is_stmt 0 view .LVU123
 518 0002 9E4B     		ldr	r3, .L94
 519 0004 1A88     		ldrh	r2, [r3]
 385:Lib/ssc/src/ecatslv.c ****         ||(nMaxEscAddress < MAX_PD_READ_ADDRESS)
 520              		.loc 1 385 7 view .LVU124
 521 0006 42F6FE73 		movw	r3, #12286
 522 000a 9A42     		cmp	r2, r3
 523 000c 40F22781 		bls	.L43
 524 0010 0446     		mov	r4, r0
 391:Lib/ssc/src/ecatslv.c ****     {
 392:Lib/ssc/src/ecatslv.c ****         /*The defines for maximum SM addresses are invalid for the used ESC (change the defines in 
 393:Lib/ssc/src/ecatslv.c ****         It may be also required to adapt the SM settings in the ESI file*/
 394:Lib/ssc/src/ecatslv.c **** 
 395:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_NOVALIDFIRMWARE;
 396:Lib/ssc/src/ecatslv.c ****     }
 397:Lib/ssc/src/ecatslv.c **** 
 398:Lib/ssc/src/ecatslv.c ****     /* check the Sync Manager Parameter for the Receive Mailbox (Sync Manager Channel 0) */
 399:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 400:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(MAILBOX_WRITE);
 525              		.loc 1 400 5 is_stmt 1 view .LVU125
 526              		.loc 1 400 16 is_stmt 0 view .LVU126
 527 0012 0020     		movs	r0, #0
 528              	.LVL30:
 529              		.loc 1 400 16 view .LVU127
 530 0014 FFF7FEFF 		bl	GetSyncMan
 531              	.LVL31:
 401:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 402:Lib/ssc/src/ecatslv.c **** 
 403:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 532              		.loc 1 403 5 is_stmt 1 view .LVU128
 533              		.loc 1 403 14 is_stmt 0 view .LVU129
 534 0018 4388     		ldrh	r3, [r0, #2]
 535              	.LVL32:
 404:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 536              		.loc 1 404 5 is_stmt 1 view .LVU130
 537              		.loc 1 404 15 is_stmt 0 view .LVU131
 538 001a 0288     		ldrh	r2, [r0]
 539              	.LVL33:
 405:Lib/ssc/src/ecatslv.c **** 
 406:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 407:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 408:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 540              		.loc 1 408 5 is_stmt 1 view .LVU132
 541              		.loc 1 408 8 is_stmt 0 view .LVU133
ARM GAS  /tmp/ccWTp91B.s 			page 53


 542 001c 13F0010F 		tst	r3, #1
 543 0020 40F02081 		bne	.L44
 409:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 410:Lib/ssc/src/ecatslv.c **** 
 411:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 544              		.loc 1 411 5 is_stmt 1 view .LVU134
 545              		.loc 1 411 8 is_stmt 0 view .LVU135
 546 0024 12F0010F 		tst	r2, #1
 547 0028 40F01E81 		bne	.L45
 412:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 413:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 414:Lib/ssc/src/ecatslv.c **** 
 415:Lib/ssc/src/ecatslv.c ****     if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 548              		.loc 1 415 5 is_stmt 1 view .LVU136
 549              		.loc 1 415 29 is_stmt 0 view .LVU137
 550 002c C188     		ldrh	r1, [r0, #6]
 551              		.loc 1 415 8 view .LVU138
 552 002e 11F0010F 		tst	r1, #1
 553 0032 3CD0     		beq	.L46
 416:Lib/ssc/src/ecatslv.c ****         /* receive mailbox is not enabled */
 417:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 418:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM_SET
 554              		.loc 1 418 10 is_stmt 1 view .LVU139
 555              		.loc 1 418 34 is_stmt 0 view .LVU140
 556 0034 8188     		ldrh	r1, [r0, #4]
 557              		.loc 1 418 13 view .LVU141
 558 0036 01F00C00 		and	r0, r1, #12
 559              	.LVL34:
 560              		.loc 1 418 13 view .LVU142
 561 003a 0428     		cmp	r0, #4
 562 003c 01D0     		beq	.L85
 419:Lib/ssc/src/ecatslv.c ****        /* receive mailbox is not writable by the master*/
 420:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 563              		.loc 1 420 16 view .LVU143
 564 003e 1625     		movs	r5, #22
 565 0040 36E0     		b	.L28
 566              	.L85:
 421:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETTING_
 567              		.loc 1 421 10 is_stmt 1 view .LVU144
 568              		.loc 1 421 13 is_stmt 0 view .LVU145
 569 0042 11F0020F 		tst	r1, #2
 570 0046 3DD0     		beq	.L48
 422:Lib/ssc/src/ecatslv.c ****         /* receive mailbox is not in one buffer mode */
 423:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 424:Lib/ssc/src/ecatslv.c ****     else if ( SMLength < MIN_MBX_SIZE )
 571              		.loc 1 424 10 is_stmt 1 view .LVU146
 572              		.loc 1 424 13 is_stmt 0 view .LVU147
 573 0048 212B     		cmp	r3, #33
 574 004a 3DD9     		bls	.L49
 425:Lib/ssc/src/ecatslv.c ****         /* receive mailbox size is too small */
 426:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 427:Lib/ssc/src/ecatslv.c ****     else if ( SMLength > MAX_MBX_SIZE )
 575              		.loc 1 427 10 is_stmt 1 view .LVU148
 576              		.loc 1 427 13 is_stmt 0 view .LVU149
 577 004c B3F5807F 		cmp	r3, #256
 578 0050 3CD8     		bhi	.L50
 428:Lib/ssc/src/ecatslv.c ****         /* receive mailbox size is too great */
ARM GAS  /tmp/ccWTp91B.s 			page 54


 429:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 430:Lib/ssc/src/ecatslv.c ****      else if ( SMAddress < MIN_MBX_WRITE_ADDRESS )
 579              		.loc 1 430 11 is_stmt 1 view .LVU150
 580              		.loc 1 430 14 is_stmt 0 view .LVU151
 581 0052 B2F5805F 		cmp	r2, #4096
 582 0056 3BD3     		bcc	.L51
 431:Lib/ssc/src/ecatslv.c ****         /* receive mailbox address is too small */
 432:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 433:Lib/ssc/src/ecatslv.c ****     else if ( SMAddress > MAX_MBX_WRITE_ADDRESS)
 583              		.loc 1 433 10 is_stmt 1 view .LVU152
 584              		.loc 1 433 13 is_stmt 0 view .LVU153
 585 0058 B2F5405F 		cmp	r2, #12288
 586 005c 01D3     		bcc	.L86
 434:Lib/ssc/src/ecatslv.c ****         /* receive mailbox address is too great */
 435:Lib/ssc/src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 587              		.loc 1 435 16 view .LVU154
 588 005e 1625     		movs	r5, #22
 589 0060 26E0     		b	.L28
 590              	.L86:
 436:Lib/ssc/src/ecatslv.c **** 
 437:Lib/ssc/src/ecatslv.c **** 
 438:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 591              		.loc 1 438 5 is_stmt 1 view .LVU155
 439:Lib/ssc/src/ecatslv.c ****     {
 440:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Send Mailbox (Sync Manager Channel 1) */
 441:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 442:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(MAILBOX_READ);
 592              		.loc 1 442 9 view .LVU156
 593              		.loc 1 442 20 is_stmt 0 view .LVU157
 594 0062 0120     		movs	r0, #1
 595 0064 FFF7FEFF 		bl	GetSyncMan
 596              	.LVL35:
 597              		.loc 1 442 20 view .LVU158
 598 0068 0346     		mov	r3, r0
 599              	.LVL36:
 443:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 444:Lib/ssc/src/ecatslv.c **** 
 445:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 600              		.loc 1 445 5 is_stmt 1 view .LVU159
 601              		.loc 1 445 14 is_stmt 0 view .LVU160
 602 006a 4188     		ldrh	r1, [r0, #2]
 603              	.LVL37:
 446:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 604              		.loc 1 446 5 is_stmt 1 view .LVU161
 605              		.loc 1 446 15 is_stmt 0 view .LVU162
 606 006c 0288     		ldrh	r2, [r0]
 607              	.LVL38:
 447:Lib/ssc/src/ecatslv.c **** 
 448:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 449:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 450:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 608              		.loc 1 450 5 is_stmt 1 view .LVU163
 609              		.loc 1 450 8 is_stmt 0 view .LVU164
 610 006e 11F0010F 		tst	r1, #1
 611 0072 40F0FB80 		bne	.L53
 451:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 452:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 55


 453:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 612              		.loc 1 453 5 is_stmt 1 view .LVU165
 613              		.loc 1 453 8 is_stmt 0 view .LVU166
 614 0076 12F0010F 		tst	r2, #1
 615 007a 40F0F980 		bne	.L54
 454:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 455:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 456:Lib/ssc/src/ecatslv.c **** 
 457:Lib/ssc/src/ecatslv.c ****       if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 616              		.loc 1 457 7 is_stmt 1 view .LVU167
 617              		.loc 1 457 31 is_stmt 0 view .LVU168
 618 007e C088     		ldrh	r0, [r0, #6]
 619              	.LVL39:
 620              		.loc 1 457 10 view .LVU169
 621 0080 10F0010F 		tst	r0, #1
 622 0084 71D0     		beq	.L55
 458:Lib/ssc/src/ecatslv.c ****             /* send mailbox is not enabled */
 459:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 460:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM
 623              		.loc 1 460 14 is_stmt 1 view .LVU170
 624              		.loc 1 460 38 is_stmt 0 view .LVU171
 625 0086 9B88     		ldrh	r3, [r3, #4]
 626              	.LVL40:
 627              		.loc 1 460 17 view .LVU172
 628 0088 13F00C0F 		tst	r3, #12
 629 008c 6FD1     		bne	.L56
 461:Lib/ssc/src/ecatslv.c ****            /* receive mailbox is not readable by the master*/
 462:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 463:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETT
 630              		.loc 1 463 14 is_stmt 1 view .LVU173
 631              		.loc 1 463 17 is_stmt 0 view .LVU174
 632 008e 13F0020F 		tst	r3, #2
 633 0092 6ED0     		beq	.L57
 464:Lib/ssc/src/ecatslv.c ****             /* receive mailbox is not in one buffer mode */
 465:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 466:Lib/ssc/src/ecatslv.c ****         else if ( SMLength < MIN_MBX_SIZE )
 634              		.loc 1 466 14 is_stmt 1 view .LVU175
 635              		.loc 1 466 17 is_stmt 0 view .LVU176
 636 0094 2129     		cmp	r1, #33
 637 0096 6ED9     		bls	.L58
 467:Lib/ssc/src/ecatslv.c ****             /* send mailbox size is too small */
 468:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 469:Lib/ssc/src/ecatslv.c ****         else if ( SMLength > MAX_MBX_SIZE )
 638              		.loc 1 469 14 is_stmt 1 view .LVU177
 639              		.loc 1 469 17 is_stmt 0 view .LVU178
 640 0098 B1F5807F 		cmp	r1, #256
 641 009c 6DD8     		bhi	.L59
 470:Lib/ssc/src/ecatslv.c ****             /* send mailbox size is too great */
 471:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 472:Lib/ssc/src/ecatslv.c ****          else if ( SMAddress < MIN_MBX_READ_ADDRESS )
 642              		.loc 1 472 15 is_stmt 1 view .LVU179
 643              		.loc 1 472 18 is_stmt 0 view .LVU180
 644 009e B2F5805F 		cmp	r2, #4096
 645 00a2 6CD3     		bcc	.L60
 473:Lib/ssc/src/ecatslv.c ****             /* send mailbox address is too small */
 474:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 475:Lib/ssc/src/ecatslv.c ****         else if ( SMAddress > MAX_MBX_READ_ADDRESS )
ARM GAS  /tmp/ccWTp91B.s 			page 56


 646              		.loc 1 475 14 is_stmt 1 view .LVU181
 647              		.loc 1 475 17 is_stmt 0 view .LVU182
 648 00a4 B2F5405F 		cmp	r2, #12288
 649 00a8 6BD2     		bcs	.L61
 379:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM *pSyncMan;
 650              		.loc 1 379 11 view .LVU183
 651 00aa 0025     		movs	r5, #0
 652 00ac 00E0     		b	.L28
 653              	.LVL41:
 654              	.L46:
 417:Lib/ssc/src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM_SET
 655              		.loc 1 417 16 view .LVU184
 656 00ae 1625     		movs	r5, #22
 657              	.LVL42:
 658              	.L28:
 476:Lib/ssc/src/ecatslv.c ****             /* send mailbox address is too great */
 477:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 478:Lib/ssc/src/ecatslv.c **** 
 479:Lib/ssc/src/ecatslv.c ****     }
 480:Lib/ssc/src/ecatslv.c **** 
 481:Lib/ssc/src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_IN )
 659              		.loc 1 481 5 is_stmt 1 view .LVU185
 660              		.loc 1 481 8 is_stmt 0 view .LVU186
 661 00b0 0DB9     		cbnz	r5, .L29
 662              		.loc 1 481 22 discriminator 1 view .LVU187
 663 00b2 032C     		cmp	r4, #3
 664 00b4 0ED8     		bhi	.L87
 665              	.LVL43:
 666              	.L29:
 482:Lib/ssc/src/ecatslv.c ****     {
 483:Lib/ssc/src/ecatslv.c ****         /* b3BufferMode is only set, if inputs and outputs are running in 3-Buffer-Mode when leavin
 484:Lib/ssc/src/ecatslv.c ****         b3BufferMode = TRUE;
 485:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 486:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 487:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 488:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 489:Lib/ssc/src/ecatslv.c **** 
 490:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 491:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 492:Lib/ssc/src/ecatslv.c **** 
 493:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
 494:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 495:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 496:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 497:Lib/ssc/src/ecatslv.c **** 
 498:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 499:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 500:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 501:Lib/ssc/src/ecatslv.c **** 
 502:Lib/ssc/src/ecatslv.c ****         if ((pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLe
 503:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 504:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 505:Lib/ssc/src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 506:Lib/ssc/src/ecatslv.c ****         {
 507:Lib/ssc/src/ecatslv.c ****             /* Sync Manager Channel 3 is active, input size has to greater 0 */
 508:Lib/ssc/src/ecatslv.c ****             if ( SMLength != nPdInputSize || nPdInputSize == 0 || SMLength > MAX_PD_INPUT_SIZE)
 509:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
ARM GAS  /tmp/ccWTp91B.s 			page 57


 510:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 511:Lib/ssc/src/ecatslv.c ****             else
 512:Lib/ssc/src/ecatslv.c ****                 /* sizes matches */
 513:Lib/ssc/src/ecatslv.c ****             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) == SM_
 514:Lib/ssc/src/ecatslv.c ****             {
 515:Lib/ssc/src/ecatslv.c ****                 /* settings match */
 516:Lib/ssc/src/ecatslv.c ****                 if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_READ_ADDRESS )&&( SMAddr
 517:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 518:Lib/ssc/src/ecatslv.c ****                     )
 519:Lib/ssc/src/ecatslv.c ****                 {
 520:Lib/ssc/src/ecatslv.c ****                     /* addresses match */
 521:Lib/ssc/src/ecatslv.c **** 
 522:Lib/ssc/src/ecatslv.c ****                     if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) == 
 523:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 524:Lib/ssc/src/ecatslv.c ****                         b3BufferMode = FALSE;
 525:Lib/ssc/src/ecatslv.c ****                 }
 526:Lib/ssc/src/ecatslv.c ****                 else
 527:Lib/ssc/src/ecatslv.c ****                     /* input address is out of the allowed area or has changed in SAFEOP or OP */
 528:Lib/ssc/src/ecatslv.c ****                     result = SYNCMANCHADDRESS+1;
 529:Lib/ssc/src/ecatslv.c ****             }
 530:Lib/ssc/src/ecatslv.c ****             else
 531:Lib/ssc/src/ecatslv.c ****                 /* input settings do not match */
 532:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSETTINGS+1;
 533:Lib/ssc/src/ecatslv.c ****         }
 534:Lib/ssc/src/ecatslv.c ****         else if ( SMLength != 0 || nPdInputSize != 0 )
 535:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 536:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
 537:Lib/ssc/src/ecatslv.c **** 
 538:Lib/ssc/src/ecatslv.c **** 
 539:Lib/ssc/src/ecatslv.c **** 
 540:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 541:Lib/ssc/src/ecatslv.c ****         {
 542:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMINCFG;
 543:Lib/ssc/src/ecatslv.c ****         }
 544:Lib/ssc/src/ecatslv.c ****     }
 545:Lib/ssc/src/ecatslv.c **** 
 546:Lib/ssc/src/ecatslv.c **** 
 547:Lib/ssc/src/ecatslv.c **** //    else
 548:Lib/ssc/src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_OUT )
 667              		.loc 1 548 5 is_stmt 1 view .LVU188
 668              		.loc 1 548 8 is_stmt 0 view .LVU189
 669 00b6 0DB9     		cbnz	r5, .L31
 670              		.loc 1 548 22 discriminator 1 view .LVU190
 671 00b8 022C     		cmp	r4, #2
 672 00ba 64D8     		bhi	.L88
 673              	.LVL44:
 674              	.L31:
 549:Lib/ssc/src/ecatslv.c ****     {
 550:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Outputs (Sync Manager Channel 2) */
 551:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 552:Lib/ssc/src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 553:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 554:Lib/ssc/src/ecatslv.c **** 
 555:Lib/ssc/src/ecatslv.c ****     SMLength = pSyncMan->Length;
 556:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 557:Lib/ssc/src/ecatslv.c **** 
 558:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) HW2*/
ARM GAS  /tmp/ccWTp91B.s 			page 58


 559:Lib/ssc/src/ecatslv.c ****     //Check if the start address and length are even 16Bit addresses
 560:Lib/ssc/src/ecatslv.c ****     if ((SMLength & 0x1) > 0)
 561:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 562:Lib/ssc/src/ecatslv.c **** 
 563:Lib/ssc/src/ecatslv.c ****     if ((SMAddress & 0x1) > 0)
 564:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 565:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 566:Lib/ssc/src/ecatslv.c **** 
 567:Lib/ssc/src/ecatslv.c ****     if ( (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLengt
 568:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 569:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 570:Lib/ssc/src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 571:Lib/ssc/src/ecatslv.c ****         {
 572:Lib/ssc/src/ecatslv.c ****             /* Sync Manager Channel 2 is active, output size has to greater 0 */
 573:Lib/ssc/src/ecatslv.c ****             if ( SMLength == nPdOutputSize && nPdOutputSize != 0 && SMLength <= ((UINT16)MAX_PD_OUT
 574:Lib/ssc/src/ecatslv.c **** 
 575:Lib/ssc/src/ecatslv.c ****             {
 576:Lib/ssc/src/ecatslv.c ****                 /* sizes match */
 577:Lib/ssc/src/ecatslv.c ****                 if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) ==
 578:Lib/ssc/src/ecatslv.c ****                 {
 579:Lib/ssc/src/ecatslv.c ****                     /* settings match */
 580:Lib/ssc/src/ecatslv.c ****                     if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_WRITE_ADDRESS )&&( S
 581:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 582:Lib/ssc/src/ecatslv.c ****                         )
 583:Lib/ssc/src/ecatslv.c ****                     {
 584:Lib/ssc/src/ecatslv.c ****                         /* addresses match */
 585:Lib/ssc/src/ecatslv.c ****                         {
 586:Lib/ssc/src/ecatslv.c ****                             /* check, if watchdog trigger is enabled */
 587:Lib/ssc/src/ecatslv.c ****                             if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_WATCHDOG
 588:Lib/ssc/src/ecatslv.c ****                             {
 589:Lib/ssc/src/ecatslv.c ****                                 bWdTrigger = TRUE;
 590:Lib/ssc/src/ecatslv.c ****                             }
 591:Lib/ssc/src/ecatslv.c ****                             else
 592:Lib/ssc/src/ecatslv.c ****                             {
 593:Lib/ssc/src/ecatslv.c ****                                 bWdTrigger = FALSE;
 594:Lib/ssc/src/ecatslv.c ****                             }
 595:Lib/ssc/src/ecatslv.c **** 
 596:Lib/ssc/src/ecatslv.c ****                             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_M
 597:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 598:Lib/ssc/src/ecatslv.c ****                                 b3BufferMode = FALSE;
 599:Lib/ssc/src/ecatslv.c ****                         }
 600:Lib/ssc/src/ecatslv.c ****                     }
 601:Lib/ssc/src/ecatslv.c ****                     else
 602:Lib/ssc/src/ecatslv.c ****                         /* output address is out of the allowed area or has changed in SAFEOP or OP
 603:Lib/ssc/src/ecatslv.c ****                         result = SYNCMANCHADDRESS+1;
 604:Lib/ssc/src/ecatslv.c ****                 }
 605:Lib/ssc/src/ecatslv.c ****                 else
 606:Lib/ssc/src/ecatslv.c ****                     /* output settings do not match */
 607:Lib/ssc/src/ecatslv.c ****                     result = SYNCMANCHSETTINGS+1;
 608:Lib/ssc/src/ecatslv.c ****             }
 609:Lib/ssc/src/ecatslv.c ****             else
 610:Lib/ssc/src/ecatslv.c ****                 /* output sizes don't match */
 611:Lib/ssc/src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 612:Lib/ssc/src/ecatslv.c ****         }
 613:Lib/ssc/src/ecatslv.c ****         else if ( SMLength != 0 || nPdOutputSize != 0 )
 614:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 615:Lib/ssc/src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
ARM GAS  /tmp/ccWTp91B.s 			page 59


 616:Lib/ssc/src/ecatslv.c **** 
 617:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 618:Lib/ssc/src/ecatslv.c ****         {
 619:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMOUTCFG;
 620:Lib/ssc/src/ecatslv.c ****         }
 621:Lib/ssc/src/ecatslv.c ****     }
 622:Lib/ssc/src/ecatslv.c **** 
 623:Lib/ssc/src/ecatslv.c **** 
 624:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 675              		.loc 1 624 5 is_stmt 1 view .LVU191
 676              		.loc 1 624 8 is_stmt 0 view .LVU192
 677 00bc 002D     		cmp	r5, #0
 678 00be 00F0C980 		beq	.L41
 679 00c2 CDE0     		b	.L27
 680              	.LVL45:
 681              	.L48:
 423:Lib/ssc/src/ecatslv.c ****     else if ( SMLength < MIN_MBX_SIZE )
 682              		.loc 1 423 16 view .LVU193
 683 00c4 1625     		movs	r5, #22
 684 00c6 F3E7     		b	.L28
 685              	.L49:
 426:Lib/ssc/src/ecatslv.c ****     else if ( SMLength > MAX_MBX_SIZE )
 686              		.loc 1 426 16 view .LVU194
 687 00c8 1625     		movs	r5, #22
 688 00ca F1E7     		b	.L28
 689              	.L50:
 429:Lib/ssc/src/ecatslv.c ****      else if ( SMAddress < MIN_MBX_WRITE_ADDRESS )
 690              		.loc 1 429 16 view .LVU195
 691 00cc 1625     		movs	r5, #22
 692 00ce EFE7     		b	.L28
 693              	.L51:
 432:Lib/ssc/src/ecatslv.c ****     else if ( SMAddress > MAX_MBX_WRITE_ADDRESS)
 694              		.loc 1 432 16 view .LVU196
 695 00d0 1625     		movs	r5, #22
 696 00d2 EDE7     		b	.L28
 697              	.LVL46:
 698              	.L87:
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 699              		.loc 1 484 9 is_stmt 1 view .LVU197
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 700              		.loc 1 484 22 is_stmt 0 view .LVU198
 701 00d4 6A4B     		ldr	r3, .L94+4
 702 00d6 0122     		movs	r2, #1
 703              	.LVL47:
 484:Lib/ssc/src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 704              		.loc 1 484 22 view .LVU199
 705 00d8 1A70     		strb	r2, [r3]
 487:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 706              		.loc 1 487 9 is_stmt 1 view .LVU200
 487:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 707              		.loc 1 487 20 is_stmt 0 view .LVU201
 708 00da 0320     		movs	r0, #3
 709 00dc FFF7FEFF 		bl	GetSyncMan
 710              	.LVL48:
 490:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 711              		.loc 1 490 5 is_stmt 1 view .LVU202
 490:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
ARM GAS  /tmp/ccWTp91B.s 			page 60


 712              		.loc 1 490 14 is_stmt 0 view .LVU203
 713 00e0 4288     		ldrh	r2, [r0, #2]
 714              	.LVL49:
 491:Lib/ssc/src/ecatslv.c **** 
 715              		.loc 1 491 5 is_stmt 1 view .LVU204
 491:Lib/ssc/src/ecatslv.c **** 
 716              		.loc 1 491 15 is_stmt 0 view .LVU205
 717 00e2 0188     		ldrh	r1, [r0]
 718              	.LVL50:
 495:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 719              		.loc 1 495 5 is_stmt 1 view .LVU206
 495:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 720              		.loc 1 495 8 is_stmt 0 view .LVU207
 721 00e4 12F0010F 		tst	r2, #1
 722 00e8 40F0C480 		bne	.L62
 498:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 723              		.loc 1 498 5 is_stmt 1 view .LVU208
 498:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 724              		.loc 1 498 8 is_stmt 0 view .LVU209
 725 00ec 11F0010F 		tst	r1, #1
 726 00f0 40F0C280 		bne	.L63
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 727              		.loc 1 502 9 is_stmt 1 view .LVU210
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 728              		.loc 1 502 32 is_stmt 0 view .LVU211
 729 00f4 C388     		ldrh	r3, [r0, #6]
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 730              		.loc 1 502 12 view .LVU212
 731 00f6 13F00103 		ands	r3, r3, #1
 732 00fa 02D0     		beq	.L30
 502:Lib/ssc/src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 733              		.loc 1 502 93 discriminator 1 view .LVU213
 734 00fc 002A     		cmp	r2, #0
 735 00fe 00F09580 		beq	.L64
 736              	.L30:
 505:Lib/ssc/src/ecatslv.c ****         {
 737              		.loc 1 505 14 is_stmt 1 view .LVU214
 505:Lib/ssc/src/ecatslv.c ****         {
 738              		.loc 1 505 17 is_stmt 0 view .LVU215
 739 0102 53B3     		cbz	r3, .L32
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 740              		.loc 1 508 13 is_stmt 1 view .LVU216
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 741              		.loc 1 508 27 is_stmt 0 view .LVU217
 742 0104 5F4B     		ldr	r3, .L94+8
 743 0106 1B88     		ldrh	r3, [r3]
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 744              		.loc 1 508 16 view .LVU218
 745 0108 9342     		cmp	r3, r2
 746 010a 01D0     		beq	.L89
 542:Lib/ssc/src/ecatslv.c ****         }
 747              		.loc 1 542 20 view .LVU219
 748 010c 1E25     		movs	r5, #30
 749              	.LVL51:
 542:Lib/ssc/src/ecatslv.c ****         }
 750              		.loc 1 542 20 view .LVU220
 751 010e D5E7     		b	.L31
ARM GAS  /tmp/ccWTp91B.s 			page 61


 752              	.LVL52:
 753              	.L89:
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 754              		.loc 1 508 43 discriminator 1 view .LVU221
 755 0110 002B     		cmp	r3, #0
 756 0112 00F08D80 		beq	.L66
 508:Lib/ssc/src/ecatslv.c ****                 /* sizes don't match */
 757              		.loc 1 508 64 discriminator 2 view .LVU222
 758 0116 442A     		cmp	r2, #68
 759 0118 00F28C80 		bhi	.L67
 513:Lib/ssc/src/ecatslv.c ****             {
 760              		.loc 1 513 13 is_stmt 1 view .LVU223
 513:Lib/ssc/src/ecatslv.c ****             {
 761              		.loc 1 513 37 is_stmt 0 view .LVU224
 762 011c 8388     		ldrh	r3, [r0, #4]
 513:Lib/ssc/src/ecatslv.c ****             {
 763              		.loc 1 513 16 view .LVU225
 764 011e 13F00C0F 		tst	r3, #12
 765 0122 40F08980 		bne	.L68
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 766              		.loc 1 516 17 is_stmt 1 view .LVU226
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 767              		.loc 1 516 36 is_stmt 0 view .LVU227
 768 0126 584A     		ldr	r2, .L94+12
 769              	.LVL53:
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 770              		.loc 1 516 36 view .LVU228
 771 0128 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 772              		.loc 1 516 20 view .LVU229
 773 012a 022A     		cmp	r2, #2
 774 012c 08D0     		beq	.L90
 775              	.L33:
 517:Lib/ssc/src/ecatslv.c ****                     )
 776              		.loc 1 517 20 view .LVU230
 777 012e 022A     		cmp	r2, #2
 778 0130 00F08480 		beq	.L69
 517:Lib/ssc/src/ecatslv.c ****                     )
 779              		.loc 1 517 66 discriminator 1 view .LVU231
 780 0134 554A     		ldr	r2, .L94+16
 781 0136 1288     		ldrh	r2, [r2]
 517:Lib/ssc/src/ecatslv.c ****                     )
 782              		.loc 1 517 52 discriminator 1 view .LVU232
 783 0138 8A42     		cmp	r2, r1
 784 013a 07D0     		beq	.L34
 542:Lib/ssc/src/ecatslv.c ****         }
 785              		.loc 1 542 20 view .LVU233
 786 013c 1E25     		movs	r5, #30
 787              	.LVL54:
 542:Lib/ssc/src/ecatslv.c ****         }
 788              		.loc 1 542 20 view .LVU234
 789 013e BDE7     		b	.L31
 790              	.LVL55:
 791              	.L90:
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 792              		.loc 1 516 52 discriminator 1 view .LVU235
 793 0140 B1F5805F 		cmp	r1, #4096
ARM GAS  /tmp/ccWTp91B.s 			page 62


 794 0144 F3D3     		bcc	.L33
 516:Lib/ssc/src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 795              		.loc 1 516 90 discriminator 2 view .LVU236
 796 0146 B1F5405F 		cmp	r1, #12288
 797 014a F0D2     		bcs	.L33
 798              	.L34:
 522:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 799              		.loc 1 522 21 is_stmt 1 view .LVU237
 522:Lib/ssc/src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 800              		.loc 1 522 24 is_stmt 0 view .LVU238
 801 014c 13F0020F 		tst	r3, #2
 802 0150 B1D0     		beq	.L29
 524:Lib/ssc/src/ecatslv.c ****                 }
 803              		.loc 1 524 25 is_stmt 1 view .LVU239
 524:Lib/ssc/src/ecatslv.c ****                 }
 804              		.loc 1 524 38 is_stmt 0 view .LVU240
 805 0152 4B4B     		ldr	r3, .L94+4
 806 0154 0022     		movs	r2, #0
 807 0156 1A70     		strb	r2, [r3]
 808 0158 ADE7     		b	.L29
 809              	.LVL56:
 810              	.L32:
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 811              		.loc 1 534 14 is_stmt 1 view .LVU241
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 812              		.loc 1 534 17 is_stmt 0 view .LVU242
 813 015a 002A     		cmp	r2, #0
 814 015c 70D1     		bne	.L71
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 815              		.loc 1 534 49 discriminator 1 view .LVU243
 816 015e 494B     		ldr	r3, .L94+8
 817 0160 1B88     		ldrh	r3, [r3]
 534:Lib/ssc/src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 818              		.loc 1 534 33 discriminator 1 view .LVU244
 819 0162 002B     		cmp	r3, #0
 820 0164 A7D0     		beq	.L29
 542:Lib/ssc/src/ecatslv.c ****         }
 821              		.loc 1 542 20 view .LVU245
 822 0166 1E25     		movs	r5, #30
 823              	.LVL57:
 542:Lib/ssc/src/ecatslv.c ****         }
 824              		.loc 1 542 20 view .LVU246
 825 0168 A8E7     		b	.L31
 826              	.LVL58:
 827              	.L55:
 459:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM
 828              		.loc 1 459 20 view .LVU247
 829 016a 1625     		movs	r5, #22
 830 016c A3E7     		b	.L29
 831              	.LVL59:
 832              	.L56:
 462:Lib/ssc/src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETT
 833              		.loc 1 462 20 view .LVU248
 834 016e 1625     		movs	r5, #22
 835 0170 A1E7     		b	.L29
 836              	.L57:
 465:Lib/ssc/src/ecatslv.c ****         else if ( SMLength < MIN_MBX_SIZE )
ARM GAS  /tmp/ccWTp91B.s 			page 63


 837              		.loc 1 465 20 view .LVU249
 838 0172 1625     		movs	r5, #22
 839 0174 9FE7     		b	.L29
 840              	.L58:
 468:Lib/ssc/src/ecatslv.c ****         else if ( SMLength > MAX_MBX_SIZE )
 841              		.loc 1 468 20 view .LVU250
 842 0176 1625     		movs	r5, #22
 843 0178 9DE7     		b	.L29
 844              	.L59:
 471:Lib/ssc/src/ecatslv.c ****          else if ( SMAddress < MIN_MBX_READ_ADDRESS )
 845              		.loc 1 471 20 view .LVU251
 846 017a 1625     		movs	r5, #22
 847 017c 9BE7     		b	.L29
 848              	.L60:
 474:Lib/ssc/src/ecatslv.c ****         else if ( SMAddress > MAX_MBX_READ_ADDRESS )
 849              		.loc 1 474 20 view .LVU252
 850 017e 1625     		movs	r5, #22
 851 0180 99E7     		b	.L29
 852              	.L61:
 477:Lib/ssc/src/ecatslv.c **** 
 853              		.loc 1 477 20 view .LVU253
 854 0182 1625     		movs	r5, #22
 855 0184 97E7     		b	.L29
 856              	.LVL60:
 857              	.L88:
 552:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 858              		.loc 1 552 9 is_stmt 1 view .LVU254
 552:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 859              		.loc 1 552 20 is_stmt 0 view .LVU255
 860 0186 0220     		movs	r0, #2
 861 0188 FFF7FEFF 		bl	GetSyncMan
 862              	.LVL61:
 555:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 863              		.loc 1 555 5 is_stmt 1 view .LVU256
 555:Lib/ssc/src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 864              		.loc 1 555 14 is_stmt 0 view .LVU257
 865 018c 4288     		ldrh	r2, [r0, #2]
 866              	.LVL62:
 556:Lib/ssc/src/ecatslv.c **** 
 867              		.loc 1 556 5 is_stmt 1 view .LVU258
 556:Lib/ssc/src/ecatslv.c **** 
 868              		.loc 1 556 15 is_stmt 0 view .LVU259
 869 018e 0188     		ldrh	r1, [r0]
 870              	.LVL63:
 560:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 871              		.loc 1 560 5 is_stmt 1 view .LVU260
 560:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 872              		.loc 1 560 8 is_stmt 0 view .LVU261
 873 0190 12F0010F 		tst	r2, #1
 874 0194 40F08680 		bne	.L73
 563:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 875              		.loc 1 563 5 is_stmt 1 view .LVU262
 563:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMCFG;
 876              		.loc 1 563 8 is_stmt 0 view .LVU263
 877 0198 11F0010F 		tst	r1, #1
 878 019c 40F08480 		bne	.L74
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
ARM GAS  /tmp/ccWTp91B.s 			page 64


 879              		.loc 1 567 5 is_stmt 1 view .LVU264
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 880              		.loc 1 567 29 is_stmt 0 view .LVU265
 881 01a0 C388     		ldrh	r3, [r0, #6]
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 882              		.loc 1 567 8 view .LVU266
 883 01a2 13F00103 		ands	r3, r3, #1
 884 01a6 01D0     		beq	.L35
 567:Lib/ssc/src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 885              		.loc 1 567 90 discriminator 1 view .LVU267
 886 01a8 002A     		cmp	r2, #0
 887 01aa 7FD0     		beq	.L75
 888              	.L35:
 570:Lib/ssc/src/ecatslv.c ****         {
 889              		.loc 1 570 14 is_stmt 1 view .LVU268
 570:Lib/ssc/src/ecatslv.c ****         {
 890              		.loc 1 570 17 is_stmt 0 view .LVU269
 891 01ac 002B     		cmp	r3, #0
 892 01ae 34D0     		beq	.L36
 573:Lib/ssc/src/ecatslv.c **** 
 893              		.loc 1 573 13 is_stmt 1 view .LVU270
 573:Lib/ssc/src/ecatslv.c **** 
 894              		.loc 1 573 27 is_stmt 0 view .LVU271
 895 01b0 374B     		ldr	r3, .L94+20
 896 01b2 1B88     		ldrh	r3, [r3]
 573:Lib/ssc/src/ecatslv.c **** 
 897              		.loc 1 573 16 view .LVU272
 898 01b4 9342     		cmp	r3, r2
 899 01b6 01D0     		beq	.L91
 619:Lib/ssc/src/ecatslv.c ****         }
 900              		.loc 1 619 20 view .LVU273
 901 01b8 1D25     		movs	r5, #29
 902              	.LVL64:
 619:Lib/ssc/src/ecatslv.c ****         }
 903              		.loc 1 619 20 view .LVU274
 904 01ba 51E0     		b	.L27
 905              	.LVL65:
 906              	.L91:
 573:Lib/ssc/src/ecatslv.c **** 
 907              		.loc 1 573 44 discriminator 1 view .LVU275
 908 01bc 002B     		cmp	r3, #0
 909 01be 77D0     		beq	.L77
 573:Lib/ssc/src/ecatslv.c **** 
 910              		.loc 1 573 66 discriminator 2 view .LVU276
 911 01c0 442A     		cmp	r2, #68
 912 01c2 77D8     		bhi	.L78
 577:Lib/ssc/src/ecatslv.c ****                 {
 913              		.loc 1 577 17 is_stmt 1 view .LVU277
 577:Lib/ssc/src/ecatslv.c ****                 {
 914              		.loc 1 577 41 is_stmt 0 view .LVU278
 915 01c4 8388     		ldrh	r3, [r0, #4]
 577:Lib/ssc/src/ecatslv.c ****                 {
 916              		.loc 1 577 20 view .LVU279
 917 01c6 03F00C02 		and	r2, r3, #12
 918              	.LVL66:
 577:Lib/ssc/src/ecatslv.c ****                 {
 919              		.loc 1 577 20 view .LVU280
ARM GAS  /tmp/ccWTp91B.s 			page 65


 920 01ca 042A     		cmp	r2, #4
 921 01cc 01D0     		beq	.L92
 619:Lib/ssc/src/ecatslv.c ****         }
 922              		.loc 1 619 20 view .LVU281
 923 01ce 1D25     		movs	r5, #29
 924              	.LVL67:
 619:Lib/ssc/src/ecatslv.c ****         }
 925              		.loc 1 619 20 view .LVU282
 926 01d0 46E0     		b	.L27
 927              	.LVL68:
 928              	.L92:
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 929              		.loc 1 580 21 is_stmt 1 view .LVU283
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 930              		.loc 1 580 40 is_stmt 0 view .LVU284
 931 01d2 2D4A     		ldr	r2, .L94+12
 932 01d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 933              		.loc 1 580 24 view .LVU285
 934 01d6 022A     		cmp	r2, #2
 935 01d8 07D0     		beq	.L93
 936              	.L37:
 581:Lib/ssc/src/ecatslv.c ****                         )
 937              		.loc 1 581 24 view .LVU286
 938 01da 022A     		cmp	r2, #2
 939 01dc 6CD0     		beq	.L80
 581:Lib/ssc/src/ecatslv.c ****                         )
 940              		.loc 1 581 70 discriminator 1 view .LVU287
 941 01de 2D4A     		ldr	r2, .L94+24
 942 01e0 1288     		ldrh	r2, [r2]
 581:Lib/ssc/src/ecatslv.c ****                         )
 943              		.loc 1 581 56 discriminator 1 view .LVU288
 944 01e2 8A42     		cmp	r2, r1
 945 01e4 07D0     		beq	.L38
 619:Lib/ssc/src/ecatslv.c ****         }
 946              		.loc 1 619 20 view .LVU289
 947 01e6 1D25     		movs	r5, #29
 948              	.LVL69:
 619:Lib/ssc/src/ecatslv.c ****         }
 949              		.loc 1 619 20 view .LVU290
 950 01e8 3AE0     		b	.L27
 951              	.LVL70:
 952              	.L93:
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 953              		.loc 1 580 56 discriminator 1 view .LVU291
 954 01ea B1F5805F 		cmp	r1, #4096
 955 01ee F4D3     		bcc	.L37
 580:Lib/ssc/src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 956              		.loc 1 580 95 discriminator 2 view .LVU292
 957 01f0 B1F5405F 		cmp	r1, #12288
 958 01f4 F1D2     		bcs	.L37
 959              	.L38:
 587:Lib/ssc/src/ecatslv.c ****                             {
 960              		.loc 1 587 29 is_stmt 1 view .LVU293
 587:Lib/ssc/src/ecatslv.c ****                             {
 961              		.loc 1 587 32 is_stmt 0 view .LVU294
 962 01f6 13F0400F 		tst	r3, #64
ARM GAS  /tmp/ccWTp91B.s 			page 66


 963 01fa 0AD0     		beq	.L39
 589:Lib/ssc/src/ecatslv.c ****                             }
 964              		.loc 1 589 33 is_stmt 1 view .LVU295
 589:Lib/ssc/src/ecatslv.c ****                             }
 965              		.loc 1 589 44 is_stmt 0 view .LVU296
 966 01fc 264A     		ldr	r2, .L94+28
 967 01fe 0121     		movs	r1, #1
 968              	.LVL71:
 589:Lib/ssc/src/ecatslv.c ****                             }
 969              		.loc 1 589 44 view .LVU297
 970 0200 1170     		strb	r1, [r2]
 971              	.LVL72:
 972              	.L40:
 596:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 973              		.loc 1 596 29 is_stmt 1 view .LVU298
 596:Lib/ssc/src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 974              		.loc 1 596 32 is_stmt 0 view .LVU299
 975 0202 13F0020F 		tst	r3, #2
 976 0206 3FF459AF 		beq	.L31
 598:Lib/ssc/src/ecatslv.c ****                         }
 977              		.loc 1 598 33 is_stmt 1 view .LVU300
 598:Lib/ssc/src/ecatslv.c ****                         }
 978              		.loc 1 598 46 is_stmt 0 view .LVU301
 979 020a 1D4B     		ldr	r3, .L94+4
 980 020c 0022     		movs	r2, #0
 981 020e 1A70     		strb	r2, [r3]
 982 0210 54E7     		b	.L31
 983              	.LVL73:
 984              	.L39:
 593:Lib/ssc/src/ecatslv.c ****                             }
 985              		.loc 1 593 33 is_stmt 1 view .LVU302
 593:Lib/ssc/src/ecatslv.c ****                             }
 986              		.loc 1 593 44 is_stmt 0 view .LVU303
 987 0212 214A     		ldr	r2, .L94+28
 988 0214 0021     		movs	r1, #0
 989              	.LVL74:
 593:Lib/ssc/src/ecatslv.c ****                             }
 990              		.loc 1 593 44 view .LVU304
 991 0216 1170     		strb	r1, [r2]
 992              	.LVL75:
 593:Lib/ssc/src/ecatslv.c ****                             }
 993              		.loc 1 593 44 view .LVU305
 994 0218 F3E7     		b	.L40
 995              	.LVL76:
 996              	.L36:
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 997              		.loc 1 613 14 is_stmt 1 view .LVU306
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 998              		.loc 1 613 17 is_stmt 0 view .LVU307
 999 021a 002A     		cmp	r2, #0
 1000 021c 4ED1     		bne	.L82
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 1001              		.loc 1 613 50 discriminator 1 view .LVU308
 1002 021e 1C4B     		ldr	r3, .L94+20
 1003 0220 1B88     		ldrh	r3, [r3]
 613:Lib/ssc/src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 1004              		.loc 1 613 33 discriminator 1 view .LVU309
ARM GAS  /tmp/ccWTp91B.s 			page 67


 1005 0222 002B     		cmp	r3, #0
 1006 0224 3FF44AAF 		beq	.L31
 619:Lib/ssc/src/ecatslv.c ****         }
 1007              		.loc 1 619 20 view .LVU310
 1008 0228 1D25     		movs	r5, #29
 1009              	.LVL77:
 619:Lib/ssc/src/ecatslv.c ****         }
 1010              		.loc 1 619 20 view .LVU311
 1011 022a 19E0     		b	.L27
 1012              	.LVL78:
 1013              	.L64:
 542:Lib/ssc/src/ecatslv.c ****         }
 1014              		.loc 1 542 20 view .LVU312
 1015 022c 1E25     		movs	r5, #30
 1016              	.LVL79:
 542:Lib/ssc/src/ecatslv.c ****         }
 1017              		.loc 1 542 20 view .LVU313
 1018 022e 45E7     		b	.L31
 1019              	.LVL80:
 1020              	.L66:
 542:Lib/ssc/src/ecatslv.c ****         }
 1021              		.loc 1 542 20 view .LVU314
 1022 0230 1E25     		movs	r5, #30
 1023              	.LVL81:
 542:Lib/ssc/src/ecatslv.c ****         }
 1024              		.loc 1 542 20 view .LVU315
 1025 0232 43E7     		b	.L31
 1026              	.LVL82:
 1027              	.L67:
 542:Lib/ssc/src/ecatslv.c ****         }
 1028              		.loc 1 542 20 view .LVU316
 1029 0234 1E25     		movs	r5, #30
 1030              	.LVL83:
 542:Lib/ssc/src/ecatslv.c ****         }
 1031              		.loc 1 542 20 view .LVU317
 1032 0236 41E7     		b	.L31
 1033              	.LVL84:
 1034              	.L68:
 542:Lib/ssc/src/ecatslv.c ****         }
 1035              		.loc 1 542 20 view .LVU318
 1036 0238 1E25     		movs	r5, #30
 1037              	.LVL85:
 542:Lib/ssc/src/ecatslv.c ****         }
 1038              		.loc 1 542 20 view .LVU319
 1039 023a 3FE7     		b	.L31
 1040              	.LVL86:
 1041              	.L69:
 542:Lib/ssc/src/ecatslv.c ****         }
 1042              		.loc 1 542 20 view .LVU320
 1043 023c 1E25     		movs	r5, #30
 1044              	.LVL87:
 542:Lib/ssc/src/ecatslv.c ****         }
 1045              		.loc 1 542 20 view .LVU321
 1046 023e 3DE7     		b	.L31
 1047              	.LVL88:
 1048              	.L71:
 542:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccWTp91B.s 			page 68


 1049              		.loc 1 542 20 view .LVU322
 1050 0240 1E25     		movs	r5, #30
 1051              	.LVL89:
 542:Lib/ssc/src/ecatslv.c ****         }
 1052              		.loc 1 542 20 view .LVU323
 1053 0242 3BE7     		b	.L31
 1054              	.LVL90:
 1055              	.L42:
 625:Lib/ssc/src/ecatslv.c ****     {
 626:Lib/ssc/src/ecatslv.c ****         /* the Enable-Byte of the rest of the SM channels has to be read to acknowledge the SM-Chan
 627:Lib/ssc/src/ecatslv.c ****         for (i = maxChannel; i < nMaxSyncMan; i++)
 628:Lib/ssc/src/ecatslv.c ****         {
 629:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 630:Lib/ssc/src/ecatslv.c ****             pSyncMan = GetSyncMan(i);
 1056              		.loc 1 630 13 is_stmt 1 discriminator 3 view .LVU324
 1057              		.loc 1 630 24 is_stmt 0 discriminator 3 view .LVU325
 1058 0244 2046     		mov	r0, r4
 1059 0246 FFF7FEFF 		bl	GetSyncMan
 1060              	.LVL91:
 631:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 632:Lib/ssc/src/ecatslv.c ****             SMActivate = pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET];
 1061              		.loc 1 632 13 is_stmt 1 discriminator 3 view .LVU326
 1062              		.loc 1 632 44 is_stmt 0 discriminator 3 view .LVU327
 1063 024a C288     		ldrh	r2, [r0, #6]
 1064              		.loc 1 632 24 discriminator 3 view .LVU328
 1065 024c 134B     		ldr	r3, .L94+32
 1066 024e 1A80     		strh	r2, [r3]	@ movhi
 627:Lib/ssc/src/ecatslv.c ****         {
 1067              		.loc 1 627 47 is_stmt 1 discriminator 3 view .LVU329
 627:Lib/ssc/src/ecatslv.c ****         {
 1068              		.loc 1 627 48 is_stmt 0 discriminator 3 view .LVU330
 1069 0250 0134     		adds	r4, r4, #1
 1070              	.LVL92:
 627:Lib/ssc/src/ecatslv.c ****         {
 1071              		.loc 1 627 48 discriminator 3 view .LVU331
 1072 0252 E4B2     		uxtb	r4, r4
 1073              	.LVL93:
 1074              	.L41:
 627:Lib/ssc/src/ecatslv.c ****         {
 1075              		.loc 1 627 30 is_stmt 1 discriminator 1 view .LVU332
 627:Lib/ssc/src/ecatslv.c ****         {
 1076              		.loc 1 627 32 is_stmt 0 discriminator 1 view .LVU333
 1077 0254 124B     		ldr	r3, .L94+36
 1078 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 627:Lib/ssc/src/ecatslv.c ****         {
 1079              		.loc 1 627 9 discriminator 1 view .LVU334
 1080 0258 A342     		cmp	r3, r4
 1081 025a F3D8     		bhi	.L42
 1082 025c 00E0     		b	.L27
 1083              	.LVL94:
 1084              	.L43:
 395:Lib/ssc/src/ecatslv.c ****     }
 1085              		.loc 1 395 16 view .LVU335
 1086 025e 1425     		movs	r5, #20
 1087              	.LVL95:
 1088              	.L27:
 633:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccWTp91B.s 			page 69


 634:Lib/ssc/src/ecatslv.c ****     }
 635:Lib/ssc/src/ecatslv.c ****     return result;
 636:Lib/ssc/src/ecatslv.c **** }
 1089              		.loc 1 636 1 view .LVU336
 1090 0260 2846     		mov	r0, r5
 1091 0262 38BD     		pop	{r3, r4, r5, pc}
 1092              	.LVL96:
 1093              	.L44:
 409:Lib/ssc/src/ecatslv.c **** 
 1094              		.loc 1 409 16 view .LVU337
 1095 0264 1725     		movs	r5, #23
 1096 0266 FBE7     		b	.L27
 1097              	.L45:
 412:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1098              		.loc 1 412 16 view .LVU338
 1099 0268 1725     		movs	r5, #23
 1100 026a F9E7     		b	.L27
 1101              	.LVL97:
 1102              	.L53:
 451:Lib/ssc/src/ecatslv.c **** 
 1103              		.loc 1 451 16 view .LVU339
 1104 026c 1725     		movs	r5, #23
 1105 026e F7E7     		b	.L27
 1106              	.L54:
 454:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1107              		.loc 1 454 16 view .LVU340
 1108 0270 1725     		movs	r5, #23
 1109 0272 F5E7     		b	.L27
 1110              	.LVL98:
 1111              	.L62:
 496:Lib/ssc/src/ecatslv.c **** 
 1112              		.loc 1 496 16 view .LVU341
 1113 0274 1725     		movs	r5, #23
 1114              	.LVL99:
 496:Lib/ssc/src/ecatslv.c **** 
 1115              		.loc 1 496 16 view .LVU342
 1116 0276 F3E7     		b	.L27
 1117              	.LVL100:
 1118              	.L63:
 499:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1119              		.loc 1 499 16 view .LVU343
 1120 0278 1725     		movs	r5, #23
 1121              	.LVL101:
 499:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1122              		.loc 1 499 16 view .LVU344
 1123 027a F1E7     		b	.L27
 1124              	.L95:
 1125              		.align	2
 1126              	.L94:
 1127 027c 00000000 		.word	.LANCHOR2
 1128 0280 00000000 		.word	.LANCHOR3
 1129 0284 00000000 		.word	.LANCHOR4
 1130 0288 00000000 		.word	.LANCHOR5
 1131 028c 00000000 		.word	.LANCHOR6
 1132 0290 00000000 		.word	.LANCHOR7
 1133 0294 00000000 		.word	.LANCHOR8
 1134 0298 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccWTp91B.s 			page 70


 1135 029c 00000000 		.word	.LANCHOR10
 1136 02a0 00000000 		.word	.LANCHOR11
 1137              	.LVL102:
 1138              	.L73:
 561:Lib/ssc/src/ecatslv.c **** 
 1139              		.loc 1 561 16 view .LVU345
 1140 02a4 1725     		movs	r5, #23
 1141              	.LVL103:
 561:Lib/ssc/src/ecatslv.c **** 
 1142              		.loc 1 561 16 view .LVU346
 1143 02a6 DBE7     		b	.L27
 1144              	.LVL104:
 1145              	.L74:
 564:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1146              		.loc 1 564 16 view .LVU347
 1147 02a8 1725     		movs	r5, #23
 1148              	.LVL105:
 564:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) HW2*/
 1149              		.loc 1 564 16 view .LVU348
 1150 02aa D9E7     		b	.L27
 1151              	.LVL106:
 1152              	.L75:
 619:Lib/ssc/src/ecatslv.c ****         }
 1153              		.loc 1 619 20 view .LVU349
 1154 02ac 1D25     		movs	r5, #29
 1155              	.LVL107:
 619:Lib/ssc/src/ecatslv.c ****         }
 1156              		.loc 1 619 20 view .LVU350
 1157 02ae D7E7     		b	.L27
 1158              	.LVL108:
 1159              	.L77:
 619:Lib/ssc/src/ecatslv.c ****         }
 1160              		.loc 1 619 20 view .LVU351
 1161 02b0 1D25     		movs	r5, #29
 1162              	.LVL109:
 619:Lib/ssc/src/ecatslv.c ****         }
 1163              		.loc 1 619 20 view .LVU352
 1164 02b2 D5E7     		b	.L27
 1165              	.LVL110:
 1166              	.L78:
 619:Lib/ssc/src/ecatslv.c ****         }
 1167              		.loc 1 619 20 view .LVU353
 1168 02b4 1D25     		movs	r5, #29
 1169              	.LVL111:
 619:Lib/ssc/src/ecatslv.c ****         }
 1170              		.loc 1 619 20 view .LVU354
 1171 02b6 D3E7     		b	.L27
 1172              	.LVL112:
 1173              	.L80:
 619:Lib/ssc/src/ecatslv.c ****         }
 1174              		.loc 1 619 20 view .LVU355
 1175 02b8 1D25     		movs	r5, #29
 1176              	.LVL113:
 619:Lib/ssc/src/ecatslv.c ****         }
 1177              		.loc 1 619 20 view .LVU356
 1178 02ba D1E7     		b	.L27
 1179              	.LVL114:
ARM GAS  /tmp/ccWTp91B.s 			page 71


 1180              	.L82:
 619:Lib/ssc/src/ecatslv.c ****         }
 1181              		.loc 1 619 20 view .LVU357
 1182 02bc 1D25     		movs	r5, #29
 1183              	.LVL115:
 619:Lib/ssc/src/ecatslv.c ****         }
 1184              		.loc 1 619 20 view .LVU358
 1185 02be CFE7     		b	.L27
 1186              		.cfi_endproc
 1187              	.LFE140:
 1189              		.section	.text.StartInputHandler,"ax",%progbits
 1190              		.align	1
 1191              		.global	StartInputHandler
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1196              	StartInputHandler:
 1197              	.LFB141:
 637:Lib/ssc/src/ecatslv.c **** 
 638:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 639:Lib/ssc/src/ecatslv.c **** /**
 640:Lib/ssc/src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
 641:Lib/ssc/src/ecatslv.c **** 
 642:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from PREOP to SAFEOP.
 643:Lib/ssc/src/ecatslv.c ****  |brief  the areas of the Sync Managers will be checked for overlapping,
 644:Lib/ssc/src/ecatslv.c ****  \brief  the synchronization mode (Free Run, Synchron, Distributed Clocks) is selected,
 645:Lib/ssc/src/ecatslv.c ****  \brief  the requested cycle time will be checked, the watchdog is started
 646:Lib/ssc/src/ecatslv.c ****  \brief  and the AL Event Mask register will be set
 647:Lib/ssc/src/ecatslv.c **** 
 648:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 649:Lib/ssc/src/ecatslv.c **** 
 650:Lib/ssc/src/ecatslv.c **** UINT16 StartInputHandler(void)
 651:Lib/ssc/src/ecatslv.c **** {
 1198              		.loc 1 651 1 is_stmt 1 view -0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 16
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1203              		.cfi_def_cfa_offset 20
 1204              		.cfi_offset 4, -20
 1205              		.cfi_offset 5, -16
 1206              		.cfi_offset 6, -12
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
 1209 0002 85B0     		sub	sp, sp, #20
 1210              		.cfi_def_cfa_offset 40
 652:Lib/ssc/src/ecatslv.c ****     TSYNCMAN ESCMEM * pSyncMan;
 1211              		.loc 1 652 5 view .LVU360
 653:Lib/ssc/src/ecatslv.c ****     UINT16        dcControl;
 1212              		.loc 1 653 5 view .LVU361
 654:Lib/ssc/src/ecatslv.c ****     UINT16     wdiv = 0;
 1213              		.loc 1 654 5 view .LVU362
 1214              		.loc 1 654 16 is_stmt 0 view .LVU363
 1215 0004 0023     		movs	r3, #0
 1216 0006 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 655:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 656:Lib/ssc/src/ecatslv.c ****     UINT16     wd = 0;
ARM GAS  /tmp/ccWTp91B.s 			page 72


 1217              		.loc 1 656 5 is_stmt 1 view .LVU364
 1218              		.loc 1 656 16 is_stmt 0 view .LVU365
 1219 000a ADF80A30 		strh	r3, [sp, #10]	@ movhi
 657:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 658:Lib/ssc/src/ecatslv.c ****     UINT32     cycleTimeSync0 = 0; /* Sync0 cycle time */
 1220              		.loc 1 658 5 is_stmt 1 view .LVU366
 1221              		.loc 1 658 16 is_stmt 0 view .LVU367
 1222 000e 0193     		str	r3, [sp, #4]
 659:Lib/ssc/src/ecatslv.c ****     UINT32     cycleTimeSync1 = 0; /* Delay between the Sync0 and Sycn1 signal. A new Sync1 cycle s
 1223              		.loc 1 659 5 is_stmt 1 view .LVU368
 1224              		.loc 1 659 16 is_stmt 0 view .LVU369
 1225 0010 0093     		str	r3, [sp]
 660:Lib/ssc/src/ecatslv.c ****     BOOL bSubordinatedCycles = FALSE;
 1226              		.loc 1 660 5 is_stmt 1 view .LVU370
 1227              	.LVL116:
 661:Lib/ssc/src/ecatslv.c **** 
 662:Lib/ssc/src/ecatslv.c ****     UINT16    nPdInputBuffer = 3;
 1228              		.loc 1 662 5 view .LVU371
 663:Lib/ssc/src/ecatslv.c ****     UINT16    nPdOutputBuffer = 3;
 1229              		.loc 1 663 5 view .LVU372
 664:Lib/ssc/src/ecatslv.c **** 
 665:Lib/ssc/src/ecatslv.c ****     UINT16 SyncType0x1C32 = 0; /* Helper variable for sync type for SM2 (required if no CoE is supp
 1230              		.loc 1 665 5 view .LVU373
 666:Lib/ssc/src/ecatslv.c ****     UINT16 SyncType0x1C33 = 0; /* Helper variable for sync type for SM3 (required if no CoE is supp
 1231              		.loc 1 666 5 view .LVU374
 667:Lib/ssc/src/ecatslv.c **** 
 668:Lib/ssc/src/ecatslv.c ****     UINT16 u16MinSuppSyncType = 0xFFFF;  /* Minimum supported Sync Types */
 1232              		.loc 1 668 5 view .LVU375
 669:Lib/ssc/src/ecatslv.c **** 
 670:Lib/ssc/src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManOutPar.u16SyncTypesSupported;
 1233              		.loc 1 670 5 view .LVU376
 1234              		.loc 1 670 41 is_stmt 0 view .LVU377
 1235 0012 684A     		ldr	r2, .L186
 1236 0014 9489     		ldrh	r4, [r2, #12]
 1237              	.LVL117:
 671:Lib/ssc/src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManInPar.u16SyncTypesSupported;
 1238              		.loc 1 671 5 is_stmt 1 view .LVU378
 1239              		.loc 1 671 40 is_stmt 0 view .LVU379
 1240 0016 684A     		ldr	r2, .L186+4
 1241 0018 9289     		ldrh	r2, [r2, #12]
 1242              		.loc 1 671 24 view .LVU380
 1243 001a 1440     		ands	r4, r4, r2
 1244              	.LVL118:
 672:Lib/ssc/src/ecatslv.c **** 
 673:Lib/ssc/src/ecatslv.c ****     u16ALEventMask = 0;
 1245              		.loc 1 673 5 is_stmt 1 view .LVU381
 1246              		.loc 1 673 20 is_stmt 0 view .LVU382
 1247 001c 674A     		ldr	r2, .L186+8
 1248 001e 1380     		strh	r3, [r2]	@ movhi
 674:Lib/ssc/src/ecatslv.c **** 
 675:Lib/ssc/src/ecatslv.c ****     /* 
 676:Lib/ssc/src/ecatslv.c ****         --- Check if SyncManager areas overlapping --- 
 677:Lib/ssc/src/ecatslv.c ****     */
 678:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 1249              		.loc 1 678 5 is_stmt 1 view .LVU383
 1250              		.loc 1 678 31 is_stmt 0 view .LVU384
 1251 0020 674A     		ldr	r2, .L186+12
ARM GAS  /tmp/ccWTp91B.s 			page 73


 1252 0022 1370     		strb	r3, [r2]
 679:Lib/ssc/src/ecatslv.c **** 
 680:Lib/ssc/src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 2 (Outputs) */
 681:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 682:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 1253              		.loc 1 682 5 is_stmt 1 view .LVU385
 1254              		.loc 1 682 16 is_stmt 0 view .LVU386
 1255 0024 0220     		movs	r0, #2
 1256 0026 FFF7FEFF 		bl	GetSyncMan
 1257              	.LVL119:
 683:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 684:Lib/ssc/src/ecatslv.c ****     /* store the address of the Sync Manager Channel 2 (Outputs) */
 685:Lib/ssc/src/ecatslv.c ****     nEscAddrOutputData = pSyncMan->PhysicalStartAddress;
 1258              		.loc 1 685 5 is_stmt 1 view .LVU387
 1259              		.loc 1 685 34 is_stmt 0 view .LVU388
 1260 002a 0288     		ldrh	r2, [r0]
 1261              		.loc 1 685 24 view .LVU389
 1262 002c 654B     		ldr	r3, .L186+16
 1263 002e 1A80     		strh	r2, [r3]	@ movhi
 686:Lib/ssc/src/ecatslv.c ****     /* get the number of output buffer used for calculating the address areas */
 687:Lib/ssc/src/ecatslv.c ****     if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE)
 1264              		.loc 1 687 5 is_stmt 1 view .LVU390
 1265              		.loc 1 687 27 is_stmt 0 view .LVU391
 1266 0030 8388     		ldrh	r3, [r0, #4]
 1267              		.loc 1 687 8 view .LVU392
 1268 0032 13F0020F 		tst	r3, #2
 1269 0036 40F08780 		bne	.L145
 663:Lib/ssc/src/ecatslv.c **** 
 1270              		.loc 1 663 15 view .LVU393
 1271 003a 0325     		movs	r5, #3
 1272              	.L97:
 1273              	.LVL120:
 688:Lib/ssc/src/ecatslv.c ****     {
 689:Lib/ssc/src/ecatslv.c ****        nPdOutputBuffer = 1;
 690:Lib/ssc/src/ecatslv.c ****     }
 691:Lib/ssc/src/ecatslv.c **** 
 692:Lib/ssc/src/ecatslv.c **** 
 693:Lib/ssc/src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 3 (Inputs) */
 694:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 695:Lib/ssc/src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 1274              		.loc 1 695 5 is_stmt 1 view .LVU394
 1275              		.loc 1 695 16 is_stmt 0 view .LVU395
 1276 003c 0320     		movs	r0, #3
 1277              	.LVL121:
 1278              		.loc 1 695 16 view .LVU396
 1279 003e FFF7FEFF 		bl	GetSyncMan
 1280              	.LVL122:
 696:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 697:Lib/ssc/src/ecatslv.c ****     /* store the address of the Sync Manager Channel 3 (Inputs)*/
 698:Lib/ssc/src/ecatslv.c ****     nEscAddrInputData = pSyncMan->PhysicalStartAddress;
 1281              		.loc 1 698 5 is_stmt 1 view .LVU397
 1282              		.loc 1 698 33 is_stmt 0 view .LVU398
 1283 0042 0388     		ldrh	r3, [r0]
 1284              		.loc 1 698 23 view .LVU399
 1285 0044 604A     		ldr	r2, .L186+20
 1286 0046 1380     		strh	r3, [r2]	@ movhi
 699:Lib/ssc/src/ecatslv.c ****     
ARM GAS  /tmp/ccWTp91B.s 			page 74


 700:Lib/ssc/src/ecatslv.c ****     /* get the number of input buffer used for calculating the address areas */
 701:Lib/ssc/src/ecatslv.c ****     if ( pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE )
 1287              		.loc 1 701 5 is_stmt 1 view .LVU400
 1288              		.loc 1 701 28 is_stmt 0 view .LVU401
 1289 0048 8288     		ldrh	r2, [r0, #4]
 1290              		.loc 1 701 8 view .LVU402
 1291 004a 12F0020F 		tst	r2, #2
 1292 004e 7DD1     		bne	.L146
 662:Lib/ssc/src/ecatslv.c ****     UINT16    nPdOutputBuffer = 3;
 1293              		.loc 1 662 15 view .LVU403
 1294 0050 0322     		movs	r2, #3
 1295              	.L98:
 1296              	.LVL123:
 702:Lib/ssc/src/ecatslv.c ****         nPdInputBuffer = 1;
 703:Lib/ssc/src/ecatslv.c **** 
 704:Lib/ssc/src/ecatslv.c ****     /* it has be checked if the Sync Manager memory areas for Inputs and Outputs will not overlap
 705:Lib/ssc/src/ecatslv.c ****        the Sync Manager memory areas for the Mailbox */
 706:Lib/ssc/src/ecatslv.c **** 
 707:Lib/ssc/src/ecatslv.c ****     if (((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrSendMbx && (nEscAddrInputD
 1297              		.loc 1 707 5 is_stmt 1 view .LVU404
 1298              		.loc 1 707 44 is_stmt 0 view .LVU405
 1299 0052 5E49     		ldr	r1, .L186+24
 1300 0054 B1F800E0 		ldrh	lr, [r1]
 1301              		.loc 1 707 29 view .LVU406
 1302 0058 0EFB0232 		mla	r2, lr, r2, r3
 1303              	.LVL124:
 1304              		.loc 1 707 62 view .LVU407
 1305 005c 5C49     		ldr	r1, .L186+28
 1306 005e 0988     		ldrh	r1, [r1]
 1307              		.loc 1 707 8 view .LVU408
 1308 0060 8A42     		cmp	r2, r1
 1309 0062 05DD     		ble	.L99
 1310              		.loc 1 707 125 discriminator 1 view .LVU409
 1311 0064 5B48     		ldr	r0, .L186+32
 1312              	.LVL125:
 1313              		.loc 1 707 125 discriminator 1 view .LVU410
 1314 0066 0088     		ldrh	r0, [r0]
 1315 0068 0844     		add	r0, r0, r1
 1316              		.loc 1 707 82 discriminator 1 view .LVU411
 1317 006a 8342     		cmp	r3, r0
 1318 006c C0F25E82 		blt	.L147
 1319              	.L99:
 708:Lib/ssc/src/ecatslv.c ****        || ((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrReceiveMbx && (nEscAddrI
 1320              		.loc 1 708 64 view .LVU412
 1321 0070 5948     		ldr	r0, .L186+36
 1322 0072 0088     		ldrh	r0, [r0]
 1323              		.loc 1 708 8 view .LVU413
 1324 0074 8242     		cmp	r2, r0
 1325 0076 05DD     		ble	.L101
 1326              		.loc 1 708 133 discriminator 1 view .LVU414
 1327 0078 584A     		ldr	r2, .L186+40
 1328 007a 1288     		ldrh	r2, [r2]
 1329 007c 0244     		add	r2, r2, r0
 1330              		.loc 1 708 87 discriminator 1 view .LVU415
 1331 007e 9342     		cmp	r3, r2
 1332 0080 C0F25682 		blt	.L148
 1333              	.L101:
ARM GAS  /tmp/ccWTp91B.s 			page 75


 709:Lib/ssc/src/ecatslv.c ****         )
 710:Lib/ssc/src/ecatslv.c ****     {
 711:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMINCFG;
 712:Lib/ssc/src/ecatslv.c ****     }
 713:Lib/ssc/src/ecatslv.c **** 
 714:Lib/ssc/src/ecatslv.c ****     if (
 1334              		.loc 1 714 5 is_stmt 1 view .LVU416
 715:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1335              		.loc 1 715 30 is_stmt 0 view .LVU417
 1336 0084 4F4A     		ldr	r2, .L186+16
 1337 0086 B2F800C0 		ldrh	ip, [r2]
 1338              		.loc 1 715 46 view .LVU418
 1339 008a 554A     		ldr	r2, .L186+44
 1340 008c 1288     		ldrh	r2, [r2]
 1341              		.loc 1 715 30 view .LVU419
 1342 008e 05FB02C2 		mla	r2, r5, r2, ip
 714:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1343              		.loc 1 714 8 view .LVU420
 1344 0092 9142     		cmp	r1, r2
 1345 0094 05DA     		bge	.L102
 1346              		.loc 1 715 129 view .LVU421
 1347 0096 4F4D     		ldr	r5, .L186+32
 1348              	.LVL126:
 1349              		.loc 1 715 129 view .LVU422
 1350 0098 2D88     		ldrh	r5, [r5]
 1351 009a 2944     		add	r1, r1, r5
 1352              		.loc 1 715 85 view .LVU423
 1353 009c 8C45     		cmp	ip, r1
 1354 009e C0F24982 		blt	.L149
 1355              	.L102:
 716:Lib/ssc/src/ecatslv.c ****         ||((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrReceiveMbx && (nEscAd
 1356              		.loc 1 716 9 view .LVU424
 1357 00a2 9042     		cmp	r0, r2
 1358 00a4 05DA     		bge	.L103
 1359              		.loc 1 716 137 discriminator 1 view .LVU425
 1360 00a6 4D49     		ldr	r1, .L186+40
 1361 00a8 0988     		ldrh	r1, [r1]
 1362 00aa 0844     		add	r0, r0, r1
 1363              		.loc 1 716 90 discriminator 1 view .LVU426
 1364 00ac 8445     		cmp	ip, r0
 1365 00ae C0F24382 		blt	.L150
 1366              	.L103:
 717:Lib/ssc/src/ecatslv.c ****         ||
 1367              		.loc 1 717 9 view .LVU427
 1368 00b2 9342     		cmp	r3, r2
 1369 00b4 03DA     		bge	.L104
 718:Lib/ssc/src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > nEscAddrInputData && (nEscAddrOut
 1370              		.loc 1 718 129 view .LVU428
 1371 00b6 7344     		add	r3, r3, lr
 1372              		.loc 1 718 85 view .LVU429
 1373 00b8 9C45     		cmp	ip, r3
 1374 00ba C0F23F82 		blt	.L151
 1375              	.L104:
 719:Lib/ssc/src/ecatslv.c ****         )
 720:Lib/ssc/src/ecatslv.c ****     {
 721:Lib/ssc/src/ecatslv.c ****         /* Sync Manager Channel 2 memory area (Outputs) overlaps the Sync Manager memory areas for 
 722:Lib/ssc/src/ecatslv.c ****            or the Sync Manager Channel 3 memory area (Inputs) */
ARM GAS  /tmp/ccWTp91B.s 			page 76


 723:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMOUTCFG;
 724:Lib/ssc/src/ecatslv.c ****     }
 725:Lib/ssc/src/ecatslv.c **** 
 726:Lib/ssc/src/ecatslv.c ****     /* 
 727:Lib/ssc/src/ecatslv.c ****         --- Check configured synchronisation ---
 728:Lib/ssc/src/ecatslv.c ****     */
 729:Lib/ssc/src/ecatslv.c **** 
 730:Lib/ssc/src/ecatslv.c ****     /* Get the DC Control/Activation register value*/
 731:Lib/ssc/src/ecatslv.c ****     /*Read registers 0x980:0x981 (corresponding masks are adapted)*/
 732:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(dcControl, ESC_DC_UNIT_CONTROL_OFFSET);
 1376              		.loc 1 732 5 is_stmt 1 view .LVU430
 1377 00be 0222     		movs	r2, #2
 1378 00c0 4FF41861 		mov	r1, #2432
 1379 00c4 0DF10E00 		add	r0, sp, #14
 1380 00c8 FFF7FEFF 		bl	HW_EscRead
 1381              	.LVL127:
 733:Lib/ssc/src/ecatslv.c ****     dcControl = SWAPWORD(dcControl);
 1382              		.loc 1 733 5 view .LVU431
 734:Lib/ssc/src/ecatslv.c **** 
 735:Lib/ssc/src/ecatslv.c ****     // Cycle time for Sync0
 736:Lib/ssc/src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync0, ESC_DC_SYNC0_CYCLETIME_OFFSET);
 1383              		.loc 1 736 9 view .LVU432
 1384 00cc 0422     		movs	r2, #4
 1385 00ce 4FF41A61 		mov	r1, #2464
 1386 00d2 0DEB0200 		add	r0, sp, r2
 1387 00d6 FFF7FEFF 		bl	HW_EscRead
 1388              	.LVL128:
 737:Lib/ssc/src/ecatslv.c ****         cycleTimeSync0 = SWAPDWORD(cycleTimeSync0);
 1389              		.loc 1 737 9 view .LVU433
 738:Lib/ssc/src/ecatslv.c **** 
 739:Lib/ssc/src/ecatslv.c ****     // Cycle time for Sync1
 740:Lib/ssc/src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync1, ESC_DC_SYNC1_CYCLETIME_OFFSET);
 1390              		.loc 1 740 9 view .LVU434
 1391 00da 0422     		movs	r2, #4
 1392 00dc 40F6A411 		movw	r1, #2468
 1393 00e0 6846     		mov	r0, sp
 1394 00e2 FFF7FEFF 		bl	HW_EscRead
 1395              	.LVL129:
 741:Lib/ssc/src/ecatslv.c ****         cycleTimeSync1 = SWAPDWORD(cycleTimeSync1);
 1396              		.loc 1 741 9 view .LVU435
 1397              		.loc 1 741 24 is_stmt 0 view .LVU436
 1398 00e6 0098     		ldr	r0, [sp]
 742:Lib/ssc/src/ecatslv.c **** 
 743:Lib/ssc/src/ecatslv.c **** 
 744:Lib/ssc/src/ecatslv.c ****     SyncType0x1C32 = sSyncManOutPar.u16SyncType;
 1399              		.loc 1 744 5 is_stmt 1 view .LVU437
 1400              		.loc 1 744 20 is_stmt 0 view .LVU438
 1401 00e8 324B     		ldr	r3, .L186
 1402 00ea 5B88     		ldrh	r3, [r3, #2]
 1403              	.LVL130:
 745:Lib/ssc/src/ecatslv.c ****     SyncType0x1C33 = sSyncManInPar.u16SyncType;
 1404              		.loc 1 745 5 is_stmt 1 view .LVU439
 1405              		.loc 1 745 20 is_stmt 0 view .LVU440
 1406 00ec 324A     		ldr	r2, .L186+4
 1407 00ee 5188     		ldrh	r1, [r2, #2]
 1408              	.LVL131:
 746:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 77


 747:Lib/ssc/src/ecatslv.c **** 
 748:Lib/ssc/src/ecatslv.c **** 
 749:Lib/ssc/src/ecatslv.c ****     /* check general DC register plausibility and if configuration is supported
 750:Lib/ssc/src/ecatslv.c ****        - 0x981 DC Active
 751:Lib/ssc/src/ecatslv.c ****        - 0x9A0:0x9A3 Sync0 Cycle
 752:Lib/ssc/src/ecatslv.c ****        - 0x9A4:0x9A7 Sync1 Cycle
 753:Lib/ssc/src/ecatslv.c ****     */
 754:Lib/ssc/src/ecatslv.c ****     if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) != 0)
 1409              		.loc 1 754 5 is_stmt 1 view .LVU441
 1410              		.loc 1 754 19 is_stmt 0 view .LVU442
 1411 00f0 BDF80E20 		ldrh	r2, [sp, #14]
 1412              		.loc 1 754 7 view .LVU443
 1413 00f4 12F41065 		ands	r5, r2, #2304
 1414 00f8 33D0     		beq	.L152
 755:Lib/ssc/src/ecatslv.c ****     {
 756:Lib/ssc/src/ecatslv.c ****         /* DC unit is active at least one Sync signal shall be generated */
 757:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC0_ACTIVE_MASK | ESC_DC_SYNC1_ACTIVE_MASK)) == 0)
 1415              		.loc 1 757 9 is_stmt 1 view .LVU444
 1416              		.loc 1 757 11 is_stmt 0 view .LVU445
 1417 00fa 12F4C066 		ands	r6, r2, #1536
 1418 00fe 00F01F82 		beq	.L153
 758:Lib/ssc/src/ecatslv.c ****         {
 759:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 760:Lib/ssc/src/ecatslv.c ****         }
 761:Lib/ssc/src/ecatslv.c **** 
 762:Lib/ssc/src/ecatslv.c ****         /* If Sync1 shall only be active if also Sync0 will be generated*/
 763:Lib/ssc/src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1419              		.loc 1 763 9 is_stmt 1 view .LVU446
 1420              		.loc 1 763 11 is_stmt 0 view .LVU447
 1421 0102 B6F5806F 		cmp	r6, #1024
 1422 0106 00F01D82 		beq	.L154
 764:Lib/ssc/src/ecatslv.c ****             && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0))
 765:Lib/ssc/src/ecatslv.c ****         {
 766:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 767:Lib/ssc/src/ecatslv.c ****         }
 768:Lib/ssc/src/ecatslv.c **** 
 769:Lib/ssc/src/ecatslv.c ****         if(u16MinSuppSyncType != 0)
 1423              		.loc 1 769 9 is_stmt 1 view .LVU448
 1424              		.loc 1 769 11 is_stmt 0 view .LVU449
 1425 010a 6CB1     		cbz	r4, .L106
 770:Lib/ssc/src/ecatslv.c ****         {
 771:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM2*/
 772:Lib/ssc/src/ecatslv.c ****             if((((u16MinSuppSyncType & SYNCTYPE_DCSYNC0SUPP) == 0) && ((dcControl & ESC_DC_SYNC0_AC
 1426              		.loc 1 772 13 is_stmt 1 view .LVU450
 1427              		.loc 1 772 15 is_stmt 0 view .LVU451
 1428 010c 14F0040F 		tst	r4, #4
 1429 0110 03D1     		bne	.L107
 1430              		.loc 1 772 68 discriminator 1 view .LVU452
 1431 0112 12F4007F 		tst	r2, #512
 1432 0116 40F01782 		bne	.L155
 1433              	.L107:
 773:Lib/ssc/src/ecatslv.c ****                 ||(((u16MinSuppSyncType & SYNCTYPE_DCSYNC1SUPP) == 0) && ((dcControl & ESC_DC_SYNC1
 1434              		.loc 1 773 17 view .LVU453
 1435 011a 14F0080F 		tst	r4, #8
 1436 011e 03D1     		bne	.L106
 1437              		.loc 1 773 71 discriminator 1 view .LVU454
 1438 0120 12F4806F 		tst	r2, #1024
ARM GAS  /tmp/ccWTp91B.s 			page 78


 1439 0124 40F01282 		bne	.L156
 1440              	.L106:
 774:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM2*/
 775:Lib/ssc/src/ecatslv.c ****             {
 776:Lib/ssc/src/ecatslv.c ****                 /* Sync0 is not supported but will be generated*/
 777:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;                   
 778:Lib/ssc/src/ecatslv.c ****     }
 779:Lib/ssc/src/ecatslv.c ****         }
 780:Lib/ssc/src/ecatslv.c **** 
 781:Lib/ssc/src/ecatslv.c ****         /*Check if Sync0 cycle time is supported*/
 782:Lib/ssc/src/ecatslv.c ****         if ( cycleTimeSync0 != 0 && (cycleTimeSync0 < MIN_PD_CYCLE_TIME || cycleTimeSync0 > MAX_PD_
 1441              		.loc 1 782 9 is_stmt 1 view .LVU455
 1442              		.loc 1 782 29 is_stmt 0 view .LVU456
 1443 0128 019F     		ldr	r7, [sp, #4]
 1444              		.loc 1 782 12 view .LVU457
 1445 012a 47B1     		cbz	r7, .L108
 1446              		.loc 1 782 73 discriminator 1 view .LVU458
 1447 012c A7F5F42C 		sub	ip, r7, #499712
 1448 0130 ACF5907C 		sub	ip, ip, #288
 1449              		.loc 1 782 34 discriminator 1 view .LVU459
 1450 0134 DFF8B0E0 		ldr	lr, .L186+52
 1451 0138 F445     		cmp	ip, lr
 1452 013a 00F20982 		bhi	.L157
 1453              	.L108:
 783:Lib/ssc/src/ecatslv.c ****             return ALSTATUSCODE_DCSYNC0CYCLETIME;
 784:Lib/ssc/src/ecatslv.c **** 
 785:Lib/ssc/src/ecatslv.c **** 
 786:Lib/ssc/src/ecatslv.c ****         /* Check if Subordinated cycles are configured */
 787:Lib/ssc/src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0) && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK)
 1454              		.loc 1 787 9 is_stmt 1 view .LVU460
 1455              		.loc 1 787 11 is_stmt 0 view .LVU461
 1456 013e B6F5C06F 		cmp	r6, #1536
 1457 0142 05D0     		beq	.L178
 660:Lib/ssc/src/ecatslv.c **** 
 1458              		.loc 1 660 10 view .LVU462
 1459 0144 0026     		movs	r6, #0
 1460 0146 0DE0     		b	.L105
 1461              	.LVL132:
 1462              	.L145:
 689:Lib/ssc/src/ecatslv.c ****     }
 1463              		.loc 1 689 24 view .LVU463
 1464 0148 0125     		movs	r5, #1
 1465 014a 77E7     		b	.L97
 1466              	.LVL133:
 1467              	.L146:
 702:Lib/ssc/src/ecatslv.c **** 
 1468              		.loc 1 702 24 view .LVU464
 1469 014c 0122     		movs	r2, #1
 1470 014e 80E7     		b	.L98
 1471              	.LVL134:
 1472              	.L178:
 788:Lib/ssc/src/ecatslv.c ****         {
 789:Lib/ssc/src/ecatslv.c ****             /* For Subordinated cycles both Sync signals shall be active and Sync0 is not configure
 790:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM1*/
 791:Lib/ssc/src/ecatslv.c ****             if((cycleTimeSync1 > 0) && (cycleTimeSync1 >= cycleTimeSync0))
 1473              		.loc 1 791 13 is_stmt 1 view .LVU465
 1474              		.loc 1 791 15 is_stmt 0 view .LVU466
ARM GAS  /tmp/ccWTp91B.s 			page 79


 1475 0150 C8B1     		cbz	r0, .L159
 1476              		.loc 1 791 37 discriminator 1 view .LVU467
 1477 0152 B842     		cmp	r0, r7
 1478 0154 19D3     		bcc	.L160
 792:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM1*/
 793:Lib/ssc/src/ecatslv.c ****             {
 794:Lib/ssc/src/ecatslv.c ****                 bSubordinatedCycles = TRUE;
 1479              		.loc 1 794 17 is_stmt 1 view .LVU468
 1480              	.LVL135:
 795:Lib/ssc/src/ecatslv.c ****             }
 796:Lib/ssc/src/ecatslv.c ****         }
 797:Lib/ssc/src/ecatslv.c **** 
 798:Lib/ssc/src/ecatslv.c ****         /* Dump an error if subordinated cycles are configured but not supported */
 799:Lib/ssc/src/ecatslv.c ****         if(bSubordinatedCycles && ((u16MinSuppSyncType & SYNCTYPE_SUBCYCLESUPP) == 0))
 1481              		.loc 1 799 9 view .LVU469
 1482              		.loc 1 799 32 is_stmt 0 view .LVU470
 1483 0156 14F0100F 		tst	r4, #16
 1484 015a 00F0FB81 		beq	.L161
 794:Lib/ssc/src/ecatslv.c ****             }
 1485              		.loc 1 794 37 view .LVU471
 1486 015e 0126     		movs	r6, #1
 1487 0160 00E0     		b	.L105
 1488              	.LVL136:
 1489              	.L152:
 660:Lib/ssc/src/ecatslv.c **** 
 1490              		.loc 1 660 10 view .LVU472
 1491 0162 0026     		movs	r6, #0
 1492              	.LVL137:
 1493              	.L105:
 800:Lib/ssc/src/ecatslv.c ****         {
 801:Lib/ssc/src/ecatslv.c ****              return ALSTATUSCODE_DCINVALIDSYNCCFG;
 802:Lib/ssc/src/ecatslv.c ****         }
 803:Lib/ssc/src/ecatslv.c ****     }
 804:Lib/ssc/src/ecatslv.c **** 
 805:Lib/ssc/src/ecatslv.c **** 
 806:Lib/ssc/src/ecatslv.c ****     /*
 807:Lib/ssc/src/ecatslv.c ****         Check if the user configured Sync Type matches the DC register values (if the Sync Type is 
 808:Lib/ssc/src/ecatslv.c ****     */
 809:Lib/ssc/src/ecatslv.c ****     if(bSyncSetByUser)
 1494              		.loc 1 809 5 is_stmt 1 view .LVU473
 1495              		.loc 1 809 8 is_stmt 0 view .LVU474
 1496 0164 1F4C     		ldr	r4, .L186+48
 1497              	.LVL138:
 1498              		.loc 1 809 8 view .LVU475
 1499 0166 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 1500              		.loc 1 809 7 view .LVU476
 1501 0168 002C     		cmp	r4, #0
 1502 016a 3FD0     		beq	.L109
 810:Lib/ssc/src/ecatslv.c ****     {
 811:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1503              		.loc 1 811 9 is_stmt 1 view .LVU477
 1504              		.loc 1 811 11 is_stmt 0 view .LVU478
 1505 016c 7DB9     		cbnz	r5, .L110
 812:Lib/ssc/src/ecatslv.c ****         {
 813:Lib/ssc/src/ecatslv.c ****             /* DC out unit not enabled => no DC mode shall be set */
 814:Lib/ssc/src/ecatslv.c ****             if((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1506              		.loc 1 814 13 is_stmt 1 view .LVU479
ARM GAS  /tmp/ccWTp91B.s 			page 80


 1507              		.loc 1 814 53 is_stmt 0 view .LVU480
 1508 016e 9A1E     		subs	r2, r3, #2
 1509 0170 92B2     		uxth	r2, r2
 1510              		.loc 1 814 15 view .LVU481
 1511 0172 012A     		cmp	r2, #1
 1512 0174 40F2F081 		bls	.L162
 815:Lib/ssc/src/ecatslv.c ****                 ||(SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))
 1513              		.loc 1 815 17 view .LVU482
 1514 0178 0229     		cmp	r1, #2
 1515 017a 00F0EF81 		beq	.L163
 1516              		.loc 1 815 56 discriminator 1 view .LVU483
 1517 017e 0329     		cmp	r1, #3
 1518 0180 46D1     		bne	.L111
 816:Lib/ssc/src/ecatslv.c ****             {
 817:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1519              		.loc 1 817 24 view .LVU484
 1520 0182 3020     		movs	r0, #48
 1521 0184 FEE0     		b	.L100
 1522              	.LVL139:
 1523              	.L159:
 660:Lib/ssc/src/ecatslv.c **** 
 1524              		.loc 1 660 10 view .LVU485
 1525 0186 0026     		movs	r6, #0
 1526 0188 ECE7     		b	.L105
 1527              	.L160:
 1528 018a 0026     		movs	r6, #0
 1529 018c EAE7     		b	.L105
 1530              	.LVL140:
 1531              	.L110:
 818:Lib/ssc/src/ecatslv.c ****             }
 819:Lib/ssc/src/ecatslv.c ****         } //if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 
 820:Lib/ssc/src/ecatslv.c ****     else
 821:Lib/ssc/src/ecatslv.c ****     {
 822:Lib/ssc/src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 1532              		.loc 1 822 13 is_stmt 1 view .LVU486
 1533              		.loc 1 822 15 is_stmt 0 view .LVU487
 1534 018e 12F4806F 		tst	r2, #1024
 1535 0192 05D1     		bne	.L112
 823:Lib/ssc/src/ecatslv.c ****             {
 824:Lib/ssc/src/ecatslv.c ****                 /* No Sync 1 is generated => No Sync1 Sync Type shall configured*/
 825:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 826:Lib/ssc/src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC1)
 1536              		.loc 1 826 17 is_stmt 1 view .LVU488
 1537              		.loc 1 826 19 is_stmt 0 view .LVU489
 1538 0194 032B     		cmp	r3, #3
 1539 0196 00F0E381 		beq	.L165
 827:Lib/ssc/src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC1))
 1540              		.loc 1 827 21 view .LVU490
 1541 019a 0329     		cmp	r1, #3
 1542 019c 00F0E281 		beq	.L166
 1543              	.L112:
 828:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 829:Lib/ssc/src/ecatslv.c ****                 {
 830:Lib/ssc/src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 831:Lib/ssc/src/ecatslv.c ****                 }
 832:Lib/ssc/src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 833:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 81


 834:Lib/ssc/src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1544              		.loc 1 834 13 is_stmt 1 view .LVU491
 1545              		.loc 1 834 15 is_stmt 0 view .LVU492
 1546 01a0 12F4007F 		tst	r2, #512
 1547 01a4 34D1     		bne	.L111
 835:Lib/ssc/src/ecatslv.c ****             {
 836:Lib/ssc/src/ecatslv.c ****                 /* No Sync 0 is generated => No Sync0 Sync Type shall configured*/
 837:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 838:Lib/ssc/src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC0)
 1548              		.loc 1 838 17 is_stmt 1 view .LVU493
 1549              		.loc 1 838 19 is_stmt 0 view .LVU494
 1550 01a6 022B     		cmp	r3, #2
 1551 01a8 00F0DE81 		beq	.L167
 839:Lib/ssc/src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC0))
 1552              		.loc 1 839 21 view .LVU495
 1553 01ac 0229     		cmp	r1, #2
 1554 01ae 2FD1     		bne	.L111
 840:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 841:Lib/ssc/src/ecatslv.c ****                 {
 842:Lib/ssc/src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1555              		.loc 1 842 28 view .LVU496
 1556 01b0 3020     		movs	r0, #48
 1557 01b2 E7E0     		b	.L100
 1558              	.L187:
 1559              		.align	2
 1560              	.L186:
 1561 01b4 00000000 		.word	sSyncManOutPar
 1562 01b8 00000000 		.word	sSyncManInPar
 1563 01bc 00000000 		.word	.LANCHOR12
 1564 01c0 00000000 		.word	.LANCHOR13
 1565 01c4 00000000 		.word	.LANCHOR8
 1566 01c8 00000000 		.word	.LANCHOR6
 1567 01cc 00000000 		.word	.LANCHOR4
 1568 01d0 00000000 		.word	u16EscAddrSendMbx
 1569 01d4 00000000 		.word	u16SendMbxSize
 1570 01d8 00000000 		.word	u16EscAddrReceiveMbx
 1571 01dc 00000000 		.word	u16ReceiveMbxSize
 1572 01e0 00000000 		.word	.LANCHOR7
 1573 01e4 00000000 		.word	bSyncSetByUser
 1574 01e8 E05E48C3 		.word	-1018667296
 1575              	.L109:
 843:Lib/ssc/src/ecatslv.c ****                 }
 844:Lib/ssc/src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 845:Lib/ssc/src/ecatslv.c **** 
 846:Lib/ssc/src/ecatslv.c ****         }
 847:Lib/ssc/src/ecatslv.c ****     } //if(bSyncSetByUser)
 848:Lib/ssc/src/ecatslv.c ****     else
 849:Lib/ssc/src/ecatslv.c ****     {
 850:Lib/ssc/src/ecatslv.c ****         /* No Sync Type selected by user => Configure Sync Type based on DC register values*/
 851:Lib/ssc/src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1576              		.loc 1 851 9 is_stmt 1 view .LVU497
 1577              		.loc 1 851 11 is_stmt 0 view .LVU498
 1578 01ec 002D     		cmp	r5, #0
 1579 01ee 40F0D580 		bne	.L113
 852:Lib/ssc/src/ecatslv.c ****         {
 853:Lib/ssc/src/ecatslv.c ****             /* Activation or auto activation of the Sync Out Unit is disabled => Free Run or SM Syn
 854:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 82


 855:Lib/ssc/src/ecatslv.c ****             /* AL Event enabled => Configure SM Sync*/
 856:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize > 0)
 1580              		.loc 1 856 13 is_stmt 1 view .LVU499
 1581              		.loc 1 856 31 is_stmt 0 view .LVU500
 1582 01f2 904B     		ldr	r3, .L188
 1583              	.LVL141:
 1584              		.loc 1 856 31 view .LVU501
 1585 01f4 1A88     		ldrh	r2, [r3]
 1586              		.loc 1 856 16 view .LVU502
 1587 01f6 002A     		cmp	r2, #0
 1588 01f8 00F0C680 		beq	.L114
 857:Lib/ssc/src/ecatslv.c ****             {
 858:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_SM_SYNCHRON;
 1589              		.loc 1 858 17 is_stmt 1 view .LVU503
 1590              	.LVL142:
 859:Lib/ssc/src/ecatslv.c ****                 
 860:Lib/ssc/src/ecatslv.c ****                 if (nPdInputSize > 0)
 1591              		.loc 1 860 17 view .LVU504
 1592              		.loc 1 860 34 is_stmt 0 view .LVU505
 1593 01fc 8E4B     		ldr	r3, .L188+4
 1594 01fe 1988     		ldrh	r1, [r3]
 1595              	.LVL143:
 1596              		.loc 1 860 20 view .LVU506
 1597 0200 0029     		cmp	r1, #0
 1598 0202 00F0C780 		beq	.L169
 861:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_SM2_SYNCHRON;
 1599              		.loc 1 861 36 view .LVU507
 1600 0206 2221     		movs	r1, #34
 858:Lib/ssc/src/ecatslv.c ****                 
 1601              		.loc 1 858 32 view .LVU508
 1602 0208 0123     		movs	r3, #1
 1603              	.LVL144:
 1604              	.L115:
 862:Lib/ssc/src/ecatslv.c ****                 else
 863:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_FREERUN;
 864:Lib/ssc/src/ecatslv.c ****             }
 865:Lib/ssc/src/ecatslv.c ****             else if (nPdInputSize > 0)
 866:Lib/ssc/src/ecatslv.c ****             {
 867:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 868:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_SM_SYNCHRON;
 869:Lib/ssc/src/ecatslv.c ****             }
 870:Lib/ssc/src/ecatslv.c ****             else
 871:Lib/ssc/src/ecatslv.c ****             {
 872:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 873:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 874:Lib/ssc/src/ecatslv.c ****             }
 875:Lib/ssc/src/ecatslv.c ****             sSyncManOutPar.u16GetCycleTime = 1;
 1605              		.loc 1 875 13 is_stmt 1 view .LVU509
 1606              		.loc 1 875 44 is_stmt 0 view .LVU510
 1607 020a 8C4A     		ldr	r2, .L188+8
 1608 020c 0124     		movs	r4, #1
 1609 020e 9483     		strh	r4, [r2, #28]	@ movhi
 1610              	.LVL145:
 1611              	.L111:
 876:Lib/ssc/src/ecatslv.c **** 
 877:Lib/ssc/src/ecatslv.c ****         }
 878:Lib/ssc/src/ecatslv.c ****         else
ARM GAS  /tmp/ccWTp91B.s 			page 83


 879:Lib/ssc/src/ecatslv.c ****         {
 880:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize > 0)
 881:Lib/ssc/src/ecatslv.c ****             {
 882:Lib/ssc/src/ecatslv.c ****                 /* Sync Signal generation is active*/
 883:Lib/ssc/src/ecatslv.c ****                 if (bSubordinatedCycles)
 884:Lib/ssc/src/ecatslv.c ****                 {
 885:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC1;
 886:Lib/ssc/src/ecatslv.c ****                 }
 887:Lib/ssc/src/ecatslv.c ****                 else
 888:Lib/ssc/src/ecatslv.c ****                 {
 889:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC0;
 890:Lib/ssc/src/ecatslv.c ****                 }
 891:Lib/ssc/src/ecatslv.c ****             }
 892:Lib/ssc/src/ecatslv.c ****             else
 893:Lib/ssc/src/ecatslv.c ****             {
 894:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 895:Lib/ssc/src/ecatslv.c ****             }
 896:Lib/ssc/src/ecatslv.c **** 
 897:Lib/ssc/src/ecatslv.c **** 
 898:Lib/ssc/src/ecatslv.c ****             if (nPdInputSize > 0)
 899:Lib/ssc/src/ecatslv.c ****             {
 900:Lib/ssc/src/ecatslv.c ****                 if ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0)
 901:Lib/ssc/src/ecatslv.c ****                 {
 902:Lib/ssc/src/ecatslv.c ****                     /* If Sync1 is available the inputs will always be mapped with Sync1 */
 903:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC1;
 904:Lib/ssc/src/ecatslv.c ****                 }
 905:Lib/ssc/src/ecatslv.c ****                 else
 906:Lib/ssc/src/ecatslv.c ****                 {
 907:Lib/ssc/src/ecatslv.c ****                     /* Map Inputs based on Sync0*/
 908:Lib/ssc/src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC0;
 909:Lib/ssc/src/ecatslv.c ****                 }
 910:Lib/ssc/src/ecatslv.c ****             }
 911:Lib/ssc/src/ecatslv.c ****             else
 912:Lib/ssc/src/ecatslv.c ****             {
 913:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 914:Lib/ssc/src/ecatslv.c ****             }
 915:Lib/ssc/src/ecatslv.c ****         }
 916:Lib/ssc/src/ecatslv.c ****     }
 917:Lib/ssc/src/ecatslv.c **** 
 918:Lib/ssc/src/ecatslv.c ****     /* Update Cycle time entries if DC Sync Mode enabled */
 919:Lib/ssc/src/ecatslv.c ****     if(SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1612              		.loc 1 919 5 is_stmt 1 view .LVU511
 1613              		.loc 1 919 7 is_stmt 0 view .LVU512
 1614 0210 032B     		cmp	r3, #3
 1615 0212 00F0D680 		beq	.L179
 920:Lib/ssc/src/ecatslv.c ****     {
 921:Lib/ssc/src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 922:Lib/ssc/src/ecatslv.c **** 
 923:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 924:Lib/ssc/src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 925:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 926:Lib/ssc/src/ecatslv.c ****     }
 927:Lib/ssc/src/ecatslv.c ****     else if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 1616              		.loc 1 927 10 is_stmt 1 view .LVU513
 1617              		.loc 1 927 12 is_stmt 0 view .LVU514
 1618 0216 022B     		cmp	r3, #2
 1619 0218 00F0D980 		beq	.L180
ARM GAS  /tmp/ccWTp91B.s 			page 84


 1620              	.L118:
 928:Lib/ssc/src/ecatslv.c ****     {
 929:Lib/ssc/src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 930:Lib/ssc/src/ecatslv.c **** 
 931:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 932:Lib/ssc/src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT16)cycleTimeSync0;
 933:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 934:Lib/ssc/src/ecatslv.c ****     }
 935:Lib/ssc/src/ecatslv.c **** 
 936:Lib/ssc/src/ecatslv.c ****     /* Set global flags based on Sync Type */
 937:Lib/ssc/src/ecatslv.c ****     if ( !b3BufferMode )
 1621              		.loc 1 937 5 is_stmt 1 view .LVU515
 1622              		.loc 1 937 10 is_stmt 0 view .LVU516
 1623 021c 884A     		ldr	r2, .L188+12
 1624 021e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1625              		.loc 1 937 8 view .LVU517
 1626 0220 2AB9     		cbnz	r2, .L119
 938:Lib/ssc/src/ecatslv.c ****     {
 939:Lib/ssc/src/ecatslv.c ****         /* 1-Buffer-Mode configured => For free run it shall be 3Buffer mode*/
 940:Lib/ssc/src/ecatslv.c ****         if (( SyncType0x1C32 == SYNCTYPE_FREERUN ) || ( SyncType0x1C33 == SYNCTYPE_FREERUN ))
 1627              		.loc 1 940 9 is_stmt 1 view .LVU518
 1628              		.loc 1 940 12 is_stmt 0 view .LVU519
 1629 0222 002B     		cmp	r3, #0
 1630 0224 00F0A281 		beq	.L173
 1631              		.loc 1 940 52 discriminator 1 view .LVU520
 1632 0228 0029     		cmp	r1, #0
 1633 022a 00F0A181 		beq	.L174
 1634              	.L119:
 941:Lib/ssc/src/ecatslv.c ****         {
 942:Lib/ssc/src/ecatslv.c ****                 return ALSTATUSCODE_FREERUNNEEDS3BUFFERMODE;
 943:Lib/ssc/src/ecatslv.c ****         }
 944:Lib/ssc/src/ecatslv.c ****     }
 945:Lib/ssc/src/ecatslv.c **** 
 946:Lib/ssc/src/ecatslv.c ****     /* If no free run is supported the EscInt is always enabled*/
 947:Lib/ssc/src/ecatslv.c ****         if (( SyncType0x1C32 != SYNCTYPE_FREERUN ) || ( SyncType0x1C33 != SYNCTYPE_FREERUN ))
 1635              		.loc 1 947 9 is_stmt 1 view .LVU521
 1636              		.loc 1 947 12 is_stmt 0 view .LVU522
 1637 022e 03B9     		cbnz	r3, .L120
 1638              		.loc 1 947 52 discriminator 1 view .LVU523
 1639 0230 11B1     		cbz	r1, .L121
 1640              	.L120:
 948:Lib/ssc/src/ecatslv.c ****         {
 949:Lib/ssc/src/ecatslv.c ****         /* ECAT Synchron Mode, the ESC interrupt is enabled */
 950:Lib/ssc/src/ecatslv.c ****         bEscIntEnabled = TRUE;
 1641              		.loc 1 950 9 is_stmt 1 view .LVU524
 1642              		.loc 1 950 24 is_stmt 0 view .LVU525
 1643 0232 844A     		ldr	r2, .L188+16
 1644 0234 0124     		movs	r4, #1
 1645 0236 1470     		strb	r4, [r2]
 1646              	.L121:
 951:Lib/ssc/src/ecatslv.c ****     }
 952:Lib/ssc/src/ecatslv.c **** 
 953:Lib/ssc/src/ecatslv.c ****         /* Update value for AL Event Mask register (0x204) */
 954:Lib/ssc/src/ecatslv.c ****         if(bEscIntEnabled)
 1647              		.loc 1 954 9 is_stmt 1 view .LVU526
 1648              		.loc 1 954 12 is_stmt 0 view .LVU527
 1649 0238 824A     		ldr	r2, .L188+16
ARM GAS  /tmp/ccWTp91B.s 			page 85


 1650 023a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1651              		.loc 1 954 11 view .LVU528
 1652 023c 42B1     		cbz	r2, .L122
 955:Lib/ssc/src/ecatslv.c ****         {
 956:Lib/ssc/src/ecatslv.c ****             if(nPdOutputSize > 0)
 1653              		.loc 1 956 13 is_stmt 1 view .LVU529
 1654              		.loc 1 956 30 is_stmt 0 view .LVU530
 1655 023e 7D4A     		ldr	r2, .L188
 1656 0240 1288     		ldrh	r2, [r2]
 1657              		.loc 1 956 15 view .LVU531
 1658 0242 002A     		cmp	r2, #0
 1659 0244 00F0CA80 		beq	.L123
 957:Lib/ssc/src/ecatslv.c ****             {
 958:Lib/ssc/src/ecatslv.c ****                 u16ALEventMask = PROCESS_OUTPUT_EVENT;
 1660              		.loc 1 958 17 is_stmt 1 view .LVU532
 1661              		.loc 1 958 32 is_stmt 0 view .LVU533
 1662 0248 7F4A     		ldr	r2, .L188+20
 1663 024a 4FF48064 		mov	r4, #1024
 1664 024e 1480     		strh	r4, [r2]	@ movhi
 1665              	.L122:
 959:Lib/ssc/src/ecatslv.c ****             }
 960:Lib/ssc/src/ecatslv.c ****             else if(nPdInputSize > 0)
 961:Lib/ssc/src/ecatslv.c ****             {
 962:Lib/ssc/src/ecatslv.c ****                 u16ALEventMask = PROCESS_INPUT_EVENT;
 963:Lib/ssc/src/ecatslv.c ****             }
 964:Lib/ssc/src/ecatslv.c **** 
 965:Lib/ssc/src/ecatslv.c ****         }
 966:Lib/ssc/src/ecatslv.c **** 
 967:Lib/ssc/src/ecatslv.c ****         if ((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1666              		.loc 1 967 9 is_stmt 1 view .LVU534
 1667              		.loc 1 967 50 is_stmt 0 view .LVU535
 1668 0250 9A1E     		subs	r2, r3, #2
 1669 0252 92B2     		uxth	r2, r2
 1670              		.loc 1 967 12 view .LVU536
 1671 0254 012A     		cmp	r2, #1
 1672 0256 03D9     		bls	.L124
 968:Lib/ssc/src/ecatslv.c ****             || (SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))/* Sync
 1673              		.loc 1 968 13 view .LVU537
 1674 0258 0229     		cmp	r1, #2
 1675 025a 01D0     		beq	.L124
 1676              		.loc 1 968 53 discriminator 1 view .LVU538
 1677 025c 0329     		cmp	r1, #3
 1678 025e 08D1     		bne	.L125
 1679              	.L124:
 969:Lib/ssc/src/ecatslv.c ****         {
 970:Lib/ssc/src/ecatslv.c ****             /* slave is running in DC-mode */
 971:Lib/ssc/src/ecatslv.c ****             bDcSyncActive = TRUE;
 1680              		.loc 1 971 13 is_stmt 1 view .LVU539
 1681              		.loc 1 971 27 is_stmt 0 view .LVU540
 1682 0260 7A4A     		ldr	r2, .L188+24
 1683 0262 0124     		movs	r4, #1
 1684 0264 1470     		strb	r4, [r2]
 972:Lib/ssc/src/ecatslv.c **** 
 973:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 974:Lib/ssc/src/ecatslv.c ****             /*In case of an Input only application with DC no PDI Isr handling is required*/
 975:Lib/ssc/src/ecatslv.c ****             if (nPdOutputSize == 0)
 1685              		.loc 1 975 13 is_stmt 1 view .LVU541
ARM GAS  /tmp/ccWTp91B.s 			page 86


 1686              		.loc 1 975 31 is_stmt 0 view .LVU542
 1687 0266 734A     		ldr	r2, .L188
 1688 0268 1288     		ldrh	r2, [r2]
 1689              		.loc 1 975 16 view .LVU543
 1690 026a 12B9     		cbnz	r2, .L125
 976:Lib/ssc/src/ecatslv.c ****             {
 977:Lib/ssc/src/ecatslv.c ****                u16ALEventMask = 0;
 1691              		.loc 1 977 16 is_stmt 1 view .LVU544
 1692              		.loc 1 977 31 is_stmt 0 view .LVU545
 1693 026c 764A     		ldr	r2, .L188+20
 1694 026e 0024     		movs	r4, #0
 1695 0270 1480     		strh	r4, [r2]	@ movhi
 1696              	.L125:
 978:Lib/ssc/src/ecatslv.c ****             }
 979:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 980:Lib/ssc/src/ecatslv.c ****         }
 981:Lib/ssc/src/ecatslv.c **** 
 982:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u16SyncType = SyncType0x1C32;
 1697              		.loc 1 982 5 is_stmt 1 view .LVU546
 1698              		.loc 1 982 32 is_stmt 0 view .LVU547
 1699 0272 724A     		ldr	r2, .L188+8
 1700 0274 5380     		strh	r3, [r2, #2]	@ movhi
 983:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u16SyncType = SyncType0x1C33;
 1701              		.loc 1 983 5 is_stmt 1 view .LVU548
 1702              		.loc 1 983 31 is_stmt 0 view .LVU549
 1703 0276 764A     		ldr	r2, .L188+28
 1704 0278 5180     		strh	r1, [r2, #2]	@ movhi
 984:Lib/ssc/src/ecatslv.c **** 
 985:Lib/ssc/src/ecatslv.c ****     /* Calculate number of Sync0 events within one SM cycle and the Sync0 events on which the input
 986:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Value = 0;
 1705              		.loc 1 986 5 is_stmt 1 view .LVU550
 1706              		.loc 1 986 26 is_stmt 0 view .LVU551
 1707 027a 0022     		movs	r2, #0
 1708 027c 754C     		ldr	r4, .L188+32
 1709 027e 2280     		strh	r2, [r4]	@ movhi
 987:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Counter = 0;
 1710              		.loc 1 987 5 is_stmt 1 view .LVU552
 1711              		.loc 1 987 28 is_stmt 0 view .LVU553
 1712 0280 754C     		ldr	r4, .L188+36
 1713 0282 2280     		strh	r2, [r4]	@ movhi
 988:Lib/ssc/src/ecatslv.c ****     u16SmSync0Value = 0;
 1714              		.loc 1 988 5 is_stmt 1 view .LVU554
 1715              		.loc 1 988 21 is_stmt 0 view .LVU555
 1716 0284 754C     		ldr	r4, .L188+40
 1717 0286 2280     		strh	r2, [r4]	@ movhi
 989:Lib/ssc/src/ecatslv.c ****     u16SmSync0Counter = 0;
 1718              		.loc 1 989 5 is_stmt 1 view .LVU556
 1719              		.loc 1 989 23 is_stmt 0 view .LVU557
 1720 0288 754C     		ldr	r4, .L188+44
 1721 028a 2280     		strh	r2, [r4]	@ movhi
 990:Lib/ssc/src/ecatslv.c **** 
 991:Lib/ssc/src/ecatslv.c **** 
 992:Lib/ssc/src/ecatslv.c ****     if(bSubordinatedCycles == TRUE)
 1722              		.loc 1 992 5 is_stmt 1 view .LVU558
 1723              		.loc 1 992 7 is_stmt 0 view .LVU559
 1724 028c 002E     		cmp	r6, #0
 1725 028e 40F0AF80 		bne	.L181
ARM GAS  /tmp/ccWTp91B.s 			page 87


 993:Lib/ssc/src/ecatslv.c ****     {
 994:Lib/ssc/src/ecatslv.c ****         /* get the number of Sync0 event within on SM cycle */
 995:Lib/ssc/src/ecatslv.c ****         if(cycleTimeSync1 >= cycleTimeSync0)
 996:Lib/ssc/src/ecatslv.c ****         {
 997:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = (UINT16)(cycleTimeSync1 / cycleTimeSync0);
 998:Lib/ssc/src/ecatslv.c ****             
 999:Lib/ssc/src/ecatslv.c ****             if((cycleTimeSync1 % cycleTimeSync0) == 0)
1000:Lib/ssc/src/ecatslv.c ****             {
1001:Lib/ssc/src/ecatslv.c ****                 /* if the Sync1cycletime/Sync0cycletime ratio is even one additional tick */
1002:Lib/ssc/src/ecatslv.c ****                 u16SmSync0Value ++;
1003:Lib/ssc/src/ecatslv.c ****         }
1004:Lib/ssc/src/ecatslv.c ****         }
1005:Lib/ssc/src/ecatslv.c ****         else
1006:Lib/ssc/src/ecatslv.c ****         {
1007:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = 1;
1008:Lib/ssc/src/ecatslv.c ****         }
1009:Lib/ssc/src/ecatslv.c **** 
1010:Lib/ssc/src/ecatslv.c ****         /* Calculate the Sync0 tick on which the inputs shall be latched (last Sync0 before the nex
1011:Lib/ssc/src/ecatslv.c ****         LatchInputSync0Value = (UINT16) (cycleTimeSync1 / cycleTimeSync0);
1012:Lib/ssc/src/ecatslv.c **** 
1013:Lib/ssc/src/ecatslv.c ****         if((cycleTimeSync1 % cycleTimeSync0) > 0)
1014:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
1015:Lib/ssc/src/ecatslv.c **** 
1016:Lib/ssc/src/ecatslv.c ****     }
1017:Lib/ssc/src/ecatslv.c ****     else 
1018:Lib/ssc/src/ecatslv.c ****     {
1019:Lib/ssc/src/ecatslv.c ****         if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 1726              		.loc 1 1019 9 is_stmt 1 view .LVU560
 1727              		.loc 1 1019 11 is_stmt 0 view .LVU561
 1728 0292 022B     		cmp	r3, #2
 1729 0294 00F0CA80 		beq	.L182
 1730              	.LVL146:
 1731              	.L130:
1020:Lib/ssc/src/ecatslv.c ****         {
1021:Lib/ssc/src/ecatslv.c ****             /* if SyncType of 0x1C32 is 2 the Sync0 event is trigger once during a SM cycle */
1022:Lib/ssc/src/ecatslv.c ****             u16SmSync0Value = 1;
1023:Lib/ssc/src/ecatslv.c ****         }   
1024:Lib/ssc/src/ecatslv.c **** 
1025:Lib/ssc/src/ecatslv.c ****         if(SyncType0x1C33 != SYNCTYPE_DCSYNC1)
 1732              		.loc 1 1025 9 is_stmt 1 view .LVU562
 1733              		.loc 1 1025 11 is_stmt 0 view .LVU563
 1734 0298 0329     		cmp	r1, #3
 1735 029a 02D0     		beq	.L129
1026:Lib/ssc/src/ecatslv.c ****         {
1027:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value = 1;
 1736              		.loc 1 1027 13 is_stmt 1 view .LVU564
 1737              		.loc 1 1027 34 is_stmt 0 view .LVU565
 1738 029c 6D4B     		ldr	r3, .L188+32
 1739 029e 0122     		movs	r2, #1
 1740 02a0 1A80     		strh	r2, [r3]	@ movhi
 1741              	.LVL147:
 1742              	.L129:
1028:Lib/ssc/src/ecatslv.c ****         }
1029:Lib/ssc/src/ecatslv.c ****     }
1030:Lib/ssc/src/ecatslv.c **** 
1031:Lib/ssc/src/ecatslv.c **** 
1032:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 88


1033:Lib/ssc/src/ecatslv.c ****     /* reset the error counter indicating synchronization problems */
1034:Lib/ssc/src/ecatslv.c ****     sCycleDiag.syncFailedCounter = 0;
 1743              		.loc 1 1034 5 is_stmt 1 view .LVU566
 1744              		.loc 1 1034 34 is_stmt 0 view .LVU567
 1745 02a2 704B     		ldr	r3, .L188+48
 1746 02a4 0022     		movs	r2, #0
 1747 02a6 1A80     		strh	r2, [r3]	@ movhi
1035:Lib/ssc/src/ecatslv.c **** 
1036:Lib/ssc/src/ecatslv.c **** 
1037:Lib/ssc/src/ecatslv.c ****     /*
1038:Lib/ssc/src/ecatslv.c ****         --- Check watchdog settings ---
1039:Lib/ssc/src/ecatslv.c ****     */
1040:Lib/ssc/src/ecatslv.c **** 
1041:Lib/ssc/src/ecatslv.c ****     /*get the watchdog time (register 0x420). if value is > 0 watchdog is active*/
1042:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1043:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(wd, ESC_PD_WD_TIME);
 1748              		.loc 1 1043 5 is_stmt 1 view .LVU568
 1749 02a8 0222     		movs	r2, #2
 1750 02aa 4FF48461 		mov	r1, #1056
 1751 02ae 0DF10A00 		add	r0, sp, #10
 1752 02b2 FFF7FEFF 		bl	HW_EscRead
 1753              	.LVL148:
1044:Lib/ssc/src/ecatslv.c ****     wd = SWAPWORD(wd);
 1754              		.loc 1 1044 5 view .LVU569
 1755              		.loc 1 1044 8 is_stmt 0 view .LVU570
 1756 02b6 BDF80A20 		ldrh	r2, [sp, #10]
1045:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1046:Lib/ssc/src/ecatslv.c **** 
1047:Lib/ssc/src/ecatslv.c ****     if (nPdOutputSize > 0 &&  wd != 0 )
 1757              		.loc 1 1047 5 is_stmt 1 view .LVU571
 1758              		.loc 1 1047 23 is_stmt 0 view .LVU572
 1759 02ba 5E4B     		ldr	r3, .L188
 1760 02bc 1B88     		ldrh	r3, [r3]
 1761              		.loc 1 1047 8 view .LVU573
 1762 02be 13B1     		cbz	r3, .L131
 1763              		.loc 1 1047 27 discriminator 1 view .LVU574
 1764 02c0 002A     		cmp	r2, #0
 1765 02c2 40F0E780 		bne	.L183
 1766              	.L131:
1048:Lib/ssc/src/ecatslv.c ****     {
1049:Lib/ssc/src/ecatslv.c ****     /*get watchdog divider (register 0x400)*/
1050:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(wdiv, ESC_WD_DIVIDER_OFFSET);
1051:Lib/ssc/src/ecatslv.c ****     wdiv = SWAPWORD(wdiv);
1052:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
1053:Lib/ssc/src/ecatslv.c ****         {
1054:Lib/ssc/src/ecatslv.c ****             /* the ESC subtracts 2 in register 0x400 so it has to be added here */
1055:Lib/ssc/src/ecatslv.c ****             UINT32 d = wdiv+2;
1056:Lib/ssc/src/ecatslv.c **** 
1057:Lib/ssc/src/ecatslv.c ****             d *= wd;
1058:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
1059:Lib/ssc/src/ecatslv.c ****             /* watchdog value has to be rounded up */
1060:Lib/ssc/src/ecatslv.c ****             d += 24999;
1061:Lib/ssc/src/ecatslv.c ****             d /= 25000;
1062:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
1063:Lib/ssc/src/ecatslv.c ****         }
1064:Lib/ssc/src/ecatslv.c ****         else
1065:Lib/ssc/src/ecatslv.c ****         {
ARM GAS  /tmp/ccWTp91B.s 			page 89


1066:Lib/ssc/src/ecatslv.c ****             wd = 0;
1067:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
1068:Lib/ssc/src/ecatslv.c ****             EcatWdValue = 0;
1069:Lib/ssc/src/ecatslv.c ****         }
1070:Lib/ssc/src/ecatslv.c ****     }
1071:Lib/ssc/src/ecatslv.c ****     else
1072:Lib/ssc/src/ecatslv.c ****     {
1073:Lib/ssc/src/ecatslv.c ****         /* the watchdog is deactivated or slave has no output process data*/
1074:Lib/ssc/src/ecatslv.c ****         wdiv = 0;
 1767              		.loc 1 1074 9 is_stmt 1 view .LVU575
 1768              		.loc 1 1074 14 is_stmt 0 view .LVU576
 1769 02c6 0023     		movs	r3, #0
 1770 02c8 ADF80C30 		strh	r3, [sp, #12]	@ movhi
1075:Lib/ssc/src/ecatslv.c ****         EcatWdValue = 0;
 1771              		.loc 1 1075 9 is_stmt 1 view .LVU577
 1772              		.loc 1 1075 21 is_stmt 0 view .LVU578
 1773 02cc 664A     		ldr	r2, .L188+52
 1774 02ce 1380     		strh	r3, [r2]	@ movhi
 1775              	.L133:
1076:Lib/ssc/src/ecatslv.c ****     }
1077:Lib/ssc/src/ecatslv.c **** 
1078:Lib/ssc/src/ecatslv.c ****     if((EcatWdValue == 0 && bWdTrigger) || (EcatWdValue != 0 && !bWdTrigger))
 1776              		.loc 1 1078 5 is_stmt 1 view .LVU579
 1777              		.loc 1 1078 21 is_stmt 0 view .LVU580
 1778 02d0 654B     		ldr	r3, .L188+52
 1779 02d2 1B88     		ldrh	r3, [r3]
 1780              		.loc 1 1078 7 view .LVU581
 1781 02d4 23B9     		cbnz	r3, .L134
 1782              		.loc 1 1078 26 discriminator 1 view .LVU582
 1783 02d6 654A     		ldr	r2, .L188+56
 1784 02d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1785 02da 002A     		cmp	r2, #0
 1786 02dc 40F04A81 		bne	.L175
 1787              	.L134:
 1788              		.loc 1 1078 41 discriminator 3 view .LVU583
 1789 02e0 23B1     		cbz	r3, .L135
 1790              		.loc 1 1078 65 discriminator 4 view .LVU584
 1791 02e2 624B     		ldr	r3, .L188+56
 1792 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1793              		.loc 1 1078 62 discriminator 4 view .LVU585
 1794 02e6 002B     		cmp	r3, #0
 1795 02e8 00F04681 		beq	.L176
 1796              	.L135:
1079:Lib/ssc/src/ecatslv.c ****     {
1080:Lib/ssc/src/ecatslv.c ****         /* if the WD-Trigger in the Sync Manager Channel 2 Control-Byte is set (Bit 6 of Register 0
1081:Lib/ssc/src/ecatslv.c ****             an error has to be returned */
1082:Lib/ssc/src/ecatslv.c ****         return ALSTATUSCODE_INVALIDWDCFG;
1083:Lib/ssc/src/ecatslv.c ****     }
1084:Lib/ssc/src/ecatslv.c **** 
1085:Lib/ssc/src/ecatslv.c ****     if ( bEscIntEnabled && nPdOutputSize != 0 )
 1797              		.loc 1 1085 5 is_stmt 1 view .LVU586
 1798              		.loc 1 1085 10 is_stmt 0 view .LVU587
 1799 02ec 554B     		ldr	r3, .L188+16
 1800 02ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801              		.loc 1 1085 8 view .LVU588
 1802 02f0 3BB1     		cbz	r3, .L136
 1803              		.loc 1 1085 42 discriminator 1 view .LVU589
ARM GAS  /tmp/ccWTp91B.s 			page 90


 1804 02f2 504B     		ldr	r3, .L188
 1805 02f4 1B88     		ldrh	r3, [r3]
 1806              		.loc 1 1085 25 discriminator 1 view .LVU590
 1807 02f6 23B1     		cbz	r3, .L136
1086:Lib/ssc/src/ecatslv.c ****     {
1087:Lib/ssc/src/ecatslv.c ****         /* ECAT synchron Mode is active, the Sync Manager Channel 2 event
1088:Lib/ssc/src/ecatslv.c ****            has to activated in the AL-Event mask register */
1089:Lib/ssc/src/ecatslv.c ****         u16ALEventMask |= PROCESS_OUTPUT_EVENT;
 1808              		.loc 1 1089 9 is_stmt 1 view .LVU591
 1809              		.loc 1 1089 24 is_stmt 0 view .LVU592
 1810 02f8 534A     		ldr	r2, .L188+20
 1811 02fa 1388     		ldrh	r3, [r2]
 1812 02fc 43F48063 		orr	r3, r3, #1024
 1813 0300 1380     		strh	r3, [r2]	@ movhi
 1814              	.L136:
1090:Lib/ssc/src/ecatslv.c ****     }
1091:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1092:Lib/ssc/src/ecatslv.c **** 
1093:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 1815              		.loc 1 1093 5 is_stmt 1 view .LVU593
 1816              		.loc 1 1093 18 is_stmt 0 view .LVU594
 1817 0302 0023     		movs	r3, #0
 1818 0304 5A4A     		ldr	r2, .L188+60
 1819 0306 1380     		strh	r3, [r2]	@ movhi
1094:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 1820              		.loc 1 1094 5 is_stmt 1 view .LVU595
 1821              		.loc 1 1094 20 is_stmt 0 view .LVU596
 1822 0308 5A4A     		ldr	r2, .L188+64
 1823 030a 1380     		strh	r3, [r2]	@ movhi
1095:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 1824              		.loc 1 1095 5 is_stmt 1 view .LVU597
 1825              		.loc 1 1095 20 is_stmt 0 view .LVU598
 1826 030c 5A4A     		ldr	r2, .L188+68
 1827 030e 1380     		strh	r3, [r2]	@ movhi
1096:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 1828              		.loc 1 1096 5 is_stmt 1 view .LVU599
 1829              		.loc 1 1096 18 is_stmt 0 view .LVU600
 1830 0310 5A4A     		ldr	r2, .L188+72
 1831 0312 1380     		strh	r3, [r2]	@ movhi
1097:Lib/ssc/src/ecatslv.c ****     bDcRunning = FALSE;
 1832              		.loc 1 1097 5 is_stmt 1 view .LVU601
 1833              		.loc 1 1097 16 is_stmt 0 view .LVU602
 1834 0314 5A4A     		ldr	r2, .L188+76
 1835 0316 1370     		strb	r3, [r2]
1098:Lib/ssc/src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 1836              		.loc 1 1098 5 is_stmt 1 view .LVU603
 1837              		.loc 1 1098 26 is_stmt 0 view .LVU604
 1838 0318 5A4A     		ldr	r2, .L188+80
 1839 031a 1370     		strb	r3, [r2]
1099:Lib/ssc/src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 1840              		.loc 1 1099 5 is_stmt 1 view .LVU605
 1841              		.loc 1 1099 33 is_stmt 0 view .LVU606
 1842 031c 5A4A     		ldr	r2, .L188+84
 1843 031e 1380     		strh	r3, [r2]	@ movhi
1100:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1101:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 1844              		.loc 1 1101 5 is_stmt 1 view .LVU607
ARM GAS  /tmp/ccWTp91B.s 			page 91


 1845              		.loc 1 1101 31 is_stmt 0 view .LVU608
 1846 0320 4B4A     		ldr	r2, .L188+28
 1847 0322 82F84030 		strb	r3, [r2, #64]
1102:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1103:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u8SyncError = 0;
 1848              		.loc 1 1103 5 is_stmt 1 view .LVU609
 1849              		.loc 1 1103 32 is_stmt 0 view .LVU610
 1850 0326 454A     		ldr	r2, .L188+8
 1851 0328 82F84030 		strb	r3, [r2, #64]
1104:Lib/ssc/src/ecatslv.c ****     sSyncManOutPar.u16SmEventMissedCounter = 0;
 1852              		.loc 1 1104 5 is_stmt 1 view .LVU611
 1853              		.loc 1 1104 44 is_stmt 0 view .LVU612
 1854 032c 1385     		strh	r3, [r2, #40]	@ movhi
1105:Lib/ssc/src/ecatslv.c **** 
1106:Lib/ssc/src/ecatslv.c ****     /* calculate the Sync0/Sync1 watchdog timeouts */
1107:Lib/ssc/src/ecatslv.c ****     if ( (dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0 )
 1855              		.loc 1 1107 5 is_stmt 1 view .LVU613
 1856              		.loc 1 1107 21 is_stmt 0 view .LVU614
 1857 032e BDF80E30 		ldrh	r3, [sp, #14]
 1858              		.loc 1 1107 8 view .LVU615
 1859 0332 13F4007F 		tst	r3, #512
 1860 0336 18D0     		beq	.L137
1108:Lib/ssc/src/ecatslv.c ****     {
1109:Lib/ssc/src/ecatslv.c ****         /*calculate the Sync0 Watchdog counter value the minimum value is 1 ms
1110:Lib/ssc/src/ecatslv.c ****             if the sync0 cycle is greater 500us the Sync0 Wd value is 2*Sycn0 cycle */
1111:Lib/ssc/src/ecatslv.c ****         if(cycleTimeSync0 == 0)
 1861              		.loc 1 1111 9 is_stmt 1 view .LVU616
 1862              		.loc 1 1111 27 is_stmt 0 view .LVU617
 1863 0338 0199     		ldr	r1, [sp, #4]
 1864              		.loc 1 1111 11 view .LVU618
 1865 033a 59B1     		cbz	r1, .L138
 1866              	.LBB40:
1112:Lib/ssc/src/ecatslv.c ****         {
1113:Lib/ssc/src/ecatslv.c ****             Sync0WdValue = 0;
1114:Lib/ssc/src/ecatslv.c ****         }
1115:Lib/ssc/src/ecatslv.c ****         else
1116:Lib/ssc/src/ecatslv.c ****         {
1117:Lib/ssc/src/ecatslv.c ****             UINT32 Sync0Cycle = cycleTimeSync0/100000;
 1867              		.loc 1 1117 13 is_stmt 1 view .LVU619
 1868              		.loc 1 1117 20 is_stmt 0 view .LVU620
 1869 033c 4A09     		lsrs	r2, r1, #5
 1870 033e 5348     		ldr	r0, .L188+88
 1871 0340 A0FB0202 		umull	r0, r2, r0, r2
 1872 0344 D209     		lsrs	r2, r2, #7
 1873              	.LVL149:
1118:Lib/ssc/src/ecatslv.c ****             if(Sync0Cycle < 5)
 1874              		.loc 1 1118 13 is_stmt 1 view .LVU621
 1875              		.loc 1 1118 15 is_stmt 0 view .LVU622
 1876 0346 5248     		ldr	r0, .L188+92
 1877 0348 8142     		cmp	r1, r0
 1878 034a 00F2C280 		bhi	.L139
1119:Lib/ssc/src/ecatslv.c ****             {
1120:Lib/ssc/src/ecatslv.c ****                 /*Sync0 cycle less than 500us*/
1121:Lib/ssc/src/ecatslv.c ****                 Sync0WdValue = 1;
 1879              		.loc 1 1121 17 is_stmt 1 view .LVU623
 1880              		.loc 1 1121 30 is_stmt 0 view .LVU624
 1881 034e 484A     		ldr	r2, .L188+60
ARM GAS  /tmp/ccWTp91B.s 			page 92


 1882              	.LVL150:
 1883              		.loc 1 1121 30 view .LVU625
 1884 0350 0120     		movs	r0, #1
 1885 0352 1080     		strh	r0, [r2]	@ movhi
 1886              	.LVL151:
 1887              	.L138:
 1888              		.loc 1 1121 30 view .LVU626
 1889              	.LBE40:
1122:Lib/ssc/src/ecatslv.c ****             }
1123:Lib/ssc/src/ecatslv.c ****             else
1124:Lib/ssc/src/ecatslv.c ****             {
1125:Lib/ssc/src/ecatslv.c ****                 Sync0WdValue = (UINT16)(Sync0Cycle*2)/10;
1126:Lib/ssc/src/ecatslv.c ****             }
1127:Lib/ssc/src/ecatslv.c ****         }
1128:Lib/ssc/src/ecatslv.c **** 
1129:Lib/ssc/src/ecatslv.c ****         /* Calculate also the watchdog time for Sync1*/
1130:Lib/ssc/src/ecatslv.c ****         if ( (dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0 )
 1890              		.loc 1 1130 9 is_stmt 1 view .LVU627
 1891              		.loc 1 1130 12 is_stmt 0 view .LVU628
 1892 0354 13F4806F 		tst	r3, #1024
 1893 0358 07D0     		beq	.L137
1131:Lib/ssc/src/ecatslv.c ****         {
1132:Lib/ssc/src/ecatslv.c ****             if(cycleTimeSync1 < cycleTimeSync0)
 1894              		.loc 1 1132 13 is_stmt 1 view .LVU629
 1895              		.loc 1 1132 31 is_stmt 0 view .LVU630
 1896 035a 009A     		ldr	r2, [sp]
 1897              		.loc 1 1132 15 view .LVU631
 1898 035c 9142     		cmp	r1, r2
 1899 035e 40F2C180 		bls	.L140
1133:Lib/ssc/src/ecatslv.c **** 						{
1134:Lib/ssc/src/ecatslv.c **** 										/* Sync 1 has the same cycle time than Sync0 (maybe with a shift (cycleTimeSync1 > 0))*/
1135:Lib/ssc/src/ecatslv.c **** 										Sync1WdValue = Sync0WdValue;
 1900              		.loc 1 1135 11 is_stmt 1 view .LVU632
 1901              		.loc 1 1135 24 is_stmt 0 view .LVU633
 1902 0362 434B     		ldr	r3, .L188+60
 1903 0364 1A88     		ldrh	r2, [r3]
 1904 0366 454B     		ldr	r3, .L188+72
 1905 0368 1A80     		strh	r2, [r3]	@ movhi
 1906              	.L137:
1136:Lib/ssc/src/ecatslv.c **** 						}
1137:Lib/ssc/src/ecatslv.c **** 						else
1138:Lib/ssc/src/ecatslv.c **** 						{
1139:Lib/ssc/src/ecatslv.c **** 										/* Sync1 cycle is larger than Sync0 (e.g. subordinated Sync0 cycles) */
1140:Lib/ssc/src/ecatslv.c **** 										UINT32 Sync1Cycle = cycleTimeSync1/100000;
1141:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
1142:Lib/ssc/src/ecatslv.c **** 										{
1143:Lib/ssc/src/ecatslv.c **** 												/*Sync0 cycle less than 500us*/
1144:Lib/ssc/src/ecatslv.c **** 												Sync1WdValue = 1;
1145:Lib/ssc/src/ecatslv.c **** 										}
1146:Lib/ssc/src/ecatslv.c **** 										else
1147:Lib/ssc/src/ecatslv.c **** 										{
1148:Lib/ssc/src/ecatslv.c **** 												Sync1WdValue = (UINT16)(Sync1Cycle*2)/10;
1149:Lib/ssc/src/ecatslv.c **** 										}
1150:Lib/ssc/src/ecatslv.c **** 
1151:Lib/ssc/src/ecatslv.c **** 												/* add one Sync0 cycle because the Sync1 cycle starts on the next Sync0 after the Sync1
1152:Lib/ssc/src/ecatslv.c **** 													Sync1WdValue += Sync0WdValue/2;
1153:Lib/ssc/src/ecatslv.c **** 						}
ARM GAS  /tmp/ccWTp91B.s 			page 93


1154:Lib/ssc/src/ecatslv.c **** 				}
1155:Lib/ssc/src/ecatslv.c ****     }
1156:Lib/ssc/src/ecatslv.c **** 
1157:Lib/ssc/src/ecatslv.c **** 
1158:Lib/ssc/src/ecatslv.c **** 
1159:Lib/ssc/src/ecatslv.c **** 
1160:Lib/ssc/src/ecatslv.c **** 
1161:Lib/ssc/src/ecatslv.c ****     if(nPdOutputSize > 0)
 1907              		.loc 1 1161 5 is_stmt 1 view .LVU634
 1908              		.loc 1 1161 22 is_stmt 0 view .LVU635
 1909 036a 324B     		ldr	r3, .L188
 1910 036c 1B88     		ldrh	r3, [r3]
 1911              		.loc 1 1161 7 view .LVU636
 1912 036e 002B     		cmp	r3, #0
 1913 0370 40F0D480 		bne	.L184
 1914              	.L143:
1162:Lib/ssc/src/ecatslv.c ****     {
1163:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1164:Lib/ssc/src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_OUT);
1165:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1166:Lib/ssc/src/ecatslv.c ****     }
1167:Lib/ssc/src/ecatslv.c **** 
1168:Lib/ssc/src/ecatslv.c ****     if(nPdInputSize > 0)
 1915              		.loc 1 1168 5 is_stmt 1 view .LVU637
 1916              		.loc 1 1168 21 is_stmt 0 view .LVU638
 1917 0374 304B     		ldr	r3, .L188+4
 1918 0376 1B88     		ldrh	r3, [r3]
 1919              		.loc 1 1168 7 view .LVU639
 1920 0378 002B     		cmp	r3, #0
 1921 037a 40F0D380 		bne	.L185
 1922              	.L144:
1169:Lib/ssc/src/ecatslv.c ****     {
1170:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1171:Lib/ssc/src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_IN);
1172:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1173:Lib/ssc/src/ecatslv.c ****     }
1174:Lib/ssc/src/ecatslv.c **** 
1175:Lib/ssc/src/ecatslv.c ****     /*write initial input data*/
1176:Lib/ssc/src/ecatslv.c ****     PDO_InputMapping();
 1923              		.loc 1 1176 5 is_stmt 1 view .LVU640
 1924 037e FFF7FEFF 		bl	PDO_InputMapping
 1925              	.LVL152:
1177:Lib/ssc/src/ecatslv.c **** 
1178:Lib/ssc/src/ecatslv.c ****     return ALSTATUSCODE_NOERROR;
 1926              		.loc 1 1178 5 view .LVU641
 1927              		.loc 1 1178 12 is_stmt 0 view .LVU642
 1928 0382 0020     		movs	r0, #0
 1929              	.LVL153:
 1930              	.L100:
1179:Lib/ssc/src/ecatslv.c **** }
 1931              		.loc 1 1179 1 view .LVU643
 1932 0384 05B0     		add	sp, sp, #20
 1933              		.cfi_remember_state
 1934              		.cfi_def_cfa_offset 20
 1935              		@ sp needed
 1936 0386 F0BD     		pop	{r4, r5, r6, r7, pc}
 1937              	.LVL154:
ARM GAS  /tmp/ccWTp91B.s 			page 94


 1938              	.L114:
 1939              		.cfi_restore_state
 865:Lib/ssc/src/ecatslv.c ****             {
 1940              		.loc 1 865 18 is_stmt 1 view .LVU644
 865:Lib/ssc/src/ecatslv.c ****             {
 1941              		.loc 1 865 35 is_stmt 0 view .LVU645
 1942 0388 2B4B     		ldr	r3, .L188+4
 1943 038a 1B88     		ldrh	r3, [r3]
 865:Lib/ssc/src/ecatslv.c ****             {
 1944              		.loc 1 865 21 view .LVU646
 1945 038c 23B1     		cbz	r3, .L170
 867:Lib/ssc/src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_SM_SYNCHRON;
 1946              		.loc 1 867 32 view .LVU647
 1947 038e 1346     		mov	r3, r2
 868:Lib/ssc/src/ecatslv.c ****             }
 1948              		.loc 1 868 32 view .LVU648
 1949 0390 0121     		movs	r1, #1
 1950              	.LVL155:
 868:Lib/ssc/src/ecatslv.c ****             }
 1951              		.loc 1 868 32 view .LVU649
 1952 0392 3AE7     		b	.L115
 1953              	.LVL156:
 1954              	.L169:
 858:Lib/ssc/src/ecatslv.c ****                 
 1955              		.loc 1 858 32 view .LVU650
 1956 0394 0123     		movs	r3, #1
 1957 0396 38E7     		b	.L115
 1958              	.LVL157:
 1959              	.L170:
 873:Lib/ssc/src/ecatslv.c ****             }
 1960              		.loc 1 873 32 view .LVU651
 1961 0398 1946     		mov	r1, r3
 1962              	.LVL158:
 873:Lib/ssc/src/ecatslv.c ****             }
 1963              		.loc 1 873 32 view .LVU652
 1964 039a 36E7     		b	.L115
 1965              	.LVL159:
 1966              	.L113:
 880:Lib/ssc/src/ecatslv.c ****             {
 1967              		.loc 1 880 13 is_stmt 1 view .LVU653
 880:Lib/ssc/src/ecatslv.c ****             {
 1968              		.loc 1 880 31 is_stmt 0 view .LVU654
 1969 039c 254B     		ldr	r3, .L188
 1970              	.LVL160:
 880:Lib/ssc/src/ecatslv.c ****             {
 1971              		.loc 1 880 31 view .LVU655
 1972 039e 1B88     		ldrh	r3, [r3]
 880:Lib/ssc/src/ecatslv.c ****             {
 1973              		.loc 1 880 16 view .LVU656
 1974 03a0 0BB1     		cbz	r3, .L116
 883:Lib/ssc/src/ecatslv.c ****                 {
 1975              		.loc 1 883 17 is_stmt 1 view .LVU657
 883:Lib/ssc/src/ecatslv.c ****                 {
 1976              		.loc 1 883 20 is_stmt 0 view .LVU658
 1977 03a2 56B1     		cbz	r6, .L171
 885:Lib/ssc/src/ecatslv.c ****                 }
 1978              		.loc 1 885 36 view .LVU659
ARM GAS  /tmp/ccWTp91B.s 			page 95


 1979 03a4 0323     		movs	r3, #3
 1980              	.L116:
 1981              	.LVL161:
 898:Lib/ssc/src/ecatslv.c ****             {
 1982              		.loc 1 898 13 is_stmt 1 view .LVU660
 898:Lib/ssc/src/ecatslv.c ****             {
 1983              		.loc 1 898 30 is_stmt 0 view .LVU661
 1984 03a6 2449     		ldr	r1, .L188+4
 1985              	.LVL162:
 898:Lib/ssc/src/ecatslv.c ****             {
 1986              		.loc 1 898 30 view .LVU662
 1987 03a8 0988     		ldrh	r1, [r1]
 898:Lib/ssc/src/ecatslv.c ****             {
 1988              		.loc 1 898 16 view .LVU663
 1989 03aa 0029     		cmp	r1, #0
 1990 03ac 3FF430AF 		beq	.L111
 900:Lib/ssc/src/ecatslv.c ****                 {
 1991              		.loc 1 900 17 is_stmt 1 view .LVU664
 900:Lib/ssc/src/ecatslv.c ****                 {
 1992              		.loc 1 900 20 is_stmt 0 view .LVU665
 1993 03b0 12F4806F 		tst	r2, #1024
 1994 03b4 03D0     		beq	.L172
 903:Lib/ssc/src/ecatslv.c ****                 }
 1995              		.loc 1 903 36 view .LVU666
 1996 03b6 0321     		movs	r1, #3
 1997 03b8 2AE7     		b	.L111
 1998              	.LVL163:
 1999              	.L171:
 889:Lib/ssc/src/ecatslv.c ****                 }
 2000              		.loc 1 889 36 view .LVU667
 2001 03ba 0223     		movs	r3, #2
 2002 03bc F3E7     		b	.L116
 2003              	.LVL164:
 2004              	.L172:
 908:Lib/ssc/src/ecatslv.c ****                 }
 2005              		.loc 1 908 36 view .LVU668
 2006 03be 0221     		movs	r1, #2
 2007 03c0 26E7     		b	.L111
 2008              	.LVL165:
 2009              	.L179:
 921:Lib/ssc/src/ecatslv.c **** 
 2010              		.loc 1 921 9 is_stmt 1 view .LVU669
 921:Lib/ssc/src/ecatslv.c **** 
 2011              		.loc 1 921 42 is_stmt 0 view .LVU670
 2012 03c2 019A     		ldr	r2, [sp, #4]
 2013 03c4 1D4C     		ldr	r4, .L188+8
 2014 03c6 6262     		str	r2, [r4, #36]
 924:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 2015              		.loc 1 924 9 is_stmt 1 view .LVU671
 924:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 2016              		.loc 1 924 41 is_stmt 0 view .LVU672
 2017 03c8 214C     		ldr	r4, .L188+28
 2018 03ca 6262     		str	r2, [r4, #36]
 2019 03cc 26E7     		b	.L118
 2020              	.L180:
 929:Lib/ssc/src/ecatslv.c **** 
 2021              		.loc 1 929 9 is_stmt 1 view .LVU673
ARM GAS  /tmp/ccWTp91B.s 			page 96


 929:Lib/ssc/src/ecatslv.c **** 
 2022              		.loc 1 929 42 is_stmt 0 view .LVU674
 2023 03ce 019A     		ldr	r2, [sp, #4]
 2024 03d0 1A4C     		ldr	r4, .L188+8
 2025 03d2 6262     		str	r2, [r4, #36]
 932:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 2026              		.loc 1 932 9 is_stmt 1 view .LVU675
 932:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 2027              		.loc 1 932 41 is_stmt 0 view .LVU676
 2028 03d4 92B2     		uxth	r2, r2
 2029 03d6 1E4C     		ldr	r4, .L188+28
 2030 03d8 6262     		str	r2, [r4, #36]
 2031 03da 1FE7     		b	.L118
 2032              	.L123:
 960:Lib/ssc/src/ecatslv.c ****             {
 2033              		.loc 1 960 18 is_stmt 1 view .LVU677
 960:Lib/ssc/src/ecatslv.c ****             {
 2034              		.loc 1 960 34 is_stmt 0 view .LVU678
 2035 03dc 164A     		ldr	r2, .L188+4
 2036 03de 1288     		ldrh	r2, [r2]
 960:Lib/ssc/src/ecatslv.c ****             {
 2037              		.loc 1 960 20 view .LVU679
 2038 03e0 002A     		cmp	r2, #0
 2039 03e2 3FF435AF 		beq	.L122
 962:Lib/ssc/src/ecatslv.c ****             }
 2040              		.loc 1 962 17 is_stmt 1 view .LVU680
 962:Lib/ssc/src/ecatslv.c ****             }
 2041              		.loc 1 962 32 is_stmt 0 view .LVU681
 2042 03e6 184A     		ldr	r2, .L188+20
 2043 03e8 4FF40064 		mov	r4, #2048
 2044 03ec 1480     		strh	r4, [r2]	@ movhi
 2045 03ee 2FE7     		b	.L122
 2046              	.L181:
 995:Lib/ssc/src/ecatslv.c ****         {
 2047              		.loc 1 995 9 is_stmt 1 view .LVU682
 995:Lib/ssc/src/ecatslv.c ****         {
 2048              		.loc 1 995 27 is_stmt 0 view .LVU683
 2049 03f0 019B     		ldr	r3, [sp, #4]
 2050              	.LVL166:
 995:Lib/ssc/src/ecatslv.c ****         {
 2051              		.loc 1 995 11 view .LVU684
 2052 03f2 9842     		cmp	r0, r3
 2053 03f4 0AD3     		bcc	.L127
 997:Lib/ssc/src/ecatslv.c ****             
 2054              		.loc 1 997 13 is_stmt 1 view .LVU685
 997:Lib/ssc/src/ecatslv.c ****             
 2055              		.loc 1 997 55 is_stmt 0 view .LVU686
 2056 03f6 B0FBF3F2 		udiv	r2, r0, r3
 997:Lib/ssc/src/ecatslv.c ****             
 2057              		.loc 1 997 31 view .LVU687
 2058 03fa 91B2     		uxth	r1, r2
 2059              	.LVL167:
 997:Lib/ssc/src/ecatslv.c ****             
 2060              		.loc 1 997 29 view .LVU688
 2061 03fc 174C     		ldr	r4, .L188+40
 2062 03fe 2180     		strh	r1, [r4]	@ movhi
 999:Lib/ssc/src/ecatslv.c ****             {
ARM GAS  /tmp/ccWTp91B.s 			page 97


 2063              		.loc 1 999 13 is_stmt 1 view .LVU689
 999:Lib/ssc/src/ecatslv.c ****             {
 2064              		.loc 1 999 32 is_stmt 0 view .LVU690
 2065 0400 03FB1202 		mls	r2, r3, r2, r0
 999:Lib/ssc/src/ecatslv.c ****             {
 2066              		.loc 1 999 15 view .LVU691
 2067 0404 2AB9     		cbnz	r2, .L128
1002:Lib/ssc/src/ecatslv.c ****         }
 2068              		.loc 1 1002 17 is_stmt 1 view .LVU692
1002:Lib/ssc/src/ecatslv.c ****         }
 2069              		.loc 1 1002 33 is_stmt 0 view .LVU693
 2070 0406 0131     		adds	r1, r1, #1
 2071 0408 2180     		strh	r1, [r4]	@ movhi
 2072 040a 02E0     		b	.L128
 2073              	.LVL168:
 2074              	.L127:
1007:Lib/ssc/src/ecatslv.c ****         }
 2075              		.loc 1 1007 13 is_stmt 1 view .LVU694
1007:Lib/ssc/src/ecatslv.c ****         }
 2076              		.loc 1 1007 29 is_stmt 0 view .LVU695
 2077 040c 134A     		ldr	r2, .L188+40
 2078 040e 0121     		movs	r1, #1
 2079              	.LVL169:
1007:Lib/ssc/src/ecatslv.c ****         }
 2080              		.loc 1 1007 29 view .LVU696
 2081 0410 1180     		strh	r1, [r2]	@ movhi
 2082              	.L128:
1011:Lib/ssc/src/ecatslv.c **** 
 2083              		.loc 1 1011 9 is_stmt 1 view .LVU697
1011:Lib/ssc/src/ecatslv.c **** 
 2084              		.loc 1 1011 57 is_stmt 0 view .LVU698
 2085 0412 B0FBF3F1 		udiv	r1, r0, r3
1011:Lib/ssc/src/ecatslv.c **** 
 2086              		.loc 1 1011 32 view .LVU699
 2087 0416 8AB2     		uxth	r2, r1
1011:Lib/ssc/src/ecatslv.c **** 
 2088              		.loc 1 1011 30 view .LVU700
 2089 0418 0E4C     		ldr	r4, .L188+32
 2090 041a 2280     		strh	r2, [r4]	@ movhi
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 2091              		.loc 1 1013 9 is_stmt 1 view .LVU701
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 2092              		.loc 1 1013 28 is_stmt 0 view .LVU702
 2093 041c 03FB1100 		mls	r0, r3, r1, r0
1013:Lib/ssc/src/ecatslv.c ****             LatchInputSync0Value++;
 2094              		.loc 1 1013 11 view .LVU703
 2095 0420 0028     		cmp	r0, #0
 2096 0422 3FF43EAF 		beq	.L129
1014:Lib/ssc/src/ecatslv.c **** 
 2097              		.loc 1 1014 13 is_stmt 1 view .LVU704
1014:Lib/ssc/src/ecatslv.c **** 
 2098              		.loc 1 1014 33 is_stmt 0 view .LVU705
 2099 0426 0132     		adds	r2, r2, #1
 2100 0428 2280     		strh	r2, [r4]	@ movhi
 2101 042a 3AE7     		b	.L129
 2102              	.LVL170:
 2103              	.L182:
ARM GAS  /tmp/ccWTp91B.s 			page 98


1022:Lib/ssc/src/ecatslv.c ****         }   
 2104              		.loc 1 1022 13 is_stmt 1 view .LVU706
1022:Lib/ssc/src/ecatslv.c ****         }   
 2105              		.loc 1 1022 29 is_stmt 0 view .LVU707
 2106 042c 0B4B     		ldr	r3, .L188+40
 2107              	.LVL171:
1022:Lib/ssc/src/ecatslv.c ****         }   
 2108              		.loc 1 1022 29 view .LVU708
 2109 042e 0122     		movs	r2, #1
 2110 0430 1A80     		strh	r2, [r3]	@ movhi
 2111 0432 31E7     		b	.L130
 2112              	.L189:
 2113              		.align	2
 2114              	.L188:
 2115 0434 00000000 		.word	.LANCHOR7
 2116 0438 00000000 		.word	.LANCHOR4
 2117 043c 00000000 		.word	sSyncManOutPar
 2118 0440 00000000 		.word	.LANCHOR3
 2119 0444 00000000 		.word	.LANCHOR14
 2120 0448 00000000 		.word	.LANCHOR12
 2121 044c 00000000 		.word	.LANCHOR15
 2122 0450 00000000 		.word	sSyncManInPar
 2123 0454 00000000 		.word	.LANCHOR16
 2124 0458 00000000 		.word	.LANCHOR17
 2125 045c 00000000 		.word	.LANCHOR18
 2126 0460 00000000 		.word	.LANCHOR19
 2127 0464 00000000 		.word	sCycleDiag
 2128 0468 00000000 		.word	.LANCHOR20
 2129 046c 00000000 		.word	.LANCHOR9
 2130 0470 00000000 		.word	.LANCHOR21
 2131 0474 00000000 		.word	.LANCHOR22
 2132 0478 00000000 		.word	.LANCHOR23
 2133 047c 00000000 		.word	.LANCHOR24
 2134 0480 00000000 		.word	.LANCHOR25
 2135 0484 00000000 		.word	.LANCHOR26
 2136 0488 00000000 		.word	.LANCHOR27
 2137 048c C55A7C0A 		.word	175921861
 2138 0490 1FA10700 		.word	499999
 2139              	.LVL172:
 2140              	.L183:
1050:Lib/ssc/src/ecatslv.c ****     wdiv = SWAPWORD(wdiv);
 2141              		.loc 1 1050 5 is_stmt 1 view .LVU709
 2142 0494 0222     		movs	r2, #2
 2143 0496 4FF48061 		mov	r1, #1024
 2144 049a 03A8     		add	r0, sp, #12
 2145 049c FFF7FEFF 		bl	HW_EscRead
 2146              	.LVL173:
1051:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
 2147              		.loc 1 1051 5 view .LVU710
1051:Lib/ssc/src/ecatslv.c ****         if ( wdiv != 0 )
 2148              		.loc 1 1051 10 is_stmt 0 view .LVU711
 2149 04a0 BDF80C20 		ldrh	r2, [sp, #12]
1052:Lib/ssc/src/ecatslv.c ****         {
 2150              		.loc 1 1052 9 is_stmt 1 view .LVU712
1052:Lib/ssc/src/ecatslv.c ****         {
 2151              		.loc 1 1052 12 is_stmt 0 view .LVU713
 2152 04a4 7AB1     		cbz	r2, .L132
ARM GAS  /tmp/ccWTp91B.s 			page 99


 2153              	.LBB41:
1055:Lib/ssc/src/ecatslv.c **** 
 2154              		.loc 1 1055 13 is_stmt 1 view .LVU714
1055:Lib/ssc/src/ecatslv.c **** 
 2155              		.loc 1 1055 28 is_stmt 0 view .LVU715
 2156 04a6 0232     		adds	r2, r2, #2
 2157              	.LVL174:
1057:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
 2158              		.loc 1 1057 13 is_stmt 1 view .LVU716
1057:Lib/ssc/src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
 2159              		.loc 1 1057 15 is_stmt 0 view .LVU717
 2160 04a8 BDF80A10 		ldrh	r1, [sp, #10]
 2161              	.LVL175:
1060:Lib/ssc/src/ecatslv.c ****             d /= 25000;
 2162              		.loc 1 1060 13 is_stmt 1 view .LVU718
1060:Lib/ssc/src/ecatslv.c ****             d /= 25000;
 2163              		.loc 1 1060 15 is_stmt 0 view .LVU719
 2164 04ac 46F2A713 		movw	r3, #24999
 2165 04b0 02FB0133 		mla	r3, r2, r1, r3
 2166              	.LVL176:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2167              		.loc 1 1061 13 is_stmt 1 view .LVU720
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2168              		.loc 1 1061 15 is_stmt 0 view .LVU721
 2169 04b4 DB08     		lsrs	r3, r3, #3
 2170              	.LVL177:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2171              		.loc 1 1061 15 view .LVU722
 2172 04b6 314A     		ldr	r2, .L190
 2173              	.LVL178:
1061:Lib/ssc/src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2174              		.loc 1 1061 15 view .LVU723
 2175 04b8 A2FB0323 		umull	r2, r3, r2, r3
 2176              	.LVL179:
1062:Lib/ssc/src/ecatslv.c ****         }
 2177              		.loc 1 1062 13 is_stmt 1 view .LVU724
1062:Lib/ssc/src/ecatslv.c ****         }
 2178              		.loc 1 1062 27 is_stmt 0 view .LVU725
 2179 04bc C3F30F23 		ubfx	r3, r3, #8, #16
 2180              	.LVL180:
1062:Lib/ssc/src/ecatslv.c ****         }
 2181              		.loc 1 1062 25 view .LVU726
 2182 04c0 2F4A     		ldr	r2, .L190+4
 2183 04c2 1380     		strh	r3, [r2]	@ movhi
 2184              	.LBE41:
 2185 04c4 04E7     		b	.L133
 2186              	.LVL181:
 2187              	.L132:
1066:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
 2188              		.loc 1 1066 13 is_stmt 1 view .LVU727
1066:Lib/ssc/src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
 2189              		.loc 1 1066 16 is_stmt 0 view .LVU728
 2190 04c6 0023     		movs	r3, #0
 2191 04c8 ADF80A30 		strh	r3, [sp, #10]	@ movhi
1068:Lib/ssc/src/ecatslv.c ****         }
 2192              		.loc 1 1068 13 is_stmt 1 view .LVU729
1068:Lib/ssc/src/ecatslv.c ****         }
ARM GAS  /tmp/ccWTp91B.s 			page 100


 2193              		.loc 1 1068 25 is_stmt 0 view .LVU730
 2194 04cc 2C4A     		ldr	r2, .L190+4
 2195 04ce 1380     		strh	r3, [r2]	@ movhi
 2196 04d0 FEE6     		b	.L133
 2197              	.LVL182:
 2198              	.L139:
 2199              	.LBB42:
1125:Lib/ssc/src/ecatslv.c ****             }
 2200              		.loc 1 1125 17 is_stmt 1 view .LVU731
1125:Lib/ssc/src/ecatslv.c ****             }
 2201              		.loc 1 1125 32 is_stmt 0 view .LVU732
 2202 04d2 5200     		lsls	r2, r2, #1
 2203              	.LVL183:
1125:Lib/ssc/src/ecatslv.c ****             }
 2204              		.loc 1 1125 32 view .LVU733
 2205 04d4 92B2     		uxth	r2, r2
1125:Lib/ssc/src/ecatslv.c ****             }
 2206              		.loc 1 1125 30 view .LVU734
 2207 04d6 2B48     		ldr	r0, .L190+8
 2208 04d8 A0FB0202 		umull	r0, r2, r0, r2
 2209 04dc D208     		lsrs	r2, r2, #3
 2210 04de 2A48     		ldr	r0, .L190+12
 2211 04e0 0280     		strh	r2, [r0]	@ movhi
 2212 04e2 37E7     		b	.L138
 2213              	.LVL184:
 2214              	.L140:
1125:Lib/ssc/src/ecatslv.c ****             }
 2215              		.loc 1 1125 30 view .LVU735
 2216              	.LBE42:
 2217              	.LBB43:
1140:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
 2218              		.loc 1 1140 11 is_stmt 1 view .LVU736
1140:Lib/ssc/src/ecatslv.c **** 										if(Sync1Cycle < 5)
 2219              		.loc 1 1140 18 is_stmt 0 view .LVU737
 2220 04e4 5309     		lsrs	r3, r2, #5
 2221 04e6 2949     		ldr	r1, .L190+16
 2222 04e8 A1FB0313 		umull	r1, r3, r1, r3
 2223 04ec DB09     		lsrs	r3, r3, #7
 2224              	.LVL185:
1141:Lib/ssc/src/ecatslv.c **** 										{
 2225              		.loc 1 1141 11 is_stmt 1 view .LVU738
1141:Lib/ssc/src/ecatslv.c **** 										{
 2226              		.loc 1 1141 13 is_stmt 0 view .LVU739
 2227 04ee 2849     		ldr	r1, .L190+20
 2228 04f0 8A42     		cmp	r2, r1
 2229 04f2 0AD8     		bhi	.L141
1144:Lib/ssc/src/ecatslv.c **** 										}
 2230              		.loc 1 1144 13 is_stmt 1 view .LVU740
1144:Lib/ssc/src/ecatslv.c **** 										}
 2231              		.loc 1 1144 26 is_stmt 0 view .LVU741
 2232 04f4 274B     		ldr	r3, .L190+24
 2233              	.LVL186:
1144:Lib/ssc/src/ecatslv.c **** 										}
 2234              		.loc 1 1144 26 view .LVU742
 2235 04f6 0122     		movs	r2, #1
 2236              	.LVL187:
1144:Lib/ssc/src/ecatslv.c **** 										}
ARM GAS  /tmp/ccWTp91B.s 			page 101


 2237              		.loc 1 1144 26 view .LVU743
 2238 04f8 1A80     		strh	r2, [r3]	@ movhi
 2239              	.L142:
1152:Lib/ssc/src/ecatslv.c **** 						}
 2240              		.loc 1 1152 14 is_stmt 1 view .LVU744
1152:Lib/ssc/src/ecatslv.c **** 						}
 2241              		.loc 1 1152 27 is_stmt 0 view .LVU745
 2242 04fa 264A     		ldr	r2, .L190+24
 2243 04fc 224B     		ldr	r3, .L190+12
 2244 04fe 1988     		ldrh	r1, [r3]
 2245 0500 1388     		ldrh	r3, [r2]
 2246 0502 03EB5103 		add	r3, r3, r1, lsr #1
 2247 0506 1380     		strh	r3, [r2]	@ movhi
 2248 0508 2FE7     		b	.L137
 2249              	.LVL188:
 2250              	.L141:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2251              		.loc 1 1148 13 is_stmt 1 view .LVU746
1148:Lib/ssc/src/ecatslv.c **** 										}
 2252              		.loc 1 1148 28 is_stmt 0 view .LVU747
 2253 050a 5B00     		lsls	r3, r3, #1
 2254              	.LVL189:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2255              		.loc 1 1148 28 view .LVU748
 2256 050c 9BB2     		uxth	r3, r3
1148:Lib/ssc/src/ecatslv.c **** 										}
 2257              		.loc 1 1148 26 view .LVU749
 2258 050e 1D4A     		ldr	r2, .L190+8
 2259              	.LVL190:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2260              		.loc 1 1148 26 view .LVU750
 2261 0510 A2FB0323 		umull	r2, r3, r2, r3
 2262 0514 DB08     		lsrs	r3, r3, #3
 2263 0516 1F4A     		ldr	r2, .L190+24
 2264 0518 1380     		strh	r3, [r2]	@ movhi
 2265 051a EEE7     		b	.L142
 2266              	.LVL191:
 2267              	.L184:
1148:Lib/ssc/src/ecatslv.c **** 										}
 2268              		.loc 1 1148 26 view .LVU751
 2269              	.LBE43:
1164:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2270              		.loc 1 1164 9 is_stmt 1 view .LVU752
 2271 051c 0220     		movs	r0, #2
 2272 051e FFF7FEFF 		bl	EnableSyncManChannel
 2273              	.LVL192:
 2274 0522 27E7     		b	.L143
 2275              	.L185:
1171:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2276              		.loc 1 1171 9 view .LVU753
 2277 0524 0320     		movs	r0, #3
 2278 0526 FFF7FEFF 		bl	EnableSyncManChannel
 2279              	.LVL193:
 2280 052a 28E7     		b	.L144
 2281              	.LVL194:
 2282              	.L147:
 711:Lib/ssc/src/ecatslv.c ****     }
ARM GAS  /tmp/ccWTp91B.s 			page 102


 2283              		.loc 1 711 16 is_stmt 0 view .LVU754
 2284 052c 1E20     		movs	r0, #30
 2285 052e 29E7     		b	.L100
 2286              	.L148:
 2287 0530 1E20     		movs	r0, #30
 2288 0532 27E7     		b	.L100
 2289              	.LVL195:
 2290              	.L149:
 723:Lib/ssc/src/ecatslv.c ****     }
 2291              		.loc 1 723 16 view .LVU755
 2292 0534 1D20     		movs	r0, #29
 2293 0536 25E7     		b	.L100
 2294              	.L150:
 2295 0538 1D20     		movs	r0, #29
 2296 053a 23E7     		b	.L100
 2297              	.L151:
 2298 053c 1D20     		movs	r0, #29
 2299 053e 21E7     		b	.L100
 2300              	.LVL196:
 2301              	.L153:
 759:Lib/ssc/src/ecatslv.c ****         }
 2302              		.loc 1 759 20 view .LVU756
 2303 0540 3020     		movs	r0, #48
 2304 0542 1FE7     		b	.L100
 2305              	.L154:
 766:Lib/ssc/src/ecatslv.c ****         }
 2306              		.loc 1 766 20 view .LVU757
 2307 0544 3020     		movs	r0, #48
 2308 0546 1DE7     		b	.L100
 2309              	.L155:
 777:Lib/ssc/src/ecatslv.c ****     }
 2310              		.loc 1 777 24 view .LVU758
 2311 0548 3020     		movs	r0, #48
 2312 054a 1BE7     		b	.L100
 2313              	.L156:
 2314 054c 3020     		movs	r0, #48
 2315 054e 19E7     		b	.L100
 2316              	.L157:
 783:Lib/ssc/src/ecatslv.c **** 
 2317              		.loc 1 783 20 view .LVU759
 2318 0550 3620     		movs	r0, #54
 2319 0552 17E7     		b	.L100
 2320              	.LVL197:
 2321              	.L161:
 801:Lib/ssc/src/ecatslv.c ****         }
 2322              		.loc 1 801 21 view .LVU760
 2323 0554 3020     		movs	r0, #48
 2324 0556 15E7     		b	.L100
 2325              	.LVL198:
 2326              	.L162:
 817:Lib/ssc/src/ecatslv.c ****             }
 2327              		.loc 1 817 24 view .LVU761
 2328 0558 3020     		movs	r0, #48
 2329 055a 13E7     		b	.L100
 2330              	.L163:
 2331 055c 3020     		movs	r0, #48
 2332 055e 11E7     		b	.L100
ARM GAS  /tmp/ccWTp91B.s 			page 103


 2333              	.L165:
 830:Lib/ssc/src/ecatslv.c ****                 }
 2334              		.loc 1 830 28 view .LVU762
 2335 0560 3020     		movs	r0, #48
 2336 0562 0FE7     		b	.L100
 2337              	.L166:
 2338 0564 3020     		movs	r0, #48
 2339 0566 0DE7     		b	.L100
 2340              	.L167:
 842:Lib/ssc/src/ecatslv.c ****                 }
 2341              		.loc 1 842 28 view .LVU763
 2342 0568 3020     		movs	r0, #48
 2343 056a 0BE7     		b	.L100
 2344              	.L173:
 942:Lib/ssc/src/ecatslv.c ****         }
 2345              		.loc 1 942 24 view .LVU764
 2346 056c 2920     		movs	r0, #41
 2347 056e 09E7     		b	.L100
 2348              	.L174:
 2349 0570 2920     		movs	r0, #41
 2350 0572 07E7     		b	.L100
 2351              	.LVL199:
 2352              	.L175:
1082:Lib/ssc/src/ecatslv.c ****     }
 2353              		.loc 1 1082 16 view .LVU765
 2354 0574 1F20     		movs	r0, #31
 2355 0576 05E7     		b	.L100
 2356              	.L176:
 2357 0578 1F20     		movs	r0, #31
 2358 057a 03E7     		b	.L100
 2359              	.L191:
 2360              		.align	2
 2361              	.L190:
 2362 057c 89B5F814 		.word	351843721
 2363 0580 00000000 		.word	.LANCHOR20
 2364 0584 CDCCCCCC 		.word	-858993459
 2365 0588 00000000 		.word	.LANCHOR21
 2366 058c C55A7C0A 		.word	175921861
 2367 0590 1FA10700 		.word	499999
 2368 0594 00000000 		.word	.LANCHOR24
 2369              		.cfi_endproc
 2370              	.LFE141:
 2372              		.section	.text.StartOutputHandler,"ax",%progbits
 2373              		.align	1
 2374              		.global	StartOutputHandler
 2375              		.syntax unified
 2376              		.thumb
 2377              		.thumb_func
 2379              	StartOutputHandler:
 2380              	.LFB142:
1180:Lib/ssc/src/ecatslv.c **** 
1181:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1182:Lib/ssc/src/ecatslv.c **** /**
1183:Lib/ssc/src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
1184:Lib/ssc/src/ecatslv.c **** 
1185:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from SAFEOP to OP.
1186:Lib/ssc/src/ecatslv.c ****  \brief  It will be checked if outputs had to be received before switching to OP
ARM GAS  /tmp/ccWTp91B.s 			page 104


1187:Lib/ssc/src/ecatslv.c ****  \brief  and the state transition would be refused if outputs are missing
1188:Lib/ssc/src/ecatslv.c **** 
1189:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1190:Lib/ssc/src/ecatslv.c **** 
1191:Lib/ssc/src/ecatslv.c **** UINT16 StartOutputHandler(void)
1192:Lib/ssc/src/ecatslv.c **** {
 2381              		.loc 1 1192 1 is_stmt 1 view -0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 0
 2384              		@ frame_needed = 0, uses_anonymous_args = 0
 2385              		@ link register save eliminated.
1193:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM6*/
1194:Lib/ssc/src/ecatslv.c ****     /* by default the SO transition should be completed in AlControlRes().
1195:Lib/ssc/src/ecatslv.c ****        required to support also masters which starts to send process data after the SO transition w
1196:Lib/ssc/src/ecatslv.c ****        (if the master don't send process data within "SAFEOP2OPTIMEOUT" the transition is rejected)
1197:Lib/ssc/src/ecatslv.c ****     UINT16 result = NOERROR_INWORK;
 2386              		.loc 1 1197 5 view .LVU767
 2387              	.LVL200:
1198:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM6*/
1199:Lib/ssc/src/ecatslv.c ****     if(bLocalErrorFlag)
 2388              		.loc 1 1199 5 view .LVU768
 2389              		.loc 1 1199 8 is_stmt 0 view .LVU769
 2390 0000 094B     		ldr	r3, .L197
 2391 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2392              		.loc 1 1199 7 view .LVU770
 2393 0004 53B9     		cbnz	r3, .L196
1200:Lib/ssc/src/ecatslv.c ****     {
1201:Lib/ssc/src/ecatslv.c ****         /*Local error still exists => skip state request to OP and response with "u16LocalErrorCode
1202:Lib/ssc/src/ecatslv.c ****         return u16LocalErrorCode;
1203:Lib/ssc/src/ecatslv.c ****     }
1204:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1205:Lib/ssc/src/ecatslv.c **** 
1206:Lib/ssc/src/ecatslv.c **** 
1207:Lib/ssc/src/ecatslv.c ****     /*DC synchronisation is active wait until pll is valid*/
1208:Lib/ssc/src/ecatslv.c ****     if(bDcSyncActive)
 2394              		.loc 1 1208 5 is_stmt 1 view .LVU771
 2395              		.loc 1 1208 8 is_stmt 0 view .LVU772
 2396 0006 094B     		ldr	r3, .L197+4
 2397 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2398              		.loc 1 1208 7 view .LVU773
 2399 000a 53B1     		cbz	r3, .L195
1209:Lib/ssc/src/ecatslv.c ****     {
1210:Lib/ssc/src/ecatslv.c ****         i16WaitForPllRunningTimeout = 200;
 2400              		.loc 1 1210 9 is_stmt 1 view .LVU774
 2401              		.loc 1 1210 37 is_stmt 0 view .LVU775
 2402 000c 084B     		ldr	r3, .L197+8
 2403 000e C822     		movs	r2, #200
 2404 0010 1A80     		strh	r2, [r3]	@ movhi
1211:Lib/ssc/src/ecatslv.c ****         i16WaitForPllRunningCnt = 0;
 2405              		.loc 1 1211 9 is_stmt 1 view .LVU776
 2406              		.loc 1 1211 33 is_stmt 0 view .LVU777
 2407 0012 084B     		ldr	r3, .L197+12
 2408 0014 0022     		movs	r2, #0
 2409 0016 1A80     		strh	r2, [r3]	@ movhi
1212:Lib/ssc/src/ecatslv.c ****     }
1213:Lib/ssc/src/ecatslv.c **** 
1214:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 105


1215:Lib/ssc/src/ecatslv.c ****     return result;
 2410              		.loc 1 1215 12 view .LVU778
 2411 0018 FF20     		movs	r0, #255
 2412 001a 7047     		bx	lr
 2413              	.L196:
1202:Lib/ssc/src/ecatslv.c ****     }
 2414              		.loc 1 1202 9 is_stmt 1 view .LVU779
1202:Lib/ssc/src/ecatslv.c ****     }
 2415              		.loc 1 1202 16 is_stmt 0 view .LVU780
 2416 001c 064B     		ldr	r3, .L197+16
 2417 001e 1888     		ldrh	r0, [r3]
 2418 0020 7047     		bx	lr
 2419              	.L195:
 2420              		.loc 1 1215 12 view .LVU781
 2421 0022 FF20     		movs	r0, #255
1216:Lib/ssc/src/ecatslv.c **** }
 2422              		.loc 1 1216 1 view .LVU782
 2423 0024 7047     		bx	lr
 2424              	.L198:
 2425 0026 00BF     		.align	2
 2426              	.L197:
 2427 0028 00000000 		.word	.LANCHOR28
 2428 002c 00000000 		.word	.LANCHOR15
 2429 0030 00000000 		.word	.LANCHOR27
 2430 0034 00000000 		.word	.LANCHOR30
 2431 0038 00000000 		.word	.LANCHOR29
 2432              		.cfi_endproc
 2433              	.LFE142:
 2435              		.section	.text.StopOutputHandler,"ax",%progbits
 2436              		.align	1
 2437              		.global	StopOutputHandler
 2438              		.syntax unified
 2439              		.thumb
 2440              		.thumb_func
 2442              	StopOutputHandler:
 2443              	.LFB143:
1217:Lib/ssc/src/ecatslv.c **** 
1218:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1219:Lib/ssc/src/ecatslv.c **** /**
1220:Lib/ssc/src/ecatslv.c ****  \brief    This function is called in case of the state transition from OP to SAFEOP
1221:Lib/ssc/src/ecatslv.c ****  \brief  the outputs can be set to an application specific safe state,
1222:Lib/ssc/src/ecatslv.c ****  \brief  the state transition can be delayed by returning NOERROR_INWORK
1223:Lib/ssc/src/ecatslv.c **** 
1224:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1225:Lib/ssc/src/ecatslv.c **** 
1226:Lib/ssc/src/ecatslv.c **** void StopOutputHandler(void)
1227:Lib/ssc/src/ecatslv.c **** {
 2444              		.loc 1 1227 1 is_stmt 1 view -0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 0, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
1228:Lib/ssc/src/ecatslv.c ****     /* reset the flags that outputs were received and that the slave is in OP */
1229:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2449              		.loc 1 1229 5 view .LVU784
 2450              		.loc 1 1229 31 is_stmt 0 view .LVU785
 2451 0000 0023     		movs	r3, #0
ARM GAS  /tmp/ccWTp91B.s 			page 106


 2452 0002 024A     		ldr	r2, .L200
 2453 0004 1370     		strb	r3, [r2]
1230:Lib/ssc/src/ecatslv.c ****     bEcatOutputUpdateRunning = FALSE;
 2454              		.loc 1 1230 5 is_stmt 1 view .LVU786
 2455              		.loc 1 1230 30 is_stmt 0 view .LVU787
 2456 0006 024A     		ldr	r2, .L200+4
 2457 0008 1370     		strb	r3, [r2]
1231:Lib/ssc/src/ecatslv.c **** }
 2458              		.loc 1 1231 1 view .LVU788
 2459 000a 7047     		bx	lr
 2460              	.L201:
 2461              		.align	2
 2462              	.L200:
 2463 000c 00000000 		.word	.LANCHOR13
 2464 0010 00000000 		.word	.LANCHOR31
 2465              		.cfi_endproc
 2466              	.LFE143:
 2468              		.section	.text.StopInputHandler,"ax",%progbits
 2469              		.align	1
 2470              		.global	StopInputHandler
 2471              		.syntax unified
 2472              		.thumb
 2473              		.thumb_func
 2475              	StopInputHandler:
 2476              	.LFB144:
1232:Lib/ssc/src/ecatslv.c **** 
1233:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1234:Lib/ssc/src/ecatslv.c **** /**
1235:Lib/ssc/src/ecatslv.c ****   \brief    This function is called in case of the state transition from SAFEOP to PREOP
1236:Lib/ssc/src/ecatslv.c **** 
1237:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1238:Lib/ssc/src/ecatslv.c **** 
1239:Lib/ssc/src/ecatslv.c **** void StopInputHandler(void)
1240:Lib/ssc/src/ecatslv.c **** {
 2477              		.loc 1 1240 1 is_stmt 1 view -0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 0, uses_anonymous_args = 0
 2481 0000 08B5     		push	{r3, lr}
 2482              		.cfi_def_cfa_offset 8
 2483              		.cfi_offset 3, -8
 2484              		.cfi_offset 14, -4
1241:Lib/ssc/src/ecatslv.c ****     if(nPdOutputSize > 0)
 2485              		.loc 1 1241 5 view .LVU790
 2486              		.loc 1 1241 22 is_stmt 0 view .LVU791
 2487 0002 1D4B     		ldr	r3, .L208
 2488 0004 1B88     		ldrh	r3, [r3]
 2489              		.loc 1 1241 7 view .LVU792
 2490 0006 002B     		cmp	r3, #0
 2491 0008 2ED1     		bne	.L206
 2492              	.L203:
1242:Lib/ssc/src/ecatslv.c ****     {
1243:Lib/ssc/src/ecatslv.c ****         /* disable the Sync Manager Channel 2 (outputs) */
1244:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1245:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_OUT);
1246:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1247:Lib/ssc/src/ecatslv.c ****     }
ARM GAS  /tmp/ccWTp91B.s 			page 107


1248:Lib/ssc/src/ecatslv.c **** 
1249:Lib/ssc/src/ecatslv.c ****     if(nPdInputSize > 0)
 2493              		.loc 1 1249 5 is_stmt 1 view .LVU793
 2494              		.loc 1 1249 21 is_stmt 0 view .LVU794
 2495 000a 1C4B     		ldr	r3, .L208+4
 2496 000c 1B88     		ldrh	r3, [r3]
 2497              		.loc 1 1249 7 view .LVU795
 2498 000e 002B     		cmp	r3, #0
 2499 0010 2ED1     		bne	.L207
 2500              	.L204:
 2501              	.LBB44:
1250:Lib/ssc/src/ecatslv.c ****     {
1251:Lib/ssc/src/ecatslv.c ****         /*disable Sync Manager 3 (inputs) if no outputs available*/
1252:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1253:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_IN);
1254:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1255:Lib/ssc/src/ecatslv.c ****     }
1256:Lib/ssc/src/ecatslv.c **** 
1257:Lib/ssc/src/ecatslv.c ****     /* reset the events in the AL Event mask register (0x204) */
1258:Lib/ssc/src/ecatslv.c ****     {
1259:Lib/ssc/src/ecatslv.c ****         UINT16 ResetMask = SYNC0_EVENT | SYNC1_EVENT;
 2502              		.loc 1 1259 9 is_stmt 1 view .LVU796
 2503              	.LVL201:
1260:Lib/ssc/src/ecatslv.c ****         ResetMask |= PROCESS_OUTPUT_EVENT;
 2504              		.loc 1 1260 9 view .LVU797
1261:Lib/ssc/src/ecatslv.c ****         ResetMask |= PROCESS_INPUT_EVENT;
 2505              		.loc 1 1261 9 view .LVU798
1262:Lib/ssc/src/ecatslv.c **** 
1263:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1264:Lib/ssc/src/ecatslv.c ****     ResetALEventMask( ~(ResetMask) );
 2506              		.loc 1 1264 5 view .LVU799
 2507 0012 4FF2F330 		movw	r0, #62451
 2508 0016 FFF7FEFF 		bl	ResetALEventMask
 2509              	.LVL202:
 2510              	.LBE44:
1265:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1266:Lib/ssc/src/ecatslv.c ****     }
1267:Lib/ssc/src/ecatslv.c ****     /* reset the flags */
1268:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2511              		.loc 1 1268 5 view .LVU800
 2512              		.loc 1 1268 31 is_stmt 0 view .LVU801
 2513 001a 0023     		movs	r3, #0
 2514 001c 184A     		ldr	r2, .L208+8
 2515 001e 1370     		strb	r3, [r2]
1269:Lib/ssc/src/ecatslv.c ****     bEscIntEnabled = FALSE;
 2516              		.loc 1 1269 5 is_stmt 1 view .LVU802
 2517              		.loc 1 1269 20 is_stmt 0 view .LVU803
 2518 0020 184A     		ldr	r2, .L208+12
 2519 0022 1370     		strb	r3, [r2]
1270:Lib/ssc/src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1271:Lib/ssc/src/ecatslv.c **** 
1272:Lib/ssc/src/ecatslv.c ****     bDcSyncActive = FALSE;
 2520              		.loc 1 1272 5 is_stmt 1 view .LVU804
 2521              		.loc 1 1272 19 is_stmt 0 view .LVU805
 2522 0024 184A     		ldr	r2, .L208+16
 2523 0026 1370     		strb	r3, [r2]
1273:Lib/ssc/src/ecatslv.c ****     bDcRunning = FALSE;
ARM GAS  /tmp/ccWTp91B.s 			page 108


 2524              		.loc 1 1273 5 is_stmt 1 view .LVU806
 2525              		.loc 1 1273 16 is_stmt 0 view .LVU807
 2526 0028 184A     		ldr	r2, .L208+20
 2527 002a 1370     		strb	r3, [r2]
1274:Lib/ssc/src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 2528              		.loc 1 1274 5 is_stmt 1 view .LVU808
 2529              		.loc 1 1274 26 is_stmt 0 view .LVU809
 2530 002c 184A     		ldr	r2, .L208+24
 2531 002e 1370     		strb	r3, [r2]
1275:Lib/ssc/src/ecatslv.c ****     u16SmSync0Value = 0;
 2532              		.loc 1 1275 5 is_stmt 1 view .LVU810
 2533              		.loc 1 1275 21 is_stmt 0 view .LVU811
 2534 0030 184A     		ldr	r2, .L208+28
 2535 0032 1380     		strh	r3, [r2]	@ movhi
1276:Lib/ssc/src/ecatslv.c ****     u16SmSync0Counter = 0;
 2536              		.loc 1 1276 5 is_stmt 1 view .LVU812
 2537              		.loc 1 1276 23 is_stmt 0 view .LVU813
 2538 0034 184A     		ldr	r2, .L208+32
 2539 0036 1380     		strh	r3, [r2]	@ movhi
1277:Lib/ssc/src/ecatslv.c **** 
1278:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 2540              		.loc 1 1278 5 is_stmt 1 view .LVU814
 2541              		.loc 1 1278 18 is_stmt 0 view .LVU815
 2542 0038 184A     		ldr	r2, .L208+36
 2543 003a 1380     		strh	r3, [r2]	@ movhi
1279:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 2544              		.loc 1 1279 5 is_stmt 1 view .LVU816
 2545              		.loc 1 1279 20 is_stmt 0 view .LVU817
 2546 003c 184A     		ldr	r2, .L208+40
 2547 003e 1380     		strh	r3, [r2]	@ movhi
1280:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 2548              		.loc 1 1280 5 is_stmt 1 view .LVU818
 2549              		.loc 1 1280 20 is_stmt 0 view .LVU819
 2550 0040 184A     		ldr	r2, .L208+44
 2551 0042 1380     		strh	r3, [r2]	@ movhi
1281:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 2552              		.loc 1 1281 5 is_stmt 1 view .LVU820
 2553              		.loc 1 1281 18 is_stmt 0 view .LVU821
 2554 0044 184A     		ldr	r2, .L208+48
 2555 0046 1380     		strh	r3, [r2]	@ movhi
1282:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Value = 0;
 2556              		.loc 1 1282 5 is_stmt 1 view .LVU822
 2557              		.loc 1 1282 26 is_stmt 0 view .LVU823
 2558 0048 184A     		ldr	r2, .L208+52
 2559 004a 1380     		strh	r3, [r2]	@ movhi
1283:Lib/ssc/src/ecatslv.c ****     LatchInputSync0Counter = 0;
 2560              		.loc 1 1283 5 is_stmt 1 view .LVU824
 2561              		.loc 1 1283 28 is_stmt 0 view .LVU825
 2562 004c 184A     		ldr	r2, .L208+56
 2563 004e 1380     		strh	r3, [r2]	@ movhi
1284:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1285:Lib/ssc/src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 2564              		.loc 1 1285 5 is_stmt 1 view .LVU826
 2565              		.loc 1 1285 31 is_stmt 0 view .LVU827
 2566 0050 184A     		ldr	r2, .L208+60
 2567 0052 82F84030 		strb	r3, [r2, #64]
1286:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
ARM GAS  /tmp/ccWTp91B.s 			page 109


1287:Lib/ssc/src/ecatslv.c **** 
1288:Lib/ssc/src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 2568              		.loc 1 1288 5 is_stmt 1 view .LVU828
 2569              		.loc 1 1288 33 is_stmt 0 view .LVU829
 2570 0056 184A     		ldr	r2, .L208+64
 2571 0058 1380     		strh	r3, [r2]	@ movhi
1289:Lib/ssc/src/ecatslv.c **** 
1290:Lib/ssc/src/ecatslv.c ****     bWdTrigger = FALSE;
 2572              		.loc 1 1290 5 is_stmt 1 view .LVU830
 2573              		.loc 1 1290 16 is_stmt 0 view .LVU831
 2574 005a 184A     		ldr	r2, .L208+68
 2575 005c 1370     		strb	r3, [r2]
1291:Lib/ssc/src/ecatslv.c ****     bEcatInputUpdateRunning = FALSE;
 2576              		.loc 1 1291 5 is_stmt 1 view .LVU832
 2577              		.loc 1 1291 29 is_stmt 0 view .LVU833
 2578 005e 184A     		ldr	r2, .L208+72
 2579 0060 1370     		strb	r3, [r2]
1292:Lib/ssc/src/ecatslv.c **** 
1293:Lib/ssc/src/ecatslv.c ****     /*Indicate no user specified Sync mode*/
1294:Lib/ssc/src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2580              		.loc 1 1294 5 is_stmt 1 view .LVU834
 2581              		.loc 1 1294 20 is_stmt 0 view .LVU835
 2582 0062 184A     		ldr	r2, .L208+76
 2583 0064 1370     		strb	r3, [r2]
1295:Lib/ssc/src/ecatslv.c **** }
 2584              		.loc 1 1295 1 view .LVU836
 2585 0066 08BD     		pop	{r3, pc}
 2586              	.LVL203:
 2587              	.L206:
1245:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2588              		.loc 1 1245 9 is_stmt 1 view .LVU837
 2589 0068 0220     		movs	r0, #2
 2590 006a FFF7FEFF 		bl	DisableSyncManChannel
 2591              	.LVL204:
 2592 006e CCE7     		b	.L203
 2593              	.L207:
1253:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 2594              		.loc 1 1253 9 view .LVU838
 2595 0070 0320     		movs	r0, #3
 2596 0072 FFF7FEFF 		bl	DisableSyncManChannel
 2597              	.LVL205:
 2598 0076 CCE7     		b	.L204
 2599              	.L209:
 2600              		.align	2
 2601              	.L208:
 2602 0078 00000000 		.word	.LANCHOR7
 2603 007c 00000000 		.word	.LANCHOR4
 2604 0080 00000000 		.word	.LANCHOR13
 2605 0084 00000000 		.word	.LANCHOR14
 2606 0088 00000000 		.word	.LANCHOR15
 2607 008c 00000000 		.word	.LANCHOR25
 2608 0090 00000000 		.word	.LANCHOR26
 2609 0094 00000000 		.word	.LANCHOR18
 2610 0098 00000000 		.word	.LANCHOR19
 2611 009c 00000000 		.word	.LANCHOR21
 2612 00a0 00000000 		.word	.LANCHOR22
 2613 00a4 00000000 		.word	.LANCHOR23
ARM GAS  /tmp/ccWTp91B.s 			page 110


 2614 00a8 00000000 		.word	.LANCHOR24
 2615 00ac 00000000 		.word	.LANCHOR16
 2616 00b0 00000000 		.word	.LANCHOR17
 2617 00b4 00000000 		.word	sSyncManInPar
 2618 00b8 00000000 		.word	.LANCHOR27
 2619 00bc 00000000 		.word	.LANCHOR9
 2620 00c0 00000000 		.word	.LANCHOR32
 2621 00c4 00000000 		.word	bSyncSetByUser
 2622              		.cfi_endproc
 2623              	.LFE144:
 2625              		.section	.text.BackToInitTransition,"ax",%progbits
 2626              		.align	1
 2627              		.global	BackToInitTransition
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2632              	BackToInitTransition:
 2633              	.LFB145:
1296:Lib/ssc/src/ecatslv.c **** 
1297:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1298:Lib/ssc/src/ecatslv.c **** /**
1299:Lib/ssc/src/ecatslv.c **** \brief    This function is called when a X to Init transition is completed
1300:Lib/ssc/src/ecatslv.c **** 
1301:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1302:Lib/ssc/src/ecatslv.c **** 
1303:Lib/ssc/src/ecatslv.c **** void BackToInitTransition(void)
1304:Lib/ssc/src/ecatslv.c **** {
 2634              		.loc 1 1304 1 view -0
 2635              		.cfi_startproc
 2636              		@ args = 0, pretend = 0, frame = 0
 2637              		@ frame_needed = 0, uses_anonymous_args = 0
 2638              		@ link register save eliminated.
1305:Lib/ssc/src/ecatslv.c ****     /* Reset indication that the user has written a sync mode*/
1306:Lib/ssc/src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2639              		.loc 1 1306 5 view .LVU840
 2640              		.loc 1 1306 20 is_stmt 0 view .LVU841
 2641 0000 014B     		ldr	r3, .L211
 2642 0002 0022     		movs	r2, #0
 2643 0004 1A70     		strb	r2, [r3]
1307:Lib/ssc/src/ecatslv.c **** }
 2644              		.loc 1 1307 1 view .LVU842
 2645 0006 7047     		bx	lr
 2646              	.L212:
 2647              		.align	2
 2648              	.L211:
 2649 0008 00000000 		.word	bSyncSetByUser
 2650              		.cfi_endproc
 2651              	.LFE145:
 2653              		.section	.text.SetALStatus,"ax",%progbits
 2654              		.align	1
 2655              		.global	SetALStatus
 2656              		.syntax unified
 2657              		.thumb
 2658              		.thumb_func
 2660              	SetALStatus:
 2661              	.LVL206:
 2662              	.LFB146:
ARM GAS  /tmp/ccWTp91B.s 			page 111


1308:Lib/ssc/src/ecatslv.c **** 
1309:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1310:Lib/ssc/src/ecatslv.c **** /**
1311:Lib/ssc/src/ecatslv.c ****  \param alStatus        New AL Status (written to register 0x130)
1312:Lib/ssc/src/ecatslv.c ****  \param alStatusCode    New AL Status Code (written to register 0x134)
1313:Lib/ssc/src/ecatslv.c **** 
1314:Lib/ssc/src/ecatslv.c ****   \brief  The function changes the state of the EtherCAT ASIC to the requested.
1315:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1316:Lib/ssc/src/ecatslv.c **** void SetALStatus(UINT8 alStatus, UINT16 alStatusCode)
1317:Lib/ssc/src/ecatslv.c **** {
 2663              		.loc 1 1317 1 is_stmt 1 view -0
 2664              		.cfi_startproc
 2665              		@ args = 0, pretend = 0, frame = 8
 2666              		@ frame_needed = 0, uses_anonymous_args = 0
 2667              		.loc 1 1317 1 is_stmt 0 view .LVU844
 2668 0000 00B5     		push	{lr}
 2669              		.cfi_def_cfa_offset 4
 2670              		.cfi_offset 14, -4
 2671 0002 83B0     		sub	sp, sp, #12
 2672              		.cfi_def_cfa_offset 16
1318:Lib/ssc/src/ecatslv.c ****     UINT16 Value = alStatusCode;
 2673              		.loc 1 1318 5 is_stmt 1 view .LVU845
 2674              		.loc 1 1318 12 is_stmt 0 view .LVU846
 2675 0004 ADF80610 		strh	r1, [sp, #6]	@ movhi
1319:Lib/ssc/src/ecatslv.c **** 
1320:Lib/ssc/src/ecatslv.c ****     /*update global status variable if required*/
1321:Lib/ssc/src/ecatslv.c ****     if(nAlStatus != alStatus)
 2676              		.loc 1 1321 5 is_stmt 1 view .LVU847
 2677              		.loc 1 1321 18 is_stmt 0 view .LVU848
 2678 0008 0F4B     		ldr	r3, .L218
 2679 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2680              		.loc 1 1321 7 view .LVU849
 2681 000c 8342     		cmp	r3, r0
 2682 000e 01D0     		beq	.L214
1322:Lib/ssc/src/ecatslv.c ****     {
1323:Lib/ssc/src/ecatslv.c ****         nAlStatus = alStatus;
 2683              		.loc 1 1323 9 is_stmt 1 view .LVU850
 2684              		.loc 1 1323 19 is_stmt 0 view .LVU851
 2685 0010 0D4B     		ldr	r3, .L218
 2686 0012 1870     		strb	r0, [r3]
 2687              	.L214:
1324:Lib/ssc/src/ecatslv.c ****     }
1325:Lib/ssc/src/ecatslv.c **** 
1326:Lib/ssc/src/ecatslv.c **** 
1327:Lib/ssc/src/ecatslv.c ****     if (alStatusCode != 0xFFFF)
 2688              		.loc 1 1327 5 is_stmt 1 view .LVU852
 2689              		.loc 1 1327 8 is_stmt 0 view .LVU853
 2690 0014 4FF6FF73 		movw	r3, #65535
 2691 0018 9942     		cmp	r1, r3
 2692 001a 0DD1     		bne	.L217
 2693              	.LVL207:
 2694              	.L215:
1328:Lib/ssc/src/ecatslv.c ****     {
1329:Lib/ssc/src/ecatslv.c ****         Value = SWAPWORD(Value);
1330:Lib/ssc/src/ecatslv.c **** 
1331:Lib/ssc/src/ecatslv.c ****         HW_EscWriteWord(Value,ESC_AL_STATUS_CODE_OFFSET);
1332:Lib/ssc/src/ecatslv.c ****     }
ARM GAS  /tmp/ccWTp91B.s 			page 112


1333:Lib/ssc/src/ecatslv.c **** 
1334:Lib/ssc/src/ecatslv.c ****     Value = nAlStatus;
 2695              		.loc 1 1334 5 is_stmt 1 view .LVU854
 2696              		.loc 1 1334 11 is_stmt 0 view .LVU855
 2697 001c 0A4B     		ldr	r3, .L218
 2698 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2699 0020 ADF80630 		strh	r3, [sp, #6]	@ movhi
1335:Lib/ssc/src/ecatslv.c ****     Value = SWAPWORD(Value);
 2700              		.loc 1 1335 5 is_stmt 1 view .LVU856
1336:Lib/ssc/src/ecatslv.c ****     HW_EscWriteWord(Value,ESC_AL_STATUS_OFFSET);
 2701              		.loc 1 1336 5 view .LVU857
 2702 0024 0222     		movs	r2, #2
 2703 0026 4FF49871 		mov	r1, #304
 2704 002a 0DF10600 		add	r0, sp, #6
 2705 002e FFF7FEFF 		bl	HW_EscWrite
 2706              	.LVL208:
1337:Lib/ssc/src/ecatslv.c **** 
1338:Lib/ssc/src/ecatslv.c **** }
 2707              		.loc 1 1338 1 is_stmt 0 view .LVU858
 2708 0032 03B0     		add	sp, sp, #12
 2709              		.cfi_remember_state
 2710              		.cfi_def_cfa_offset 4
 2711              		@ sp needed
 2712 0034 5DF804FB 		ldr	pc, [sp], #4
 2713              	.LVL209:
 2714              	.L217:
 2715              		.cfi_restore_state
1329:Lib/ssc/src/ecatslv.c **** 
 2716              		.loc 1 1329 9 is_stmt 1 view .LVU859
1331:Lib/ssc/src/ecatslv.c ****     }
 2717              		.loc 1 1331 9 view .LVU860
 2718 0038 0222     		movs	r2, #2
 2719 003a 4FF49A71 		mov	r1, #308
 2720              	.LVL210:
1331:Lib/ssc/src/ecatslv.c ****     }
 2721              		.loc 1 1331 9 is_stmt 0 view .LVU861
 2722 003e 0DF10600 		add	r0, sp, #6
 2723              	.LVL211:
1331:Lib/ssc/src/ecatslv.c ****     }
 2724              		.loc 1 1331 9 view .LVU862
 2725 0042 FFF7FEFF 		bl	HW_EscWrite
 2726              	.LVL212:
1331:Lib/ssc/src/ecatslv.c ****     }
 2727              		.loc 1 1331 9 view .LVU863
 2728 0046 E9E7     		b	.L215
 2729              	.L219:
 2730              		.align	2
 2731              	.L218:
 2732 0048 00000000 		.word	.LANCHOR5
 2733              		.cfi_endproc
 2734              	.LFE146:
 2736              		.section	.text.AL_ControlInd,"ax",%progbits
 2737              		.align	1
 2738              		.global	AL_ControlInd
 2739              		.syntax unified
 2740              		.thumb
 2741              		.thumb_func
ARM GAS  /tmp/ccWTp91B.s 			page 113


 2743              	AL_ControlInd:
 2744              	.LVL213:
 2745              	.LFB147:
1339:Lib/ssc/src/ecatslv.c **** 
1340:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1341:Lib/ssc/src/ecatslv.c **** /**
1342:Lib/ssc/src/ecatslv.c ****  \param    alControl        requested new state
1343:Lib/ssc/src/ecatslv.c ****  \param alStatusCode    requested status code
1344:Lib/ssc/src/ecatslv.c **** 
1345:Lib/ssc/src/ecatslv.c ****  \brief    This function handles the EtherCAT State Machine. It is called
1346:Lib/ssc/src/ecatslv.c ****             * in case of an AL Control event (Bit 0 of AL-Event (Reg 0x220),
1347:Lib/ssc/src/ecatslv.c ****                when the Master has written the AL Control Register (from ECAT_Main),
1348:Lib/ssc/src/ecatslv.c ****               alControl contains the content of the AL Control (Reg 0x120)
1349:Lib/ssc/src/ecatslv.c ****             * in case of a SM-Change event (Bit 4 of AL-Event (Reg 0x220)),
1350:Lib/ssc/src/ecatslv.c ****               when an Activate SYNCM y register is written by the master (from ECAT_Main),
1351:Lib/ssc/src/ecatslv.c ****               alControl contains the actual state (Bit 0-3 of AL Status (Reg 0x130))
1352:Lib/ssc/src/ecatslv.c ****             * in case of a locally expired watchdog (from ECAT_Main),
1353:Lib/ssc/src/ecatslv.c ****               alControl contains the requested new state (SAFE_OP)
1354:Lib/ssc/src/ecatslv.c ****             * in case of an application specific event to change the EtherCAT state (from applicati
1355:Lib/ssc/src/ecatslv.c ****               alControl contains the requested new state (INIT, PRE_OP or SAFE_OP)
1356:Lib/ssc/src/ecatslv.c **** 
1357:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1358:Lib/ssc/src/ecatslv.c **** 
1359:Lib/ssc/src/ecatslv.c **** void AL_ControlInd(UINT8 alControl, UINT16 alStatusCode)
1360:Lib/ssc/src/ecatslv.c **** {
 2746              		.loc 1 1360 1 is_stmt 1 view -0
 2747              		.cfi_startproc
 2748              		@ args = 0, pretend = 0, frame = 0
 2749              		@ frame_needed = 0, uses_anonymous_args = 0
 2750              		.loc 1 1360 1 is_stmt 0 view .LVU865
 2751 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2752              		.cfi_def_cfa_offset 24
 2753              		.cfi_offset 4, -24
 2754              		.cfi_offset 5, -20
 2755              		.cfi_offset 6, -16
 2756              		.cfi_offset 7, -12
 2757              		.cfi_offset 8, -8
 2758              		.cfi_offset 14, -4
 2759 0004 0E46     		mov	r6, r1
1361:Lib/ssc/src/ecatslv.c ****     UINT16        result = 0;
 2760              		.loc 1 1361 5 is_stmt 1 view .LVU866
 2761              	.LVL214:
1362:Lib/ssc/src/ecatslv.c ****     UINT8            bErrAck = 0;
 2762              		.loc 1 1362 5 view .LVU867
1363:Lib/ssc/src/ecatslv.c ****     UINT8         stateTrans;
 2763              		.loc 1 1363 5 view .LVU868
1364:Lib/ssc/src/ecatslv.c ****     /*deactivate ESM timeout counter*/
1365:Lib/ssc/src/ecatslv.c ****     EsmTimeoutCounter = -1;
 2764              		.loc 1 1365 5 view .LVU869
 2765              		.loc 1 1365 23 is_stmt 0 view .LVU870
 2766 0006 474B     		ldr	r3, .L301
 2767 0008 4FF6FF72 		movw	r2, #65535
 2768 000c 1A80     		strh	r2, [r3]	@ movhi
1366:Lib/ssc/src/ecatslv.c ****     bApplEsmPending = TRUE;
 2769              		.loc 1 1366 5 is_stmt 1 view .LVU871
 2770              		.loc 1 1366 21 is_stmt 0 view .LVU872
 2771 000e 464B     		ldr	r3, .L301+4
ARM GAS  /tmp/ccWTp91B.s 			page 114


 2772 0010 0122     		movs	r2, #1
 2773 0012 1A70     		strb	r2, [r3]
1367:Lib/ssc/src/ecatslv.c **** 
1368:Lib/ssc/src/ecatslv.c ****     /* reset the Error Flag in case of acknowledge by the Master */
1369:Lib/ssc/src/ecatslv.c ****     if ( alControl & STATE_CHANGE )
 2774              		.loc 1 1369 5 is_stmt 1 view .LVU873
 2775              		.loc 1 1369 8 is_stmt 0 view .LVU874
 2776 0014 10F01007 		ands	r7, r0, #16
 2777 0018 2BD0     		beq	.L221
1370:Lib/ssc/src/ecatslv.c ****     {
1371:Lib/ssc/src/ecatslv.c ****         bErrAck = 1;
 2778              		.loc 1 1371 9 is_stmt 1 view .LVU875
 2779              	.LVL215:
1372:Lib/ssc/src/ecatslv.c ****         nAlStatus &= ~STATE_CHANGE;
 2780              		.loc 1 1372 9 view .LVU876
 2781              		.loc 1 1372 19 is_stmt 0 view .LVU877
 2782 001a 444A     		ldr	r2, .L301+8
 2783 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2784 001e 23F01003 		bic	r3, r3, #16
 2785 0022 1370     		strb	r3, [r2]
1371:Lib/ssc/src/ecatslv.c ****         nAlStatus &= ~STATE_CHANGE;
 2786              		.loc 1 1371 17 view .LVU878
 2787 0024 0127     		movs	r7, #1
 2788              	.LVL216:
 2789              	.L222:
1373:Lib/ssc/src/ecatslv.c ****         /*enable SM2 is moved to state transition block. First check SM Settings.*/
1374:Lib/ssc/src/ecatslv.c ****     }
1375:Lib/ssc/src/ecatslv.c ****     else if ( (nAlStatus & STATE_CHANGE)
1376:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
1377:Lib/ssc/src/ecatslv.c ****     //               (the error was acknowledged with the same state before independent of the ackn
1378:Lib/ssc/src/ecatslv.c ****     /*Error Acknowledge with 0xX1 is allowed*/
1379:Lib/ssc/src/ecatslv.c ****            && (alControl & STATE_MASK) != STATE_INIT )
1380:Lib/ssc/src/ecatslv.c ****         /* the error flag (Bit 4) is set in the AL-Status and the ErrAck bit (Bit 4)
1381:Lib/ssc/src/ecatslv.c ****            is not set in the AL-Control, so the state cannot be set to a higher state
1382:Lib/ssc/src/ecatslv.c ****            and the new state request will be ignored */
1383:Lib/ssc/src/ecatslv.c ****         return;
1384:Lib/ssc/src/ecatslv.c ****     else
1385:Lib/ssc/src/ecatslv.c ****     {
1386:Lib/ssc/src/ecatslv.c ****         nAlStatus &= STATE_MASK;
1387:Lib/ssc/src/ecatslv.c ****     }
1388:Lib/ssc/src/ecatslv.c **** 
1389:Lib/ssc/src/ecatslv.c ****     /* generate a variable for the state transition
1390:Lib/ssc/src/ecatslv.c ****       (Bit 0-3: new state (AL Control), Bit 4-7: old state (AL Status) */
1391:Lib/ssc/src/ecatslv.c ****     alControl &= STATE_MASK;
 2790              		.loc 1 1391 5 is_stmt 1 view .LVU879
 2791              		.loc 1 1391 15 is_stmt 0 view .LVU880
 2792 0026 00F00F05 		and	r5, r0, #15
 2793              	.LVL217:
1392:Lib/ssc/src/ecatslv.c ****     stateTrans = nAlStatus;
 2794              		.loc 1 1392 5 is_stmt 1 view .LVU881
 2795              		.loc 1 1392 16 is_stmt 0 view .LVU882
 2796 002a 404B     		ldr	r3, .L301+8
 2797 002c 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 2798              	.LVL218:
1393:Lib/ssc/src/ecatslv.c ****     stateTrans <<= 4;
 2799              		.loc 1 1393 5 is_stmt 1 view .LVU883
 2800              		.loc 1 1393 16 is_stmt 0 view .LVU884
ARM GAS  /tmp/ccWTp91B.s 			page 115


 2801 002e 2401     		lsls	r4, r4, #4
 2802              	.LVL219:
 2803              		.loc 1 1393 16 view .LVU885
 2804 0030 E4B2     		uxtb	r4, r4
 2805              	.LVL220:
1394:Lib/ssc/src/ecatslv.c ****     stateTrans += alControl;
 2806              		.loc 1 1394 5 is_stmt 1 view .LVU886
 2807              		.loc 1 1394 16 is_stmt 0 view .LVU887
 2808 0032 2C44     		add	r4, r4, r5
 2809              	.LVL221:
 2810              		.loc 1 1394 16 view .LVU888
 2811 0034 E4B2     		uxtb	r4, r4
 2812              	.LVL222:
1395:Lib/ssc/src/ecatslv.c **** 
1396:Lib/ssc/src/ecatslv.c **** 
1397:Lib/ssc/src/ecatslv.c ****     /* check the SYNCM settings depending on the state transition */
1398:Lib/ssc/src/ecatslv.c ****     switch ( stateTrans )
 2813              		.loc 1 1398 5 is_stmt 1 view .LVU889
 2814 0036 482C     		cmp	r4, #72
 2815 0038 2FD8     		bhi	.L225
 2816 003a 222C     		cmp	r4, #34
 2817 003c 28D3     		bcc	.L286
 2818 003e A4F12203 		sub	r3, r4, #34
 2819 0042 262B     		cmp	r3, #38
 2820 0044 7ED8     		bhi	.L277
 2821 0046 DFE803F0 		tbb	[pc, r3]
 2822              	.L230:
 2823 004a 2F       		.byte	(.L227-.L230)/2
 2824 004b 7D       		.byte	(.L277-.L230)/2
 2825 004c 35       		.byte	(.L231-.L230)/2
 2826 004d 7D       		.byte	(.L277-.L230)/2
 2827 004e 7D       		.byte	(.L277-.L230)/2
 2828 004f 7D       		.byte	(.L277-.L230)/2
 2829 0050 7D       		.byte	(.L277-.L230)/2
 2830 0051 7D       		.byte	(.L277-.L230)/2
 2831 0052 7D       		.byte	(.L277-.L230)/2
 2832 0053 7D       		.byte	(.L277-.L230)/2
 2833 0054 7D       		.byte	(.L277-.L230)/2
 2834 0055 7D       		.byte	(.L277-.L230)/2
 2835 0056 7D       		.byte	(.L277-.L230)/2
 2836 0057 7D       		.byte	(.L277-.L230)/2
 2837 0058 7D       		.byte	(.L277-.L230)/2
 2838 0059 7D       		.byte	(.L277-.L230)/2
 2839 005a 7D       		.byte	(.L277-.L230)/2
 2840 005b 7D       		.byte	(.L277-.L230)/2
 2841 005c 7D       		.byte	(.L277-.L230)/2
 2842 005d 7D       		.byte	(.L277-.L230)/2
 2843 005e 7D       		.byte	(.L277-.L230)/2
 2844 005f 7D       		.byte	(.L277-.L230)/2
 2845 0060 7D       		.byte	(.L277-.L230)/2
 2846 0061 7D       		.byte	(.L277-.L230)/2
 2847 0062 7D       		.byte	(.L277-.L230)/2
 2848 0063 7D       		.byte	(.L277-.L230)/2
 2849 0064 7D       		.byte	(.L277-.L230)/2
 2850 0065 7D       		.byte	(.L277-.L230)/2
 2851 0066 7D       		.byte	(.L277-.L230)/2
 2852 0067 7D       		.byte	(.L277-.L230)/2
ARM GAS  /tmp/ccWTp91B.s 			page 116


 2853 0068 7D       		.byte	(.L277-.L230)/2
 2854 0069 7D       		.byte	(.L277-.L230)/2
 2855 006a 2F       		.byte	(.L227-.L230)/2
 2856 006b 7D       		.byte	(.L277-.L230)/2
 2857 006c 3B       		.byte	(.L229-.L230)/2
 2858 006d 7D       		.byte	(.L277-.L230)/2
 2859 006e 7D       		.byte	(.L277-.L230)/2
 2860 006f 7D       		.byte	(.L277-.L230)/2
 2861 0070 3B       		.byte	(.L229-.L230)/2
 2862              	.LVL223:
 2863 0071 00       		.p2align 1
 2864              	.L221:
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2865              		.loc 1 1375 10 view .LVU890
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2866              		.loc 1 1375 26 is_stmt 0 view .LVU891
 2867 0072 2E4B     		ldr	r3, .L301+8
 2868 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1375:Lib/ssc/src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
 2869              		.loc 1 1375 13 view .LVU892
 2870 0076 13F0100F 		tst	r3, #16
 2871 007a 04D0     		beq	.L223
1379:Lib/ssc/src/ecatslv.c ****         /* the error flag (Bit 4) is set in the AL-Status and the ErrAck bit (Bit 4)
 2872              		.loc 1 1379 12 view .LVU893
 2873 007c 00F00F02 		and	r2, r0, #15
 2874 0080 012A     		cmp	r2, #1
 2875 0082 40F02582 		bne	.L220
 2876              	.L223:
1386:Lib/ssc/src/ecatslv.c ****     }
 2877              		.loc 1 1386 9 is_stmt 1 view .LVU894
1386:Lib/ssc/src/ecatslv.c ****     }
 2878              		.loc 1 1386 19 is_stmt 0 view .LVU895
 2879 0086 03F00F03 		and	r3, r3, #15
 2880 008a 284A     		ldr	r2, .L301+8
 2881 008c 1370     		strb	r3, [r2]
 2882 008e CAE7     		b	.L222
 2883              	.LVL224:
 2884              	.L286:
 2885              		.loc 1 1398 5 view .LVU896
 2886 0090 122C     		cmp	r4, #18
 2887 0092 09D0     		beq	.L227
 2888 0094 4FF00008 		mov	r8, #0
 2889 0098 56E0     		b	.L228
 2890              	.L225:
 2891              		.loc 1 1398 5 view .LVU897
 2892 009a 842C     		cmp	r4, #132
 2893 009c 10D0     		beq	.L229
 2894 009e 882C     		cmp	r4, #136
 2895 00a0 0ED0     		beq	.L229
 2896 00a2 822C     		cmp	r4, #130
 2897 00a4 40F0D280 		bne	.L278
 2898              	.L227:
1399:Lib/ssc/src/ecatslv.c ****     {
1400:Lib/ssc/src/ecatslv.c ****     case INIT_2_PREOP:
1401:Lib/ssc/src/ecatslv.c ****     case OP_2_PREOP:
1402:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_PREOP:
1403:Lib/ssc/src/ecatslv.c ****     case PREOP_2_PREOP:
ARM GAS  /tmp/ccWTp91B.s 			page 117


1404:Lib/ssc/src/ecatslv.c ****         /* in PREOP only the SYNCM settings for SYNCM0 and SYNCM1 (mailbox)
1405:Lib/ssc/src/ecatslv.c ****            are checked, if result is unequal 0, the slave will stay in or
1406:Lib/ssc/src/ecatslv.c ****            switch to INIT and set the ErrorInd Bit (bit 4) of the AL-Status */
1407:Lib/ssc/src/ecatslv.c ****         result = CheckSmSettings(MAILBOX_READ+1);
 2899              		.loc 1 1407 9 is_stmt 1 view .LVU898
 2900              		.loc 1 1407 18 is_stmt 0 view .LVU899
 2901 00a8 0220     		movs	r0, #2
 2902 00aa FFF7FEFF 		bl	CheckSmSettings
 2903              	.LVL225:
 2904              		.loc 1 1407 16 view .LVU900
 2905 00ae 1FFA80F8 		uxth	r8, r0
 2906              	.LVL226:
1408:Lib/ssc/src/ecatslv.c ****         break;
 2907              		.loc 1 1408 9 is_stmt 1 view .LVU901
 2908 00b2 0BE0     		b	.L232
 2909              	.LVL227:
 2910              	.L231:
1409:Lib/ssc/src/ecatslv.c ****     case PREOP_2_SAFEOP:
1410:Lib/ssc/src/ecatslv.c ****         {
1411:Lib/ssc/src/ecatslv.c ****         /* before checking the SYNCM settings for SYNCM2 and SYNCM3 (process data)
1412:Lib/ssc/src/ecatslv.c ****            the expected length of input data (nPdInputSize) and output data (nPdOutputSize)
1413:Lib/ssc/src/ecatslv.c ****             could be adapted (changed by PDO-Assign and/or PDO-Mapping)
1414:Lib/ssc/src/ecatslv.c ****             if result is unequal 0, the slave will stay in PREOP and set
1415:Lib/ssc/src/ecatslv.c ****             the ErrorInd Bit (bit 4) of the AL-Status */
1416:Lib/ssc/src/ecatslv.c ****         result = APPL_GenerateMapping(&nPdInputSize,&nPdOutputSize);
 2911              		.loc 1 1416 9 view .LVU902
 2912              		.loc 1 1416 18 is_stmt 0 view .LVU903
 2913 00b4 1E49     		ldr	r1, .L301+12
 2914              	.LVL228:
 2915              		.loc 1 1416 18 view .LVU904
 2916 00b6 1F48     		ldr	r0, .L301+16
 2917 00b8 FFF7FEFF 		bl	APPL_GenerateMapping
 2918              	.LVL229:
1417:Lib/ssc/src/ecatslv.c **** 
1418:Lib/ssc/src/ecatslv.c ****         if (result != 0)
 2919              		.loc 1 1418 9 is_stmt 1 view .LVU905
 2920              		.loc 1 1418 12 is_stmt 0 view .LVU906
 2921 00bc 8046     		mov	r8, r0
 2922 00be 28B9     		cbnz	r0, .L232
 2923              	.LVL230:
 2924              	.L229:
1419:Lib/ssc/src/ecatslv.c ****             break;
1420:Lib/ssc/src/ecatslv.c ****         }
1421:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_OP:
1422:Lib/ssc/src/ecatslv.c ****     case OP_2_SAFEOP:
1423:Lib/ssc/src/ecatslv.c ****     case SAFEOP_2_SAFEOP:
1424:Lib/ssc/src/ecatslv.c ****     case OP_2_OP:
1425:Lib/ssc/src/ecatslv.c ****         /* in SAFEOP or OP the SYNCM settings for all SYNCM are checked
1426:Lib/ssc/src/ecatslv.c ****            if result is unequal 0, the slave will stay in or
1427:Lib/ssc/src/ecatslv.c ****            switch to PREOP and set the ErrorInd Bit (bit 4) of the AL-Status */
1428:Lib/ssc/src/ecatslv.c ****         result = CheckSmSettings(nMaxSyncMan);
 2925              		.loc 1 1428 9 is_stmt 1 view .LVU907
 2926              		.loc 1 1428 18 is_stmt 0 view .LVU908
 2927 00c0 1D4B     		ldr	r3, .L301+20
 2928 00c2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2929 00c4 FFF7FEFF 		bl	CheckSmSettings
 2930              	.LVL231:
ARM GAS  /tmp/ccWTp91B.s 			page 118


 2931              		.loc 1 1428 16 view .LVU909
 2932 00c8 1FFA80F8 		uxth	r8, r0
 2933              	.LVL232:
1429:Lib/ssc/src/ecatslv.c ****         break;
 2934              		.loc 1 1429 9 is_stmt 1 view .LVU910
 2935              	.L232:
1430:Lib/ssc/src/ecatslv.c ****     }
1431:Lib/ssc/src/ecatslv.c **** 
1432:Lib/ssc/src/ecatslv.c ****     if ( result == 0 )
 2936              		.loc 1 1432 5 view .LVU911
 2937              		.loc 1 1432 8 is_stmt 0 view .LVU912
 2938 00cc B8F1000F 		cmp	r8, #0
 2939 00d0 3AD0     		beq	.L228
1433:Lib/ssc/src/ecatslv.c ****     {
1434:Lib/ssc/src/ecatslv.c ****         /* execute the corresponding local management service(s) depending on the state transition 
1435:Lib/ssc/src/ecatslv.c ****         nEcatStateTrans = 0;
1436:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
1437:Lib/ssc/src/ecatslv.c ****         {
1438:Lib/ssc/src/ecatslv.c ****         case INIT_2_BOOT    :
1439:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
1440:Lib/ssc/src/ecatslv.c ****             break;
1441:Lib/ssc/src/ecatslv.c **** 
1442:Lib/ssc/src/ecatslv.c ****         case BOOT_2_INIT    :
1443:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
1444:Lib/ssc/src/ecatslv.c **** 
1445:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1446:Lib/ssc/src/ecatslv.c **** 
1447:Lib/ssc/src/ecatslv.c ****             break;
1448:Lib/ssc/src/ecatslv.c ****         case INIT_2_PREOP :
1449:Lib/ssc/src/ecatslv.c **** 
1450:Lib/ssc/src/ecatslv.c ****            UpdateEEPROMLoadedState();
1451:Lib/ssc/src/ecatslv.c **** 
1452:Lib/ssc/src/ecatslv.c ****             if (EepromLoaded == FALSE)
1453:Lib/ssc/src/ecatslv.c ****             {
1454:Lib/ssc/src/ecatslv.c ****                 //return an error if the EEPROM was not loaded correct  (device restart is required
1455:Lib/ssc/src/ecatslv.c ****                 result = ALSTATUSCODE_EE_ERROR;
1456:Lib/ssc/src/ecatslv.c ****             }
1457:Lib/ssc/src/ecatslv.c ****             if (result == 0)
1458:Lib/ssc/src/ecatslv.c ****             {
1459:Lib/ssc/src/ecatslv.c ****             /* MBX_StartMailboxHandler (in mailbox.c) checks if the areas of the mailbox
1460:Lib/ssc/src/ecatslv.c ****                sync managers SYNCM0 and SYNCM1 overlap each other
1461:Lib/ssc/src/ecatslv.c ****               if result is unequal 0, the slave will stay in INIT
1462:Lib/ssc/src/ecatslv.c ****               and sets the ErrorInd Bit (bit 4) of the AL-Status */
1463:Lib/ssc/src/ecatslv.c ****             result = MBX_StartMailboxHandler();
1464:Lib/ssc/src/ecatslv.c ****             if (result == 0)
1465:Lib/ssc/src/ecatslv.c ****             {
1466:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1467:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
1468:Lib/ssc/src/ecatslv.c ****                    if the state transition from INIT to PREOP should be done
1469:Lib/ssc/src/ecatslv.c ****                  if result is unequal 0, the slave will stay in INIT
1470:Lib/ssc/src/ecatslv.c ****                  and sets the ErrorInd Bit (bit 4) of the AL-Status */
1471:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartMailboxHandler();
1472:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
1473:Lib/ssc/src/ecatslv.c ****                 {
1474:Lib/ssc/src/ecatslv.c ****                     bMbxRunning = TRUE;
1475:Lib/ssc/src/ecatslv.c ****                 }
1476:Lib/ssc/src/ecatslv.c ****             }
ARM GAS  /tmp/ccWTp91B.s 			page 119


1477:Lib/ssc/src/ecatslv.c **** 
1478:Lib/ssc/src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
1479:Lib/ssc/src/ecatslv.c ****             {
1480:Lib/ssc/src/ecatslv.c ****                 /*Stop APPL Mbx handler if APPL Start Mbx handler was called before*/
1481:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1482:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
1483:Lib/ssc/src/ecatslv.c **** 
1484:Lib/ssc/src/ecatslv.c ****                  MBX_StopMailboxHandler();
1485:Lib/ssc/src/ecatslv.c ****             }
1486:Lib/ssc/src/ecatslv.c **** 
1487:Lib/ssc/src/ecatslv.c ****             }
1488:Lib/ssc/src/ecatslv.c ****             break;
1489:Lib/ssc/src/ecatslv.c **** 
1490:Lib/ssc/src/ecatslv.c ****         case PREOP_2_SAFEOP:
1491:Lib/ssc/src/ecatslv.c ****             /* start the input handler (function is defined above) */
1492:Lib/ssc/src/ecatslv.c ****             result = StartInputHandler();
1493:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
1494:Lib/ssc/src/ecatslv.c ****             {
1495:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1496:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
1497:Lib/ssc/src/ecatslv.c **** 
1498:Lib/ssc/src/ecatslv.c ****                 if(result == 0)
1499:Lib/ssc/src/ecatslv.c ****                 {
1500:Lib/ssc/src/ecatslv.c ****                     /* initialize the AL Event Mask register (0x204) */
1501:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1502:Lib/ssc/src/ecatslv.c ****                     SetALEventMask( u16ALEventMask );
1503:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1504:Lib/ssc/src/ecatslv.c **** 
1505:Lib/ssc/src/ecatslv.c ****                     bEcatInputUpdateRunning = TRUE;
1506:Lib/ssc/src/ecatslv.c ****                 }
1507:Lib/ssc/src/ecatslv.c ****             }
1508:Lib/ssc/src/ecatslv.c **** 
1509:Lib/ssc/src/ecatslv.c ****             /*if one start input handler returned an error stop the input handler*/
1510:Lib/ssc/src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
1511:Lib/ssc/src/ecatslv.c ****             {
1512:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1513:Lib/ssc/src/ecatslv.c ****                 {
1514:Lib/ssc/src/ecatslv.c ****                     /*Call only the APPL stop handler if the APPL start handler was called before*/
1515:Lib/ssc/src/ecatslv.c ****                     /*The application can react to the state transition in the function APPL_StopIn
1516:Lib/ssc/src/ecatslv.c ****                     APPL_StopInputHandler();
1517:Lib/ssc/src/ecatslv.c ****                 }
1518:Lib/ssc/src/ecatslv.c **** 
1519:Lib/ssc/src/ecatslv.c ****                 StopInputHandler();
1520:Lib/ssc/src/ecatslv.c ****             }
1521:Lib/ssc/src/ecatslv.c ****             break;
1522:Lib/ssc/src/ecatslv.c **** 
1523:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_OP:
1524:Lib/ssc/src/ecatslv.c ****             /* start the output handler (function is defined above) */
1525:Lib/ssc/src/ecatslv.c ****             result = StartOutputHandler();
1526:Lib/ssc/src/ecatslv.c ****             if(result == 0)
1527:Lib/ssc/src/ecatslv.c ****             {
1528:Lib/ssc/src/ecatslv.c ****                 bApplEsmPending = FALSE;
1529:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
1530:Lib/ssc/src/ecatslv.c **** 
1531:Lib/ssc/src/ecatslv.c ****                 if(result == 0)
1532:Lib/ssc/src/ecatslv.c ****                 {
1533:Lib/ssc/src/ecatslv.c ****                     /*Device is in OPERATINAL*/
ARM GAS  /tmp/ccWTp91B.s 			page 120


1534:Lib/ssc/src/ecatslv.c ****                     bEcatOutputUpdateRunning = TRUE;
1535:Lib/ssc/src/ecatslv.c ****                 }
1536:Lib/ssc/src/ecatslv.c **** 
1537:Lib/ssc/src/ecatslv.c ****             }
1538:Lib/ssc/src/ecatslv.c **** 
1539:Lib/ssc/src/ecatslv.c ****             if ( result != 0 && result != NOERROR_INWORK)
1540:Lib/ssc/src/ecatslv.c ****             {
1541:Lib/ssc/src/ecatslv.c ****                 if(!bApplEsmPending)
1542:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
1543:Lib/ssc/src/ecatslv.c **** 
1544:Lib/ssc/src/ecatslv.c ****                 StopOutputHandler();
1545:Lib/ssc/src/ecatslv.c ****             }
1546:Lib/ssc/src/ecatslv.c **** 
1547:Lib/ssc/src/ecatslv.c ****             break;
1548:Lib/ssc/src/ecatslv.c **** 
1549:Lib/ssc/src/ecatslv.c ****         case OP_2_SAFEOP:
1550:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1551:Lib/ssc/src/ecatslv.c ****             APPL_StopOutputHandler();
1552:Lib/ssc/src/ecatslv.c **** 
1553:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1554:Lib/ssc/src/ecatslv.c **** 
1555:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1556:Lib/ssc/src/ecatslv.c **** 
1557:Lib/ssc/src/ecatslv.c ****             break;
1558:Lib/ssc/src/ecatslv.c **** 
1559:Lib/ssc/src/ecatslv.c ****         case OP_2_PREOP:
1560:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1561:Lib/ssc/src/ecatslv.c ****             result = APPL_StopOutputHandler();
1562:Lib/ssc/src/ecatslv.c **** 
1563:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1564:Lib/ssc/src/ecatslv.c **** 
1565:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1566:Lib/ssc/src/ecatslv.c **** 
1567:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1568:Lib/ssc/src/ecatslv.c ****                 break;
1569:Lib/ssc/src/ecatslv.c **** 
1570:Lib/ssc/src/ecatslv.c ****             stateTrans = SAFEOP_2_PREOP;
1571:Lib/ssc/src/ecatslv.c **** 
1572:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_PREOP:
1573:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1574:Lib/ssc/src/ecatslv.c ****             APPL_StopInputHandler();
1575:Lib/ssc/src/ecatslv.c ****            
1576:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1577:Lib/ssc/src/ecatslv.c **** 
1578:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1579:Lib/ssc/src/ecatslv.c **** 
1580:Lib/ssc/src/ecatslv.c ****             break;
1581:Lib/ssc/src/ecatslv.c **** 
1582:Lib/ssc/src/ecatslv.c ****         case OP_2_INIT:
1583:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1584:Lib/ssc/src/ecatslv.c ****             result = APPL_StopOutputHandler();
1585:Lib/ssc/src/ecatslv.c **** 
1586:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1587:Lib/ssc/src/ecatslv.c **** 
1588:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1589:Lib/ssc/src/ecatslv.c **** 
1590:Lib/ssc/src/ecatslv.c ****             if (result != 0)
ARM GAS  /tmp/ccWTp91B.s 			page 121


1591:Lib/ssc/src/ecatslv.c ****                 break;
1592:Lib/ssc/src/ecatslv.c ****             
1593:Lib/ssc/src/ecatslv.c ****             stateTrans = SAFEOP_2_INIT;
1594:Lib/ssc/src/ecatslv.c **** 
1595:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_INIT:
1596:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1597:Lib/ssc/src/ecatslv.c ****             result = APPL_StopInputHandler();
1598:Lib/ssc/src/ecatslv.c ****             
1599:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1600:Lib/ssc/src/ecatslv.c **** 
1601:Lib/ssc/src/ecatslv.c ****             bApplEsmPending = FALSE;
1602:Lib/ssc/src/ecatslv.c **** 
1603:Lib/ssc/src/ecatslv.c ****             if (result != 0)
1604:Lib/ssc/src/ecatslv.c ****                 break;
1605:Lib/ssc/src/ecatslv.c ****             stateTrans = PREOP_2_INIT;
1606:Lib/ssc/src/ecatslv.c **** 
1607:Lib/ssc/src/ecatslv.c ****         case PREOP_2_INIT:
1608:Lib/ssc/src/ecatslv.c ****             MBX_StopMailboxHandler();
1609:Lib/ssc/src/ecatslv.c ****             result = APPL_StopMailboxHandler();
1610:Lib/ssc/src/ecatslv.c **** 
1611:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1612:Lib/ssc/src/ecatslv.c ****             break;
1613:Lib/ssc/src/ecatslv.c **** 
1614:Lib/ssc/src/ecatslv.c ****         case INIT_2_INIT:
1615:Lib/ssc/src/ecatslv.c ****             BackToInitTransition();
1616:Lib/ssc/src/ecatslv.c ****         case PREOP_2_PREOP:
1617:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_SAFEOP:
1618:Lib/ssc/src/ecatslv.c ****         case OP_2_OP:
1619:Lib/ssc/src/ecatslv.c ****             if(bErrAck)
1620:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
1621:Lib/ssc/src/ecatslv.c **** 
1622:Lib/ssc/src/ecatslv.c ****             if(!bLocalErrorFlag)
1623:Lib/ssc/src/ecatslv.c ****             {
1624:Lib/ssc/src/ecatslv.c ****                 /*no local error flag is currently active, enable SM*/
1625:Lib/ssc/src/ecatslv.c ****                 if ( nAlStatus & (STATE_SAFEOP | STATE_OP))
1626:Lib/ssc/src/ecatslv.c ****                 {
1627:Lib/ssc/src/ecatslv.c ****                     if(nPdOutputSize > 0)
1628:Lib/ssc/src/ecatslv.c ****                     {
1629:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1630:Lib/ssc/src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_OUT);
1631:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1632:Lib/ssc/src/ecatslv.c ****                     }
1633:Lib/ssc/src/ecatslv.c ****                     else 
1634:Lib/ssc/src/ecatslv.c ****                     if(nPdInputSize > 0)
1635:Lib/ssc/src/ecatslv.c ****                     {
1636:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1637:Lib/ssc/src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_IN);
1638:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1639:Lib/ssc/src/ecatslv.c ****                     }
1640:Lib/ssc/src/ecatslv.c ****                 }
1641:Lib/ssc/src/ecatslv.c ****             }
1642:Lib/ssc/src/ecatslv.c ****             result = NOERROR_NOSTATECHANGE;
1643:Lib/ssc/src/ecatslv.c ****             break;
1644:Lib/ssc/src/ecatslv.c **** 
1645:Lib/ssc/src/ecatslv.c ****         case INIT_2_SAFEOP:
1646:Lib/ssc/src/ecatslv.c ****         case INIT_2_OP:
1647:Lib/ssc/src/ecatslv.c ****         case PREOP_2_OP:
ARM GAS  /tmp/ccWTp91B.s 			page 122


1648:Lib/ssc/src/ecatslv.c ****         case PREOP_2_BOOT:
1649:Lib/ssc/src/ecatslv.c ****         case SAFEOP_2_BOOT:
1650:Lib/ssc/src/ecatslv.c ****         case OP_2_BOOT:
1651:Lib/ssc/src/ecatslv.c ****         case BOOT_2_PREOP:
1652:Lib/ssc/src/ecatslv.c ****         case BOOT_2_SAFEOP:
1653:Lib/ssc/src/ecatslv.c ****         case BOOT_2_OP:
1654:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDALCONTROL;
1655:Lib/ssc/src/ecatslv.c ****             break;
1656:Lib/ssc/src/ecatslv.c **** 
1657:Lib/ssc/src/ecatslv.c ****         default:
1658:Lib/ssc/src/ecatslv.c ****             result = ALSTATUSCODE_UNKNOWNALCONTROL;
1659:Lib/ssc/src/ecatslv.c ****             break;
1660:Lib/ssc/src/ecatslv.c ****         }
1661:Lib/ssc/src/ecatslv.c ****     }
1662:Lib/ssc/src/ecatslv.c ****     else
1663:Lib/ssc/src/ecatslv.c ****     {
1664:Lib/ssc/src/ecatslv.c ****         /* the checking of the sync manager settings was not successful
1665:Lib/ssc/src/ecatslv.c ****             switch back the state to PREOP or INIT */
1666:Lib/ssc/src/ecatslv.c ****         switch (nAlStatus)
 2940              		.loc 1 1666 9 is_stmt 1 view .LVU913
 2941 00d2 164B     		ldr	r3, .L301+8
 2942 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2943 00d6 042B     		cmp	r3, #4
 2944 00d8 00F0AC81 		beq	.L259
 2945 00dc 082B     		cmp	r3, #8
 2946 00de 00F0A581 		beq	.L260
 2947 00e2 022B     		cmp	r3, #2
 2948 00e4 00F0AA81 		beq	.L261
 2949              	.LVL233:
 2950              	.L250:
1667:Lib/ssc/src/ecatslv.c ****         {
1668:Lib/ssc/src/ecatslv.c ****         case STATE_OP:
1669:Lib/ssc/src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1670:Lib/ssc/src/ecatslv.c ****             APPL_StopOutputHandler();
1671:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
1672:Lib/ssc/src/ecatslv.c ****         case STATE_SAFEOP:
1673:Lib/ssc/src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1674:Lib/ssc/src/ecatslv.c ****             APPL_StopInputHandler();
1675:Lib/ssc/src/ecatslv.c **** 
1676:Lib/ssc/src/ecatslv.c ****             StopInputHandler();
1677:Lib/ssc/src/ecatslv.c **** 
1678:Lib/ssc/src/ecatslv.c ****         case STATE_PREOP:
1679:Lib/ssc/src/ecatslv.c **** 
1680:Lib/ssc/src/ecatslv.c ****             if ( result == ALSTATUSCODE_INVALIDMBXCFGINPREOP )
1681:Lib/ssc/src/ecatslv.c ****             {
1682:Lib/ssc/src/ecatslv.c ****                 /* the mailbox sync manager settings were wrong, switch back to INIT */
1683:Lib/ssc/src/ecatslv.c ****                 MBX_StopMailboxHandler();
1684:Lib/ssc/src/ecatslv.c ****                 APPL_StopMailboxHandler();
1685:Lib/ssc/src/ecatslv.c **** 
1686:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_INIT;
1687:Lib/ssc/src/ecatslv.c ****             }
1688:Lib/ssc/src/ecatslv.c ****             else
1689:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_PREOP;
1690:Lib/ssc/src/ecatslv.c ****         }
1691:Lib/ssc/src/ecatslv.c ****     }
1692:Lib/ssc/src/ecatslv.c **** 
1693:Lib/ssc/src/ecatslv.c ****     if ( result == NOERROR_INWORK )
ARM GAS  /tmp/ccWTp91B.s 			page 123


 2951              		.loc 1 1693 5 view .LVU914
 2952              		.loc 1 1693 8 is_stmt 0 view .LVU915
 2953 00e8 B8F1FF0F 		cmp	r8, #255
 2954 00ec 40F0C581 		bne	.L247
1694:Lib/ssc/src/ecatslv.c ****     {
1695:Lib/ssc/src/ecatslv.c ****         /* state transition is still in work
1696:Lib/ssc/src/ecatslv.c ****             ECAT_StateChange must be called from the application */
1697:Lib/ssc/src/ecatslv.c ****         bEcatWaitForAlControlRes = TRUE;
 2955              		.loc 1 1697 9 is_stmt 1 view .LVU916
 2956              		.loc 1 1697 34 is_stmt 0 view .LVU917
 2957 00f0 124B     		ldr	r3, .L301+24
 2958 00f2 0122     		movs	r2, #1
 2959 00f4 1A70     		strb	r2, [r3]
1698:Lib/ssc/src/ecatslv.c ****         /* state transition has to be stored */
1699:Lib/ssc/src/ecatslv.c ****         nEcatStateTrans = stateTrans;
 2960              		.loc 1 1699 9 is_stmt 1 view .LVU918
 2961              		.loc 1 1699 25 is_stmt 0 view .LVU919
 2962 00f6 A4B2     		uxth	r4, r4
 2963 00f8 114B     		ldr	r3, .L301+28
 2964 00fa 1C80     		strh	r4, [r3]	@ movhi
1700:Lib/ssc/src/ecatslv.c **** 
1701:Lib/ssc/src/ecatslv.c ****         /*Init ESM timeout counter (will be decremented with the local 1ms timer)*/
1702:Lib/ssc/src/ecatslv.c ****         switch(nEcatStateTrans)
 2965              		.loc 1 1702 9 is_stmt 1 view .LVU920
 2966 00fc 242C     		cmp	r4, #36
 2967 00fe 00F0B581 		beq	.L263
 2968 0102 00F2AD81 		bhi	.L264
 2969 0106 123C     		subs	r4, r4, #18
 2970 0108 A4B2     		uxth	r4, r4
 2971 010a 9442     		cmp	r4, r2
 2972 010c 00F2AA81 		bhi	.L265
1703:Lib/ssc/src/ecatslv.c ****         {
1704:Lib/ssc/src/ecatslv.c ****             case INIT_2_PREOP:
1705:Lib/ssc/src/ecatslv.c ****             case INIT_2_BOOT:
1706:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = PREOPTIMEOUT;
 2973              		.loc 1 1706 17 view .LVU921
 2974              		.loc 1 1706 35 is_stmt 0 view .LVU922
 2975 0110 044B     		ldr	r3, .L301
 2976 0112 4FF4FA62 		mov	r2, #2000
 2977 0116 1A80     		strh	r2, [r3]	@ movhi
1707:Lib/ssc/src/ecatslv.c ****             break;
 2978              		.loc 1 1707 13 is_stmt 1 view .LVU923
 2979              	.L267:
1708:Lib/ssc/src/ecatslv.c ****             case PREOP_2_SAFEOP:
1709:Lib/ssc/src/ecatslv.c ****             case SAFEOP_2_OP:
1710:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = SAFEOP2OPTIMEOUT;
1711:Lib/ssc/src/ecatslv.c ****                 break;
1712:Lib/ssc/src/ecatslv.c ****            default:
1713:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = 200; //Set default timeout value to 200ms
1714:Lib/ssc/src/ecatslv.c ****                 break;
1715:Lib/ssc/src/ecatslv.c ****         }
1716:Lib/ssc/src/ecatslv.c ****         EsmTimeoutCounter -= 50; //subtract 50ms from the timeout to react before the master runs i
 2980              		.loc 1 1716 9 view .LVU924
 2981              		.loc 1 1716 27 is_stmt 0 view .LVU925
 2982 0118 024A     		ldr	r2, .L301
 2983 011a 1388     		ldrh	r3, [r2]
 2984 011c 323B     		subs	r3, r3, #50
ARM GAS  /tmp/ccWTp91B.s 			page 124


 2985 011e 1380     		strh	r3, [r2]	@ movhi
 2986 0120 D6E1     		b	.L220
 2987              	.L302:
 2988 0122 00BF     		.align	2
 2989              	.L301:
 2990 0124 00000000 		.word	.LANCHOR33
 2991 0128 00000000 		.word	.LANCHOR34
 2992 012c 00000000 		.word	.LANCHOR5
 2993 0130 00000000 		.word	.LANCHOR7
 2994 0134 00000000 		.word	.LANCHOR4
 2995 0138 00000000 		.word	.LANCHOR11
 2996 013c 00000000 		.word	.LANCHOR36
 2997 0140 00000000 		.word	.LANCHOR35
 2998              	.LVL234:
 2999              	.L277:
1398:Lib/ssc/src/ecatslv.c ****     {
 3000              		.loc 1 1398 5 view .LVU926
 3001 0144 4FF00008 		mov	r8, #0
 3002              	.LVL235:
 3003              	.L228:
1435:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
 3004              		.loc 1 1435 9 is_stmt 1 view .LVU927
1435:Lib/ssc/src/ecatslv.c ****         switch ( stateTrans )
 3005              		.loc 1 1435 25 is_stmt 0 view .LVU928
 3006 0148 9D4B     		ldr	r3, .L303
 3007 014a 0022     		movs	r2, #0
 3008 014c 1A80     		strh	r2, [r3]	@ movhi
1436:Lib/ssc/src/ecatslv.c ****         {
 3009              		.loc 1 1436 9 is_stmt 1 view .LVU929
 3010 014e A4F11103 		sub	r3, r4, #17
 3011 0152 772B     		cmp	r3, #119
 3012 0154 00F28F81 		bhi	.L234
 3013 0158 DFE813F0 		tbh	[pc, r3, lsl #1]
 3014              	.L236:
 3015 015c 4001     		.2byte	(.L249-.L236)/2
 3016 015e 8000     		.2byte	(.L248-.L236)/2
 3017 0160 BC01     		.2byte	(.L279-.L236)/2
 3018 0162 6501     		.2byte	(.L238-.L236)/2
 3019 0164 8D01     		.2byte	(.L234-.L236)/2
 3020 0166 8D01     		.2byte	(.L234-.L236)/2
 3021 0168 8D01     		.2byte	(.L234-.L236)/2
 3022 016a 6501     		.2byte	(.L238-.L236)/2
 3023 016c 8D01     		.2byte	(.L234-.L236)/2
 3024 016e 8D01     		.2byte	(.L234-.L236)/2
 3025 0170 8D01     		.2byte	(.L234-.L236)/2
 3026 0172 8D01     		.2byte	(.L234-.L236)/2
 3027 0174 8D01     		.2byte	(.L234-.L236)/2
 3028 0176 8D01     		.2byte	(.L234-.L236)/2
 3029 0178 8D01     		.2byte	(.L234-.L236)/2
 3030 017a 8D01     		.2byte	(.L234-.L236)/2
 3031 017c 2A01     		.2byte	(.L246-.L236)/2
 3032 017e 4201     		.2byte	(.L235-.L236)/2
 3033 0180 6501     		.2byte	(.L238-.L236)/2
 3034 0182 AC00     		.2byte	(.L245-.L236)/2
 3035 0184 8D01     		.2byte	(.L234-.L236)/2
 3036 0186 8D01     		.2byte	(.L234-.L236)/2
 3037 0188 8D01     		.2byte	(.L234-.L236)/2
ARM GAS  /tmp/ccWTp91B.s 			page 125


 3038 018a 6501     		.2byte	(.L238-.L236)/2
 3039 018c 8D01     		.2byte	(.L234-.L236)/2
 3040 018e 8D01     		.2byte	(.L234-.L236)/2
 3041 0190 8D01     		.2byte	(.L234-.L236)/2
 3042 0192 8D01     		.2byte	(.L234-.L236)/2
 3043 0194 8D01     		.2byte	(.L234-.L236)/2
 3044 0196 8D01     		.2byte	(.L234-.L236)/2
 3045 0198 8D01     		.2byte	(.L234-.L236)/2
 3046 019a 8D01     		.2byte	(.L234-.L236)/2
 3047 019c 7B00     		.2byte	(.L244-.L236)/2
 3048 019e 6501     		.2byte	(.L238-.L236)/2
 3049 01a0 8D01     		.2byte	(.L234-.L236)/2
 3050 01a2 6501     		.2byte	(.L238-.L236)/2
 3051 01a4 8D01     		.2byte	(.L234-.L236)/2
 3052 01a6 8D01     		.2byte	(.L234-.L236)/2
 3053 01a8 8D01     		.2byte	(.L234-.L236)/2
 3054 01aa 6501     		.2byte	(.L238-.L236)/2
 3055 01ac 8D01     		.2byte	(.L234-.L236)/2
 3056 01ae 8D01     		.2byte	(.L234-.L236)/2
 3057 01b0 8D01     		.2byte	(.L234-.L236)/2
 3058 01b2 8D01     		.2byte	(.L234-.L236)/2
 3059 01b4 8D01     		.2byte	(.L234-.L236)/2
 3060 01b6 8D01     		.2byte	(.L234-.L236)/2
 3061 01b8 8D01     		.2byte	(.L234-.L236)/2
 3062 01ba 8D01     		.2byte	(.L234-.L236)/2
 3063 01bc 1D01     		.2byte	(.L243-.L236)/2
 3064 01be 0801     		.2byte	(.L242-.L236)/2
 3065 01c0 6501     		.2byte	(.L238-.L236)/2
 3066 01c2 4201     		.2byte	(.L235-.L236)/2
 3067 01c4 8D01     		.2byte	(.L234-.L236)/2
 3068 01c6 8D01     		.2byte	(.L234-.L236)/2
 3069 01c8 8D01     		.2byte	(.L234-.L236)/2
 3070 01ca D200     		.2byte	(.L241-.L236)/2
 3071 01cc 8D01     		.2byte	(.L234-.L236)/2
 3072 01ce 8D01     		.2byte	(.L234-.L236)/2
 3073 01d0 8D01     		.2byte	(.L234-.L236)/2
 3074 01d2 8D01     		.2byte	(.L234-.L236)/2
 3075 01d4 8D01     		.2byte	(.L234-.L236)/2
 3076 01d6 8D01     		.2byte	(.L234-.L236)/2
 3077 01d8 8D01     		.2byte	(.L234-.L236)/2
 3078 01da 8D01     		.2byte	(.L234-.L236)/2
 3079 01dc 8D01     		.2byte	(.L234-.L236)/2
 3080 01de 8D01     		.2byte	(.L234-.L236)/2
 3081 01e0 8D01     		.2byte	(.L234-.L236)/2
 3082 01e2 8D01     		.2byte	(.L234-.L236)/2
 3083 01e4 8D01     		.2byte	(.L234-.L236)/2
 3084 01e6 8D01     		.2byte	(.L234-.L236)/2
 3085 01e8 8D01     		.2byte	(.L234-.L236)/2
 3086 01ea 8D01     		.2byte	(.L234-.L236)/2
 3087 01ec 8D01     		.2byte	(.L234-.L236)/2
 3088 01ee 8D01     		.2byte	(.L234-.L236)/2
 3089 01f0 8D01     		.2byte	(.L234-.L236)/2
 3090 01f2 8D01     		.2byte	(.L234-.L236)/2
 3091 01f4 8D01     		.2byte	(.L234-.L236)/2
 3092 01f6 8D01     		.2byte	(.L234-.L236)/2
 3093 01f8 8D01     		.2byte	(.L234-.L236)/2
 3094 01fa 8D01     		.2byte	(.L234-.L236)/2
ARM GAS  /tmp/ccWTp91B.s 			page 126


 3095 01fc 8D01     		.2byte	(.L234-.L236)/2
 3096 01fe 8D01     		.2byte	(.L234-.L236)/2
 3097 0200 8D01     		.2byte	(.L234-.L236)/2
 3098 0202 8D01     		.2byte	(.L234-.L236)/2
 3099 0204 8D01     		.2byte	(.L234-.L236)/2
 3100 0206 8D01     		.2byte	(.L234-.L236)/2
 3101 0208 8D01     		.2byte	(.L234-.L236)/2
 3102 020a 8D01     		.2byte	(.L234-.L236)/2
 3103 020c 8D01     		.2byte	(.L234-.L236)/2
 3104 020e 8D01     		.2byte	(.L234-.L236)/2
 3105 0210 8D01     		.2byte	(.L234-.L236)/2
 3106 0212 8D01     		.2byte	(.L234-.L236)/2
 3107 0214 8D01     		.2byte	(.L234-.L236)/2
 3108 0216 8D01     		.2byte	(.L234-.L236)/2
 3109 0218 8D01     		.2byte	(.L234-.L236)/2
 3110 021a 8D01     		.2byte	(.L234-.L236)/2
 3111 021c 8D01     		.2byte	(.L234-.L236)/2
 3112 021e 8D01     		.2byte	(.L234-.L236)/2
 3113 0220 8D01     		.2byte	(.L234-.L236)/2
 3114 0222 8D01     		.2byte	(.L234-.L236)/2
 3115 0224 8D01     		.2byte	(.L234-.L236)/2
 3116 0226 8D01     		.2byte	(.L234-.L236)/2
 3117 0228 8D01     		.2byte	(.L234-.L236)/2
 3118 022a 8D01     		.2byte	(.L234-.L236)/2
 3119 022c 8D01     		.2byte	(.L234-.L236)/2
 3120 022e 8D01     		.2byte	(.L234-.L236)/2
 3121 0230 8D01     		.2byte	(.L234-.L236)/2
 3122 0232 8D01     		.2byte	(.L234-.L236)/2
 3123 0234 8D01     		.2byte	(.L234-.L236)/2
 3124 0236 8D01     		.2byte	(.L234-.L236)/2
 3125 0238 8D01     		.2byte	(.L234-.L236)/2
 3126 023a 8D01     		.2byte	(.L234-.L236)/2
 3127 023c 1001     		.2byte	(.L240-.L236)/2
 3128 023e FB00     		.2byte	(.L239-.L236)/2
 3129 0240 6501     		.2byte	(.L238-.L236)/2
 3130 0242 F300     		.2byte	(.L237-.L236)/2
 3131 0244 8D01     		.2byte	(.L234-.L236)/2
 3132 0246 8D01     		.2byte	(.L234-.L236)/2
 3133 0248 8D01     		.2byte	(.L234-.L236)/2
 3134 024a 4201     		.2byte	(.L235-.L236)/2
 3135              	.LVL236:
 3136              		.p2align 1
 3137              	.L278:
1398:Lib/ssc/src/ecatslv.c ****     {
 3138              		.loc 1 1398 5 is_stmt 0 view .LVU930
 3139 024c 4FF00008 		mov	r8, #0
 3140 0250 7AE7     		b	.L228
 3141              	.LVL237:
 3142              	.L244:
1443:Lib/ssc/src/ecatslv.c **** 
 3143              		.loc 1 1443 13 is_stmt 1 view .LVU931
1445:Lib/ssc/src/ecatslv.c **** 
 3144              		.loc 1 1445 13 view .LVU932
 3145 0252 FFF7FEFF 		bl	BackToInitTransition
 3146              	.LVL238:
1447:Lib/ssc/src/ecatslv.c ****         case INIT_2_PREOP :
 3147              		.loc 1 1447 13 view .LVU933
ARM GAS  /tmp/ccWTp91B.s 			page 127


1693:Lib/ssc/src/ecatslv.c ****     {
 3148              		.loc 1 1693 5 view .LVU934
1443:Lib/ssc/src/ecatslv.c **** 
 3149              		.loc 1 1443 20 is_stmt 0 view .LVU935
 3150 0256 4FF01308 		mov	r8, #19
 3151 025a 0EE1     		b	.L247
 3152              	.LVL239:
 3153              	.L248:
1450:Lib/ssc/src/ecatslv.c **** 
 3154              		.loc 1 1450 12 is_stmt 1 view .LVU936
 3155 025c FFF7FEFF 		bl	UpdateEEPROMLoadedState
 3156              	.LVL240:
1452:Lib/ssc/src/ecatslv.c ****             {
 3157              		.loc 1 1452 13 view .LVU937
1452:Lib/ssc/src/ecatslv.c ****             {
 3158              		.loc 1 1452 30 is_stmt 0 view .LVU938
 3159 0260 584B     		ldr	r3, .L303+4
 3160 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1452:Lib/ssc/src/ecatslv.c ****             {
 3161              		.loc 1 1452 16 view .LVU939
 3162 0264 002B     		cmp	r3, #0
 3163 0266 00F0F880 		beq	.L280
 3164              	.LVL241:
1457:Lib/ssc/src/ecatslv.c ****             {
 3165              		.loc 1 1457 13 is_stmt 1 view .LVU940
1457:Lib/ssc/src/ecatslv.c ****             {
 3166              		.loc 1 1457 16 is_stmt 0 view .LVU941
 3167 026a B8F1000F 		cmp	r8, #0
 3168 026e 7FF43BAF 		bne	.L250
1463:Lib/ssc/src/ecatslv.c ****             if (result == 0)
 3169              		.loc 1 1463 13 is_stmt 1 view .LVU942
1463:Lib/ssc/src/ecatslv.c ****             if (result == 0)
 3170              		.loc 1 1463 22 is_stmt 0 view .LVU943
 3171 0272 FFF7FEFF 		bl	MBX_StartMailboxHandler
 3172              	.LVL242:
1464:Lib/ssc/src/ecatslv.c ****             {
 3173              		.loc 1 1464 13 is_stmt 1 view .LVU944
1464:Lib/ssc/src/ecatslv.c ****             {
 3174              		.loc 1 1464 16 is_stmt 0 view .LVU945
 3175 0276 8046     		mov	r8, r0
 3176 0278 68B1     		cbz	r0, .L287
 3177              	.L251:
 3178              	.LVL243:
1478:Lib/ssc/src/ecatslv.c ****             {
 3179              		.loc 1 1478 13 is_stmt 1 view .LVU946
1478:Lib/ssc/src/ecatslv.c ****             {
 3180              		.loc 1 1478 15 is_stmt 0 view .LVU947
 3181 027a B8F1000F 		cmp	r8, #0
 3182 027e 3FF433AF 		beq	.L250
1478:Lib/ssc/src/ecatslv.c ****             {
 3183              		.loc 1 1478 28 discriminator 1 view .LVU948
 3184 0282 B8F1FF0F 		cmp	r8, #255
 3185 0286 3FF42FAF 		beq	.L250
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3186              		.loc 1 1481 17 is_stmt 1 view .LVU949
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3187              		.loc 1 1481 20 is_stmt 0 view .LVU950
ARM GAS  /tmp/ccWTp91B.s 			page 128


 3188 028a 4F4B     		ldr	r3, .L303+8
 3189 028c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1481:Lib/ssc/src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3190              		.loc 1 1481 19 view .LVU951
 3191 028e 73B1     		cbz	r3, .L288
 3192              	.L252:
1484:Lib/ssc/src/ecatslv.c ****             }
 3193              		.loc 1 1484 18 is_stmt 1 view .LVU952
 3194 0290 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3195              	.LVL244:
 3196 0294 28E7     		b	.L250
 3197              	.LVL245:
 3198              	.L287:
1466:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
 3199              		.loc 1 1466 17 view .LVU953
1466:Lib/ssc/src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
 3200              		.loc 1 1466 33 is_stmt 0 view .LVU954
 3201 0296 4C4B     		ldr	r3, .L303+8
 3202 0298 0022     		movs	r2, #0
 3203 029a 1A70     		strb	r2, [r3]
1471:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
 3204              		.loc 1 1471 17 is_stmt 1 view .LVU955
1471:Lib/ssc/src/ecatslv.c ****                 if ( result == 0 )
 3205              		.loc 1 1471 26 is_stmt 0 view .LVU956
 3206 029c FFF7FEFF 		bl	APPL_StartMailboxHandler
 3207              	.LVL246:
1472:Lib/ssc/src/ecatslv.c ****                 {
 3208              		.loc 1 1472 17 is_stmt 1 view .LVU957
1472:Lib/ssc/src/ecatslv.c ****                 {
 3209              		.loc 1 1472 20 is_stmt 0 view .LVU958
 3210 02a0 8046     		mov	r8, r0
 3211 02a2 0028     		cmp	r0, #0
 3212 02a4 E9D1     		bne	.L251
1474:Lib/ssc/src/ecatslv.c ****                 }
 3213              		.loc 1 1474 21 is_stmt 1 view .LVU959
1474:Lib/ssc/src/ecatslv.c ****                 }
 3214              		.loc 1 1474 33 is_stmt 0 view .LVU960
 3215 02a6 494B     		ldr	r3, .L303+12
 3216 02a8 0122     		movs	r2, #1
 3217 02aa 1A70     		strb	r2, [r3]
 3218 02ac E5E7     		b	.L251
 3219              	.LVL247:
 3220              	.L288:
1482:Lib/ssc/src/ecatslv.c **** 
 3221              		.loc 1 1482 21 is_stmt 1 view .LVU961
 3222 02ae FFF7FEFF 		bl	APPL_StopMailboxHandler
 3223              	.LVL248:
 3224 02b2 EDE7     		b	.L252
 3225              	.LVL249:
 3226              	.L245:
1492:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
 3227              		.loc 1 1492 13 view .LVU962
1492:Lib/ssc/src/ecatslv.c ****             if ( result == 0 )
 3228              		.loc 1 1492 22 is_stmt 0 view .LVU963
 3229 02b4 FFF7FEFF 		bl	StartInputHandler
 3230              	.LVL250:
1493:Lib/ssc/src/ecatslv.c ****             {
ARM GAS  /tmp/ccWTp91B.s 			page 129


 3231              		.loc 1 1493 13 is_stmt 1 view .LVU964
1493:Lib/ssc/src/ecatslv.c ****             {
 3232              		.loc 1 1493 16 is_stmt 0 view .LVU965
 3233 02b8 8046     		mov	r8, r0
 3234 02ba 68B1     		cbz	r0, .L289
 3235              	.LVL251:
 3236              	.L253:
1510:Lib/ssc/src/ecatslv.c ****             {
 3237              		.loc 1 1510 13 is_stmt 1 view .LVU966
1510:Lib/ssc/src/ecatslv.c ****             {
 3238              		.loc 1 1510 15 is_stmt 0 view .LVU967
 3239 02bc B8F1000F 		cmp	r8, #0
 3240 02c0 3FF412AF 		beq	.L250
1510:Lib/ssc/src/ecatslv.c ****             {
 3241              		.loc 1 1510 28 discriminator 1 view .LVU968
 3242 02c4 B8F1FF0F 		cmp	r8, #255
 3243 02c8 3FF40EAF 		beq	.L250
1512:Lib/ssc/src/ecatslv.c ****                 {
 3244              		.loc 1 1512 17 is_stmt 1 view .LVU969
1512:Lib/ssc/src/ecatslv.c ****                 {
 3245              		.loc 1 1512 20 is_stmt 0 view .LVU970
 3246 02cc 3E4B     		ldr	r3, .L303+8
 3247 02ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1512:Lib/ssc/src/ecatslv.c ****                 {
 3248              		.loc 1 1512 19 view .LVU971
 3249 02d0 9BB1     		cbz	r3, .L290
 3250              	.L254:
1519:Lib/ssc/src/ecatslv.c ****             }
 3251              		.loc 1 1519 17 is_stmt 1 view .LVU972
 3252 02d2 FFF7FEFF 		bl	StopInputHandler
 3253              	.LVL252:
 3254 02d6 07E7     		b	.L250
 3255              	.LVL253:
 3256              	.L289:
1495:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
 3257              		.loc 1 1495 17 view .LVU973
1495:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
 3258              		.loc 1 1495 33 is_stmt 0 view .LVU974
 3259 02d8 3B4B     		ldr	r3, .L303+8
 3260 02da 0022     		movs	r2, #0
 3261 02dc 1A70     		strb	r2, [r3]
1496:Lib/ssc/src/ecatslv.c **** 
 3262              		.loc 1 1496 17 is_stmt 1 view .LVU975
1496:Lib/ssc/src/ecatslv.c **** 
 3263              		.loc 1 1496 26 is_stmt 0 view .LVU976
 3264 02de 3C48     		ldr	r0, .L303+16
 3265              	.LVL254:
1496:Lib/ssc/src/ecatslv.c **** 
 3266              		.loc 1 1496 26 view .LVU977
 3267 02e0 FFF7FEFF 		bl	APPL_StartInputHandler
 3268              	.LVL255:
1498:Lib/ssc/src/ecatslv.c ****                 {
 3269              		.loc 1 1498 17 is_stmt 1 view .LVU978
1498:Lib/ssc/src/ecatslv.c ****                 {
 3270              		.loc 1 1498 19 is_stmt 0 view .LVU979
 3271 02e4 8046     		mov	r8, r0
 3272 02e6 0028     		cmp	r0, #0
ARM GAS  /tmp/ccWTp91B.s 			page 130


 3273 02e8 E8D1     		bne	.L253
1502:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3274              		.loc 1 1502 21 is_stmt 1 view .LVU980
 3275 02ea 394B     		ldr	r3, .L303+16
 3276 02ec 1888     		ldrh	r0, [r3]
 3277              	.LVL256:
1502:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3278              		.loc 1 1502 21 is_stmt 0 view .LVU981
 3279 02ee FFF7FEFF 		bl	SetALEventMask
 3280              	.LVL257:
1505:Lib/ssc/src/ecatslv.c ****                 }
 3281              		.loc 1 1505 21 is_stmt 1 view .LVU982
1505:Lib/ssc/src/ecatslv.c ****                 }
 3282              		.loc 1 1505 45 is_stmt 0 view .LVU983
 3283 02f2 384B     		ldr	r3, .L303+20
 3284 02f4 0122     		movs	r2, #1
 3285 02f6 1A70     		strb	r2, [r3]
 3286 02f8 E0E7     		b	.L253
 3287              	.LVL258:
 3288              	.L290:
1516:Lib/ssc/src/ecatslv.c ****                 }
 3289              		.loc 1 1516 21 is_stmt 1 view .LVU984
 3290 02fa FFF7FEFF 		bl	APPL_StopInputHandler
 3291              	.LVL259:
 3292 02fe E8E7     		b	.L254
 3293              	.LVL260:
 3294              	.L241:
1525:Lib/ssc/src/ecatslv.c ****             if(result == 0)
 3295              		.loc 1 1525 13 view .LVU985
1525:Lib/ssc/src/ecatslv.c ****             if(result == 0)
 3296              		.loc 1 1525 22 is_stmt 0 view .LVU986
 3297 0300 FFF7FEFF 		bl	StartOutputHandler
 3298              	.LVL261:
1526:Lib/ssc/src/ecatslv.c ****             {
 3299              		.loc 1 1526 13 is_stmt 1 view .LVU987
1526:Lib/ssc/src/ecatslv.c ****             {
 3300              		.loc 1 1526 15 is_stmt 0 view .LVU988
 3301 0304 8046     		mov	r8, r0
 3302 0306 68B1     		cbz	r0, .L291
 3303              	.L255:
 3304              	.LVL262:
1539:Lib/ssc/src/ecatslv.c ****             {
 3305              		.loc 1 1539 13 is_stmt 1 view .LVU989
1539:Lib/ssc/src/ecatslv.c ****             {
 3306              		.loc 1 1539 16 is_stmt 0 view .LVU990
 3307 0308 B8F1000F 		cmp	r8, #0
 3308 030c 3FF4ECAE 		beq	.L250
1539:Lib/ssc/src/ecatslv.c ****             {
 3309              		.loc 1 1539 30 discriminator 1 view .LVU991
 3310 0310 B8F1FF0F 		cmp	r8, #255
 3311 0314 3FF4E8AE 		beq	.L250
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3312              		.loc 1 1541 17 is_stmt 1 view .LVU992
1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3313              		.loc 1 1541 20 is_stmt 0 view .LVU993
 3314 0318 2B4B     		ldr	r3, .L303+8
 3315 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccWTp91B.s 			page 131


1541:Lib/ssc/src/ecatslv.c ****                     APPL_StopOutputHandler();
 3316              		.loc 1 1541 19 view .LVU994
 3317 031c 73B1     		cbz	r3, .L292
 3318              	.L256:
1544:Lib/ssc/src/ecatslv.c ****             }
 3319              		.loc 1 1544 17 is_stmt 1 view .LVU995
 3320 031e FFF7FEFF 		bl	StopOutputHandler
 3321              	.LVL263:
 3322 0322 E1E6     		b	.L250
 3323              	.LVL264:
 3324              	.L291:
1528:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
 3325              		.loc 1 1528 17 view .LVU996
1528:Lib/ssc/src/ecatslv.c ****                 result = APPL_StartOutputHandler();
 3326              		.loc 1 1528 33 is_stmt 0 view .LVU997
 3327 0324 284B     		ldr	r3, .L303+8
 3328 0326 0022     		movs	r2, #0
 3329 0328 1A70     		strb	r2, [r3]
1529:Lib/ssc/src/ecatslv.c **** 
 3330              		.loc 1 1529 17 is_stmt 1 view .LVU998
1529:Lib/ssc/src/ecatslv.c **** 
 3331              		.loc 1 1529 26 is_stmt 0 view .LVU999
 3332 032a FFF7FEFF 		bl	APPL_StartOutputHandler
 3333              	.LVL265:
1531:Lib/ssc/src/ecatslv.c ****                 {
 3334              		.loc 1 1531 17 is_stmt 1 view .LVU1000
1531:Lib/ssc/src/ecatslv.c ****                 {
 3335              		.loc 1 1531 19 is_stmt 0 view .LVU1001
 3336 032e 8046     		mov	r8, r0
 3337 0330 0028     		cmp	r0, #0
 3338 0332 E9D1     		bne	.L255
1534:Lib/ssc/src/ecatslv.c ****                 }
 3339              		.loc 1 1534 21 is_stmt 1 view .LVU1002
1534:Lib/ssc/src/ecatslv.c ****                 }
 3340              		.loc 1 1534 46 is_stmt 0 view .LVU1003
 3341 0334 284B     		ldr	r3, .L303+24
 3342 0336 0122     		movs	r2, #1
 3343 0338 1A70     		strb	r2, [r3]
 3344 033a E5E7     		b	.L255
 3345              	.LVL266:
 3346              	.L292:
1542:Lib/ssc/src/ecatslv.c **** 
 3347              		.loc 1 1542 21 is_stmt 1 view .LVU1004
 3348 033c FFF7FEFF 		bl	APPL_StopOutputHandler
 3349              	.LVL267:
 3350 0340 EDE7     		b	.L256
 3351              	.LVL268:
 3352              	.L237:
1551:Lib/ssc/src/ecatslv.c **** 
 3353              		.loc 1 1551 13 view .LVU1005
 3354 0342 FFF7FEFF 		bl	APPL_StopOutputHandler
 3355              	.LVL269:
1553:Lib/ssc/src/ecatslv.c **** 
 3356              		.loc 1 1553 13 view .LVU1006
 3357 0346 FFF7FEFF 		bl	StopOutputHandler
 3358              	.LVL270:
1555:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 132


 3359              		.loc 1 1555 13 view .LVU1007
1555:Lib/ssc/src/ecatslv.c **** 
 3360              		.loc 1 1555 29 is_stmt 0 view .LVU1008
 3361 034a 1F4B     		ldr	r3, .L303+8
 3362 034c 0022     		movs	r2, #0
 3363 034e 1A70     		strb	r2, [r3]
1557:Lib/ssc/src/ecatslv.c **** 
 3364              		.loc 1 1557 13 is_stmt 1 view .LVU1009
 3365 0350 CAE6     		b	.L250
 3366              	.L239:
1561:Lib/ssc/src/ecatslv.c **** 
 3367              		.loc 1 1561 13 view .LVU1010
1561:Lib/ssc/src/ecatslv.c **** 
 3368              		.loc 1 1561 22 is_stmt 0 view .LVU1011
 3369 0352 FFF7FEFF 		bl	APPL_StopOutputHandler
 3370              	.LVL271:
 3371 0356 8046     		mov	r8, r0
 3372              	.LVL272:
1563:Lib/ssc/src/ecatslv.c **** 
 3373              		.loc 1 1563 13 is_stmt 1 view .LVU1012
 3374 0358 FFF7FEFF 		bl	StopOutputHandler
 3375              	.LVL273:
1565:Lib/ssc/src/ecatslv.c **** 
 3376              		.loc 1 1565 13 view .LVU1013
1565:Lib/ssc/src/ecatslv.c **** 
 3377              		.loc 1 1565 29 is_stmt 0 view .LVU1014
 3378 035c 1A4B     		ldr	r3, .L303+8
 3379 035e 0022     		movs	r2, #0
 3380 0360 1A70     		strb	r2, [r3]
1567:Lib/ssc/src/ecatslv.c ****                 break;
 3381              		.loc 1 1567 13 is_stmt 1 view .LVU1015
1567:Lib/ssc/src/ecatslv.c ****                 break;
 3382              		.loc 1 1567 16 is_stmt 0 view .LVU1016
 3383 0362 B8F1000F 		cmp	r8, #0
 3384 0366 7FF4BFAE 		bne	.L250
 3385              	.LVL274:
1570:Lib/ssc/src/ecatslv.c **** 
 3386              		.loc 1 1570 24 view .LVU1017
 3387 036a 4224     		movs	r4, #66
 3388              	.LVL275:
 3389              	.L242:
1574:Lib/ssc/src/ecatslv.c ****            
 3390              		.loc 1 1574 13 is_stmt 1 view .LVU1018
 3391 036c FFF7FEFF 		bl	APPL_StopInputHandler
 3392              	.LVL276:
1576:Lib/ssc/src/ecatslv.c **** 
 3393              		.loc 1 1576 13 view .LVU1019
 3394 0370 FFF7FEFF 		bl	StopInputHandler
 3395              	.LVL277:
1578:Lib/ssc/src/ecatslv.c **** 
 3396              		.loc 1 1578 13 view .LVU1020
1578:Lib/ssc/src/ecatslv.c **** 
 3397              		.loc 1 1578 29 is_stmt 0 view .LVU1021
 3398 0374 144B     		ldr	r3, .L303+8
 3399 0376 0022     		movs	r2, #0
 3400 0378 1A70     		strb	r2, [r3]
1580:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 133


 3401              		.loc 1 1580 13 is_stmt 1 view .LVU1022
 3402 037a B5E6     		b	.L250
 3403              	.LVL278:
 3404              	.L240:
1584:Lib/ssc/src/ecatslv.c **** 
 3405              		.loc 1 1584 13 view .LVU1023
1584:Lib/ssc/src/ecatslv.c **** 
 3406              		.loc 1 1584 22 is_stmt 0 view .LVU1024
 3407 037c FFF7FEFF 		bl	APPL_StopOutputHandler
 3408              	.LVL279:
 3409 0380 8046     		mov	r8, r0
 3410              	.LVL280:
1586:Lib/ssc/src/ecatslv.c **** 
 3411              		.loc 1 1586 13 is_stmt 1 view .LVU1025
 3412 0382 FFF7FEFF 		bl	StopOutputHandler
 3413              	.LVL281:
1588:Lib/ssc/src/ecatslv.c **** 
 3414              		.loc 1 1588 13 view .LVU1026
1588:Lib/ssc/src/ecatslv.c **** 
 3415              		.loc 1 1588 29 is_stmt 0 view .LVU1027
 3416 0386 104B     		ldr	r3, .L303+8
 3417 0388 0022     		movs	r2, #0
 3418 038a 1A70     		strb	r2, [r3]
1590:Lib/ssc/src/ecatslv.c ****                 break;
 3419              		.loc 1 1590 13 is_stmt 1 view .LVU1028
1590:Lib/ssc/src/ecatslv.c ****                 break;
 3420              		.loc 1 1590 16 is_stmt 0 view .LVU1029
 3421 038c B8F1000F 		cmp	r8, #0
 3422 0390 7FF4AAAE 		bne	.L250
 3423              	.LVL282:
1593:Lib/ssc/src/ecatslv.c **** 
 3424              		.loc 1 1593 24 view .LVU1030
 3425 0394 4124     		movs	r4, #65
 3426              	.LVL283:
 3427              	.L243:
1597:Lib/ssc/src/ecatslv.c ****             
 3428              		.loc 1 1597 13 is_stmt 1 view .LVU1031
1597:Lib/ssc/src/ecatslv.c ****             
 3429              		.loc 1 1597 22 is_stmt 0 view .LVU1032
 3430 0396 FFF7FEFF 		bl	APPL_StopInputHandler
 3431              	.LVL284:
 3432 039a 8046     		mov	r8, r0
 3433              	.LVL285:
1599:Lib/ssc/src/ecatslv.c **** 
 3434              		.loc 1 1599 13 is_stmt 1 view .LVU1033
 3435 039c FFF7FEFF 		bl	StopInputHandler
 3436              	.LVL286:
1601:Lib/ssc/src/ecatslv.c **** 
 3437              		.loc 1 1601 13 view .LVU1034
1601:Lib/ssc/src/ecatslv.c **** 
 3438              		.loc 1 1601 29 is_stmt 0 view .LVU1035
 3439 03a0 094B     		ldr	r3, .L303+8
 3440 03a2 0022     		movs	r2, #0
 3441 03a4 1A70     		strb	r2, [r3]
1603:Lib/ssc/src/ecatslv.c ****                 break;
 3442              		.loc 1 1603 13 is_stmt 1 view .LVU1036
1603:Lib/ssc/src/ecatslv.c ****                 break;
ARM GAS  /tmp/ccWTp91B.s 			page 134


 3443              		.loc 1 1603 16 is_stmt 0 view .LVU1037
 3444 03a6 B8F1000F 		cmp	r8, #0
 3445 03aa 7FF49DAE 		bne	.L250
 3446              	.LVL287:
1605:Lib/ssc/src/ecatslv.c **** 
 3447              		.loc 1 1605 24 view .LVU1038
 3448 03ae 2124     		movs	r4, #33
 3449              	.LVL288:
 3450              	.L246:
1608:Lib/ssc/src/ecatslv.c ****             result = APPL_StopMailboxHandler();
 3451              		.loc 1 1608 13 is_stmt 1 view .LVU1039
 3452 03b0 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3453              	.LVL289:
1609:Lib/ssc/src/ecatslv.c **** 
 3454              		.loc 1 1609 13 view .LVU1040
1609:Lib/ssc/src/ecatslv.c **** 
 3455              		.loc 1 1609 22 is_stmt 0 view .LVU1041
 3456 03b4 FFF7FEFF 		bl	APPL_StopMailboxHandler
 3457              	.LVL290:
 3458 03b8 8046     		mov	r8, r0
 3459              	.LVL291:
1611:Lib/ssc/src/ecatslv.c ****             break;
 3460              		.loc 1 1611 13 is_stmt 1 view .LVU1042
 3461 03ba FFF7FEFF 		bl	BackToInitTransition
 3462              	.LVL292:
1612:Lib/ssc/src/ecatslv.c **** 
 3463              		.loc 1 1612 13 view .LVU1043
 3464 03be 93E6     		b	.L250
 3465              	.L304:
 3466              		.align	2
 3467              	.L303:
 3468 03c0 00000000 		.word	.LANCHOR35
 3469 03c4 00000000 		.word	.LANCHOR0
 3470 03c8 00000000 		.word	.LANCHOR34
 3471 03cc 00000000 		.word	bMbxRunning
 3472 03d0 00000000 		.word	.LANCHOR12
 3473 03d4 00000000 		.word	.LANCHOR32
 3474 03d8 00000000 		.word	.LANCHOR31
 3475              	.LVL293:
 3476              	.L249:
1615:Lib/ssc/src/ecatslv.c ****         case PREOP_2_PREOP:
 3477              		.loc 1 1615 13 view .LVU1044
 3478 03dc FFF7FEFF 		bl	BackToInitTransition
 3479              	.LVL294:
 3480              	.L235:
1619:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
 3481              		.loc 1 1619 13 view .LVU1045
1619:Lib/ssc/src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
 3482              		.loc 1 1619 15 is_stmt 0 view .LVU1046
 3483 03e0 8FB9     		cbnz	r7, .L293
 3484              	.L257:
1622:Lib/ssc/src/ecatslv.c ****             {
 3485              		.loc 1 1622 13 is_stmt 1 view .LVU1047
1622:Lib/ssc/src/ecatslv.c ****             {
 3486              		.loc 1 1622 16 is_stmt 0 view .LVU1048
 3487 03e2 504B     		ldr	r3, .L305
 3488 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccWTp91B.s 			page 135


1622:Lib/ssc/src/ecatslv.c ****             {
 3489              		.loc 1 1622 15 view .LVU1049
 3490 03e6 002B     		cmp	r3, #0
 3491 03e8 77D1     		bne	.L281
1625:Lib/ssc/src/ecatslv.c ****                 {
 3492              		.loc 1 1625 17 is_stmt 1 view .LVU1050
1625:Lib/ssc/src/ecatslv.c ****                 {
 3493              		.loc 1 1625 32 is_stmt 0 view .LVU1051
 3494 03ea 4F4B     		ldr	r3, .L305+4
 3495 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1625:Lib/ssc/src/ecatslv.c ****                 {
 3496              		.loc 1 1625 20 view .LVU1052
 3497 03ee 13F00C0F 		tst	r3, #12
 3498 03f2 75D0     		beq	.L282
1627:Lib/ssc/src/ecatslv.c ****                     {
 3499              		.loc 1 1627 21 is_stmt 1 view .LVU1053
1627:Lib/ssc/src/ecatslv.c ****                     {
 3500              		.loc 1 1627 38 is_stmt 0 view .LVU1054
 3501 03f4 4D4B     		ldr	r3, .L305+8
 3502 03f6 1B88     		ldrh	r3, [r3]
1627:Lib/ssc/src/ecatslv.c ****                     {
 3503              		.loc 1 1627 23 view .LVU1055
 3504 03f8 4BB9     		cbnz	r3, .L294
1634:Lib/ssc/src/ecatslv.c ****                     {
 3505              		.loc 1 1634 21 is_stmt 1 view .LVU1056
1634:Lib/ssc/src/ecatslv.c ****                     {
 3506              		.loc 1 1634 37 is_stmt 0 view .LVU1057
 3507 03fa 4D4B     		ldr	r3, .L305+12
 3508 03fc 1B88     		ldrh	r3, [r3]
1634:Lib/ssc/src/ecatslv.c ****                     {
 3509              		.loc 1 1634 23 view .LVU1058
 3510 03fe 63B9     		cbnz	r3, .L295
1642:Lib/ssc/src/ecatslv.c ****             break;
 3511              		.loc 1 1642 20 view .LVU1059
 3512 0400 4FF0FE08 		mov	r8, #254
 3513 0404 39E0     		b	.L247
 3514              	.L293:
1620:Lib/ssc/src/ecatslv.c **** 
 3515              		.loc 1 1620 17 is_stmt 1 view .LVU1060
 3516 0406 2046     		mov	r0, r4
 3517 0408 FFF7FEFF 		bl	APPL_AckErrorInd
 3518              	.LVL295:
 3519 040c E9E7     		b	.L257
 3520              	.L294:
1630:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3521              		.loc 1 1630 25 view .LVU1061
 3522 040e 0220     		movs	r0, #2
 3523 0410 FFF7FEFF 		bl	EnableSyncManChannel
 3524              	.LVL296:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3525              		.loc 1 1642 20 is_stmt 0 view .LVU1062
 3526 0414 4FF0FE08 		mov	r8, #254
 3527 0418 2FE0     		b	.L247
 3528              	.L295:
1637:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3529              		.loc 1 1637 25 is_stmt 1 view .LVU1063
 3530 041a 0320     		movs	r0, #3
ARM GAS  /tmp/ccWTp91B.s 			page 136


 3531 041c FFF7FEFF 		bl	EnableSyncManChannel
 3532              	.LVL297:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3533              		.loc 1 1642 20 is_stmt 0 view .LVU1064
 3534 0420 4FF0FE08 		mov	r8, #254
 3535 0424 29E0     		b	.L247
 3536              	.L238:
1654:Lib/ssc/src/ecatslv.c ****             break;
 3537              		.loc 1 1654 20 view .LVU1065
 3538 0426 4FF01108 		mov	r8, #17
 3539 042a 26E0     		b	.L247
 3540              	.LVL298:
 3541              	.L260:
1670:Lib/ssc/src/ecatslv.c ****             StopOutputHandler();
 3542              		.loc 1 1670 13 is_stmt 1 view .LVU1066
 3543 042c FFF7FEFF 		bl	APPL_StopOutputHandler
 3544              	.LVL299:
1671:Lib/ssc/src/ecatslv.c ****         case STATE_SAFEOP:
 3545              		.loc 1 1671 13 view .LVU1067
 3546 0430 FFF7FEFF 		bl	StopOutputHandler
 3547              	.LVL300:
 3548              	.L259:
1674:Lib/ssc/src/ecatslv.c **** 
 3549              		.loc 1 1674 13 view .LVU1068
 3550 0434 FFF7FEFF 		bl	APPL_StopInputHandler
 3551              	.LVL301:
1676:Lib/ssc/src/ecatslv.c **** 
 3552              		.loc 1 1676 13 view .LVU1069
 3553 0438 FFF7FEFF 		bl	StopInputHandler
 3554              	.LVL302:
 3555              	.L261:
1680:Lib/ssc/src/ecatslv.c ****             {
 3556              		.loc 1 1680 13 view .LVU1070
1680:Lib/ssc/src/ecatslv.c ****             {
 3557              		.loc 1 1680 16 is_stmt 0 view .LVU1071
 3558 043c B8F1160F 		cmp	r8, #22
 3559 0440 03D0     		beq	.L296
1689:Lib/ssc/src/ecatslv.c ****         }
 3560              		.loc 1 1689 17 is_stmt 1 view .LVU1072
1689:Lib/ssc/src/ecatslv.c ****         }
 3561              		.loc 1 1689 27 is_stmt 0 view .LVU1073
 3562 0442 394B     		ldr	r3, .L305+4
 3563 0444 0222     		movs	r2, #2
 3564 0446 1A70     		strb	r2, [r3]
 3565 0448 4EE6     		b	.L250
 3566              	.L296:
1683:Lib/ssc/src/ecatslv.c ****                 APPL_StopMailboxHandler();
 3567              		.loc 1 1683 17 is_stmt 1 view .LVU1074
 3568 044a FFF7FEFF 		bl	MBX_StopMailboxHandler
 3569              	.LVL303:
1684:Lib/ssc/src/ecatslv.c **** 
 3570              		.loc 1 1684 17 view .LVU1075
 3571 044e FFF7FEFF 		bl	APPL_StopMailboxHandler
 3572              	.LVL304:
1686:Lib/ssc/src/ecatslv.c ****             }
 3573              		.loc 1 1686 17 view .LVU1076
1686:Lib/ssc/src/ecatslv.c ****             }
ARM GAS  /tmp/ccWTp91B.s 			page 137


 3574              		.loc 1 1686 27 is_stmt 0 view .LVU1077
 3575 0452 354B     		ldr	r3, .L305+4
 3576 0454 0122     		movs	r2, #1
 3577 0456 1A70     		strb	r2, [r3]
 3578 0458 46E6     		b	.L250
 3579              	.LVL305:
 3580              	.L280:
1455:Lib/ssc/src/ecatslv.c ****             }
 3581              		.loc 1 1455 24 view .LVU1078
 3582 045a 4FF05108 		mov	r8, #81
 3583 045e 43E6     		b	.L250
 3584              	.LVL306:
 3585              	.L264:
1702:Lib/ssc/src/ecatslv.c ****         {
 3586              		.loc 1 1702 9 view .LVU1079
 3587 0460 482C     		cmp	r4, #72
 3588 0462 03D0     		beq	.L263
 3589              	.L265:
1713:Lib/ssc/src/ecatslv.c ****                 break;
 3590              		.loc 1 1713 17 is_stmt 1 view .LVU1080
1713:Lib/ssc/src/ecatslv.c ****                 break;
 3591              		.loc 1 1713 35 is_stmt 0 view .LVU1081
 3592 0464 334B     		ldr	r3, .L305+16
 3593 0466 C822     		movs	r2, #200
 3594 0468 1A80     		strh	r2, [r3]	@ movhi
1714:Lib/ssc/src/ecatslv.c ****         }
 3595              		.loc 1 1714 17 is_stmt 1 view .LVU1082
 3596 046a 55E6     		b	.L267
 3597              	.L263:
1710:Lib/ssc/src/ecatslv.c ****                 break;
 3598              		.loc 1 1710 17 view .LVU1083
1710:Lib/ssc/src/ecatslv.c ****                 break;
 3599              		.loc 1 1710 35 is_stmt 0 view .LVU1084
 3600 046c 314B     		ldr	r3, .L305+16
 3601 046e 42F22832 		movw	r2, #9000
 3602 0472 1A80     		strh	r2, [r3]	@ movhi
1711:Lib/ssc/src/ecatslv.c ****            default:
 3603              		.loc 1 1711 17 is_stmt 1 view .LVU1085
 3604 0474 50E6     		b	.L267
 3605              	.LVL307:
 3606              	.L234:
1436:Lib/ssc/src/ecatslv.c ****         {
 3607              		.loc 1 1436 9 is_stmt 0 view .LVU1086
 3608 0476 4FF01208 		mov	r8, #18
 3609              	.LVL308:
 3610              	.L247:
1717:Lib/ssc/src/ecatslv.c **** 
1718:Lib/ssc/src/ecatslv.c ****     }
1719:Lib/ssc/src/ecatslv.c ****     else if ( alControl != (nAlStatus & STATE_MASK) )
 3611              		.loc 1 1719 10 is_stmt 1 view .LVU1087
 3612              		.loc 1 1719 39 is_stmt 0 view .LVU1088
 3613 047a 2B4B     		ldr	r3, .L305+4
 3614 047c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3615              		.loc 1 1719 13 view .LVU1089
 3616 047e 00F00F03 		and	r3, r0, #15
 3617 0482 9D42     		cmp	r5, r3
 3618 0484 47D0     		beq	.L268
ARM GAS  /tmp/ccWTp91B.s 			page 138


1720:Lib/ssc/src/ecatslv.c ****     {
1721:Lib/ssc/src/ecatslv.c ****         /* The slave state has changed */
1722:Lib/ssc/src/ecatslv.c **** 
1723:Lib/ssc/src/ecatslv.c ****         if ( (result != 0 || alStatusCode != 0) && ((alControl | nAlStatus) & STATE_OP) )
 3619              		.loc 1 1723 9 is_stmt 1 view .LVU1090
 3620              		.loc 1 1723 12 is_stmt 0 view .LVU1091
 3621 0486 B8F1000F 		cmp	r8, #0
 3622 048a 00D1     		bne	.L269
 3623              		.loc 1 1723 27 discriminator 2 view .LVU1092
 3624 048c 66B1     		cbz	r6, .L270
 3625              	.L269:
 3626              		.loc 1 1723 77 discriminator 3 view .LVU1093
 3627 048e 2843     		orrs	r0, r0, r5
 3628              		.loc 1 1723 49 discriminator 3 view .LVU1094
 3629 0490 10F0080F 		tst	r0, #8
 3630 0494 08D0     		beq	.L270
1724:Lib/ssc/src/ecatslv.c ****         {
1725:Lib/ssc/src/ecatslv.c ****             /* the local application requested to leave the state OP so we have to disable the SM2
1726:Lib/ssc/src/ecatslv.c ****                and make the state change from OP to SAFEOP by calling StopOutputHandler */
1727:Lib/ssc/src/ecatslv.c **** 
1728:Lib/ssc/src/ecatslv.c ****             //only execute StopOutputHandler() if Output update is still running
1729:Lib/ssc/src/ecatslv.c ****             if(bEcatOutputUpdateRunning)
 3631              		.loc 1 1729 13 is_stmt 1 view .LVU1095
 3632              		.loc 1 1729 16 is_stmt 0 view .LVU1096
 3633 0496 284B     		ldr	r3, .L305+20
 3634 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3635              		.loc 1 1729 15 view .LVU1097
 3636 049a 23BB     		cbnz	r3, .L297
 3637              	.L271:
1730:Lib/ssc/src/ecatslv.c ****             {
1731:Lib/ssc/src/ecatslv.c ****                 APPL_StopOutputHandler();
1732:Lib/ssc/src/ecatslv.c **** 
1733:Lib/ssc/src/ecatslv.c ****                 StopOutputHandler();
1734:Lib/ssc/src/ecatslv.c ****             }
1735:Lib/ssc/src/ecatslv.c **** 
1736:Lib/ssc/src/ecatslv.c ****             if(nPdOutputSize > 0)
 3638              		.loc 1 1736 13 is_stmt 1 view .LVU1098
 3639              		.loc 1 1736 30 is_stmt 0 view .LVU1099
 3640 049c 234B     		ldr	r3, .L305+8
 3641 049e 1B88     		ldrh	r3, [r3]
 3642              		.loc 1 1736 15 view .LVU1100
 3643 04a0 33BB     		cbnz	r3, .L298
1737:Lib/ssc/src/ecatslv.c ****             {
1738:Lib/ssc/src/ecatslv.c ****                 /* disable the Sync Manager Channel 2 (outputs) */
1739:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1740:Lib/ssc/src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_OUT);
1741:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1742:Lib/ssc/src/ecatslv.c ****             }
1743:Lib/ssc/src/ecatslv.c ****             else
1744:Lib/ssc/src/ecatslv.c ****                 if(nPdInputSize > 0)
 3644              		.loc 1 1744 17 is_stmt 1 view .LVU1101
 3645              		.loc 1 1744 33 is_stmt 0 view .LVU1102
 3646 04a2 234B     		ldr	r3, .L305+12
 3647 04a4 1B88     		ldrh	r3, [r3]
 3648              		.loc 1 1744 19 view .LVU1103
 3649 04a6 3BBB     		cbnz	r3, .L299
 3650              	.L270:
ARM GAS  /tmp/ccWTp91B.s 			page 139


1745:Lib/ssc/src/ecatslv.c ****             {
1746:Lib/ssc/src/ecatslv.c ****                 /*disable Sync Manager 3 (inputs) if no outputs available*/
1747:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1748:Lib/ssc/src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_IN);
1749:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1750:Lib/ssc/src/ecatslv.c ****             }
1751:Lib/ssc/src/ecatslv.c **** 
1752:Lib/ssc/src/ecatslv.c ****         }
1753:Lib/ssc/src/ecatslv.c ****         if ( result != 0 )
 3651              		.loc 1 1753 9 is_stmt 1 view .LVU1104
 3652              		.loc 1 1753 12 is_stmt 0 view .LVU1105
 3653 04a8 B8F1000F 		cmp	r8, #0
 3654 04ac 2CD0     		beq	.L273
1754:Lib/ssc/src/ecatslv.c ****         {
1755:Lib/ssc/src/ecatslv.c ****             if ( nAlStatus == STATE_OP )
 3655              		.loc 1 1755 13 is_stmt 1 view .LVU1106
 3656              		.loc 1 1755 28 is_stmt 0 view .LVU1107
 3657 04ae 1E4B     		ldr	r3, .L305+4
 3658 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3659              		.loc 1 1755 16 view .LVU1108
 3660 04b2 082B     		cmp	r3, #8
 3661 04b4 24D0     		beq	.L300
 3662              	.L274:
1756:Lib/ssc/src/ecatslv.c ****                 nAlStatus = STATE_SAFEOP;
1757:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
1758:Lib/ssc/src/ecatslv.c ****                reset in case of a coming successful state transition */
1759:Lib/ssc/src/ecatslv.c ****             nAlStatus |= STATE_CHANGE;
 3663              		.loc 1 1759 13 is_stmt 1 view .LVU1109
 3664              		.loc 1 1759 23 is_stmt 0 view .LVU1110
 3665 04b6 1C4A     		ldr	r2, .L305+4
 3666 04b8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3667 04ba 43F01003 		orr	r3, r3, #16
 3668 04be 1370     		strb	r3, [r2]
 3669              	.L275:
 3670              	.LVL309:
1760:Lib/ssc/src/ecatslv.c ****         }
1761:Lib/ssc/src/ecatslv.c ****         else
1762:Lib/ssc/src/ecatslv.c ****         {
1763:Lib/ssc/src/ecatslv.c ****             /* state transition was successful */
1764:Lib/ssc/src/ecatslv.c ****             if ( alStatusCode != 0 )
1765:Lib/ssc/src/ecatslv.c ****             {
1766:Lib/ssc/src/ecatslv.c ****                 /* state change request from the user */
1767:Lib/ssc/src/ecatslv.c ****                 result = alStatusCode;
1768:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
1769:Lib/ssc/src/ecatslv.c ****             }
1770:Lib/ssc/src/ecatslv.c ****             /* acknowledge the new state */
1771:Lib/ssc/src/ecatslv.c ****             nAlStatus = alControl;
1772:Lib/ssc/src/ecatslv.c ****         }
1773:Lib/ssc/src/ecatslv.c **** 
1774:Lib/ssc/src/ecatslv.c ****         bEcatWaitForAlControlRes = FALSE;
 3671              		.loc 1 1774 9 is_stmt 1 view .LVU1111
 3672              		.loc 1 1774 34 is_stmt 0 view .LVU1112
 3673 04c0 1E4B     		ldr	r3, .L305+24
 3674 04c2 0022     		movs	r2, #0
 3675 04c4 1A70     		strb	r2, [r3]
1775:Lib/ssc/src/ecatslv.c **** 
1776:Lib/ssc/src/ecatslv.c ****         /* write the AL Status register */
ARM GAS  /tmp/ccWTp91B.s 			page 140


1777:Lib/ssc/src/ecatslv.c ****         SetALStatus(nAlStatus, result);
 3676              		.loc 1 1777 9 is_stmt 1 view .LVU1113
 3677 04c6 4146     		mov	r1, r8
 3678 04c8 174B     		ldr	r3, .L305+4
 3679 04ca 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3680 04cc FFF7FEFF 		bl	SetALStatus
 3681              	.LVL310:
 3682              	.L220:
1778:Lib/ssc/src/ecatslv.c ****     }
1779:Lib/ssc/src/ecatslv.c ****     else
1780:Lib/ssc/src/ecatslv.c ****     {
1781:Lib/ssc/src/ecatslv.c ****         /* Error acknowledgement without a state transition */
1782:Lib/ssc/src/ecatslv.c **** 
1783:Lib/ssc/src/ecatslv.c ****          bEcatWaitForAlControlRes = FALSE;
1784:Lib/ssc/src/ecatslv.c **** 
1785:Lib/ssc/src/ecatslv.c ****         /* AL-Status has to be updated and AL-Status-Code has to be reset
1786:Lib/ssc/src/ecatslv.c ****            if the the error bit was acknowledged */
1787:Lib/ssc/src/ecatslv.c ****         SetALStatus(nAlStatus, 0);
1788:Lib/ssc/src/ecatslv.c ****     }
1789:Lib/ssc/src/ecatslv.c **** 
1790:Lib/ssc/src/ecatslv.c **** }
 3683              		.loc 1 1790 1 is_stmt 0 view .LVU1114
 3684 04d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3685              	.LVL311:
 3686              	.L279:
1439:Lib/ssc/src/ecatslv.c ****             break;
 3687              		.loc 1 1439 20 view .LVU1115
 3688 04d4 4FF01308 		mov	r8, #19
 3689 04d8 CFE7     		b	.L247
 3690              	.L281:
1642:Lib/ssc/src/ecatslv.c ****             break;
 3691              		.loc 1 1642 20 view .LVU1116
 3692 04da 4FF0FE08 		mov	r8, #254
 3693 04de CCE7     		b	.L247
 3694              	.L282:
 3695 04e0 4FF0FE08 		mov	r8, #254
 3696 04e4 C9E7     		b	.L247
 3697              	.LVL312:
 3698              	.L297:
1731:Lib/ssc/src/ecatslv.c **** 
 3699              		.loc 1 1731 17 is_stmt 1 view .LVU1117
 3700 04e6 FFF7FEFF 		bl	APPL_StopOutputHandler
 3701              	.LVL313:
1733:Lib/ssc/src/ecatslv.c ****             }
 3702              		.loc 1 1733 17 view .LVU1118
 3703 04ea FFF7FEFF 		bl	StopOutputHandler
 3704              	.LVL314:
 3705 04ee D5E7     		b	.L271
 3706              	.L298:
1740:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 3707              		.loc 1 1740 17 view .LVU1119
 3708 04f0 0220     		movs	r0, #2
 3709 04f2 FFF7FEFF 		bl	DisableSyncManChannel
 3710              	.LVL315:
 3711 04f6 D7E7     		b	.L270
 3712              	.L299:
1748:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
ARM GAS  /tmp/ccWTp91B.s 			page 141


 3713              		.loc 1 1748 17 view .LVU1120
 3714 04f8 0320     		movs	r0, #3
 3715 04fa FFF7FEFF 		bl	DisableSyncManChannel
 3716              	.LVL316:
 3717 04fe D3E7     		b	.L270
 3718              	.L300:
1756:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
 3719              		.loc 1 1756 17 view .LVU1121
1756:Lib/ssc/src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
 3720              		.loc 1 1756 27 is_stmt 0 view .LVU1122
 3721 0500 094B     		ldr	r3, .L305+4
 3722 0502 0422     		movs	r2, #4
 3723 0504 1A70     		strb	r2, [r3]
 3724 0506 D6E7     		b	.L274
 3725              	.L273:
1764:Lib/ssc/src/ecatslv.c ****             {
 3726              		.loc 1 1764 13 is_stmt 1 view .LVU1123
1764:Lib/ssc/src/ecatslv.c ****             {
 3727              		.loc 1 1764 16 is_stmt 0 view .LVU1124
 3728 0508 16B1     		cbz	r6, .L276
1767:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
 3729              		.loc 1 1767 17 is_stmt 1 view .LVU1125
 3730              	.LVL317:
1768:Lib/ssc/src/ecatslv.c ****             }
 3731              		.loc 1 1768 17 view .LVU1126
1768:Lib/ssc/src/ecatslv.c ****             }
 3732              		.loc 1 1768 27 is_stmt 0 view .LVU1127
 3733 050a 45F01005 		orr	r5, r5, #16
 3734              	.LVL318:
1767:Lib/ssc/src/ecatslv.c ****                 alControl |= STATE_CHANGE;
 3735              		.loc 1 1767 24 view .LVU1128
 3736 050e B046     		mov	r8, r6
 3737              	.LVL319:
 3738              	.L276:
1771:Lib/ssc/src/ecatslv.c ****         }
 3739              		.loc 1 1771 13 is_stmt 1 view .LVU1129
1771:Lib/ssc/src/ecatslv.c ****         }
 3740              		.loc 1 1771 23 is_stmt 0 view .LVU1130
 3741 0510 054B     		ldr	r3, .L305+4
 3742 0512 1D70     		strb	r5, [r3]
 3743 0514 D4E7     		b	.L275
 3744              	.LVL320:
 3745              	.L268:
1783:Lib/ssc/src/ecatslv.c **** 
 3746              		.loc 1 1783 10 is_stmt 1 view .LVU1131
1783:Lib/ssc/src/ecatslv.c **** 
 3747              		.loc 1 1783 35 is_stmt 0 view .LVU1132
 3748 0516 0021     		movs	r1, #0
 3749 0518 084B     		ldr	r3, .L305+24
 3750 051a 1970     		strb	r1, [r3]
1787:Lib/ssc/src/ecatslv.c ****     }
 3751              		.loc 1 1787 9 is_stmt 1 view .LVU1133
 3752 051c FFF7FEFF 		bl	SetALStatus
 3753              	.LVL321:
 3754 0520 D6E7     		b	.L220
 3755              	.L306:
 3756 0522 00BF     		.align	2
ARM GAS  /tmp/ccWTp91B.s 			page 142


 3757              	.L305:
 3758 0524 00000000 		.word	.LANCHOR28
 3759 0528 00000000 		.word	.LANCHOR5
 3760 052c 00000000 		.word	.LANCHOR7
 3761 0530 00000000 		.word	.LANCHOR4
 3762 0534 00000000 		.word	.LANCHOR33
 3763 0538 00000000 		.word	.LANCHOR31
 3764 053c 00000000 		.word	.LANCHOR36
 3765              		.cfi_endproc
 3766              	.LFE147:
 3768              		.section	.text.AL_ControlRes,"ax",%progbits
 3769              		.align	1
 3770              		.global	AL_ControlRes
 3771              		.syntax unified
 3772              		.thumb
 3773              		.thumb_func
 3775              	AL_ControlRes:
 3776              	.LFB148:
1791:Lib/ssc/src/ecatslv.c **** 
1792:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1793:Lib/ssc/src/ecatslv.c **** /**
1794:Lib/ssc/src/ecatslv.c **** 
1795:Lib/ssc/src/ecatslv.c ****  \brief    This function is called cyclic if a state transition is pending (bEcatWaitForAlControlRe
1796:Lib/ssc/src/ecatslv.c ****  \brief    If the ESM timeout is expired the state transition will be rejected. Otherwise the appli
1797:Lib/ssc/src/ecatslv.c ****  \brief    If the pending state transition is triggered by the application the transition need to b
1798:Lib/ssc/src/ecatslv.c ****   *////////////////////////////////////////////////////////////////////////////////////////
1799:Lib/ssc/src/ecatslv.c **** void AL_ControlRes(void)
1800:Lib/ssc/src/ecatslv.c **** {
 3777              		.loc 1 1800 1 view -0
 3778              		.cfi_startproc
 3779              		@ args = 0, pretend = 0, frame = 0
 3780              		@ frame_needed = 0, uses_anonymous_args = 0
 3781 0000 38B5     		push	{r3, r4, r5, lr}
 3782              		.cfi_def_cfa_offset 16
 3783              		.cfi_offset 3, -16
 3784              		.cfi_offset 4, -12
 3785              		.cfi_offset 5, -8
 3786              		.cfi_offset 14, -4
1801:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 3787              		.loc 1 1801 5 view .LVU1135
 3788              		.loc 1 1801 8 is_stmt 0 view .LVU1136
 3789 0002 784B     		ldr	r3, .L347
 3790 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3791              		.loc 1 1801 7 view .LVU1137
 3792 0006 002B     		cmp	r3, #0
 3793 0008 3BD0     		beq	.L307
 3794              	.LBB45:
1802:Lib/ssc/src/ecatslv.c ****     {
1803:Lib/ssc/src/ecatslv.c ****         UINT16 result = 0;
 3795              		.loc 1 1803 9 is_stmt 1 view .LVU1138
 3796              	.LVL322:
1804:Lib/ssc/src/ecatslv.c ****         UINT8 Status = 0;
 3797              		.loc 1 1804 9 view .LVU1139
1805:Lib/ssc/src/ecatslv.c ****         UINT16 StatusCode = 0;
 3798              		.loc 1 1805 9 view .LVU1140
1806:Lib/ssc/src/ecatslv.c **** 
1807:Lib/ssc/src/ecatslv.c ****         if(EsmTimeoutCounter == 0)
ARM GAS  /tmp/ccWTp91B.s 			page 143


 3799              		.loc 1 1807 9 view .LVU1141
 3800              		.loc 1 1807 30 is_stmt 0 view .LVU1142
 3801 000a 774B     		ldr	r3, .L347+4
 3802 000c B3F90030 		ldrsh	r3, [r3]
 3803              		.loc 1 1807 11 view .LVU1143
 3804 0010 002B     		cmp	r3, #0
 3805 0012 62D1     		bne	.L309
1808:Lib/ssc/src/ecatslv.c ****         {
1809:Lib/ssc/src/ecatslv.c ****             Status =  (UINT8)(nEcatStateTrans >> 4);
 3806              		.loc 1 1809 13 is_stmt 1 view .LVU1144
 3807              		.loc 1 1809 23 is_stmt 0 view .LVU1145
 3808 0014 754B     		ldr	r3, .L347+8
 3809 0016 1B88     		ldrh	r3, [r3]
 3810              		.loc 1 1809 20 view .LVU1146
 3811 0018 C3F30714 		ubfx	r4, r3, #4, #8
 3812              	.LVL323:
1810:Lib/ssc/src/ecatslv.c **** 
1811:Lib/ssc/src/ecatslv.c ****             /* ESM timeout expired*/
1812:Lib/ssc/src/ecatslv.c ****             switch(nEcatStateTrans)
 3813              		.loc 1 1812 13 is_stmt 1 view .LVU1147
 3814 001c 242B     		cmp	r3, #36
 3815 001e 34D0     		beq	.L310
 3816 0020 11D8     		bhi	.L311
 3817 0022 123B     		subs	r3, r3, #18
 3818 0024 9BB2     		uxth	r3, r3
 3819 0026 012B     		cmp	r3, #1
 3820 0028 00F2D680 		bhi	.L342
1813:Lib/ssc/src/ecatslv.c ****             {
1814:Lib/ssc/src/ecatslv.c ****                 case INIT_2_PREOP:
1815:Lib/ssc/src/ecatslv.c ****                 case INIT_2_BOOT:
1816:Lib/ssc/src/ecatslv.c **** 
1817:Lib/ssc/src/ecatslv.c ****                     if(!bApplEsmPending)
 3821              		.loc 1 1817 21 view .LVU1148
 3822              		.loc 1 1817 24 is_stmt 0 view .LVU1149
 3823 002c 704B     		ldr	r3, .L347+12
 3824 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3825              		.loc 1 1817 23 view .LVU1150
 3826 0030 43B3     		cbz	r3, .L343
 3827              	.L315:
1818:Lib/ssc/src/ecatslv.c ****                         APPL_StopMailboxHandler();
1819:Lib/ssc/src/ecatslv.c **** 
1820:Lib/ssc/src/ecatslv.c ****                     MBX_StopMailboxHandler();
 3828              		.loc 1 1820 21 is_stmt 1 view .LVU1151
 3829 0032 FFF7FEFF 		bl	MBX_StopMailboxHandler
 3830              	.LVL324:
1821:Lib/ssc/src/ecatslv.c ****                     if(bLocalErrorFlag)
 3831              		.loc 1 1821 21 view .LVU1152
 3832              		.loc 1 1821 24 is_stmt 0 view .LVU1153
 3833 0036 6F4B     		ldr	r3, .L347+16
 3834 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3835              		.loc 1 1821 23 view .LVU1154
 3836 003a 002B     		cmp	r3, #0
 3837 003c 00F0CE80 		beq	.L333
1822:Lib/ssc/src/ecatslv.c ****                     {
1823:Lib/ssc/src/ecatslv.c ****                         /*Set application specified error*/
1824:Lib/ssc/src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
 3838              		.loc 1 1824 25 is_stmt 1 view .LVU1155
ARM GAS  /tmp/ccWTp91B.s 			page 144


 3839              		.loc 1 1824 36 is_stmt 0 view .LVU1156
 3840 0040 6D4B     		ldr	r3, .L347+20
 3841 0042 1D88     		ldrh	r5, [r3]
 3842              	.LVL325:
 3843              		.loc 1 1824 36 view .LVU1157
 3844 0044 12E0     		b	.L312
 3845              	.LVL326:
 3846              	.L311:
1812:Lib/ssc/src/ecatslv.c ****             {
 3847              		.loc 1 1812 13 view .LVU1158
 3848 0046 482B     		cmp	r3, #72
 3849 0048 0FD1     		bne	.L344
1825:Lib/ssc/src/ecatslv.c ****                     }
1826:Lib/ssc/src/ecatslv.c ****                     else
1827:Lib/ssc/src/ecatslv.c ****                     {
1828:Lib/ssc/src/ecatslv.c ****                         /*Set unspecified error*/
1829:Lib/ssc/src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1830:Lib/ssc/src/ecatslv.c ****                     }
1831:Lib/ssc/src/ecatslv.c ****                 break;
1832:Lib/ssc/src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1833:Lib/ssc/src/ecatslv.c ****                     if(!bApplEsmPending)
1834:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
1835:Lib/ssc/src/ecatslv.c **** 
1836:Lib/ssc/src/ecatslv.c ****                     StopInputHandler();
1837:Lib/ssc/src/ecatslv.c ****                     
1838:Lib/ssc/src/ecatslv.c ****                     if(bLocalErrorFlag)
1839:Lib/ssc/src/ecatslv.c ****                     {
1840:Lib/ssc/src/ecatslv.c ****                         /*Set application specified error*/
1841:Lib/ssc/src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
1842:Lib/ssc/src/ecatslv.c ****                     }
1843:Lib/ssc/src/ecatslv.c ****                     else
1844:Lib/ssc/src/ecatslv.c ****                     {
1845:Lib/ssc/src/ecatslv.c ****                         /*Set unspecified error*/
1846:Lib/ssc/src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1847:Lib/ssc/src/ecatslv.c ****                     }
1848:Lib/ssc/src/ecatslv.c ****                 break;
1849:Lib/ssc/src/ecatslv.c ****                 case SAFEOP_2_OP:
1850:Lib/ssc/src/ecatslv.c ****                     if(bDcSyncActive)
 3850              		.loc 1 1850 21 is_stmt 1 view .LVU1159
 3851              		.loc 1 1850 24 is_stmt 0 view .LVU1160
 3852 004a 6C4B     		ldr	r3, .L347+24
 3853 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3854              		.loc 1 1850 23 view .LVU1161
 3855 004e 63B3     		cbz	r3, .L317
1851:Lib/ssc/src/ecatslv.c ****                     {
1852:Lib/ssc/src/ecatslv.c ****                         /*SafeOP to OP timeout expired check which AL status code need to be writte
1853:Lib/ssc/src/ecatslv.c ****                         if(!bDcRunning) //
 3856              		.loc 1 1853 25 is_stmt 1 view .LVU1162
 3857              		.loc 1 1853 28 is_stmt 0 view .LVU1163
 3858 0050 6B4B     		ldr	r3, .L347+28
 3859 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3860              		.loc 1 1853 27 view .LVU1164
 3861 0054 002B     		cmp	r3, #0
 3862 0056 30D0     		beq	.L335
1854:Lib/ssc/src/ecatslv.c ****                         {
1855:Lib/ssc/src/ecatslv.c ****                             /*no Sync0 signal received*/
1856:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_NOSYNCERROR;
ARM GAS  /tmp/ccWTp91B.s 			page 145


1857:Lib/ssc/src/ecatslv.c ****                         }
1858:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1859:Lib/ssc/src/ecatslv.c ****                         else if(!bEcatFirstOutputsReceived && (nPdOutputSize > 0))
 3863              		.loc 1 1859 30 is_stmt 1 view .LVU1165
 3864              		.loc 1 1859 33 is_stmt 0 view .LVU1166
 3865 0058 6A4B     		ldr	r3, .L347+32
 3866 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3867              		.loc 1 1859 32 view .LVU1167
 3868 005c 002B     		cmp	r3, #0
 3869 005e 33D1     		bne	.L336
 3870              		.loc 1 1859 78 discriminator 1 view .LVU1168
 3871 0060 694B     		ldr	r3, .L347+36
 3872 0062 1B88     		ldrh	r3, [r3]
 3873              		.loc 1 1859 60 discriminator 1 view .LVU1169
 3874 0064 93BB     		cbnz	r3, .L337
1860:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1861:Lib/ssc/src/ecatslv.c ****                         {
1862:Lib/ssc/src/ecatslv.c ****                             /*no process data received*/
1863:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
1864:Lib/ssc/src/ecatslv.c ****                         }
1865:Lib/ssc/src/ecatslv.c ****                         else
1866:Lib/ssc/src/ecatslv.c ****                         {
1867:Lib/ssc/src/ecatslv.c ****                             /*SM/Sync Sequence is not valid*/
1868:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SYNCERROR;
 3875              		.loc 1 1868 40 view .LVU1170
 3876 0066 1A25     		movs	r5, #26
 3877 0068 28E0     		b	.L318
 3878              	.L344:
1812:Lib/ssc/src/ecatslv.c ****             {
 3879              		.loc 1 1812 13 view .LVU1171
 3880 006a 0025     		movs	r5, #0
 3881              	.LVL327:
 3882              	.L312:
1869:Lib/ssc/src/ecatslv.c ****                         }
1870:Lib/ssc/src/ecatslv.c ****                     }
1871:Lib/ssc/src/ecatslv.c ****                     else
1872:Lib/ssc/src/ecatslv.c ****                     {
1873:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1874:Lib/ssc/src/ecatslv.c ****                         if (nPdOutputSize > 0)
1875:Lib/ssc/src/ecatslv.c ****                         {
1876:Lib/ssc/src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
1877:Lib/ssc/src/ecatslv.c ****                         }
1878:Lib/ssc/src/ecatslv.c ****                         else
1879:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1880:Lib/ssc/src/ecatslv.c ****                         {
1881:Lib/ssc/src/ecatslv.c ****                             /*Set valid state transition even if timeout expired*/
1882:Lib/ssc/src/ecatslv.c ****                             Status = STATE_OP;
1883:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
1884:Lib/ssc/src/ecatslv.c ****                             /* Slave is OPERATIONAL */
1885:Lib/ssc/src/ecatslv.c ****                             bEcatOutputUpdateRunning = TRUE;
1886:Lib/ssc/src/ecatslv.c ****                         }
1887:Lib/ssc/src/ecatslv.c ****                     }
1888:Lib/ssc/src/ecatslv.c **** 
1889:Lib/ssc/src/ecatslv.c ****                     /*Stop handler on failed transition*/
1890:Lib/ssc/src/ecatslv.c ****                     if(StatusCode != 0)
1891:Lib/ssc/src/ecatslv.c ****                     {
1892:Lib/ssc/src/ecatslv.c ****                         if(!bApplEsmPending)
ARM GAS  /tmp/ccWTp91B.s 			page 146


1893:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
1894:Lib/ssc/src/ecatslv.c **** 
1895:Lib/ssc/src/ecatslv.c ****                         StopOutputHandler();
1896:Lib/ssc/src/ecatslv.c ****                     }
1897:Lib/ssc/src/ecatslv.c ****                 break;
1898:Lib/ssc/src/ecatslv.c ****             }
1899:Lib/ssc/src/ecatslv.c ****         } //ESM timeout
1900:Lib/ssc/src/ecatslv.c ****         else
1901:Lib/ssc/src/ecatslv.c ****         {
1902:Lib/ssc/src/ecatslv.c ****             /*Call application specific transition function and complete transition it the function
1903:Lib/ssc/src/ecatslv.c ****             switch(nEcatStateTrans)
1904:Lib/ssc/src/ecatslv.c ****             {
1905:Lib/ssc/src/ecatslv.c ****                 case INIT_2_PREOP:
1906:Lib/ssc/src/ecatslv.c ****                 case INIT_2_BOOT:
1907:Lib/ssc/src/ecatslv.c ****                     if(bApplEsmPending)
1908:Lib/ssc/src/ecatslv.c ****                     {
1909:Lib/ssc/src/ecatslv.c ****                         bApplEsmPending = FALSE;
1910:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
1911:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartMailboxHandler();
1912:Lib/ssc/src/ecatslv.c **** 
1913:Lib/ssc/src/ecatslv.c ****                         if(result == 0)
1914:Lib/ssc/src/ecatslv.c ****                         {
1915:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition was successful => set active mail
1916:Lib/ssc/src/ecatslv.c ****                             bMbxRunning = TRUE;
1917:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
1918:Lib/ssc/src/ecatslv.c ****                         }
1919:Lib/ssc/src/ecatslv.c ****                         else
1920:Lib/ssc/src/ecatslv.c ****                         {
1921:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition failed.
1922:Lib/ssc/src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
1923:Lib/ssc/src/ecatslv.c **** 
1924:Lib/ssc/src/ecatslv.c ****                             if(result != NOERROR_INWORK)
1925:Lib/ssc/src/ecatslv.c ****                             {
1926:Lib/ssc/src/ecatslv.c ****                                 APPL_StopMailboxHandler();
1927:Lib/ssc/src/ecatslv.c ****                                 MBX_StopMailboxHandler();
1928:Lib/ssc/src/ecatslv.c ****                             }
1929:Lib/ssc/src/ecatslv.c ****                         }
1930:Lib/ssc/src/ecatslv.c ****                     }
1931:Lib/ssc/src/ecatslv.c ****                 break;
1932:Lib/ssc/src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1933:Lib/ssc/src/ecatslv.c ****                     if(bApplEsmPending)
1934:Lib/ssc/src/ecatslv.c ****                     {
1935:Lib/ssc/src/ecatslv.c ****                         bApplEsmPending = FALSE;
1936:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
1937:Lib/ssc/src/ecatslv.c **** 
1938:Lib/ssc/src/ecatslv.c ****                         if(result == 0)
1939:Lib/ssc/src/ecatslv.c ****                         {
1940:Lib/ssc/src/ecatslv.c ****                             bEcatInputUpdateRunning = TRUE;
1941:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
1942:Lib/ssc/src/ecatslv.c ****                         }
1943:Lib/ssc/src/ecatslv.c ****                         else
1944:Lib/ssc/src/ecatslv.c ****                         {
1945:Lib/ssc/src/ecatslv.c ****                             /*The application specific transition failed.
1946:Lib/ssc/src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
1947:Lib/ssc/src/ecatslv.c **** 
1948:Lib/ssc/src/ecatslv.c ****                             if(result != NOERROR_INWORK)
1949:Lib/ssc/src/ecatslv.c ****                             {
ARM GAS  /tmp/ccWTp91B.s 			page 147


1950:Lib/ssc/src/ecatslv.c ****                                 APPL_StopInputHandler();
1951:Lib/ssc/src/ecatslv.c ****                                 StopInputHandler();
1952:Lib/ssc/src/ecatslv.c ****                             }
1953:Lib/ssc/src/ecatslv.c ****                         }
1954:Lib/ssc/src/ecatslv.c ****                     }
1955:Lib/ssc/src/ecatslv.c ****                 break;
1956:Lib/ssc/src/ecatslv.c ****                 case SAFEOP_2_OP:
1957:Lib/ssc/src/ecatslv.c ****                    if(bApplEsmPending)
1958:Lib/ssc/src/ecatslv.c ****                     {
1959:Lib/ssc/src/ecatslv.c ****                         if(bDcSyncActive)
1960:Lib/ssc/src/ecatslv.c ****                         {
1961:Lib/ssc/src/ecatslv.c ****                             if(i16WaitForPllRunningTimeout > 0 && i16WaitForPllRunningTimeout <= i1
1962:Lib/ssc/src/ecatslv.c ****                             {
1963:Lib/ssc/src/ecatslv.c ****                                 /*Pll sequence valid for 200ms (set in APPL_StartOutputHandler() )
1964:Lib/ssc/src/ecatslv.c ****                                 acknowledge state transition to OP */
1965:Lib/ssc/src/ecatslv.c **** 
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningTimeout = 0;
1967:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
1968:Lib/ssc/src/ecatslv.c **** 
1969:Lib/ssc/src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
1970:Lib/ssc/src/ecatslv.c **** 
1971:Lib/ssc/src/ecatslv.c ****                                 if(result == 0)
1972:Lib/ssc/src/ecatslv.c ****                                 {
1973:Lib/ssc/src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1974:Lib/ssc/src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
1975:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
1976:Lib/ssc/src/ecatslv.c ****                                 }
1977:Lib/ssc/src/ecatslv.c ****                                 else
1978:Lib/ssc/src/ecatslv.c ****                                 {
1979:Lib/ssc/src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
1980:Lib/ssc/src/ecatslv.c ****                                     {
1981:Lib/ssc/src/ecatslv.c ****                                         APPL_StopOutputHandler();
1982:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
1983:Lib/ssc/src/ecatslv.c ****                                     }
1984:Lib/ssc/src/ecatslv.c ****                                 }
1985:Lib/ssc/src/ecatslv.c ****                             }
1986:Lib/ssc/src/ecatslv.c ****                         }
1987:Lib/ssc/src/ecatslv.c ****                         else
1988:Lib/ssc/src/ecatslv.c ****                         {
1989:Lib/ssc/src/ecatslv.c ****                             if(nPdOutputSize == 0 || bEcatFirstOutputsReceived)
1990:Lib/ssc/src/ecatslv.c ****                             {
1991:Lib/ssc/src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
1992:Lib/ssc/src/ecatslv.c **** 
1993:Lib/ssc/src/ecatslv.c ****                                 if(result == 0)
1994:Lib/ssc/src/ecatslv.c ****                                 {
1995:Lib/ssc/src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1996:Lib/ssc/src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
1997:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
1998:Lib/ssc/src/ecatslv.c ****                                 }
1999:Lib/ssc/src/ecatslv.c ****                                 else
2000:Lib/ssc/src/ecatslv.c ****                                 {
2001:Lib/ssc/src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
2002:Lib/ssc/src/ecatslv.c ****                                     {
2003:Lib/ssc/src/ecatslv.c ****                                         APPL_StopOutputHandler();
2004:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
2005:Lib/ssc/src/ecatslv.c ****                                     }
2006:Lib/ssc/src/ecatslv.c ****                                 }
ARM GAS  /tmp/ccWTp91B.s 			page 148


2007:Lib/ssc/src/ecatslv.c ****                             }
2008:Lib/ssc/src/ecatslv.c ****                         }       
2009:Lib/ssc/src/ecatslv.c ****                     }             
2010:Lib/ssc/src/ecatslv.c ****                 break;
2011:Lib/ssc/src/ecatslv.c ****             }//Switch - transition
2012:Lib/ssc/src/ecatslv.c ****         }
2013:Lib/ssc/src/ecatslv.c **** 
2014:Lib/ssc/src/ecatslv.c ****         if(Status != 0)
 3883              		.loc 1 2014 9 is_stmt 1 view .LVU1172
 3884              		.loc 1 2014 11 is_stmt 0 view .LVU1173
 3885 006c 4CB1     		cbz	r4, .L307
 3886              	.LVL328:
 3887              	.L326:
2015:Lib/ssc/src/ecatslv.c ****         {
2016:Lib/ssc/src/ecatslv.c ****             /*Pending state transition finished => write AL Status and AL Status Code*/
2017:Lib/ssc/src/ecatslv.c ****             bEcatWaitForAlControlRes = FALSE;
 3888              		.loc 1 2017 13 is_stmt 1 view .LVU1174
 3889              		.loc 1 2017 38 is_stmt 0 view .LVU1175
 3890 006e 5D4B     		ldr	r3, .L347
 3891 0070 0022     		movs	r2, #0
 3892 0072 1A70     		strb	r2, [r3]
2018:Lib/ssc/src/ecatslv.c **** 
2019:Lib/ssc/src/ecatslv.c ****             if (StatusCode != 0)
 3893              		.loc 1 2019 13 is_stmt 1 view .LVU1176
 3894              		.loc 1 2019 16 is_stmt 0 view .LVU1177
 3895 0074 0DB1     		cbz	r5, .L331
2020:Lib/ssc/src/ecatslv.c ****             {
2021:Lib/ssc/src/ecatslv.c ****                 Status |= STATE_CHANGE;
 3896              		.loc 1 2021 17 is_stmt 1 view .LVU1178
 3897              		.loc 1 2021 24 is_stmt 0 view .LVU1179
 3898 0076 44F01004 		orr	r4, r4, #16
 3899              	.LVL329:
 3900              	.L331:
2022:Lib/ssc/src/ecatslv.c ****             }
2023:Lib/ssc/src/ecatslv.c **** 
2024:Lib/ssc/src/ecatslv.c ****             SetALStatus(Status,StatusCode);
 3901              		.loc 1 2024 13 is_stmt 1 view .LVU1180
 3902 007a 2946     		mov	r1, r5
 3903 007c 2046     		mov	r0, r4
 3904 007e FFF7FEFF 		bl	SetALStatus
 3905              	.LVL330:
 3906              	.L307:
 3907              		.loc 1 2024 13 is_stmt 0 view .LVU1181
 3908              	.LBE45:
2025:Lib/ssc/src/ecatslv.c ****         }
2026:Lib/ssc/src/ecatslv.c ****     }// Pending state transition (bEcatWaitForAlControlRes == true)
2027:Lib/ssc/src/ecatslv.c **** }
 3909              		.loc 1 2027 1 view .LVU1182
 3910 0082 38BD     		pop	{r3, r4, r5, pc}
 3911              	.LVL331:
 3912              	.L343:
 3913              	.LBB46:
1818:Lib/ssc/src/ecatslv.c **** 
 3914              		.loc 1 1818 25 is_stmt 1 view .LVU1183
 3915 0084 FFF7FEFF 		bl	APPL_StopMailboxHandler
 3916              	.LVL332:
 3917 0088 D3E7     		b	.L315
ARM GAS  /tmp/ccWTp91B.s 			page 149


 3918              	.L310:
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3919              		.loc 1 1833 21 view .LVU1184
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3920              		.loc 1 1833 24 is_stmt 0 view .LVU1185
 3921 008a 594B     		ldr	r3, .L347+12
 3922 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1833:Lib/ssc/src/ecatslv.c ****                         APPL_StopInputHandler();
 3923              		.loc 1 1833 23 view .LVU1186
 3924 008e 4BB1     		cbz	r3, .L345
 3925              	.L316:
1836:Lib/ssc/src/ecatslv.c ****                     
 3926              		.loc 1 1836 21 is_stmt 1 view .LVU1187
 3927 0090 FFF7FEFF 		bl	StopInputHandler
 3928              	.LVL333:
1838:Lib/ssc/src/ecatslv.c ****                     {
 3929              		.loc 1 1838 21 view .LVU1188
1838:Lib/ssc/src/ecatslv.c ****                     {
 3930              		.loc 1 1838 24 is_stmt 0 view .LVU1189
 3931 0094 574B     		ldr	r3, .L347+16
 3932 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1838:Lib/ssc/src/ecatslv.c ****                     {
 3933              		.loc 1 1838 23 view .LVU1190
 3934 0098 002B     		cmp	r3, #0
 3935 009a 00F0A180 		beq	.L334
1841:Lib/ssc/src/ecatslv.c ****                     }
 3936              		.loc 1 1841 25 is_stmt 1 view .LVU1191
1841:Lib/ssc/src/ecatslv.c ****                     }
 3937              		.loc 1 1841 36 is_stmt 0 view .LVU1192
 3938 009e 564B     		ldr	r3, .L347+20
 3939 00a0 1D88     		ldrh	r5, [r3]
 3940              	.LVL334:
1841:Lib/ssc/src/ecatslv.c ****                     }
 3941              		.loc 1 1841 36 view .LVU1193
 3942 00a2 E3E7     		b	.L312
 3943              	.LVL335:
 3944              	.L345:
1834:Lib/ssc/src/ecatslv.c **** 
 3945              		.loc 1 1834 25 is_stmt 1 view .LVU1194
 3946 00a4 FFF7FEFF 		bl	APPL_StopInputHandler
 3947              	.LVL336:
 3948 00a8 F2E7     		b	.L316
 3949              	.L317:
1874:Lib/ssc/src/ecatslv.c ****                         {
 3950              		.loc 1 1874 25 view .LVU1195
1874:Lib/ssc/src/ecatslv.c ****                         {
 3951              		.loc 1 1874 43 is_stmt 0 view .LVU1196
 3952 00aa 574B     		ldr	r3, .L347+36
 3953 00ac 1D88     		ldrh	r5, [r3]
1874:Lib/ssc/src/ecatslv.c ****                         {
 3954              		.loc 1 1874 28 view .LVU1197
 3955 00ae 7DB9     		cbnz	r5, .L338
1882:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
 3956              		.loc 1 1882 29 is_stmt 1 view .LVU1198
 3957              	.LVL337:
1883:Lib/ssc/src/ecatslv.c ****                             /* Slave is OPERATIONAL */
 3958              		.loc 1 1883 29 view .LVU1199
ARM GAS  /tmp/ccWTp91B.s 			page 150


1885:Lib/ssc/src/ecatslv.c ****                         }
 3959              		.loc 1 1885 29 view .LVU1200
1885:Lib/ssc/src/ecatslv.c ****                         }
 3960              		.loc 1 1885 54 is_stmt 0 view .LVU1201
 3961 00b0 564B     		ldr	r3, .L347+40
 3962 00b2 0122     		movs	r2, #1
 3963 00b4 1A70     		strb	r2, [r3]
1890:Lib/ssc/src/ecatslv.c ****                     {
 3964              		.loc 1 1890 21 is_stmt 1 view .LVU1202
1882:Lib/ssc/src/ecatslv.c ****                             StatusCode = 0;
 3965              		.loc 1 1882 36 is_stmt 0 view .LVU1203
 3966 00b6 0824     		movs	r4, #8
 3967 00b8 D8E7     		b	.L312
 3968              	.LVL338:
 3969              	.L335:
1856:Lib/ssc/src/ecatslv.c ****                         }
 3970              		.loc 1 1856 40 view .LVU1204
 3971 00ba 2D25     		movs	r5, #45
 3972              	.L318:
 3973              	.LVL339:
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3974              		.loc 1 1892 25 is_stmt 1 view .LVU1205
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3975              		.loc 1 1892 28 is_stmt 0 view .LVU1206
 3976 00bc 4C4B     		ldr	r3, .L347+12
 3977 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1892:Lib/ssc/src/ecatslv.c ****                             APPL_StopOutputHandler();
 3978              		.loc 1 1892 27 view .LVU1207
 3979 00c0 43B1     		cbz	r3, .L346
 3980              	.L319:
1895:Lib/ssc/src/ecatslv.c ****                     }
 3981              		.loc 1 1895 25 is_stmt 1 view .LVU1208
 3982 00c2 FFF7FEFF 		bl	StopOutputHandler
 3983              	.LVL340:
 3984 00c6 D1E7     		b	.L312
 3985              	.LVL341:
 3986              	.L336:
1868:Lib/ssc/src/ecatslv.c ****                         }
 3987              		.loc 1 1868 40 is_stmt 0 view .LVU1209
 3988 00c8 1A25     		movs	r5, #26
 3989 00ca F7E7     		b	.L318
 3990              	.L337:
1863:Lib/ssc/src/ecatslv.c ****                         }
 3991              		.loc 1 1863 40 view .LVU1210
 3992 00cc 1B25     		movs	r5, #27
 3993 00ce F5E7     		b	.L318
 3994              	.L338:
1876:Lib/ssc/src/ecatslv.c ****                         }
 3995              		.loc 1 1876 40 view .LVU1211
 3996 00d0 1B25     		movs	r5, #27
 3997 00d2 F3E7     		b	.L318
 3998              	.LVL342:
 3999              	.L346:
1893:Lib/ssc/src/ecatslv.c **** 
 4000              		.loc 1 1893 29 is_stmt 1 view .LVU1212
 4001 00d4 FFF7FEFF 		bl	APPL_StopOutputHandler
 4002              	.LVL343:
ARM GAS  /tmp/ccWTp91B.s 			page 151


 4003 00d8 F3E7     		b	.L319
 4004              	.LVL344:
 4005              	.L309:
1903:Lib/ssc/src/ecatslv.c ****             {
 4006              		.loc 1 1903 13 view .LVU1213
 4007 00da 444B     		ldr	r3, .L347+8
 4008 00dc 1B88     		ldrh	r3, [r3]
 4009 00de 242B     		cmp	r3, #36
 4010 00e0 40D0     		beq	.L320
 4011 00e2 16D8     		bhi	.L321
 4012 00e4 123B     		subs	r3, r3, #18
 4013 00e6 9BB2     		uxth	r3, r3
 4014 00e8 012B     		cmp	r3, #1
 4015 00ea CAD8     		bhi	.L307
1907:Lib/ssc/src/ecatslv.c ****                     {
 4016              		.loc 1 1907 21 view .LVU1214
1907:Lib/ssc/src/ecatslv.c ****                     {
 4017              		.loc 1 1907 24 is_stmt 0 view .LVU1215
 4018 00ec 404B     		ldr	r3, .L347+12
 4019 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1907:Lib/ssc/src/ecatslv.c ****                     {
 4020              		.loc 1 1907 23 view .LVU1216
 4021 00f0 002B     		cmp	r3, #0
 4022 00f2 C6D0     		beq	.L307
1909:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
 4023              		.loc 1 1909 25 is_stmt 1 view .LVU1217
1909:Lib/ssc/src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
 4024              		.loc 1 1909 41 is_stmt 0 view .LVU1218
 4025 00f4 3E4B     		ldr	r3, .L347+12
 4026 00f6 0022     		movs	r2, #0
 4027 00f8 1A70     		strb	r2, [r3]
1911:Lib/ssc/src/ecatslv.c **** 
 4028              		.loc 1 1911 25 is_stmt 1 view .LVU1219
1911:Lib/ssc/src/ecatslv.c **** 
 4029              		.loc 1 1911 34 is_stmt 0 view .LVU1220
 4030 00fa FFF7FEFF 		bl	APPL_StartMailboxHandler
 4031              	.LVL345:
1913:Lib/ssc/src/ecatslv.c ****                         {
 4032              		.loc 1 1913 25 is_stmt 1 view .LVU1221
1913:Lib/ssc/src/ecatslv.c ****                         {
 4033              		.loc 1 1913 27 is_stmt 0 view .LVU1222
 4034 00fe 0546     		mov	r5, r0
 4035 0100 48BB     		cbnz	r0, .L324
1916:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 4036              		.loc 1 1916 29 is_stmt 1 view .LVU1223
1916:Lib/ssc/src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 4037              		.loc 1 1916 41 is_stmt 0 view .LVU1224
 4038 0102 434B     		ldr	r3, .L347+44
 4039 0104 0122     		movs	r2, #1
 4040 0106 1A70     		strb	r2, [r3]
1917:Lib/ssc/src/ecatslv.c ****                         }
 4041              		.loc 1 1917 29 is_stmt 1 view .LVU1225
1917:Lib/ssc/src/ecatslv.c ****                         }
 4042              		.loc 1 1917 63 is_stmt 0 view .LVU1226
 4043 0108 384B     		ldr	r3, .L347+8
 4044 010a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
1917:Lib/ssc/src/ecatslv.c ****                         }
ARM GAS  /tmp/ccWTp91B.s 			page 152


 4045              		.loc 1 1917 36 view .LVU1227
 4046 010c 04F00F04 		and	r4, r4, #15
 4047              	.LVL346:
1917:Lib/ssc/src/ecatslv.c ****                         }
 4048              		.loc 1 1917 36 view .LVU1228
 4049 0110 ACE7     		b	.L312
 4050              	.LVL347:
 4051              	.L321:
1903:Lib/ssc/src/ecatslv.c ****             {
 4052              		.loc 1 1903 13 view .LVU1229
 4053 0112 482B     		cmp	r3, #72
 4054 0114 B5D1     		bne	.L307
1957:Lib/ssc/src/ecatslv.c ****                     {
 4055              		.loc 1 1957 20 is_stmt 1 view .LVU1230
1957:Lib/ssc/src/ecatslv.c ****                     {
 4056              		.loc 1 1957 23 is_stmt 0 view .LVU1231
 4057 0116 364B     		ldr	r3, .L347+12
 4058 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1957:Lib/ssc/src/ecatslv.c ****                     {
 4059              		.loc 1 1957 22 view .LVU1232
 4060 011a 002B     		cmp	r3, #0
 4061 011c B1D0     		beq	.L307
1959:Lib/ssc/src/ecatslv.c ****                         {
 4062              		.loc 1 1959 25 is_stmt 1 view .LVU1233
1959:Lib/ssc/src/ecatslv.c ****                         {
 4063              		.loc 1 1959 28 is_stmt 0 view .LVU1234
 4064 011e 374B     		ldr	r3, .L347+24
 4065 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1959:Lib/ssc/src/ecatslv.c ****                         {
 4066              		.loc 1 1959 27 view .LVU1235
 4067 0122 002B     		cmp	r3, #0
 4068 0124 3FD0     		beq	.L327
1961:Lib/ssc/src/ecatslv.c ****                             {
 4069              		.loc 1 1961 29 is_stmt 1 view .LVU1236
1961:Lib/ssc/src/ecatslv.c ****                             {
 4070              		.loc 1 1961 60 is_stmt 0 view .LVU1237
 4071 0126 3B4B     		ldr	r3, .L347+48
 4072 0128 B3F90030 		ldrsh	r3, [r3]
1961:Lib/ssc/src/ecatslv.c ****                             {
 4073              		.loc 1 1961 31 view .LVU1238
 4074 012c 002B     		cmp	r3, #0
 4075 012e A8DD     		ble	.L307
1961:Lib/ssc/src/ecatslv.c ****                             {
 4076              		.loc 1 1961 95 discriminator 1 view .LVU1239
 4077 0130 394A     		ldr	r2, .L347+52
 4078 0132 B2F90020 		ldrsh	r2, [r2]
1961:Lib/ssc/src/ecatslv.c ****                             {
 4079              		.loc 1 1961 64 discriminator 1 view .LVU1240
 4080 0136 9342     		cmp	r3, r2
 4081 0138 A3DC     		bgt	.L307
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
 4082              		.loc 1 1966 33 is_stmt 1 view .LVU1241
1966:Lib/ssc/src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
 4083              		.loc 1 1966 61 is_stmt 0 view .LVU1242
 4084 013a 0023     		movs	r3, #0
 4085 013c 354A     		ldr	r2, .L347+48
 4086 013e 1380     		strh	r3, [r2]	@ movhi
ARM GAS  /tmp/ccWTp91B.s 			page 153


1967:Lib/ssc/src/ecatslv.c **** 
 4087              		.loc 1 1967 33 is_stmt 1 view .LVU1243
1967:Lib/ssc/src/ecatslv.c **** 
 4088              		.loc 1 1967 57 is_stmt 0 view .LVU1244
 4089 0140 354A     		ldr	r2, .L347+52
 4090 0142 1380     		strh	r3, [r2]	@ movhi
1969:Lib/ssc/src/ecatslv.c **** 
 4091              		.loc 1 1969 33 is_stmt 1 view .LVU1245
1969:Lib/ssc/src/ecatslv.c **** 
 4092              		.loc 1 1969 42 is_stmt 0 view .LVU1246
 4093 0144 FFF7FEFF 		bl	APPL_StartOutputHandler
 4094              	.LVL348:
1971:Lib/ssc/src/ecatslv.c ****                                 {
 4095              		.loc 1 1971 33 is_stmt 1 view .LVU1247
1971:Lib/ssc/src/ecatslv.c ****                                 {
 4096              		.loc 1 1971 35 is_stmt 0 view .LVU1248
 4097 0148 0546     		mov	r5, r0
 4098 014a 20BB     		cbnz	r0, .L328
1974:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4099              		.loc 1 1974 37 is_stmt 1 view .LVU1249
1974:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4100              		.loc 1 1974 62 is_stmt 0 view .LVU1250
 4101 014c 2F4B     		ldr	r3, .L347+40
 4102 014e 0122     		movs	r2, #1
 4103 0150 1A70     		strb	r2, [r3]
1975:Lib/ssc/src/ecatslv.c ****                                 }
 4104              		.loc 1 1975 37 is_stmt 1 view .LVU1251
 4105              	.LVL349:
2014:Lib/ssc/src/ecatslv.c ****         {
 4106              		.loc 1 2014 9 view .LVU1252
1975:Lib/ssc/src/ecatslv.c ****                                 }
 4107              		.loc 1 1975 44 is_stmt 0 view .LVU1253
 4108 0152 0824     		movs	r4, #8
 4109 0154 8BE7     		b	.L326
 4110              	.LVL350:
 4111              	.L324:
1924:Lib/ssc/src/ecatslv.c ****                             {
 4112              		.loc 1 1924 29 is_stmt 1 view .LVU1254
1924:Lib/ssc/src/ecatslv.c ****                             {
 4113              		.loc 1 1924 31 is_stmt 0 view .LVU1255
 4114 0156 FF28     		cmp	r0, #255
 4115 0158 93D0     		beq	.L307
1926:Lib/ssc/src/ecatslv.c ****                                 MBX_StopMailboxHandler();
 4116              		.loc 1 1926 33 is_stmt 1 view .LVU1256
 4117 015a FFF7FEFF 		bl	APPL_StopMailboxHandler
 4118              	.LVL351:
1927:Lib/ssc/src/ecatslv.c ****                             }
 4119              		.loc 1 1927 33 view .LVU1257
 4120 015e FFF7FEFF 		bl	MBX_StopMailboxHandler
 4121              	.LVL352:
2014:Lib/ssc/src/ecatslv.c ****         {
 4122              		.loc 1 2014 9 view .LVU1258
 4123 0162 8EE7     		b	.L307
 4124              	.LVL353:
 4125              	.L320:
1933:Lib/ssc/src/ecatslv.c ****                     {
 4126              		.loc 1 1933 21 view .LVU1259
ARM GAS  /tmp/ccWTp91B.s 			page 154


1933:Lib/ssc/src/ecatslv.c ****                     {
 4127              		.loc 1 1933 24 is_stmt 0 view .LVU1260
 4128 0164 224B     		ldr	r3, .L347+12
 4129 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1933:Lib/ssc/src/ecatslv.c ****                     {
 4130              		.loc 1 1933 23 view .LVU1261
 4131 0168 002B     		cmp	r3, #0
 4132 016a 8AD0     		beq	.L307
1935:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
 4133              		.loc 1 1935 25 is_stmt 1 view .LVU1262
1935:Lib/ssc/src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
 4134              		.loc 1 1935 41 is_stmt 0 view .LVU1263
 4135 016c 204B     		ldr	r3, .L347+12
 4136 016e 0022     		movs	r2, #0
 4137 0170 1A70     		strb	r2, [r3]
1936:Lib/ssc/src/ecatslv.c **** 
 4138              		.loc 1 1936 25 is_stmt 1 view .LVU1264
1936:Lib/ssc/src/ecatslv.c **** 
 4139              		.loc 1 1936 34 is_stmt 0 view .LVU1265
 4140 0172 2A48     		ldr	r0, .L347+56
 4141 0174 FFF7FEFF 		bl	APPL_StartInputHandler
 4142              	.LVL354:
1938:Lib/ssc/src/ecatslv.c ****                         {
 4143              		.loc 1 1938 25 is_stmt 1 view .LVU1266
1938:Lib/ssc/src/ecatslv.c ****                         {
 4144              		.loc 1 1938 27 is_stmt 0 view .LVU1267
 4145 0178 0546     		mov	r5, r0
 4146 017a 20B9     		cbnz	r0, .L325
1940:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
 4147              		.loc 1 1940 29 is_stmt 1 view .LVU1268
1940:Lib/ssc/src/ecatslv.c ****                             Status = STATE_SAFEOP;
 4148              		.loc 1 1940 53 is_stmt 0 view .LVU1269
 4149 017c 284B     		ldr	r3, .L347+60
 4150 017e 0122     		movs	r2, #1
 4151 0180 1A70     		strb	r2, [r3]
1941:Lib/ssc/src/ecatslv.c ****                         }
 4152              		.loc 1 1941 29 is_stmt 1 view .LVU1270
 4153              	.LVL355:
2014:Lib/ssc/src/ecatslv.c ****         {
 4154              		.loc 1 2014 9 view .LVU1271
1941:Lib/ssc/src/ecatslv.c ****                         }
 4155              		.loc 1 1941 36 is_stmt 0 view .LVU1272
 4156 0182 0424     		movs	r4, #4
 4157 0184 73E7     		b	.L326
 4158              	.LVL356:
 4159              	.L325:
1948:Lib/ssc/src/ecatslv.c ****                             {
 4160              		.loc 1 1948 29 is_stmt 1 view .LVU1273
1948:Lib/ssc/src/ecatslv.c ****                             {
 4161              		.loc 1 1948 31 is_stmt 0 view .LVU1274
 4162 0186 FF28     		cmp	r0, #255
 4163 0188 3FF47BAF 		beq	.L307
1950:Lib/ssc/src/ecatslv.c ****                                 StopInputHandler();
 4164              		.loc 1 1950 33 is_stmt 1 view .LVU1275
 4165 018c FFF7FEFF 		bl	APPL_StopInputHandler
 4166              	.LVL357:
1951:Lib/ssc/src/ecatslv.c ****                             }
ARM GAS  /tmp/ccWTp91B.s 			page 155


 4167              		.loc 1 1951 33 view .LVU1276
 4168 0190 FFF7FEFF 		bl	StopInputHandler
 4169              	.LVL358:
2014:Lib/ssc/src/ecatslv.c ****         {
 4170              		.loc 1 2014 9 view .LVU1277
 4171 0194 75E7     		b	.L307
 4172              	.LVL359:
 4173              	.L328:
1979:Lib/ssc/src/ecatslv.c ****                                     {
 4174              		.loc 1 1979 37 view .LVU1278
1979:Lib/ssc/src/ecatslv.c ****                                     {
 4175              		.loc 1 1979 39 is_stmt 0 view .LVU1279
 4176 0196 FF28     		cmp	r0, #255
 4177 0198 3FF473AF 		beq	.L307
1981:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
 4178              		.loc 1 1981 41 is_stmt 1 view .LVU1280
 4179 019c FFF7FEFF 		bl	APPL_StopOutputHandler
 4180              	.LVL360:
1982:Lib/ssc/src/ecatslv.c ****                                     }
 4181              		.loc 1 1982 41 view .LVU1281
 4182 01a0 FFF7FEFF 		bl	StopOutputHandler
 4183              	.LVL361:
2014:Lib/ssc/src/ecatslv.c ****         {
 4184              		.loc 1 2014 9 view .LVU1282
 4185 01a4 6DE7     		b	.L307
 4186              	.LVL362:
 4187              	.L327:
1989:Lib/ssc/src/ecatslv.c ****                             {
 4188              		.loc 1 1989 29 view .LVU1283
1989:Lib/ssc/src/ecatslv.c ****                             {
 4189              		.loc 1 1989 46 is_stmt 0 view .LVU1284
 4190 01a6 184B     		ldr	r3, .L347+36
 4191 01a8 1B88     		ldrh	r3, [r3]
1989:Lib/ssc/src/ecatslv.c ****                             {
 4192              		.loc 1 1989 31 view .LVU1285
 4193 01aa 23B1     		cbz	r3, .L329
1989:Lib/ssc/src/ecatslv.c ****                             {
 4194              		.loc 1 1989 51 discriminator 1 view .LVU1286
 4195 01ac 154B     		ldr	r3, .L347+32
 4196 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4197 01b0 002B     		cmp	r3, #0
 4198 01b2 3FF466AF 		beq	.L307
 4199              	.L329:
1991:Lib/ssc/src/ecatslv.c **** 
 4200              		.loc 1 1991 33 is_stmt 1 view .LVU1287
1991:Lib/ssc/src/ecatslv.c **** 
 4201              		.loc 1 1991 42 is_stmt 0 view .LVU1288
 4202 01b6 FFF7FEFF 		bl	APPL_StartOutputHandler
 4203              	.LVL363:
1993:Lib/ssc/src/ecatslv.c ****                                 {
 4204              		.loc 1 1993 33 is_stmt 1 view .LVU1289
1993:Lib/ssc/src/ecatslv.c ****                                 {
 4205              		.loc 1 1993 35 is_stmt 0 view .LVU1290
 4206 01ba 0546     		mov	r5, r0
 4207 01bc 20B9     		cbnz	r0, .L330
1996:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4208              		.loc 1 1996 37 is_stmt 1 view .LVU1291
ARM GAS  /tmp/ccWTp91B.s 			page 156


1996:Lib/ssc/src/ecatslv.c ****                                     Status = STATE_OP;
 4209              		.loc 1 1996 62 is_stmt 0 view .LVU1292
 4210 01be 134B     		ldr	r3, .L347+40
 4211 01c0 0122     		movs	r2, #1
 4212 01c2 1A70     		strb	r2, [r3]
1997:Lib/ssc/src/ecatslv.c ****                                 }
 4213              		.loc 1 1997 37 is_stmt 1 view .LVU1293
 4214              	.LVL364:
2014:Lib/ssc/src/ecatslv.c ****         {
 4215              		.loc 1 2014 9 view .LVU1294
1997:Lib/ssc/src/ecatslv.c ****                                 }
 4216              		.loc 1 1997 44 is_stmt 0 view .LVU1295
 4217 01c4 0824     		movs	r4, #8
 4218 01c6 52E7     		b	.L326
 4219              	.LVL365:
 4220              	.L330:
2001:Lib/ssc/src/ecatslv.c ****                                     {
 4221              		.loc 1 2001 37 is_stmt 1 view .LVU1296
2001:Lib/ssc/src/ecatslv.c ****                                     {
 4222              		.loc 1 2001 39 is_stmt 0 view .LVU1297
 4223 01c8 FF28     		cmp	r0, #255
 4224 01ca 3FF45AAF 		beq	.L307
2003:Lib/ssc/src/ecatslv.c ****                                         StopOutputHandler();
 4225              		.loc 1 2003 41 is_stmt 1 view .LVU1298
 4226 01ce FFF7FEFF 		bl	APPL_StopOutputHandler
 4227              	.LVL366:
2004:Lib/ssc/src/ecatslv.c ****                                     }
 4228              		.loc 1 2004 41 view .LVU1299
 4229 01d2 FFF7FEFF 		bl	StopOutputHandler
 4230              	.LVL367:
2014:Lib/ssc/src/ecatslv.c ****         {
 4231              		.loc 1 2014 9 view .LVU1300
 4232 01d6 54E7     		b	.L307
 4233              	.LVL368:
 4234              	.L342:
1812:Lib/ssc/src/ecatslv.c ****             {
 4235              		.loc 1 1812 13 is_stmt 0 view .LVU1301
 4236 01d8 0025     		movs	r5, #0
 4237 01da 47E7     		b	.L312
 4238              	.L333:
1829:Lib/ssc/src/ecatslv.c ****                     }
 4239              		.loc 1 1829 36 view .LVU1302
 4240 01dc 0125     		movs	r5, #1
 4241 01de 45E7     		b	.L312
 4242              	.L334:
1846:Lib/ssc/src/ecatslv.c ****                     }
 4243              		.loc 1 1846 36 view .LVU1303
 4244 01e0 0125     		movs	r5, #1
 4245 01e2 43E7     		b	.L312
 4246              	.L348:
 4247              		.align	2
 4248              	.L347:
 4249 01e4 00000000 		.word	.LANCHOR36
 4250 01e8 00000000 		.word	.LANCHOR33
 4251 01ec 00000000 		.word	.LANCHOR35
 4252 01f0 00000000 		.word	.LANCHOR34
 4253 01f4 00000000 		.word	.LANCHOR28
ARM GAS  /tmp/ccWTp91B.s 			page 157


 4254 01f8 00000000 		.word	.LANCHOR29
 4255 01fc 00000000 		.word	.LANCHOR15
 4256 0200 00000000 		.word	.LANCHOR25
 4257 0204 00000000 		.word	.LANCHOR13
 4258 0208 00000000 		.word	.LANCHOR7
 4259 020c 00000000 		.word	.LANCHOR31
 4260 0210 00000000 		.word	bMbxRunning
 4261 0214 00000000 		.word	.LANCHOR27
 4262 0218 00000000 		.word	.LANCHOR30
 4263 021c 00000000 		.word	.LANCHOR12
 4264 0220 00000000 		.word	.LANCHOR32
 4265              	.LBE46:
 4266              		.cfi_endproc
 4267              	.LFE148:
 4269              		.section	.text.DC_CheckWatchdog,"ax",%progbits
 4270              		.align	1
 4271              		.global	DC_CheckWatchdog
 4272              		.syntax unified
 4273              		.thumb
 4274              		.thumb_func
 4276              	DC_CheckWatchdog:
 4277              	.LFB149:
2028:Lib/ssc/src/ecatslv.c **** 
2029:Lib/ssc/src/ecatslv.c **** 
2030:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2031:Lib/ssc/src/ecatslv.c **** /**
2032:Lib/ssc/src/ecatslv.c **** 
2033:Lib/ssc/src/ecatslv.c ****  \brief    This function checks the current Sync state and set the local flags
2034:Lib/ssc/src/ecatslv.c ****  The analyse of the local flags is handled in "CheckIfEcatError"
2035:Lib/ssc/src/ecatslv.c **** 
2036:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2037:Lib/ssc/src/ecatslv.c **** void DC_CheckWatchdog(void)
2038:Lib/ssc/src/ecatslv.c **** {
 4278              		.loc 1 2038 1 is_stmt 1 view -0
 4279              		.cfi_startproc
 4280              		@ args = 0, pretend = 0, frame = 0
 4281              		@ frame_needed = 0, uses_anonymous_args = 0
 4282              		@ link register save eliminated.
2039:Lib/ssc/src/ecatslv.c ****     if(bDcSyncActive)
 4283              		.loc 1 2039 5 view .LVU1305
 4284              		.loc 1 2039 8 is_stmt 0 view .LVU1306
 4285 0000 2C4B     		ldr	r3, .L358
 4286 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4287              		.loc 1 2039 7 view .LVU1307
 4288 0004 002B     		cmp	r3, #0
 4289 0006 54D0     		beq	.L349
2040:Lib/ssc/src/ecatslv.c ****     {
2041:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM4*/
2042:Lib/ssc/src/ecatslv.c ****         /*If Sync0 watchdog is enabled and expired*/
2043:Lib/ssc/src/ecatslv.c ****         if((Sync0WdValue > 0) && (Sync0WdCounter >= Sync0WdValue))
 4290              		.loc 1 2043 9 is_stmt 1 view .LVU1308
 4291              		.loc 1 2043 26 is_stmt 0 view .LVU1309
 4292 0008 2B4B     		ldr	r3, .L358+4
 4293 000a 1B88     		ldrh	r3, [r3]
 4294              		.loc 1 2043 11 view .LVU1310
 4295 000c 3BB1     		cbz	r3, .L351
 4296              		.loc 1 2043 50 discriminator 1 view .LVU1311
ARM GAS  /tmp/ccWTp91B.s 			page 158


 4297 000e 2B4A     		ldr	r2, .L358+8
 4298 0010 1288     		ldrh	r2, [r2]
 4299              		.loc 1 2043 31 discriminator 1 view .LVU1312
 4300 0012 9342     		cmp	r3, r2
 4301 0014 03D8     		bhi	.L351
2044:Lib/ssc/src/ecatslv.c ****         {
2045:Lib/ssc/src/ecatslv.c ****                 /*Sync0 watchdog expired*/
2046:Lib/ssc/src/ecatslv.c **** 
2047:Lib/ssc/src/ecatslv.c **** 					bDcRunning = FALSE;        
 4302              		.loc 1 2047 6 is_stmt 1 view .LVU1313
 4303              		.loc 1 2047 17 is_stmt 0 view .LVU1314
 4304 0016 2A4B     		ldr	r3, .L358+12
 4305 0018 0022     		movs	r2, #0
 4306 001a 1A70     		strb	r2, [r3]
 4307 001c 09E0     		b	.L352
 4308              	.L351:
2048:Lib/ssc/src/ecatslv.c ****         }
2049:Lib/ssc/src/ecatslv.c ****         else
2050:Lib/ssc/src/ecatslv.c ****         {
2051:Lib/ssc/src/ecatslv.c ****             if(Sync0WdCounter < Sync0WdValue)
 4309              		.loc 1 2051 13 is_stmt 1 view .LVU1315
 4310              		.loc 1 2051 31 is_stmt 0 view .LVU1316
 4311 001e 274A     		ldr	r2, .L358+8
 4312 0020 1288     		ldrh	r2, [r2]
 4313              		.loc 1 2051 15 view .LVU1317
 4314 0022 9342     		cmp	r3, r2
 4315 0024 02D9     		bls	.L353
2052:Lib/ssc/src/ecatslv.c ****             {
2053:Lib/ssc/src/ecatslv.c ****                 Sync0WdCounter ++;
 4316              		.loc 1 2053 17 is_stmt 1 view .LVU1318
 4317              		.loc 1 2053 32 is_stmt 0 view .LVU1319
 4318 0026 0132     		adds	r2, r2, #1
 4319 0028 244B     		ldr	r3, .L358+8
 4320 002a 1A80     		strh	r2, [r3]	@ movhi
 4321              	.L353:
2054:Lib/ssc/src/ecatslv.c ****             }
2055:Lib/ssc/src/ecatslv.c **** 
2056:Lib/ssc/src/ecatslv.c ****             bDcRunning = TRUE;
 4322              		.loc 1 2056 13 is_stmt 1 view .LVU1320
 4323              		.loc 1 2056 24 is_stmt 0 view .LVU1321
 4324 002c 244B     		ldr	r3, .L358+12
 4325 002e 0122     		movs	r2, #1
 4326 0030 1A70     		strb	r2, [r3]
 4327              	.L352:
2057:Lib/ssc/src/ecatslv.c ****         }
2058:Lib/ssc/src/ecatslv.c **** 
2059:Lib/ssc/src/ecatslv.c ****         if(bDcRunning)
 4328              		.loc 1 2059 9 is_stmt 1 view .LVU1322
 4329              		.loc 1 2059 12 is_stmt 0 view .LVU1323
 4330 0032 234B     		ldr	r3, .L358+12
 4331 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4332              		.loc 1 2059 11 view .LVU1324
 4333 0036 4BB1     		cbz	r3, .L354
2060:Lib/ssc/src/ecatslv.c ****         {
2061:Lib/ssc/src/ecatslv.c ****             /*Check the Sync1 cycle if Sync1 Wd is enabled*/
2062:Lib/ssc/src/ecatslv.c ****             if(Sync1WdValue > 0)
 4334              		.loc 1 2062 13 is_stmt 1 view .LVU1325
ARM GAS  /tmp/ccWTp91B.s 			page 159


 4335              		.loc 1 2062 29 is_stmt 0 view .LVU1326
 4336 0038 224B     		ldr	r3, .L358+16
 4337 003a 1B88     		ldrh	r3, [r3]
 4338              		.loc 1 2062 15 view .LVU1327
 4339 003c 33B1     		cbz	r3, .L354
2063:Lib/ssc/src/ecatslv.c ****             {
2064:Lib/ssc/src/ecatslv.c ****                 if(Sync1WdCounter < Sync1WdValue)
 4340              		.loc 1 2064 17 is_stmt 1 view .LVU1328
 4341              		.loc 1 2064 35 is_stmt 0 view .LVU1329
 4342 003e 224A     		ldr	r2, .L358+20
 4343 0040 1288     		ldrh	r2, [r2]
 4344              		.loc 1 2064 19 view .LVU1330
 4345 0042 9342     		cmp	r3, r2
 4346 0044 18D9     		bls	.L355
2065:Lib/ssc/src/ecatslv.c ****                 {
2066:Lib/ssc/src/ecatslv.c ****                     Sync1WdCounter ++;
 4347              		.loc 1 2066 21 is_stmt 1 view .LVU1331
 4348              		.loc 1 2066 36 is_stmt 0 view .LVU1332
 4349 0046 0132     		adds	r2, r2, #1
 4350 0048 1F4B     		ldr	r3, .L358+20
 4351 004a 1A80     		strh	r2, [r3]	@ movhi
 4352              	.L354:
2067:Lib/ssc/src/ecatslv.c ****                 }
2068:Lib/ssc/src/ecatslv.c ****                 else
2069:Lib/ssc/src/ecatslv.c ****                 {
2070:Lib/ssc/src/ecatslv.c ****                     /*Sync1 watchdog expired*/
2071:Lib/ssc/src/ecatslv.c ****                     bDcRunning = FALSE;
2072:Lib/ssc/src/ecatslv.c ****                 }
2073:Lib/ssc/src/ecatslv.c ****             }
2074:Lib/ssc/src/ecatslv.c ****         }
2075:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM4*/
2076:Lib/ssc/src/ecatslv.c **** 
2077:Lib/ssc/src/ecatslv.c ****         if(bDcRunning)
 4353              		.loc 1 2077 9 is_stmt 1 view .LVU1333
 4354              		.loc 1 2077 12 is_stmt 0 view .LVU1334
 4355 004c 1C4B     		ldr	r3, .L358+12
 4356 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4357              		.loc 1 2077 11 view .LVU1335
 4358 0050 4BB3     		cbz	r3, .L356
2078:Lib/ssc/src/ecatslv.c ****         {
2079:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) COE3*/
2080:Lib/ssc/src/ecatslv.c ****            if(sSyncManOutPar.u16SmEventMissedCounter < sErrorSettings.u16SyncErrorCounterLimit)
 4359              		.loc 1 2080 12 is_stmt 1 view .LVU1336
 4360              		.loc 1 2080 29 is_stmt 0 view .LVU1337
 4361 0052 1E4B     		ldr	r3, .L358+24
 4362 0054 1A8D     		ldrh	r2, [r3, #40]
 4363              		.loc 1 2080 70 view .LVU1338
 4364 0056 1E4B     		ldr	r3, .L358+28
 4365 0058 1B89     		ldrh	r3, [r3, #8]
 4366              		.loc 1 2080 14 view .LVU1339
 4367 005a 9A42     		cmp	r2, r3
 4368 005c 10D2     		bcs	.L357
2081:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) COE3*/
2082:Lib/ssc/src/ecatslv.c ****             {
2083:Lib/ssc/src/ecatslv.c ****                 bSmSyncSequenceValid = TRUE;
 4369              		.loc 1 2083 17 is_stmt 1 view .LVU1340
 4370              		.loc 1 2083 38 is_stmt 0 view .LVU1341
ARM GAS  /tmp/ccWTp91B.s 			page 160


 4371 005e 1D4B     		ldr	r3, .L358+32
 4372 0060 0122     		movs	r2, #1
 4373 0062 1A70     		strb	r2, [r3]
2084:Lib/ssc/src/ecatslv.c **** 
2085:Lib/ssc/src/ecatslv.c ****                 /*Wait for PLL is active increment the Pll valid counter*/
2086:Lib/ssc/src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
 4374              		.loc 1 2086 17 is_stmt 1 view .LVU1342
 4375              		.loc 1 2086 48 is_stmt 0 view .LVU1343
 4376 0064 1C4B     		ldr	r3, .L358+36
 4377 0066 B3F90030 		ldrsh	r3, [r3]
 4378              		.loc 1 2086 19 view .LVU1344
 4379 006a 002B     		cmp	r3, #0
 4380 006c 21DD     		ble	.L349
2087:Lib/ssc/src/ecatslv.c ****                 {
2088:Lib/ssc/src/ecatslv.c ****                     i16WaitForPllRunningCnt++;
 4381              		.loc 1 2088 21 is_stmt 1 view .LVU1345
 4382              		.loc 1 2088 44 is_stmt 0 view .LVU1346
 4383 006e 1B4A     		ldr	r2, .L358+40
 4384 0070 1388     		ldrh	r3, [r2]
 4385 0072 0133     		adds	r3, r3, #1
 4386 0074 1380     		strh	r3, [r2]	@ movhi
 4387 0076 7047     		bx	lr
 4388              	.L355:
2071:Lib/ssc/src/ecatslv.c ****                 }
 4389              		.loc 1 2071 21 is_stmt 1 view .LVU1347
2071:Lib/ssc/src/ecatslv.c ****                 }
 4390              		.loc 1 2071 32 is_stmt 0 view .LVU1348
 4391 0078 114B     		ldr	r3, .L358+12
 4392 007a 0022     		movs	r2, #0
 4393 007c 1A70     		strb	r2, [r3]
 4394 007e E5E7     		b	.L354
 4395              	.L357:
2089:Lib/ssc/src/ecatslv.c ****                 }
2090:Lib/ssc/src/ecatslv.c ****             }
2091:Lib/ssc/src/ecatslv.c ****             else if(bSmSyncSequenceValid)
 4396              		.loc 1 2091 18 is_stmt 1 view .LVU1349
 4397              		.loc 1 2091 21 is_stmt 0 view .LVU1350
 4398 0080 144B     		ldr	r3, .L358+32
 4399 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4400              		.loc 1 2091 20 view .LVU1351
 4401 0084 ABB1     		cbz	r3, .L349
2092:Lib/ssc/src/ecatslv.c ****             {
2093:Lib/ssc/src/ecatslv.c ****                 bSmSyncSequenceValid = FALSE;
 4402              		.loc 1 2093 17 is_stmt 1 view .LVU1352
 4403              		.loc 1 2093 38 is_stmt 0 view .LVU1353
 4404 0086 134B     		ldr	r3, .L358+32
 4405 0088 0022     		movs	r2, #0
 4406 008a 1A70     		strb	r2, [r3]
2094:Lib/ssc/src/ecatslv.c ****                 sSyncManOutPar.u8SyncError = 1;
 4407              		.loc 1 2094 17 is_stmt 1 view .LVU1354
 4408              		.loc 1 2094 44 is_stmt 0 view .LVU1355
 4409 008c 0F4B     		ldr	r3, .L358+24
 4410 008e 0122     		movs	r2, #1
 4411 0090 83F84020 		strb	r2, [r3, #64]
2095:Lib/ssc/src/ecatslv.c **** 
2096:Lib/ssc/src/ecatslv.c ****                 /*Wait for PLL is active reset the Pll valid counter*/
2097:Lib/ssc/src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
ARM GAS  /tmp/ccWTp91B.s 			page 161


 4412              		.loc 1 2097 17 is_stmt 1 view .LVU1356
 4413              		.loc 1 2097 48 is_stmt 0 view .LVU1357
 4414 0094 104B     		ldr	r3, .L358+36
 4415 0096 B3F90030 		ldrsh	r3, [r3]
 4416              		.loc 1 2097 19 view .LVU1358
 4417 009a 002B     		cmp	r3, #0
 4418 009c 09DD     		ble	.L349
2098:Lib/ssc/src/ecatslv.c ****                 {
2099:Lib/ssc/src/ecatslv.c ****                     i16WaitForPllRunningCnt = 0;
 4419              		.loc 1 2099 21 is_stmt 1 view .LVU1359
 4420              		.loc 1 2099 45 is_stmt 0 view .LVU1360
 4421 009e 0F4B     		ldr	r3, .L358+40
 4422 00a0 0022     		movs	r2, #0
 4423 00a2 1A80     		strh	r2, [r3]	@ movhi
 4424 00a4 7047     		bx	lr
 4425              	.L356:
2100:Lib/ssc/src/ecatslv.c ****                 }
2101:Lib/ssc/src/ecatslv.c ****             }
2102:Lib/ssc/src/ecatslv.c ****         }
2103:Lib/ssc/src/ecatslv.c ****         else if(bSmSyncSequenceValid)
 4426              		.loc 1 2103 14 is_stmt 1 view .LVU1361
 4427              		.loc 1 2103 17 is_stmt 0 view .LVU1362
 4428 00a6 0B4B     		ldr	r3, .L358+32
 4429 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4430              		.loc 1 2103 16 view .LVU1363
 4431 00aa 13B1     		cbz	r3, .L349
2104:Lib/ssc/src/ecatslv.c ****         {
2105:Lib/ssc/src/ecatslv.c ****             bSmSyncSequenceValid = FALSE;
 4432              		.loc 1 2105 13 is_stmt 1 view .LVU1364
 4433              		.loc 1 2105 34 is_stmt 0 view .LVU1365
 4434 00ac 094B     		ldr	r3, .L358+32
 4435 00ae 0022     		movs	r2, #0
 4436 00b0 1A70     		strb	r2, [r3]
 4437              	.L349:
2106:Lib/ssc/src/ecatslv.c ****         }
2107:Lib/ssc/src/ecatslv.c **** 
2108:Lib/ssc/src/ecatslv.c ****     }
2109:Lib/ssc/src/ecatslv.c **** }
 4438              		.loc 1 2109 1 view .LVU1366
 4439 00b2 7047     		bx	lr
 4440              	.L359:
 4441              		.align	2
 4442              	.L358:
 4443 00b4 00000000 		.word	.LANCHOR15
 4444 00b8 00000000 		.word	.LANCHOR21
 4445 00bc 00000000 		.word	.LANCHOR22
 4446 00c0 00000000 		.word	.LANCHOR25
 4447 00c4 00000000 		.word	.LANCHOR24
 4448 00c8 00000000 		.word	.LANCHOR23
 4449 00cc 00000000 		.word	sSyncManOutPar
 4450 00d0 00000000 		.word	sErrorSettings
 4451 00d4 00000000 		.word	.LANCHOR26
 4452 00d8 00000000 		.word	.LANCHOR27
 4453 00dc 00000000 		.word	.LANCHOR30
 4454              		.cfi_endproc
 4455              	.LFE149:
 4457              		.section	.text.CheckIfEcatError,"ax",%progbits
ARM GAS  /tmp/ccWTp91B.s 			page 162


 4458              		.align	1
 4459              		.global	CheckIfEcatError
 4460              		.syntax unified
 4461              		.thumb
 4462              		.thumb_func
 4464              	CheckIfEcatError:
 4465              	.LFB150:
2110:Lib/ssc/src/ecatslv.c **** 
2111:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2112:Lib/ssc/src/ecatslv.c **** /**
2113:Lib/ssc/src/ecatslv.c **** 
2114:Lib/ssc/src/ecatslv.c ****  \brief    Checks communication and synchronisation variables and update AL status / AL status code
2115:Lib/ssc/src/ecatslv.c **** 
2116:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2117:Lib/ssc/src/ecatslv.c **** void CheckIfEcatError(void)
2118:Lib/ssc/src/ecatslv.c **** {
 4466              		.loc 1 2118 1 is_stmt 1 view -0
 4467              		.cfi_startproc
 4468              		@ args = 0, pretend = 0, frame = 8
 4469              		@ frame_needed = 0, uses_anonymous_args = 0
 4470 0000 00B5     		push	{lr}
 4471              		.cfi_def_cfa_offset 4
 4472              		.cfi_offset 14, -4
 4473 0002 83B0     		sub	sp, sp, #12
 4474              		.cfi_def_cfa_offset 16
2119:Lib/ssc/src/ecatslv.c ****    /*if the watchdog is enabled check the the process data watchdog in the ESC
2120:Lib/ssc/src/ecatslv.c ****    and set the AL status code 0x1B if the watchdog expired*/
2121:Lib/ssc/src/ecatslv.c ****    if (EcatWdValue != 0)
 4475              		.loc 1 2121 4 view .LVU1368
 4476              		.loc 1 2121 20 is_stmt 0 view .LVU1369
 4477 0004 1D4B     		ldr	r3, .L371
 4478 0006 1B88     		ldrh	r3, [r3]
 4479              		.loc 1 2121 7 view .LVU1370
 4480 0008 73B9     		cbnz	r3, .L367
 4481              	.L361:
2122:Lib/ssc/src/ecatslv.c ****    {
2123:Lib/ssc/src/ecatslv.c ****       /*watchdog time is set => watchdog is active*/
2124:Lib/ssc/src/ecatslv.c ****       UINT16 WdStatusOK = 0;
2125:Lib/ssc/src/ecatslv.c **** 
2126:Lib/ssc/src/ecatslv.c ****       HW_EscReadWord(WdStatusOK, ESC_PD_WD_STATE);
2127:Lib/ssc/src/ecatslv.c ****       WdStatusOK = SWAPWORD(WdStatusOK);
2128:Lib/ssc/src/ecatslv.c **** 
2129:Lib/ssc/src/ecatslv.c ****       /*ECATCHANGE_START(V5.11) ECAT4*/
2130:Lib/ssc/src/ecatslv.c ****       if (!(WdStatusOK & ESC_PD_WD_TRIGGER_MASK) && (nPdOutputSize > 0))
2131:Lib/ssc/src/ecatslv.c ****       {
2132:Lib/ssc/src/ecatslv.c ****          /*The device is in OP state*/
2133:Lib/ssc/src/ecatslv.c **** 
2134:Lib/ssc/src/ecatslv.c ****          if (bEcatOutputUpdateRunning)
2135:Lib/ssc/src/ecatslv.c ****          {
2136:Lib/ssc/src/ecatslv.c ****             AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SMWATCHDOG);
2137:Lib/ssc/src/ecatslv.c ****             return;
2138:Lib/ssc/src/ecatslv.c ****          }
2139:Lib/ssc/src/ecatslv.c **** 
2140:Lib/ssc/src/ecatslv.c ****          else
2141:Lib/ssc/src/ecatslv.c ****          {
2142:Lib/ssc/src/ecatslv.c ****             bEcatFirstOutputsReceived = FALSE;
2143:Lib/ssc/src/ecatslv.c ****          }
ARM GAS  /tmp/ccWTp91B.s 			page 163


2144:Lib/ssc/src/ecatslv.c ****       }
2145:Lib/ssc/src/ecatslv.c ****       /*ECATCHANGE_END(V5.11) ECAT4*/
2146:Lib/ssc/src/ecatslv.c ****    }
2147:Lib/ssc/src/ecatslv.c ****  
2148:Lib/ssc/src/ecatslv.c ****    if(bDcSyncActive)
 4482              		.loc 1 2148 4 is_stmt 1 view .LVU1371
 4483              		.loc 1 2148 7 is_stmt 0 view .LVU1372
 4484 000a 1D4B     		ldr	r3, .L371+4
 4485 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4486              		.loc 1 2148 6 view .LVU1373
 4487 000e 43B1     		cbz	r3, .L360
2149:Lib/ssc/src/ecatslv.c ****    {
2150:Lib/ssc/src/ecatslv.c ****        if(bEcatOutputUpdateRunning)
 4488              		.loc 1 2150 8 is_stmt 1 view .LVU1374
 4489              		.loc 1 2150 11 is_stmt 0 view .LVU1375
 4490 0010 1C4B     		ldr	r3, .L371+8
 4491 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4492              		.loc 1 2150 10 view .LVU1376
 4493 0014 2BB1     		cbz	r3, .L360
2151:Lib/ssc/src/ecatslv.c ****        {
2152:Lib/ssc/src/ecatslv.c ****            /*Slave is in OP state*/
2153:Lib/ssc/src/ecatslv.c ****            if(!bDcRunning)
 4494              		.loc 1 2153 12 is_stmt 1 view .LVU1377
 4495              		.loc 1 2153 15 is_stmt 0 view .LVU1378
 4496 0016 1C4B     		ldr	r3, .L371+12
 4497 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4498              		.loc 1 2153 14 view .LVU1379
 4499 001a 23B3     		cbz	r3, .L368
2154:Lib/ssc/src/ecatslv.c ****            {
2155:Lib/ssc/src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_FATALSYNCERROR);
2156:Lib/ssc/src/ecatslv.c ****                return;
2157:Lib/ssc/src/ecatslv.c ****            }
2158:Lib/ssc/src/ecatslv.c ****            else if(!bSmSyncSequenceValid)
 4500              		.loc 1 2158 17 is_stmt 1 view .LVU1380
 4501              		.loc 1 2158 20 is_stmt 0 view .LVU1381
 4502 001c 1B4B     		ldr	r3, .L371+16
 4503 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504              		.loc 1 2158 19 view .LVU1382
 4505 0020 33B3     		cbz	r3, .L369
 4506              	.L360:
2159:Lib/ssc/src/ecatslv.c ****            {
2160:Lib/ssc/src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SYNCERROR);
2161:Lib/ssc/src/ecatslv.c ****                return;
2162:Lib/ssc/src/ecatslv.c ****            }
2163:Lib/ssc/src/ecatslv.c ****         
2164:Lib/ssc/src/ecatslv.c ****        }
2165:Lib/ssc/src/ecatslv.c ****    }
2166:Lib/ssc/src/ecatslv.c **** }
 4507              		.loc 1 2166 1 view .LVU1383
 4508 0022 03B0     		add	sp, sp, #12
 4509              		.cfi_remember_state
 4510              		.cfi_def_cfa_offset 4
 4511              		@ sp needed
 4512 0024 5DF804FB 		ldr	pc, [sp], #4
 4513              	.L367:
 4514              		.cfi_restore_state
 4515              	.LBB47:
ARM GAS  /tmp/ccWTp91B.s 			page 164


2124:Lib/ssc/src/ecatslv.c **** 
 4516              		.loc 1 2124 7 is_stmt 1 view .LVU1384
2124:Lib/ssc/src/ecatslv.c **** 
 4517              		.loc 1 2124 14 is_stmt 0 view .LVU1385
 4518 0028 0023     		movs	r3, #0
 4519 002a ADF80630 		strh	r3, [sp, #6]	@ movhi
2126:Lib/ssc/src/ecatslv.c ****       WdStatusOK = SWAPWORD(WdStatusOK);
 4520              		.loc 1 2126 7 is_stmt 1 view .LVU1386
 4521 002e 0222     		movs	r2, #2
 4522 0030 4FF48861 		mov	r1, #1088
 4523 0034 0DF10600 		add	r0, sp, #6
 4524 0038 FFF7FEFF 		bl	HW_EscRead
 4525              	.LVL369:
2127:Lib/ssc/src/ecatslv.c **** 
 4526              		.loc 1 2127 7 view .LVU1387
2127:Lib/ssc/src/ecatslv.c **** 
 4527              		.loc 1 2127 18 is_stmt 0 view .LVU1388
 4528 003c BDF80630 		ldrh	r3, [sp, #6]
2130:Lib/ssc/src/ecatslv.c ****       {
 4529              		.loc 1 2130 7 is_stmt 1 view .LVU1389
2130:Lib/ssc/src/ecatslv.c ****       {
 4530              		.loc 1 2130 10 is_stmt 0 view .LVU1390
 4531 0040 13F0010F 		tst	r3, #1
 4532 0044 E1D1     		bne	.L361
2130:Lib/ssc/src/ecatslv.c ****       {
 4533              		.loc 1 2130 68 discriminator 1 view .LVU1391
 4534 0046 124B     		ldr	r3, .L371+20
 4535 0048 1B88     		ldrh	r3, [r3]
2130:Lib/ssc/src/ecatslv.c ****       {
 4536              		.loc 1 2130 50 discriminator 1 view .LVU1392
 4537 004a 002B     		cmp	r3, #0
 4538 004c DDD0     		beq	.L361
2134:Lib/ssc/src/ecatslv.c ****          {
 4539              		.loc 1 2134 10 is_stmt 1 view .LVU1393
2134:Lib/ssc/src/ecatslv.c ****          {
 4540              		.loc 1 2134 14 is_stmt 0 view .LVU1394
 4541 004e 0D4B     		ldr	r3, .L371+8
 4542 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2134:Lib/ssc/src/ecatslv.c ****          {
 4543              		.loc 1 2134 13 view .LVU1395
 4544 0052 1BB9     		cbnz	r3, .L370
2142:Lib/ssc/src/ecatslv.c ****          }
 4545              		.loc 1 2142 13 is_stmt 1 view .LVU1396
2142:Lib/ssc/src/ecatslv.c ****          }
 4546              		.loc 1 2142 39 is_stmt 0 view .LVU1397
 4547 0054 0F4B     		ldr	r3, .L371+24
 4548 0056 0022     		movs	r2, #0
 4549 0058 1A70     		strb	r2, [r3]
 4550 005a D6E7     		b	.L361
 4551              	.L370:
2136:Lib/ssc/src/ecatslv.c ****             return;
 4552              		.loc 1 2136 13 is_stmt 1 view .LVU1398
 4553 005c 1B21     		movs	r1, #27
 4554 005e 0420     		movs	r0, #4
 4555 0060 FFF7FEFF 		bl	AL_ControlInd
 4556              	.LVL370:
2137:Lib/ssc/src/ecatslv.c ****          }
ARM GAS  /tmp/ccWTp91B.s 			page 165


 4557              		.loc 1 2137 13 view .LVU1399
 4558 0064 DDE7     		b	.L360
 4559              	.L368:
 4560              	.LBE47:
2155:Lib/ssc/src/ecatslv.c ****                return;
 4561              		.loc 1 2155 16 view .LVU1400
 4562 0066 2C21     		movs	r1, #44
 4563 0068 0420     		movs	r0, #4
 4564 006a FFF7FEFF 		bl	AL_ControlInd
 4565              	.LVL371:
2156:Lib/ssc/src/ecatslv.c ****            }
 4566              		.loc 1 2156 16 view .LVU1401
 4567 006e D8E7     		b	.L360
 4568              	.L369:
2160:Lib/ssc/src/ecatslv.c ****                return;
 4569              		.loc 1 2160 16 view .LVU1402
 4570 0070 1A21     		movs	r1, #26
 4571 0072 0420     		movs	r0, #4
 4572 0074 FFF7FEFF 		bl	AL_ControlInd
 4573              	.LVL372:
2161:Lib/ssc/src/ecatslv.c ****            }
 4574              		.loc 1 2161 16 view .LVU1403
 4575 0078 D3E7     		b	.L360
 4576              	.L372:
 4577 007a 00BF     		.align	2
 4578              	.L371:
 4579 007c 00000000 		.word	.LANCHOR20
 4580 0080 00000000 		.word	.LANCHOR15
 4581 0084 00000000 		.word	.LANCHOR31
 4582 0088 00000000 		.word	.LANCHOR25
 4583 008c 00000000 		.word	.LANCHOR26
 4584 0090 00000000 		.word	.LANCHOR7
 4585 0094 00000000 		.word	.LANCHOR13
 4586              		.cfi_endproc
 4587              	.LFE150:
 4589              		.section	.text.ECAT_StateChange,"ax",%progbits
 4590              		.align	1
 4591              		.global	ECAT_StateChange
 4592              		.syntax unified
 4593              		.thumb
 4594              		.thumb_func
 4596              	ECAT_StateChange:
 4597              	.LVL373:
 4598              	.LFB151:
2167:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2168:Lib/ssc/src/ecatslv.c **** /**
2169:Lib/ssc/src/ecatslv.c ****  \param    alStatus: requested state
2170:Lib/ssc/src/ecatslv.c ****  \param    alStatusCode: value for the AL-Status register
2171:Lib/ssc/src/ecatslv.c ****  
2172:Lib/ssc/src/ecatslv.c ****  \brief    This function changes the state of the EtherCAT slave if the requested state
2173:Lib/ssc/src/ecatslv.c ****              is lower than the actual state, otherwise the error condition will be reset.
2174:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2175:Lib/ssc/src/ecatslv.c **** 
2176:Lib/ssc/src/ecatslv.c **** void ECAT_StateChange(UINT8 alStatus, UINT16 alStatusCode)
2177:Lib/ssc/src/ecatslv.c **** {
 4599              		.loc 1 2177 1 view -0
 4600              		.cfi_startproc
ARM GAS  /tmp/ccWTp91B.s 			page 166


 4601              		@ args = 0, pretend = 0, frame = 0
 4602              		@ frame_needed = 0, uses_anonymous_args = 0
 4603              		.loc 1 2177 1 is_stmt 0 view .LVU1405
 4604 0000 10B5     		push	{r4, lr}
 4605              		.cfi_def_cfa_offset 8
 4606              		.cfi_offset 4, -8
 4607              		.cfi_offset 14, -4
 4608 0002 0C46     		mov	r4, r1
2178:Lib/ssc/src/ecatslv.c ****     UINT8 Status = alStatus;
 4609              		.loc 1 2178 5 is_stmt 1 view .LVU1406
 4610              	.LVL374:
2179:Lib/ssc/src/ecatslv.c **** 
2180:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 4611              		.loc 1 2180 5 view .LVU1407
 4612              		.loc 1 2180 8 is_stmt 0 view .LVU1408
 4613 0004 434B     		ldr	r3, .L398
 4614 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4615              		.loc 1 2180 7 view .LVU1409
 4616 0008 002B     		cmp	r3, #0
 4617 000a 53D0     		beq	.L374
2181:Lib/ssc/src/ecatslv.c ****     {
2182:Lib/ssc/src/ecatslv.c ****         /*State transition is pending*/
2183:Lib/ssc/src/ecatslv.c **** 
2184:Lib/ssc/src/ecatslv.c ****         if(bApplEsmPending)
 4618              		.loc 1 2184 9 is_stmt 1 view .LVU1410
 4619              		.loc 1 2184 12 is_stmt 0 view .LVU1411
 4620 000c 424B     		ldr	r3, .L398+4
 4621 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4622              		.loc 1 2184 11 view .LVU1412
 4623 0010 4BB1     		cbz	r3, .L375
2185:Lib/ssc/src/ecatslv.c ****         {
2186:Lib/ssc/src/ecatslv.c ****             /*The generic stack has currently control of the state transition.
2187:Lib/ssc/src/ecatslv.c ****             In case on an local error force ESM timeout*/
2188:Lib/ssc/src/ecatslv.c ****             if(alStatusCode != 0)
 4624              		.loc 1 2188 13 is_stmt 1 view .LVU1413
 4625              		.loc 1 2188 15 is_stmt 0 view .LVU1414
 4626 0012 41B3     		cbz	r1, .L373
2189:Lib/ssc/src/ecatslv.c ****             {
2190:Lib/ssc/src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4627              		.loc 1 2190 17 is_stmt 1 view .LVU1415
 4628              		.loc 1 2190 33 is_stmt 0 view .LVU1416
 4629 0014 414B     		ldr	r3, .L398+8
 4630 0016 0122     		movs	r2, #1
 4631 0018 1A70     		strb	r2, [r3]
2191:Lib/ssc/src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4632              		.loc 1 2191 17 is_stmt 1 view .LVU1417
 4633              		.loc 1 2191 35 is_stmt 0 view .LVU1418
 4634 001a 414B     		ldr	r3, .L398+12
 4635 001c 1980     		strh	r1, [r3]	@ movhi
2192:Lib/ssc/src/ecatslv.c ****                 EsmTimeoutCounter = 0;
 4636              		.loc 1 2192 17 is_stmt 1 view .LVU1419
 4637              		.loc 1 2192 35 is_stmt 0 view .LVU1420
 4638 001e 414B     		ldr	r3, .L398+16
 4639 0020 0022     		movs	r2, #0
 4640 0022 1A80     		strh	r2, [r3]	@ movhi
 4641 0024 1FE0     		b	.L373
 4642              	.L375:
ARM GAS  /tmp/ccWTp91B.s 			page 167


2193:Lib/ssc/src/ecatslv.c ****             }
2194:Lib/ssc/src/ecatslv.c ****         }
2195:Lib/ssc/src/ecatslv.c ****         else
2196:Lib/ssc/src/ecatslv.c ****         {
2197:Lib/ssc/src/ecatslv.c ****             /*complete the state transition*/
2198:Lib/ssc/src/ecatslv.c **** 
2199:Lib/ssc/src/ecatslv.c ****             if(alStatusCode != 0)
 4643              		.loc 1 2199 13 is_stmt 1 view .LVU1421
 4644              		.loc 1 2199 15 is_stmt 0 view .LVU1422
 4645 0026 59B3     		cbz	r1, .L377
2200:Lib/ssc/src/ecatslv.c ****             {
2201:Lib/ssc/src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4646              		.loc 1 2201 17 is_stmt 1 view .LVU1423
 4647              		.loc 1 2201 33 is_stmt 0 view .LVU1424
 4648 0028 3C4B     		ldr	r3, .L398+8
 4649 002a 0122     		movs	r2, #1
 4650 002c 1A70     		strb	r2, [r3]
2202:Lib/ssc/src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4651              		.loc 1 2202 17 is_stmt 1 view .LVU1425
 4652              		.loc 1 2202 35 is_stmt 0 view .LVU1426
 4653 002e 3C4B     		ldr	r3, .L398+12
 4654 0030 1980     		strh	r1, [r3]	@ movhi
2203:Lib/ssc/src/ecatslv.c **** 
2204:Lib/ssc/src/ecatslv.c ****                 /*State transition failed due to local application reasons*/
2205:Lib/ssc/src/ecatslv.c ****                 switch(nEcatStateTrans)
 4655              		.loc 1 2205 17 is_stmt 1 view .LVU1427
 4656 0032 3D4B     		ldr	r3, .L398+20
 4657 0034 1B88     		ldrh	r3, [r3]
 4658 0036 242B     		cmp	r3, #36
 4659 0038 1DD0     		beq	.L378
 4660              		.loc 1 2205 17 is_stmt 0 view .LVU1428
 4661 003a 15D8     		bhi	.L379
 4662 003c 123B     		subs	r3, r3, #18
 4663 003e 9BB2     		uxth	r3, r3
 4664 0040 9342     		cmp	r3, r2
 4665 0042 03D8     		bhi	.L380
2206:Lib/ssc/src/ecatslv.c ****                 {
2207:Lib/ssc/src/ecatslv.c ****                     case INIT_2_PREOP:
2208:Lib/ssc/src/ecatslv.c ****                     case INIT_2_BOOT:
2209:Lib/ssc/src/ecatslv.c ****                           APPL_StopMailboxHandler();
 4666              		.loc 1 2209 27 is_stmt 1 view .LVU1429
 4667 0044 FFF7FEFF 		bl	APPL_StopMailboxHandler
 4668              	.LVL375:
2210:Lib/ssc/src/ecatslv.c ****                           MBX_StopMailboxHandler();
 4669              		.loc 1 2210 27 view .LVU1430
 4670 0048 FFF7FEFF 		bl	MBX_StopMailboxHandler
 4671              	.LVL376:
2211:Lib/ssc/src/ecatslv.c ****                     break;
 4672              		.loc 1 2211 21 view .LVU1431
 4673              	.L380:
2212:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2213:Lib/ssc/src/ecatslv.c ****                           APPL_StopInputHandler();
2214:Lib/ssc/src/ecatslv.c ****                           StopInputHandler();
2215:Lib/ssc/src/ecatslv.c ****                     break;
2216:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
2217:Lib/ssc/src/ecatslv.c ****                           APPL_StopOutputHandler();
2218:Lib/ssc/src/ecatslv.c ****                           StopOutputHandler();
ARM GAS  /tmp/ccWTp91B.s 			page 168


2219:Lib/ssc/src/ecatslv.c ****                     break;
2220:Lib/ssc/src/ecatslv.c ****                 }
2221:Lib/ssc/src/ecatslv.c **** 
2222:Lib/ssc/src/ecatslv.c ****                 /*In case of a failed state transition the */
2223:Lib/ssc/src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans >> 4);
 4674              		.loc 1 2223 17 view .LVU1432
 4675              		.loc 1 2223 27 is_stmt 0 view .LVU1433
 4676 004c 364B     		ldr	r3, .L398+20
 4677 004e 1888     		ldrh	r0, [r3]
 4678              		.loc 1 2223 24 view .LVU1434
 4679 0050 C0F30710 		ubfx	r0, r0, #4, #8
 4680              	.LVL377:
 4681              	.L383:
2224:Lib/ssc/src/ecatslv.c ****             }
2225:Lib/ssc/src/ecatslv.c ****             else
2226:Lib/ssc/src/ecatslv.c ****             {
2227:Lib/ssc/src/ecatslv.c ****                 /*State transition succeed*/
2228:Lib/ssc/src/ecatslv.c ****                  
2229:Lib/ssc/src/ecatslv.c ****                 switch(nEcatStateTrans)
2230:Lib/ssc/src/ecatslv.c ****                 {
2231:Lib/ssc/src/ecatslv.c ****                     case INIT_2_PREOP:
2232:Lib/ssc/src/ecatslv.c ****                     case INIT_2_BOOT:
2233:Lib/ssc/src/ecatslv.c ****                         bMbxRunning = TRUE;
2234:Lib/ssc/src/ecatslv.c ****                     break;
2235:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2236:Lib/ssc/src/ecatslv.c ****                         bEcatInputUpdateRunning = TRUE;
2237:Lib/ssc/src/ecatslv.c ****                     break;
2238:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
2239:Lib/ssc/src/ecatslv.c ****                           bEcatOutputUpdateRunning = TRUE;
2240:Lib/ssc/src/ecatslv.c ****                     break;
2241:Lib/ssc/src/ecatslv.c ****                 }
2242:Lib/ssc/src/ecatslv.c **** 
2243:Lib/ssc/src/ecatslv.c ****                 /*In case of a failed state transition the */
2244:Lib/ssc/src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
2245:Lib/ssc/src/ecatslv.c ****             }
2246:Lib/ssc/src/ecatslv.c ****                 /*Pending state transition finished => write AL Status and AL Status Code*/
2247:Lib/ssc/src/ecatslv.c ****                 bEcatWaitForAlControlRes = FALSE;
 4682              		.loc 1 2247 17 is_stmt 1 view .LVU1435
 4683              		.loc 1 2247 42 is_stmt 0 view .LVU1436
 4684 0054 2F4B     		ldr	r3, .L398
 4685 0056 0022     		movs	r2, #0
 4686 0058 1A70     		strb	r2, [r3]
2248:Lib/ssc/src/ecatslv.c **** 
2249:Lib/ssc/src/ecatslv.c ****                 if(alStatusCode != 0)
 4687              		.loc 1 2249 17 is_stmt 1 view .LVU1437
 4688              		.loc 1 2249 19 is_stmt 0 view .LVU1438
 4689 005a 0CB1     		cbz	r4, .L389
2250:Lib/ssc/src/ecatslv.c ****                     Status |= STATE_CHANGE;
 4690              		.loc 1 2250 21 is_stmt 1 view .LVU1439
 4691              		.loc 1 2250 28 is_stmt 0 view .LVU1440
 4692 005c 40F01000 		orr	r0, r0, #16
 4693              	.LVL378:
 4694              	.L389:
2251:Lib/ssc/src/ecatslv.c **** 
2252:Lib/ssc/src/ecatslv.c ****                 SetALStatus(Status,alStatusCode);
 4695              		.loc 1 2252 17 is_stmt 1 view .LVU1441
 4696 0060 2146     		mov	r1, r4
ARM GAS  /tmp/ccWTp91B.s 			page 169


 4697 0062 FFF7FEFF 		bl	SetALStatus
 4698              	.LVL379:
 4699              	.L373:
2253:Lib/ssc/src/ecatslv.c **** 
2254:Lib/ssc/src/ecatslv.c ****         }// state transition need to be completed by the local application
2255:Lib/ssc/src/ecatslv.c ****     }//State transition pending
2256:Lib/ssc/src/ecatslv.c ****     else
2257:Lib/ssc/src/ecatslv.c ****     {
2258:Lib/ssc/src/ecatslv.c ****         if ( alStatusCode != 0 )
2259:Lib/ssc/src/ecatslv.c ****         {
2260:Lib/ssc/src/ecatslv.c ****             /* Local error has happened, we change the state if necessary */
2261:Lib/ssc/src/ecatslv.c ****             bLocalErrorFlag = TRUE;
2262:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
2263:Lib/ssc/src/ecatslv.c ****     
2264:Lib/ssc/src/ecatslv.c ****             if ( (alStatus & STATE_MASK) < (nAlStatus & STATE_MASK) )
2265:Lib/ssc/src/ecatslv.c ****             {
2266:Lib/ssc/src/ecatslv.c ****                 AL_ControlInd(alStatus, alStatusCode);
2267:Lib/ssc/src/ecatslv.c ****             }
2268:Lib/ssc/src/ecatslv.c ****         }
2269:Lib/ssc/src/ecatslv.c ****         else if (bLocalErrorFlag)
2270:Lib/ssc/src/ecatslv.c ****         {
2271:Lib/ssc/src/ecatslv.c ****             /*a local error is gone */
2272:Lib/ssc/src/ecatslv.c ****             if ( (nAlStatus & STATE_MASK) == (STATE_SAFEOP | STATE_OP) )
2273:Lib/ssc/src/ecatslv.c ****             {
2274:Lib/ssc/src/ecatslv.c ****                 if(nPdOutputSize > 0)
2275:Lib/ssc/src/ecatslv.c ****                 {
2276:Lib/ssc/src/ecatslv.c ****                     /* we have to enable the output process data SyncManger (default: SM2),
2277:Lib/ssc/src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2278:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2279:Lib/ssc/src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_OUT);
2280:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2281:Lib/ssc/src/ecatslv.c ****                 }
2282:Lib/ssc/src/ecatslv.c ****                 else 
2283:Lib/ssc/src/ecatslv.c ****                     if (nPdInputSize > 0)
2284:Lib/ssc/src/ecatslv.c ****                 {
2285:Lib/ssc/src/ecatslv.c ****                     /* we have to enable the input process data SyncManger (default: SM3),
2286:Lib/ssc/src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2287:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2288:Lib/ssc/src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_IN);
2289:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2290:Lib/ssc/src/ecatslv.c ****                 }
2291:Lib/ssc/src/ecatslv.c ****             }
2292:Lib/ssc/src/ecatslv.c ****             bLocalErrorFlag = FALSE;
2293:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
2294:Lib/ssc/src/ecatslv.c ****         }
2295:Lib/ssc/src/ecatslv.c ****     }
2296:Lib/ssc/src/ecatslv.c **** }
 4700              		.loc 1 2296 1 is_stmt 0 view .LVU1442
 4701 0066 10BD     		pop	{r4, pc}
 4702              	.LVL380:
 4703              	.L379:
2205:Lib/ssc/src/ecatslv.c ****                 {
 4704              		.loc 1 2205 17 view .LVU1443
 4705 0068 482B     		cmp	r3, #72
 4706 006a EFD1     		bne	.L380
2217:Lib/ssc/src/ecatslv.c ****                           StopOutputHandler();
 4707              		.loc 1 2217 27 is_stmt 1 view .LVU1444
ARM GAS  /tmp/ccWTp91B.s 			page 170


 4708 006c FFF7FEFF 		bl	APPL_StopOutputHandler
 4709              	.LVL381:
2218:Lib/ssc/src/ecatslv.c ****                     break;
 4710              		.loc 1 2218 27 view .LVU1445
 4711 0070 FFF7FEFF 		bl	StopOutputHandler
 4712              	.LVL382:
2219:Lib/ssc/src/ecatslv.c ****                 }
 4713              		.loc 1 2219 21 view .LVU1446
 4714 0074 EAE7     		b	.L380
 4715              	.LVL383:
 4716              	.L378:
2213:Lib/ssc/src/ecatslv.c ****                           StopInputHandler();
 4717              		.loc 1 2213 27 view .LVU1447
 4718 0076 FFF7FEFF 		bl	APPL_StopInputHandler
 4719              	.LVL384:
2214:Lib/ssc/src/ecatslv.c ****                     break;
 4720              		.loc 1 2214 27 view .LVU1448
 4721 007a FFF7FEFF 		bl	StopInputHandler
 4722              	.LVL385:
2215:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
 4723              		.loc 1 2215 21 view .LVU1449
 4724 007e E5E7     		b	.L380
 4725              	.LVL386:
 4726              	.L377:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4727              		.loc 1 2229 17 view .LVU1450
 4728 0080 294B     		ldr	r3, .L398+20
 4729 0082 1888     		ldrh	r0, [r3]
 4730              	.LVL387:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4731              		.loc 1 2229 17 is_stmt 0 view .LVU1451
 4732 0084 2428     		cmp	r0, #36
 4733 0086 11D0     		beq	.L384
 4734 0088 0AD8     		bhi	.L385
 4735 008a A0F11203 		sub	r3, r0, #18
 4736 008e 9BB2     		uxth	r3, r3
 4737 0090 012B     		cmp	r3, #1
 4738 0092 02D8     		bhi	.L386
2233:Lib/ssc/src/ecatslv.c ****                     break;
 4739              		.loc 1 2233 25 is_stmt 1 view .LVU1452
2233:Lib/ssc/src/ecatslv.c ****                     break;
 4740              		.loc 1 2233 37 is_stmt 0 view .LVU1453
 4741 0094 254B     		ldr	r3, .L398+24
 4742 0096 0122     		movs	r2, #1
 4743 0098 1A70     		strb	r2, [r3]
2234:Lib/ssc/src/ecatslv.c ****                     case PREOP_2_SAFEOP:
 4744              		.loc 1 2234 21 is_stmt 1 view .LVU1454
 4745              	.L386:
2244:Lib/ssc/src/ecatslv.c ****             }
 4746              		.loc 1 2244 17 view .LVU1455
2244:Lib/ssc/src/ecatslv.c ****             }
 4747              		.loc 1 2244 24 is_stmt 0 view .LVU1456
 4748 009a 00F00F00 		and	r0, r0, #15
 4749              	.LVL388:
2244:Lib/ssc/src/ecatslv.c ****             }
 4750              		.loc 1 2244 24 view .LVU1457
 4751 009e D9E7     		b	.L383
ARM GAS  /tmp/ccWTp91B.s 			page 171


 4752              	.LVL389:
 4753              	.L385:
2229:Lib/ssc/src/ecatslv.c ****                 {
 4754              		.loc 1 2229 17 view .LVU1458
 4755 00a0 4828     		cmp	r0, #72
 4756 00a2 FAD1     		bne	.L386
2239:Lib/ssc/src/ecatslv.c ****                     break;
 4757              		.loc 1 2239 27 is_stmt 1 view .LVU1459
2239:Lib/ssc/src/ecatslv.c ****                     break;
 4758              		.loc 1 2239 52 is_stmt 0 view .LVU1460
 4759 00a4 224B     		ldr	r3, .L398+28
 4760 00a6 0122     		movs	r2, #1
 4761 00a8 1A70     		strb	r2, [r3]
2240:Lib/ssc/src/ecatslv.c ****                 }
 4762              		.loc 1 2240 21 is_stmt 1 view .LVU1461
 4763 00aa F6E7     		b	.L386
 4764              	.L384:
2236:Lib/ssc/src/ecatslv.c ****                     break;
 4765              		.loc 1 2236 25 view .LVU1462
2236:Lib/ssc/src/ecatslv.c ****                     break;
 4766              		.loc 1 2236 49 is_stmt 0 view .LVU1463
 4767 00ac 214B     		ldr	r3, .L398+32
 4768 00ae 0122     		movs	r2, #1
 4769 00b0 1A70     		strb	r2, [r3]
2237:Lib/ssc/src/ecatslv.c ****                     case SAFEOP_2_OP:
 4770              		.loc 1 2237 21 is_stmt 1 view .LVU1464
 4771 00b2 F2E7     		b	.L386
 4772              	.LVL390:
 4773              	.L374:
2258:Lib/ssc/src/ecatslv.c ****         {
 4774              		.loc 1 2258 9 view .LVU1465
2258:Lib/ssc/src/ecatslv.c ****         {
 4775              		.loc 1 2258 12 is_stmt 0 view .LVU1466
 4776 00b4 79B1     		cbz	r1, .L390
2261:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
 4777              		.loc 1 2261 13 is_stmt 1 view .LVU1467
2261:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
 4778              		.loc 1 2261 29 is_stmt 0 view .LVU1468
 4779 00b6 194B     		ldr	r3, .L398+8
 4780 00b8 0122     		movs	r2, #1
 4781 00ba 1A70     		strb	r2, [r3]
2262:Lib/ssc/src/ecatslv.c ****     
 4782              		.loc 1 2262 13 is_stmt 1 view .LVU1469
2262:Lib/ssc/src/ecatslv.c ****     
 4783              		.loc 1 2262 31 is_stmt 0 view .LVU1470
 4784 00bc 184B     		ldr	r3, .L398+12
 4785 00be 1980     		strh	r1, [r3]	@ movhi
2264:Lib/ssc/src/ecatslv.c ****             {
 4786              		.loc 1 2264 13 is_stmt 1 view .LVU1471
2264:Lib/ssc/src/ecatslv.c ****             {
 4787              		.loc 1 2264 55 is_stmt 0 view .LVU1472
 4788 00c0 1D4B     		ldr	r3, .L398+36
 4789 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2264:Lib/ssc/src/ecatslv.c ****             {
 4790              		.loc 1 2264 16 view .LVU1473
 4791 00c4 00F00F02 		and	r2, r0, #15
 4792 00c8 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccWTp91B.s 			page 172


 4793 00cc 9A42     		cmp	r2, r3
 4794 00ce CAD2     		bcs	.L373
2266:Lib/ssc/src/ecatslv.c ****             }
 4795              		.loc 1 2266 17 is_stmt 1 view .LVU1474
 4796 00d0 FFF7FEFF 		bl	AL_ControlInd
 4797              	.LVL391:
2266:Lib/ssc/src/ecatslv.c ****             }
 4798              		.loc 1 2266 17 is_stmt 0 view .LVU1475
 4799 00d4 C7E7     		b	.L373
 4800              	.LVL392:
 4801              	.L390:
2269:Lib/ssc/src/ecatslv.c ****         {
 4802              		.loc 1 2269 14 is_stmt 1 view .LVU1476
2269:Lib/ssc/src/ecatslv.c ****         {
 4803              		.loc 1 2269 18 is_stmt 0 view .LVU1477
 4804 00d6 114B     		ldr	r3, .L398+8
 4805 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2269:Lib/ssc/src/ecatslv.c ****         {
 4806              		.loc 1 2269 17 view .LVU1478
 4807 00da 002B     		cmp	r3, #0
 4808 00dc C3D0     		beq	.L373
2272:Lib/ssc/src/ecatslv.c ****             {
 4809              		.loc 1 2272 13 is_stmt 1 view .LVU1479
2272:Lib/ssc/src/ecatslv.c ****             {
 4810              		.loc 1 2272 29 is_stmt 0 view .LVU1480
 4811 00de 164B     		ldr	r3, .L398+36
 4812 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2272:Lib/ssc/src/ecatslv.c ****             {
 4813              		.loc 1 2272 16 view .LVU1481
 4814 00e2 03F00F03 		and	r3, r3, #15
 4815 00e6 0C2B     		cmp	r3, #12
 4816 00e8 05D0     		beq	.L396
 4817              	.LVL393:
 4818              	.L391:
2292:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
 4819              		.loc 1 2292 13 is_stmt 1 view .LVU1482
2292:Lib/ssc/src/ecatslv.c ****             u16LocalErrorCode = 0x00;
 4820              		.loc 1 2292 29 is_stmt 0 view .LVU1483
 4821 00ea 0023     		movs	r3, #0
 4822 00ec 0B4A     		ldr	r2, .L398+8
 4823 00ee 1370     		strb	r3, [r2]
2293:Lib/ssc/src/ecatslv.c ****         }
 4824              		.loc 1 2293 13 is_stmt 1 view .LVU1484
2293:Lib/ssc/src/ecatslv.c ****         }
 4825              		.loc 1 2293 31 is_stmt 0 view .LVU1485
 4826 00f0 0B4A     		ldr	r2, .L398+12
 4827 00f2 1380     		strh	r3, [r2]	@ movhi
 4828              		.loc 1 2296 1 view .LVU1486
 4829 00f4 B7E7     		b	.L373
 4830              	.LVL394:
 4831              	.L396:
2274:Lib/ssc/src/ecatslv.c ****                 {
 4832              		.loc 1 2274 17 is_stmt 1 view .LVU1487
2274:Lib/ssc/src/ecatslv.c ****                 {
 4833              		.loc 1 2274 34 is_stmt 0 view .LVU1488
 4834 00f6 114B     		ldr	r3, .L398+40
 4835 00f8 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/ccWTp91B.s 			page 173


2274:Lib/ssc/src/ecatslv.c ****                 {
 4836              		.loc 1 2274 19 view .LVU1489
 4837 00fa 3BB9     		cbnz	r3, .L397
2283:Lib/ssc/src/ecatslv.c ****                 {
 4838              		.loc 1 2283 21 is_stmt 1 view .LVU1490
2283:Lib/ssc/src/ecatslv.c ****                 {
 4839              		.loc 1 2283 38 is_stmt 0 view .LVU1491
 4840 00fc 104B     		ldr	r3, .L398+44
 4841 00fe 1B88     		ldrh	r3, [r3]
2283:Lib/ssc/src/ecatslv.c ****                 {
 4842              		.loc 1 2283 24 view .LVU1492
 4843 0100 002B     		cmp	r3, #0
 4844 0102 F2D0     		beq	.L391
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4845              		.loc 1 2288 21 is_stmt 1 view .LVU1493
 4846 0104 0320     		movs	r0, #3
 4847              	.LVL395:
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4848              		.loc 1 2288 21 is_stmt 0 view .LVU1494
 4849 0106 FFF7FEFF 		bl	EnableSyncManChannel
 4850              	.LVL396:
2288:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4851              		.loc 1 2288 21 view .LVU1495
 4852 010a EEE7     		b	.L391
 4853              	.LVL397:
 4854              	.L397:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4855              		.loc 1 2279 21 is_stmt 1 view .LVU1496
 4856 010c 0220     		movs	r0, #2
 4857              	.LVL398:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4858              		.loc 1 2279 21 is_stmt 0 view .LVU1497
 4859 010e FFF7FEFF 		bl	EnableSyncManChannel
 4860              	.LVL399:
2279:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 4861              		.loc 1 2279 21 view .LVU1498
 4862 0112 EAE7     		b	.L391
 4863              	.L399:
 4864              		.align	2
 4865              	.L398:
 4866 0114 00000000 		.word	.LANCHOR36
 4867 0118 00000000 		.word	.LANCHOR34
 4868 011c 00000000 		.word	.LANCHOR28
 4869 0120 00000000 		.word	.LANCHOR29
 4870 0124 00000000 		.word	.LANCHOR33
 4871 0128 00000000 		.word	.LANCHOR35
 4872 012c 00000000 		.word	bMbxRunning
 4873 0130 00000000 		.word	.LANCHOR31
 4874 0134 00000000 		.word	.LANCHOR32
 4875 0138 00000000 		.word	.LANCHOR5
 4876 013c 00000000 		.word	.LANCHOR7
 4877 0140 00000000 		.word	.LANCHOR4
 4878              		.cfi_endproc
 4879              	.LFE151:
 4881              		.section	.text.ECAT_Init,"ax",%progbits
 4882              		.align	1
 4883              		.global	ECAT_Init
ARM GAS  /tmp/ccWTp91B.s 			page 174


 4884              		.syntax unified
 4885              		.thumb
 4886              		.thumb_func
 4888              	ECAT_Init:
 4889              	.LFB152:
2297:Lib/ssc/src/ecatslv.c **** 
2298:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2299:Lib/ssc/src/ecatslv.c **** /**
2300:Lib/ssc/src/ecatslv.c **** 
2301:Lib/ssc/src/ecatslv.c ****  \brief    This function initialize the EtherCAT Slave Interface.
2302:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2303:Lib/ssc/src/ecatslv.c **** 
2304:Lib/ssc/src/ecatslv.c **** void ECAT_Init(void)
2305:Lib/ssc/src/ecatslv.c **** {
 4890              		.loc 1 2305 1 is_stmt 1 view -0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 8
 4893              		@ frame_needed = 0, uses_anonymous_args = 0
 4894 0000 10B5     		push	{r4, lr}
 4895              		.cfi_def_cfa_offset 8
 4896              		.cfi_offset 4, -8
 4897              		.cfi_offset 14, -4
 4898 0002 82B0     		sub	sp, sp, #8
 4899              		.cfi_def_cfa_offset 16
2306:Lib/ssc/src/ecatslv.c ****     UINT8 i;
 4900              		.loc 1 2306 5 view .LVU1500
 4901              	.LBB48:
2307:Lib/ssc/src/ecatslv.c **** 
2308:Lib/ssc/src/ecatslv.c ****     /*Get Maximum Number of SyncManagers and supported DPRAM size*/
2309:Lib/ssc/src/ecatslv.c ****     {
2310:Lib/ssc/src/ecatslv.c ****     UINT16 TmpVar = 0;
 4902              		.loc 1 2310 5 view .LVU1501
 4903              		.loc 1 2310 12 is_stmt 0 view .LVU1502
 4904 0004 0024     		movs	r4, #0
 4905 0006 ADF80640 		strh	r4, [sp, #6]	@ movhi
2311:Lib/ssc/src/ecatslv.c **** 
2312:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(TmpVar, ESC_COMM_INFO_OFFSET);
 4906              		.loc 1 2312 5 is_stmt 1 view .LVU1503
 4907 000a 0222     		movs	r2, #2
 4908 000c 0421     		movs	r1, #4
 4909 000e 0DF10600 		add	r0, sp, #6
 4910 0012 FFF7FEFF 		bl	HW_EscRead
 4911              	.LVL400:
2313:Lib/ssc/src/ecatslv.c **** 
2314:Lib/ssc/src/ecatslv.c ****     TmpVar = SWAPWORD(TmpVar);
 4912              		.loc 1 2314 5 view .LVU1504
 4913              		.loc 1 2314 12 is_stmt 0 view .LVU1505
 4914 0016 BDF80630 		ldrh	r3, [sp, #6]
2315:Lib/ssc/src/ecatslv.c ****     nMaxSyncMan = (UINT8) ((TmpVar & ESC_SM_CHANNELS_MASK)>> ESC_SM_CHANNELS_SHIFT);
 4915              		.loc 1 2315 5 is_stmt 1 view .LVU1506
 4916              		.loc 1 2315 19 is_stmt 0 view .LVU1507
 4917 001a 1B0A     		lsrs	r3, r3, #8
 4918              		.loc 1 2315 17 view .LVU1508
 4919 001c 274A     		ldr	r2, .L404
 4920 001e 1370     		strb	r3, [r2]
2316:Lib/ssc/src/ecatslv.c **** 
2317:Lib/ssc/src/ecatslv.c ****     HW_EscReadWord(TmpVar, ESC_DPRAM_SIZE_OFFSET);
ARM GAS  /tmp/ccWTp91B.s 			page 175


 4921              		.loc 1 2317 5 is_stmt 1 view .LVU1509
 4922 0020 0222     		movs	r2, #2
 4923 0022 0621     		movs	r1, #6
 4924 0024 0DEB0100 		add	r0, sp, r1
 4925 0028 FFF7FEFF 		bl	HW_EscRead
 4926              	.LVL401:
2318:Lib/ssc/src/ecatslv.c ****     TmpVar = SWAPWORD(TmpVar);
 4927              		.loc 1 2318 5 view .LVU1510
 4928              		.loc 1 2318 12 is_stmt 0 view .LVU1511
 4929 002c BDF80630 		ldrh	r3, [sp, #6]
2319:Lib/ssc/src/ecatslv.c **** 
2320:Lib/ssc/src/ecatslv.c ****     //get max address (register + DPRAM size in Byte (in the register it is stored in KB))
2321:Lib/ssc/src/ecatslv.c ****     /* ECATCHANGE_START(V5.11) ESC1*/
2322:Lib/ssc/src/ecatslv.c ****     nMaxEscAddress = (UINT16) ((TmpVar & ESC_DPRAM_SIZE_MASK) << 10) + 0xFFF;
 4930              		.loc 1 2322 5 is_stmt 1 view .LVU1512
 4931              		.loc 1 2322 22 is_stmt 0 view .LVU1513
 4932 0030 9B02     		lsls	r3, r3, #10
 4933 0032 9BB2     		uxth	r3, r3
 4934              		.loc 1 2322 70 view .LVU1514
 4935 0034 03F6FF73 		addw	r3, r3, #4095
 4936              		.loc 1 2322 20 view .LVU1515
 4937 0038 214A     		ldr	r2, .L404+4
 4938 003a 1380     		strh	r3, [r2]	@ movhi
 4939              	.LBE48:
2323:Lib/ssc/src/ecatslv.c ****     /* ECATCHANGE_END(V5.11) ESC1*/
2324:Lib/ssc/src/ecatslv.c ****     }
2325:Lib/ssc/src/ecatslv.c **** 
2326:Lib/ssc/src/ecatslv.c ****     /* Get EEPROM loaded information */
2327:Lib/ssc/src/ecatslv.c ****     UpdateEEPROMLoadedState();
 4940              		.loc 1 2327 5 is_stmt 1 view .LVU1516
 4941 003c FFF7FEFF 		bl	UpdateEEPROMLoadedState
 4942              	.LVL402:
2328:Lib/ssc/src/ecatslv.c **** 
2329:Lib/ssc/src/ecatslv.c ****     /* disable all Sync Manager channels */
2330:Lib/ssc/src/ecatslv.c ****     for (i = 0; i < nMaxSyncMan; i++)
 4943              		.loc 1 2330 5 view .LVU1517
 4944              		.loc 1 2330 5 is_stmt 0 view .LVU1518
 4945 0040 04E0     		b	.L401
 4946              	.LVL403:
 4947              	.L402:
2331:Lib/ssc/src/ecatslv.c ****     {
2332:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2333:Lib/ssc/src/ecatslv.c ****         DisableSyncManChannel(i);
 4948              		.loc 1 2333 9 is_stmt 1 discriminator 3 view .LVU1519
 4949 0042 2046     		mov	r0, r4
 4950 0044 FFF7FEFF 		bl	DisableSyncManChannel
 4951              	.LVL404:
2330:Lib/ssc/src/ecatslv.c ****     {
 4952              		.loc 1 2330 34 discriminator 3 view .LVU1520
2330:Lib/ssc/src/ecatslv.c ****     {
 4953              		.loc 1 2330 35 is_stmt 0 discriminator 3 view .LVU1521
 4954 0048 0134     		adds	r4, r4, #1
 4955              	.LVL405:
2330:Lib/ssc/src/ecatslv.c ****     {
 4956              		.loc 1 2330 35 discriminator 3 view .LVU1522
 4957 004a E4B2     		uxtb	r4, r4
 4958              	.LVL406:
ARM GAS  /tmp/ccWTp91B.s 			page 176


 4959              	.L401:
2330:Lib/ssc/src/ecatslv.c ****     {
 4960              		.loc 1 2330 17 is_stmt 1 discriminator 1 view .LVU1523
2330:Lib/ssc/src/ecatslv.c ****     {
 4961              		.loc 1 2330 19 is_stmt 0 discriminator 1 view .LVU1524
 4962 004c 1B4B     		ldr	r3, .L404
 4963 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2330:Lib/ssc/src/ecatslv.c ****     {
 4964              		.loc 1 2330 5 discriminator 1 view .LVU1525
 4965 0050 A342     		cmp	r3, r4
 4966 0052 F6D8     		bhi	.L402
2334:Lib/ssc/src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2335:Lib/ssc/src/ecatslv.c ****     }
2336:Lib/ssc/src/ecatslv.c **** 
2337:Lib/ssc/src/ecatslv.c ****     /* initialize the mailbox handler */
2338:Lib/ssc/src/ecatslv.c ****     MBX_Init();
 4967              		.loc 1 2338 5 is_stmt 1 view .LVU1526
 4968 0054 FFF7FEFF 		bl	MBX_Init
 4969              	.LVL407:
2339:Lib/ssc/src/ecatslv.c **** 
2340:Lib/ssc/src/ecatslv.c ****     /* initialize variables */
2341:Lib/ssc/src/ecatslv.c ****     bApplEsmPending = FALSE;
 4970              		.loc 1 2341 5 view .LVU1527
 4971              		.loc 1 2341 21 is_stmt 0 view .LVU1528
 4972 0058 0024     		movs	r4, #0
 4973              	.LVL408:
 4974              		.loc 1 2341 21 view .LVU1529
 4975 005a 1A4B     		ldr	r3, .L404+8
 4976 005c 1C70     		strb	r4, [r3]
2342:Lib/ssc/src/ecatslv.c ****     bEcatWaitForAlControlRes = FALSE;
 4977              		.loc 1 2342 5 is_stmt 1 view .LVU1530
 4978              		.loc 1 2342 30 is_stmt 0 view .LVU1531
 4979 005e 1A4B     		ldr	r3, .L404+12
 4980 0060 1C70     		strb	r4, [r3]
2343:Lib/ssc/src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 4981              		.loc 1 2343 5 is_stmt 1 view .LVU1532
 4982              		.loc 1 2343 31 is_stmt 0 view .LVU1533
 4983 0062 1A4B     		ldr	r3, .L404+16
 4984 0064 1C70     		strb	r4, [r3]
2344:Lib/ssc/src/ecatslv.c ****      bEcatOutputUpdateRunning = FALSE;
 4985              		.loc 1 2344 6 is_stmt 1 view .LVU1534
 4986              		.loc 1 2344 31 is_stmt 0 view .LVU1535
 4987 0066 1A4B     		ldr	r3, .L404+20
 4988 0068 1C70     		strb	r4, [r3]
2345:Lib/ssc/src/ecatslv.c ****      bEcatInputUpdateRunning = FALSE;
 4989              		.loc 1 2345 6 is_stmt 1 view .LVU1536
 4990              		.loc 1 2345 30 is_stmt 0 view .LVU1537
 4991 006a 1A4B     		ldr	r3, .L404+24
 4992 006c 1C70     		strb	r4, [r3]
2346:Lib/ssc/src/ecatslv.c ****     bWdTrigger = FALSE;
 4993              		.loc 1 2346 5 is_stmt 1 view .LVU1538
 4994              		.loc 1 2346 16 is_stmt 0 view .LVU1539
 4995 006e 1A4B     		ldr	r3, .L404+28
 4996 0070 1C70     		strb	r4, [r3]
2347:Lib/ssc/src/ecatslv.c ****     EcatWdValue = 0;
 4997              		.loc 1 2347 5 is_stmt 1 view .LVU1540
 4998              		.loc 1 2347 17 is_stmt 0 view .LVU1541
ARM GAS  /tmp/ccWTp91B.s 			page 177


 4999 0072 1A4B     		ldr	r3, .L404+32
 5000 0074 1C80     		strh	r4, [r3]	@ movhi
2348:Lib/ssc/src/ecatslv.c ****     Sync0WdCounter = 0;
 5001              		.loc 1 2348 5 is_stmt 1 view .LVU1542
 5002              		.loc 1 2348 20 is_stmt 0 view .LVU1543
 5003 0076 1A4B     		ldr	r3, .L404+36
 5004 0078 1C80     		strh	r4, [r3]	@ movhi
2349:Lib/ssc/src/ecatslv.c ****     Sync0WdValue = 0;
 5005              		.loc 1 2349 5 is_stmt 1 view .LVU1544
 5006              		.loc 1 2349 18 is_stmt 0 view .LVU1545
 5007 007a 1A4B     		ldr	r3, .L404+40
 5008 007c 1C80     		strh	r4, [r3]	@ movhi
2350:Lib/ssc/src/ecatslv.c ****     Sync1WdCounter = 0;
 5009              		.loc 1 2350 5 is_stmt 1 view .LVU1546
 5010              		.loc 1 2350 20 is_stmt 0 view .LVU1547
 5011 007e 1A4B     		ldr	r3, .L404+44
 5012 0080 1C80     		strh	r4, [r3]	@ movhi
2351:Lib/ssc/src/ecatslv.c ****     Sync1WdValue = 0;
 5013              		.loc 1 2351 5 is_stmt 1 view .LVU1548
 5014              		.loc 1 2351 18 is_stmt 0 view .LVU1549
 5015 0082 1A4B     		ldr	r3, .L404+48
 5016 0084 1C80     		strh	r4, [r3]	@ movhi
2352:Lib/ssc/src/ecatslv.c ****     bDcSyncActive = FALSE;
 5017              		.loc 1 2352 5 is_stmt 1 view .LVU1550
 5018              		.loc 1 2352 19 is_stmt 0 view .LVU1551
 5019 0086 1A4B     		ldr	r3, .L404+52
 5020 0088 1C70     		strb	r4, [r3]
2353:Lib/ssc/src/ecatslv.c ****     bLocalErrorFlag = FALSE;
 5021              		.loc 1 2353 5 is_stmt 1 view .LVU1552
 5022              		.loc 1 2353 21 is_stmt 0 view .LVU1553
 5023 008a 1A4B     		ldr	r3, .L404+56
 5024 008c 1C70     		strb	r4, [r3]
2354:Lib/ssc/src/ecatslv.c ****     u16LocalErrorCode = 0x00;
 5025              		.loc 1 2354 5 is_stmt 1 view .LVU1554
 5026              		.loc 1 2354 23 is_stmt 0 view .LVU1555
 5027 008e 1A4B     		ldr	r3, .L404+60
 5028 0090 1C80     		strh	r4, [r3]	@ movhi
2355:Lib/ssc/src/ecatslv.c **** 
2356:Lib/ssc/src/ecatslv.c ****     u16ALEventMask = 0;
 5029              		.loc 1 2356 5 is_stmt 1 view .LVU1556
 5030              		.loc 1 2356 20 is_stmt 0 view .LVU1557
 5031 0092 1A4B     		ldr	r3, .L404+64
 5032 0094 1C80     		strh	r4, [r3]	@ movhi
2357:Lib/ssc/src/ecatslv.c ****     nPdOutputSize = 0;
 5033              		.loc 1 2357 5 is_stmt 1 view .LVU1558
 5034              		.loc 1 2357 19 is_stmt 0 view .LVU1559
 5035 0096 1A4B     		ldr	r3, .L404+68
 5036 0098 1C80     		strh	r4, [r3]	@ movhi
2358:Lib/ssc/src/ecatslv.c ****     nPdInputSize = 0;
 5037              		.loc 1 2358 5 is_stmt 1 view .LVU1560
 5038              		.loc 1 2358 18 is_stmt 0 view .LVU1561
 5039 009a 1A4B     		ldr	r3, .L404+72
 5040 009c 1C80     		strh	r4, [r3]	@ movhi
2359:Lib/ssc/src/ecatslv.c **** 
2360:Lib/ssc/src/ecatslv.c ****     /* initialize the AL Status register */
2361:Lib/ssc/src/ecatslv.c ****     nAlStatus    = STATE_INIT;
 5041              		.loc 1 2361 5 is_stmt 1 view .LVU1562
ARM GAS  /tmp/ccWTp91B.s 			page 178


 5042              		.loc 1 2361 18 is_stmt 0 view .LVU1563
 5043 009e 0120     		movs	r0, #1
 5044 00a0 194B     		ldr	r3, .L404+76
 5045 00a2 1870     		strb	r0, [r3]
2362:Lib/ssc/src/ecatslv.c ****     SetALStatus(nAlStatus, 0);
 5046              		.loc 1 2362 5 is_stmt 1 view .LVU1564
 5047 00a4 2146     		mov	r1, r4
 5048 00a6 FFF7FEFF 		bl	SetALStatus
 5049              	.LVL409:
2363:Lib/ssc/src/ecatslv.c ****     nEcatStateTrans = 0;
 5050              		.loc 1 2363 5 view .LVU1565
 5051              		.loc 1 2363 21 is_stmt 0 view .LVU1566
 5052 00aa 184B     		ldr	r3, .L404+80
 5053 00ac 1C80     		strh	r4, [r3]	@ movhi
2364:Lib/ssc/src/ecatslv.c **** 
2365:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT5*/
2366:Lib/ssc/src/ecatslv.c ****     bEscIntEnabled = FALSE;
 5054              		.loc 1 2366 5 is_stmt 1 view .LVU1567
 5055              		.loc 1 2366 20 is_stmt 0 view .LVU1568
 5056 00ae 184B     		ldr	r3, .L404+84
 5057 00b0 1C70     		strb	r4, [r3]
2367:Lib/ssc/src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT5*/
2368:Lib/ssc/src/ecatslv.c **** 
2369:Lib/ssc/src/ecatslv.c ****     /* initialize the COE part */
2370:Lib/ssc/src/ecatslv.c ****     COE_Init();
 5058              		.loc 1 2370 5 is_stmt 1 view .LVU1569
 5059 00b2 FFF7FEFF 		bl	COE_Init
 5060              	.LVL410:
2371:Lib/ssc/src/ecatslv.c **** }
 5061              		.loc 1 2371 1 is_stmt 0 view .LVU1570
 5062 00b6 02B0     		add	sp, sp, #8
 5063              		.cfi_def_cfa_offset 8
 5064              		@ sp needed
 5065 00b8 10BD     		pop	{r4, pc}
 5066              	.L405:
 5067 00ba 00BF     		.align	2
 5068              	.L404:
 5069 00bc 00000000 		.word	.LANCHOR11
 5070 00c0 00000000 		.word	.LANCHOR2
 5071 00c4 00000000 		.word	.LANCHOR34
 5072 00c8 00000000 		.word	.LANCHOR36
 5073 00cc 00000000 		.word	.LANCHOR13
 5074 00d0 00000000 		.word	.LANCHOR31
 5075 00d4 00000000 		.word	.LANCHOR32
 5076 00d8 00000000 		.word	.LANCHOR9
 5077 00dc 00000000 		.word	.LANCHOR20
 5078 00e0 00000000 		.word	.LANCHOR22
 5079 00e4 00000000 		.word	.LANCHOR21
 5080 00e8 00000000 		.word	.LANCHOR23
 5081 00ec 00000000 		.word	.LANCHOR24
 5082 00f0 00000000 		.word	.LANCHOR15
 5083 00f4 00000000 		.word	.LANCHOR28
 5084 00f8 00000000 		.word	.LANCHOR29
 5085 00fc 00000000 		.word	.LANCHOR12
 5086 0100 00000000 		.word	.LANCHOR7
 5087 0104 00000000 		.word	.LANCHOR4
 5088 0108 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/ccWTp91B.s 			page 179


 5089 010c 00000000 		.word	.LANCHOR35
 5090 0110 00000000 		.word	.LANCHOR14
 5091              		.cfi_endproc
 5092              	.LFE152:
 5094              		.section	.text.ECAT_Main,"ax",%progbits
 5095              		.align	1
 5096              		.global	ECAT_Main
 5097              		.syntax unified
 5098              		.thumb
 5099              		.thumb_func
 5101              	ECAT_Main:
 5102              	.LFB153:
2372:Lib/ssc/src/ecatslv.c **** 
2373:Lib/ssc/src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2374:Lib/ssc/src/ecatslv.c **** /**
2375:Lib/ssc/src/ecatslv.c ****  \brief        This function has to be called cyclically.
2376:Lib/ssc/src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2377:Lib/ssc/src/ecatslv.c **** 
2378:Lib/ssc/src/ecatslv.c **** void ECAT_Main(void)
2379:Lib/ssc/src/ecatslv.c **** {
 5103              		.loc 1 2379 1 is_stmt 1 view -0
 5104              		.cfi_startproc
 5105              		@ args = 0, pretend = 0, frame = 8
 5106              		@ frame_needed = 0, uses_anonymous_args = 0
 5107 0000 10B5     		push	{r4, lr}
 5108              		.cfi_def_cfa_offset 8
 5109              		.cfi_offset 4, -8
 5110              		.cfi_offset 14, -4
 5111 0002 82B0     		sub	sp, sp, #8
 5112              		.cfi_def_cfa_offset 16
2380:Lib/ssc/src/ecatslv.c ****     UINT16 ALEventReg;
 5113              		.loc 1 2380 5 view .LVU1572
2381:Lib/ssc/src/ecatslv.c ****     UINT16 EscAlControl = 0x0000;
 5114              		.loc 1 2381 5 view .LVU1573
 5115              		.loc 1 2381 12 is_stmt 0 view .LVU1574
 5116 0004 0023     		movs	r3, #0
 5117 0006 ADF80630 		strh	r3, [sp, #6]	@ movhi
2382:Lib/ssc/src/ecatslv.c ****     UINT16 sm1Activate = SM_SETTING_ENABLE_VALUE;
 5118              		.loc 1 2382 5 is_stmt 1 view .LVU1575
 5119              		.loc 1 2382 12 is_stmt 0 view .LVU1576
 5120 000a 0123     		movs	r3, #1
 5121 000c ADF80430 		strh	r3, [sp, #4]	@ movhi
2383:Lib/ssc/src/ecatslv.c **** 
2384:Lib/ssc/src/ecatslv.c ****     /* check if services are stored in the mailbox */
2385:Lib/ssc/src/ecatslv.c ****     MBX_Main();
 5122              		.loc 1 2385 5 is_stmt 1 view .LVU1577
 5123 0010 FFF7FEFF 		bl	MBX_Main
 5124              	.LVL411:
2386:Lib/ssc/src/ecatslv.c **** 
2387:Lib/ssc/src/ecatslv.c **** 
2388:Lib/ssc/src/ecatslv.c ****     if ( bMbxRunning )
 5125              		.loc 1 2388 5 view .LVU1578
 5126              		.loc 1 2388 10 is_stmt 0 view .LVU1579
 5127 0014 484B     		ldr	r3, .L427
 5128 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5129              		.loc 1 2388 8 view .LVU1580
 5130 0018 002B     		cmp	r3, #0
ARM GAS  /tmp/ccWTp91B.s 			page 180


 5131 001a 4CD1     		bne	.L420
 5132              	.L407:
2389:Lib/ssc/src/ecatslv.c ****     {
2390:Lib/ssc/src/ecatslv.c ****         /* Slave is at least in PREOP, Mailbox is running */
2391:Lib/ssc/src/ecatslv.c ****         /* get the Activate-Byte of SM 1 (Register 0x80E) to check if a mailbox repeat request was 
2392:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord(sm1Activate,(ESC_SYNCMAN_ACTIVE_OFFSET + SIZEOF_SM_REGISTER));
2393:Lib/ssc/src/ecatslv.c ****         sm1Activate = SWAPWORD(sm1Activate);
2394:Lib/ssc/src/ecatslv.c ****     }
2395:Lib/ssc/src/ecatslv.c **** 
2396:Lib/ssc/src/ecatslv.c ****     /* Read AL Event-Register from ESC */
2397:Lib/ssc/src/ecatslv.c ****     ALEventReg = HW_GetALEventRegister();
 5133              		.loc 1 2397 5 is_stmt 1 view .LVU1581
 5134              		.loc 1 2397 18 is_stmt 0 view .LVU1582
 5135 001c FFF7FEFF 		bl	HW_GetALEventRegister
 5136              	.LVL412:
 5137 0020 0446     		mov	r4, r0
 5138              	.LVL413:
2398:Lib/ssc/src/ecatslv.c ****     ALEventReg = SWAPWORD(ALEventReg);
 5139              		.loc 1 2398 5 is_stmt 1 view .LVU1583
2399:Lib/ssc/src/ecatslv.c **** 
2400:Lib/ssc/src/ecatslv.c **** 
2401:Lib/ssc/src/ecatslv.c ****     if ((ALEventReg & AL_CONTROL_EVENT) && !bEcatWaitForAlControlRes)
 5140              		.loc 1 2401 5 view .LVU1584
 5141              		.loc 1 2401 8 is_stmt 0 view .LVU1585
 5142 0022 10F0010F 		tst	r0, #1
 5143 0026 03D0     		beq	.L408
 5144              		.loc 1 2401 44 discriminator 1 view .LVU1586
 5145 0028 444B     		ldr	r3, .L427+4
 5146 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5147              		.loc 1 2401 41 discriminator 1 view .LVU1587
 5148 002c 002B     		cmp	r3, #0
 5149 002e 49D0     		beq	.L421
 5150              	.L408:
2402:Lib/ssc/src/ecatslv.c ****     {
2403:Lib/ssc/src/ecatslv.c ****         /* AL Control event is set, get the AL Control register sent by the Master to acknowledge t
2404:Lib/ssc/src/ecatslv.c ****           (that the corresponding bit in the AL Event register will be reset) */
2405:Lib/ssc/src/ecatslv.c ****         HW_EscReadWord( EscAlControl, ESC_AL_CONTROL_OFFSET);
2406:Lib/ssc/src/ecatslv.c ****         EscAlControl = SWAPWORD(EscAlControl);
2407:Lib/ssc/src/ecatslv.c **** 
2408:Lib/ssc/src/ecatslv.c **** 
2409:Lib/ssc/src/ecatslv.c ****         /* reset AL Control event and the SM Change event (because the Sync Manager settings will b
2410:Lib/ssc/src/ecatslv.c ****            in AL_ControlInd, too)*/
2411:Lib/ssc/src/ecatslv.c ****         ALEventReg &= ~((AL_CONTROL_EVENT) | (SM_CHANGE_EVENT));
2412:Lib/ssc/src/ecatslv.c **** 
2413:Lib/ssc/src/ecatslv.c ****         AL_ControlInd((UINT8)EscAlControl, 0); /* in AL_ControlInd the state transition will be che
2414:Lib/ssc/src/ecatslv.c ****         
2415:Lib/ssc/src/ecatslv.c ****         /* SM-Change-Event was handled too */
2416:Lib/ssc/src/ecatslv.c ****     }
2417:Lib/ssc/src/ecatslv.c **** 
2418:Lib/ssc/src/ecatslv.c ****     if ( (ALEventReg & SM_CHANGE_EVENT) && !bEcatWaitForAlControlRes && (nAlStatus & STATE_CHANGE) 
 5151              		.loc 1 2418 5 is_stmt 1 view .LVU1588
 5152              		.loc 1 2418 8 is_stmt 0 view .LVU1589
 5153 0030 14F0100F 		tst	r4, #16
 5154 0034 0BD0     		beq	.L409
 5155              		.loc 1 2418 44 discriminator 1 view .LVU1590
 5156 0036 414B     		ldr	r3, .L427+4
 5157 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccWTp91B.s 			page 181


 5158              		.loc 1 2418 41 discriminator 1 view .LVU1591
 5159 003a 43B9     		cbnz	r3, .L409
 5160              		.loc 1 2418 84 discriminator 2 view .LVU1592
 5161 003c 404B     		ldr	r3, .L427+8
 5162 003e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5163              		.loc 1 2418 70 discriminator 2 view .LVU1593
 5164 0040 10F0100F 		tst	r0, #16
 5165 0044 03D1     		bne	.L409
 5166              		.loc 1 2418 119 discriminator 3 view .LVU1594
 5167 0046 20F01003 		bic	r3, r0, #16
 5168              		.loc 1 2418 105 discriminator 3 view .LVU1595
 5169 004a 012B     		cmp	r3, #1
 5170 004c 4AD1     		bne	.L422
 5171              	.L409:
2419:Lib/ssc/src/ecatslv.c ****     {
2420:Lib/ssc/src/ecatslv.c ****         /* the SM Change event is set (Bit 4 of Register 0x220), when the Byte 6 (Enable, Lo-Byte o
2421:Lib/ssc/src/ecatslv.c ****            of a Sync Manager channel was written */
2422:Lib/ssc/src/ecatslv.c ****         ALEventReg &= ~(SM_CHANGE_EVENT);
2423:Lib/ssc/src/ecatslv.c **** 
2424:Lib/ssc/src/ecatslv.c ****         /* AL_ControlInd is called with the actual state, so that the correct SM settings will be c
2425:Lib/ssc/src/ecatslv.c ****         AL_ControlInd(nAlStatus & STATE_MASK, 0);
2426:Lib/ssc/src/ecatslv.c ****     }
2427:Lib/ssc/src/ecatslv.c **** 
2428:Lib/ssc/src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 5172              		.loc 1 2428 5 is_stmt 1 view .LVU1596
 5173              		.loc 1 2428 8 is_stmt 0 view .LVU1597
 5174 004e 3B4B     		ldr	r3, .L427+4
 5175 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5176              		.loc 1 2428 7 view .LVU1598
 5177 0052 002B     		cmp	r3, #0
 5178 0054 4FD1     		bne	.L423
 5179              	.L410:
2429:Lib/ssc/src/ecatslv.c ****     {
2430:Lib/ssc/src/ecatslv.c ****         AL_ControlRes();
2431:Lib/ssc/src/ecatslv.c ****     }
2432:Lib/ssc/src/ecatslv.c **** 	
2433:Lib/ssc/src/ecatslv.c ****     /*The order of mailbox event processing was changed to prevent race condition errors.
2434:Lib/ssc/src/ecatslv.c ****         The SM1 activate Byte (Register 0x80E) was read before reading AL Event register.
2435:Lib/ssc/src/ecatslv.c ****         1. Handle Mailbox Read event
2436:Lib/ssc/src/ecatslv.c ****         2. Handle repeat toggle request
2437:Lib/ssc/src/ecatslv.c ****         3. Handle Mailbox write event
2438:Lib/ssc/src/ecatslv.c ****     */
2439:Lib/ssc/src/ecatslv.c ****     if ( bMbxRunning )
 5180              		.loc 1 2439 5 is_stmt 1 view .LVU1599
 5181              		.loc 1 2439 10 is_stmt 0 view .LVU1600
 5182 0056 384B     		ldr	r3, .L427
 5183 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5184              		.loc 1 2439 8 view .LVU1601
 5185 005a 53B3     		cbz	r3, .L406
2440:Lib/ssc/src/ecatslv.c ****     {
2441:Lib/ssc/src/ecatslv.c ****         /*SnycManger change event (0x220:4) could be acknowledged by reading the SM1 control regist
2442:Lib/ssc/src/ecatslv.c ****         => check if the SyncManger 1 is still enabled*/
2443:Lib/ssc/src/ecatslv.c ****         if(!(sm1Activate & SM_SETTING_ENABLE_VALUE))
 5186              		.loc 1 2443 9 is_stmt 1 view .LVU1602
 5187              		.loc 1 2443 26 is_stmt 0 view .LVU1603
 5188 005c BDF80430 		ldrh	r3, [sp, #4]
 5189              		.loc 1 2443 11 view .LVU1604
ARM GAS  /tmp/ccWTp91B.s 			page 182


 5190 0060 13F0010F 		tst	r3, #1
 5191 0064 4AD0     		beq	.L424
 5192              	.L412:
2444:Lib/ssc/src/ecatslv.c ****             AL_ControlInd(nAlStatus & STATE_MASK, 0);
2445:Lib/ssc/src/ecatslv.c **** 
2446:Lib/ssc/src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_READ_EVENT) )
 5193              		.loc 1 2446 9 is_stmt 1 view .LVU1605
 5194              		.loc 1 2446 12 is_stmt 0 view .LVU1606
 5195 0066 14F4007F 		tst	r4, #512
 5196 006a 4FD1     		bne	.L425
 5197              	.L413:
2447:Lib/ssc/src/ecatslv.c ****         {
2448:Lib/ssc/src/ecatslv.c ****             /* SM 1 (Mailbox Read) event is set, when the mailbox was read from the master,
2449:Lib/ssc/src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be written,
2450:Lib/ssc/src/ecatslv.c ****                by writing the first byte the mailbox is locked, too */
2451:Lib/ssc/src/ecatslv.c ****             u16dummy = 0;
2452:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
2453:Lib/ssc/src/ecatslv.c **** 
2454:Lib/ssc/src/ecatslv.c ****             /* the Mailbox Read event in the variable ALEventReg shall be reset before calling
2455:Lib/ssc/src/ecatslv.c ****                MBX_MailboxReadInd, where a new mailbox datagram (if available) could be stored in t
2456:Lib/ssc/src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_READ_EVENT);
2457:Lib/ssc/src/ecatslv.c ****             MBX_MailboxReadInd();
2458:Lib/ssc/src/ecatslv.c ****         }
2459:Lib/ssc/src/ecatslv.c **** 
2460:Lib/ssc/src/ecatslv.c ****         DISABLE_MBX_INT;
 5198              		.loc 1 2460 24 is_stmt 1 view .LVU1607
2461:Lib/ssc/src/ecatslv.c ****         /* bMbxRepeatToggle holds the last state of the Repeat Bit (Bit 1) */
2462:Lib/ssc/src/ecatslv.c **** 
2463:Lib/ssc/src/ecatslv.c ****         if ( ( (sm1Activate & SM_SETTING_REPAET_REQ_MASK) && !bMbxRepeatToggle )
 5199              		.loc 1 2463 9 view .LVU1608
 5200              		.loc 1 2463 29 is_stmt 0 view .LVU1609
 5201 006c BDF80430 		ldrh	r3, [sp, #4]
 5202              		.loc 1 2463 12 view .LVU1610
 5203 0070 13F00203 		ands	r3, r3, #2
 5204 0074 02D0     		beq	.L414
 5205              		.loc 1 2463 62 discriminator 1 view .LVU1611
 5206 0076 334A     		ldr	r2, .L427+12
 5207 0078 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5208              		.loc 1 2463 59 discriminator 1 view .LVU1612
 5209 007a 1AB1     		cbz	r2, .L415
 5210              	.L414:
2464:Lib/ssc/src/ecatslv.c ****             ||( !(sm1Activate & SM_SETTING_REPAET_REQ_MASK) && bMbxRepeatToggle ))
 5211              		.loc 1 2464 13 view .LVU1613
 5212 007c A3B9     		cbnz	r3, .L416
 5213              		.loc 1 2464 61 discriminator 1 view .LVU1614
 5214 007e 314B     		ldr	r3, .L427+12
 5215 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5216 0082 8BB1     		cbz	r3, .L416
 5217              	.L415:
2465:Lib/ssc/src/ecatslv.c ****         {
2466:Lib/ssc/src/ecatslv.c ****             /* Repeat Bit (Bit 1) has toggled, there is a repeat request, in MBX_MailboxRepeatReq t
2467:Lib/ssc/src/ecatslv.c ****                response will put in the send mailbox again */
2468:Lib/ssc/src/ecatslv.c ****             MBX_MailboxRepeatReq();
 5218              		.loc 1 2468 13 is_stmt 1 view .LVU1615
 5219 0084 FFF7FEFF 		bl	MBX_MailboxRepeatReq
 5220              	.LVL414:
2469:Lib/ssc/src/ecatslv.c ****             /* acknowledge the repeat request after the send mailbox was updated by writing the Rep
ARM GAS  /tmp/ccWTp91B.s 			page 183


2470:Lib/ssc/src/ecatslv.c ****                in the Repeat Ack Bit (Bit 1) of the PDI Ctrl-Byte of SM 1 (Register 0x80F) */
2471:Lib/ssc/src/ecatslv.c ****             if(bMbxRepeatToggle)
 5221              		.loc 1 2471 13 view .LVU1616
 5222              		.loc 1 2471 16 is_stmt 0 view .LVU1617
 5223 0088 2E4B     		ldr	r3, .L427+12
 5224 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5225              		.loc 1 2471 15 view .LVU1618
 5226 008c 002B     		cmp	r3, #0
 5227 008e 48D0     		beq	.L417
2472:Lib/ssc/src/ecatslv.c ****                 sm1Activate |= SM_SETTING_REPEAT_ACK; //set repeat acknowledge bit (bit 9)
 5228              		.loc 1 2472 17 is_stmt 1 view .LVU1619
 5229              		.loc 1 2472 29 is_stmt 0 view .LVU1620
 5230 0090 BDF80430 		ldrh	r3, [sp, #4]
 5231 0094 43F40073 		orr	r3, r3, #512
 5232 0098 ADF80430 		strh	r3, [sp, #4]	@ movhi
 5233              	.L418:
2473:Lib/ssc/src/ecatslv.c ****             else
2474:Lib/ssc/src/ecatslv.c ****                 sm1Activate &= ~SM_SETTING_REPEAT_ACK; //clear repeat acknowledge bit (bit 9)
2475:Lib/ssc/src/ecatslv.c **** 
2476:Lib/ssc/src/ecatslv.c ****             sm1Activate = SWAPWORD(sm1Activate);
 5234              		.loc 1 2476 13 is_stmt 1 view .LVU1621
2477:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(sm1Activate,(ESC_SYNCMAN_ACTIVE_OFFSET + SIZEOF_SM_REGISTER));
 5235              		.loc 1 2477 13 view .LVU1622
 5236 009c 0222     		movs	r2, #2
 5237 009e 40F60E01 		movw	r1, #2062
 5238 00a2 01A8     		add	r0, sp, #4
 5239 00a4 FFF7FEFF 		bl	HW_EscWrite
 5240              	.LVL415:
 5241              	.L416:
2478:Lib/ssc/src/ecatslv.c ****         }
2479:Lib/ssc/src/ecatslv.c ****         ENABLE_MBX_INT;
 5242              		.loc 1 2479 23 view .LVU1623
2480:Lib/ssc/src/ecatslv.c **** 
2481:Lib/ssc/src/ecatslv.c ****         /* Reload the AlEvent because it may be changed due to a SM disable, enable in case of an r
2482:Lib/ssc/src/ecatslv.c ****         ALEventReg = HW_GetALEventRegister();
 5243              		.loc 1 2482 9 view .LVU1624
 5244              		.loc 1 2482 22 is_stmt 0 view .LVU1625
 5245 00a8 FFF7FEFF 		bl	HW_GetALEventRegister
 5246              	.LVL416:
2483:Lib/ssc/src/ecatslv.c ****         ALEventReg = SWAPWORD(ALEventReg);
 5247              		.loc 1 2483 9 is_stmt 1 view .LVU1626
2484:Lib/ssc/src/ecatslv.c **** 
2485:Lib/ssc/src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_WRITE_EVENT) )
 5248              		.loc 1 2485 9 view .LVU1627
 5249              		.loc 1 2485 12 is_stmt 0 view .LVU1628
 5250 00ac 10F4807F 		tst	r0, #256
 5251 00b0 3ED1     		bne	.L426
 5252              	.LVL417:
 5253              	.L406:
2486:Lib/ssc/src/ecatslv.c ****         {
2487:Lib/ssc/src/ecatslv.c ****             /* SM 0 (Mailbox Write) event is set, when the mailbox was written from the master,
2488:Lib/ssc/src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be read,
2489:Lib/ssc/src/ecatslv.c ****                which will be done in MBX_CheckAndCopyMailbox */
2490:Lib/ssc/src/ecatslv.c ****             /* the Mailbox Write event in the variable ALEventReg shall be reset before calling
2491:Lib/ssc/src/ecatslv.c ****                MBX_CheckAndCopyMailbox, where the received mailbox datagram will be processed */
2492:Lib/ssc/src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_WRITE_EVENT);
2493:Lib/ssc/src/ecatslv.c ****             MBX_CheckAndCopyMailbox();
ARM GAS  /tmp/ccWTp91B.s 			page 184


2494:Lib/ssc/src/ecatslv.c **** 
2495:Lib/ssc/src/ecatslv.c ****         }
2496:Lib/ssc/src/ecatslv.c ****     }
2497:Lib/ssc/src/ecatslv.c **** }
 5254              		.loc 1 2497 1 view .LVU1629
 5255 00b2 02B0     		add	sp, sp, #8
 5256              		.cfi_remember_state
 5257              		.cfi_def_cfa_offset 8
 5258              		@ sp needed
 5259 00b4 10BD     		pop	{r4, pc}
 5260              	.L420:
 5261              		.cfi_restore_state
2392:Lib/ssc/src/ecatslv.c ****         sm1Activate = SWAPWORD(sm1Activate);
 5262              		.loc 1 2392 9 is_stmt 1 view .LVU1630
 5263 00b6 0222     		movs	r2, #2
 5264 00b8 40F60E01 		movw	r1, #2062
 5265 00bc 01A8     		add	r0, sp, #4
 5266 00be FFF7FEFF 		bl	HW_EscRead
 5267              	.LVL418:
2393:Lib/ssc/src/ecatslv.c ****     }
 5268              		.loc 1 2393 9 view .LVU1631
 5269 00c2 ABE7     		b	.L407
 5270              	.L421:
2405:Lib/ssc/src/ecatslv.c ****         EscAlControl = SWAPWORD(EscAlControl);
 5271              		.loc 1 2405 9 view .LVU1632
 5272 00c4 0222     		movs	r2, #2
 5273 00c6 4FF49071 		mov	r1, #288
 5274 00ca 0DF10600 		add	r0, sp, #6
 5275 00ce FFF7FEFF 		bl	HW_EscRead
 5276              	.LVL419:
2406:Lib/ssc/src/ecatslv.c **** 
 5277              		.loc 1 2406 9 view .LVU1633
2411:Lib/ssc/src/ecatslv.c **** 
 5278              		.loc 1 2411 9 view .LVU1634
2411:Lib/ssc/src/ecatslv.c **** 
 5279              		.loc 1 2411 20 is_stmt 0 view .LVU1635
 5280 00d2 24F01104 		bic	r4, r4, #17
 5281              	.LVL420:
2411:Lib/ssc/src/ecatslv.c **** 
 5282              		.loc 1 2411 20 view .LVU1636
 5283 00d6 A4B2     		uxth	r4, r4
2413:Lib/ssc/src/ecatslv.c ****         
 5284              		.loc 1 2413 9 is_stmt 1 view .LVU1637
 5285 00d8 0021     		movs	r1, #0
 5286 00da 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 5287 00de FFF7FEFF 		bl	AL_ControlInd
 5288              	.LVL421:
 5289 00e2 A5E7     		b	.L408
 5290              	.LVL422:
 5291              	.L422:
2422:Lib/ssc/src/ecatslv.c **** 
 5292              		.loc 1 2422 9 view .LVU1638
2422:Lib/ssc/src/ecatslv.c **** 
 5293              		.loc 1 2422 20 is_stmt 0 view .LVU1639
 5294 00e4 24F01004 		bic	r4, r4, #16
 5295              	.LVL423:
2422:Lib/ssc/src/ecatslv.c **** 
ARM GAS  /tmp/ccWTp91B.s 			page 185


 5296              		.loc 1 2422 20 view .LVU1640
 5297 00e8 A4B2     		uxth	r4, r4
2425:Lib/ssc/src/ecatslv.c ****     }
 5298              		.loc 1 2425 9 is_stmt 1 view .LVU1641
 5299 00ea 0021     		movs	r1, #0
 5300 00ec 00F00F00 		and	r0, r0, #15
 5301 00f0 FFF7FEFF 		bl	AL_ControlInd
 5302              	.LVL424:
 5303 00f4 ABE7     		b	.L409
 5304              	.LVL425:
 5305              	.L423:
2430:Lib/ssc/src/ecatslv.c ****     }
 5306              		.loc 1 2430 9 view .LVU1642
 5307 00f6 FFF7FEFF 		bl	AL_ControlRes
 5308              	.LVL426:
 5309 00fa ACE7     		b	.L410
 5310              	.L424:
2444:Lib/ssc/src/ecatslv.c **** 
 5311              		.loc 1 2444 13 view .LVU1643
 5312 00fc 104B     		ldr	r3, .L427+8
 5313 00fe 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5314 0100 0021     		movs	r1, #0
 5315 0102 00F00F00 		and	r0, r0, #15
 5316 0106 FFF7FEFF 		bl	AL_ControlInd
 5317              	.LVL427:
 5318 010a ACE7     		b	.L412
 5319              	.L425:
2451:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
 5320              		.loc 1 2451 13 view .LVU1644
2451:Lib/ssc/src/ecatslv.c ****             HW_EscWriteWord(u16dummy,u16EscAddrSendMbx);
 5321              		.loc 1 2451 22 is_stmt 0 view .LVU1645
 5322 010c 0E48     		ldr	r0, .L427+16
 5323 010e 0023     		movs	r3, #0
 5324 0110 0380     		strh	r3, [r0]	@ movhi
2452:Lib/ssc/src/ecatslv.c **** 
 5325              		.loc 1 2452 13 is_stmt 1 view .LVU1646
 5326 0112 0222     		movs	r2, #2
 5327 0114 0D4B     		ldr	r3, .L427+20
 5328 0116 1988     		ldrh	r1, [r3]
 5329 0118 FFF7FEFF 		bl	HW_EscWrite
 5330              	.LVL428:
2456:Lib/ssc/src/ecatslv.c ****             MBX_MailboxReadInd();
 5331              		.loc 1 2456 13 view .LVU1647
2457:Lib/ssc/src/ecatslv.c ****         }
 5332              		.loc 1 2457 13 view .LVU1648
 5333 011c FFF7FEFF 		bl	MBX_MailboxReadInd
 5334              	.LVL429:
 5335 0120 A4E7     		b	.L413
 5336              	.L417:
2474:Lib/ssc/src/ecatslv.c **** 
 5337              		.loc 1 2474 17 view .LVU1649
2474:Lib/ssc/src/ecatslv.c **** 
 5338              		.loc 1 2474 29 is_stmt 0 view .LVU1650
 5339 0122 BDF80430 		ldrh	r3, [sp, #4]
 5340 0126 23F40073 		bic	r3, r3, #512
 5341 012a ADF80430 		strh	r3, [sp, #4]	@ movhi
 5342 012e B5E7     		b	.L418
ARM GAS  /tmp/ccWTp91B.s 			page 186


 5343              	.LVL430:
 5344              	.L426:
2492:Lib/ssc/src/ecatslv.c ****             MBX_CheckAndCopyMailbox();
 5345              		.loc 1 2492 13 is_stmt 1 view .LVU1651
2493:Lib/ssc/src/ecatslv.c **** 
 5346              		.loc 1 2493 13 view .LVU1652
 5347 0130 FFF7FEFF 		bl	MBX_CheckAndCopyMailbox
 5348              	.LVL431:
 5349              		.loc 1 2497 1 is_stmt 0 view .LVU1653
 5350 0134 BDE7     		b	.L406
 5351              	.L428:
 5352 0136 00BF     		.align	2
 5353              	.L427:
 5354 0138 00000000 		.word	bMbxRunning
 5355 013c 00000000 		.word	.LANCHOR36
 5356 0140 00000000 		.word	.LANCHOR5
 5357 0144 00000000 		.word	bMbxRepeatToggle
 5358 0148 00000000 		.word	.LANCHOR37
 5359 014c 00000000 		.word	u16EscAddrSendMbx
 5360              		.cfi_endproc
 5361              	.LFE153:
 5363              		.global	EepromLoaded
 5364              		.global	SyncManInfo
 5365              		.global	SMActivate
 5366              		.global	u16dummy
 5367              		.global	u16ALEventMask
 5368              		.global	nEscAddrInputData
 5369              		.global	nEscAddrOutputData
 5370              		.global	EcatWdValue
 5371              		.global	nAlStatus
 5372              		.global	nMaxEscAddress
 5373              		.global	nMaxSyncMan
 5374              		.global	nPdOutputSize
 5375              		.global	nPdInputSize
 5376              		.global	nEcatStateTrans
 5377              		.global	bEcatWaitForAlControlRes
 5378              		.global	bApplEsmPending
 5379              		.global	u16LocalErrorCode
 5380              		.global	bLocalErrorFlag
 5381              		.global	b3BufferMode
 5382              		.global	bEscIntEnabled
 5383              		.global	LatchInputSync0Counter
 5384              		.global	LatchInputSync0Value
 5385              		.global	Sync1WdValue
 5386              		.global	Sync1WdCounter
 5387              		.global	Sync0WdValue
 5388              		.global	Sync0WdCounter
 5389              		.global	i16WaitForPllRunningCnt
 5390              		.global	i16WaitForPllRunningTimeout
 5391              		.global	bSmSyncSequenceValid
 5392              		.global	u16SmSync0Value
 5393              		.global	u16SmSync0Counter
 5394              		.global	bDcRunning
 5395              		.global	EsmTimeoutCounter
 5396              		.global	bDcSyncActive
 5397              		.global	bWdTrigger
 5398              		.global	bEcatFirstOutputsReceived
ARM GAS  /tmp/ccWTp91B.s 			page 187


 5399              		.global	bEcatInputUpdateRunning
 5400              		.global	bEcatOutputUpdateRunning
 5401              		.section	.bss.EcatWdValue,"aw",%nobits
 5402              		.align	1
 5403              		.set	.LANCHOR20,. + 0
 5406              	EcatWdValue:
 5407 0000 0000     		.space	2
 5408              		.section	.bss.EepromLoaded,"aw",%nobits
 5409              		.set	.LANCHOR0,. + 0
 5412              	EepromLoaded:
 5413 0000 00       		.space	1
 5414              		.section	.bss.EsmTimeoutCounter,"aw",%nobits
 5415              		.align	1
 5416              		.set	.LANCHOR33,. + 0
 5419              	EsmTimeoutCounter:
 5420 0000 0000     		.space	2
 5421              		.section	.bss.LatchInputSync0Counter,"aw",%nobits
 5422              		.align	1
 5423              		.set	.LANCHOR17,. + 0
 5426              	LatchInputSync0Counter:
 5427 0000 0000     		.space	2
 5428              		.section	.bss.LatchInputSync0Value,"aw",%nobits
 5429              		.align	1
 5430              		.set	.LANCHOR16,. + 0
 5433              	LatchInputSync0Value:
 5434 0000 0000     		.space	2
 5435              		.section	.bss.SMActivate,"aw",%nobits
 5436              		.align	1
 5437              		.set	.LANCHOR10,. + 0
 5440              	SMActivate:
 5441 0000 0000     		.space	2
 5442              		.section	.bss.Sync0WdCounter,"aw",%nobits
 5443              		.align	1
 5444              		.set	.LANCHOR22,. + 0
 5447              	Sync0WdCounter:
 5448 0000 0000     		.space	2
 5449              		.section	.bss.Sync0WdValue,"aw",%nobits
 5450              		.align	1
 5451              		.set	.LANCHOR21,. + 0
 5454              	Sync0WdValue:
 5455 0000 0000     		.space	2
 5456              		.section	.bss.Sync1WdCounter,"aw",%nobits
 5457              		.align	1
 5458              		.set	.LANCHOR23,. + 0
 5461              	Sync1WdCounter:
 5462 0000 0000     		.space	2
 5463              		.section	.bss.Sync1WdValue,"aw",%nobits
 5464              		.align	1
 5465              		.set	.LANCHOR24,. + 0
 5468              	Sync1WdValue:
 5469 0000 0000     		.space	2
 5470              		.section	.bss.SyncManInfo,"aw",%nobits
 5471              		.align	2
 5472              		.set	.LANCHOR1,. + 0
 5475              	SyncManInfo:
 5476 0000 00000000 		.space	8
 5476      00000000 
ARM GAS  /tmp/ccWTp91B.s 			page 188


 5477              		.section	.bss.b3BufferMode,"aw",%nobits
 5478              		.set	.LANCHOR3,. + 0
 5481              	b3BufferMode:
 5482 0000 00       		.space	1
 5483              		.section	.bss.bApplEsmPending,"aw",%nobits
 5484              		.set	.LANCHOR34,. + 0
 5487              	bApplEsmPending:
 5488 0000 00       		.space	1
 5489              		.section	.bss.bDcRunning,"aw",%nobits
 5490              		.set	.LANCHOR25,. + 0
 5493              	bDcRunning:
 5494 0000 00       		.space	1
 5495              		.section	.bss.bDcSyncActive,"aw",%nobits
 5496              		.set	.LANCHOR15,. + 0
 5499              	bDcSyncActive:
 5500 0000 00       		.space	1
 5501              		.section	.bss.bEcatFirstOutputsReceived,"aw",%nobits
 5502              		.set	.LANCHOR13,. + 0
 5505              	bEcatFirstOutputsReceived:
 5506 0000 00       		.space	1
 5507              		.section	.bss.bEcatInputUpdateRunning,"aw",%nobits
 5508              		.set	.LANCHOR32,. + 0
 5511              	bEcatInputUpdateRunning:
 5512 0000 00       		.space	1
 5513              		.section	.bss.bEcatOutputUpdateRunning,"aw",%nobits
 5514              		.set	.LANCHOR31,. + 0
 5517              	bEcatOutputUpdateRunning:
 5518 0000 00       		.space	1
 5519              		.section	.bss.bEcatWaitForAlControlRes,"aw",%nobits
 5520              		.set	.LANCHOR36,. + 0
 5523              	bEcatWaitForAlControlRes:
 5524 0000 00       		.space	1
 5525              		.section	.bss.bEscIntEnabled,"aw",%nobits
 5526              		.set	.LANCHOR14,. + 0
 5529              	bEscIntEnabled:
 5530 0000 00       		.space	1
 5531              		.section	.bss.bLocalErrorFlag,"aw",%nobits
 5532              		.set	.LANCHOR28,. + 0
 5535              	bLocalErrorFlag:
 5536 0000 00       		.space	1
 5537              		.section	.bss.bSmSyncSequenceValid,"aw",%nobits
 5538              		.set	.LANCHOR26,. + 0
 5541              	bSmSyncSequenceValid:
 5542 0000 00       		.space	1
 5543              		.section	.bss.bWdTrigger,"aw",%nobits
 5544              		.set	.LANCHOR9,. + 0
 5547              	bWdTrigger:
 5548 0000 00       		.space	1
 5549              		.section	.bss.i16WaitForPllRunningCnt,"aw",%nobits
 5550              		.align	1
 5551              		.set	.LANCHOR30,. + 0
 5554              	i16WaitForPllRunningCnt:
 5555 0000 0000     		.space	2
 5556              		.section	.bss.i16WaitForPllRunningTimeout,"aw",%nobits
 5557              		.align	1
 5558              		.set	.LANCHOR27,. + 0
 5561              	i16WaitForPllRunningTimeout:
ARM GAS  /tmp/ccWTp91B.s 			page 189


 5562 0000 0000     		.space	2
 5563              		.section	.bss.nAlStatus,"aw",%nobits
 5564              		.set	.LANCHOR5,. + 0
 5567              	nAlStatus:
 5568 0000 00       		.space	1
 5569              		.section	.bss.nEcatStateTrans,"aw",%nobits
 5570              		.align	1
 5571              		.set	.LANCHOR35,. + 0
 5574              	nEcatStateTrans:
 5575 0000 0000     		.space	2
 5576              		.section	.bss.nEscAddrInputData,"aw",%nobits
 5577              		.align	1
 5578              		.set	.LANCHOR6,. + 0
 5581              	nEscAddrInputData:
 5582 0000 0000     		.space	2
 5583              		.section	.bss.nEscAddrOutputData,"aw",%nobits
 5584              		.align	1
 5585              		.set	.LANCHOR8,. + 0
 5588              	nEscAddrOutputData:
 5589 0000 0000     		.space	2
 5590              		.section	.bss.nMaxEscAddress,"aw",%nobits
 5591              		.align	1
 5592              		.set	.LANCHOR2,. + 0
 5595              	nMaxEscAddress:
 5596 0000 0000     		.space	2
 5597              		.section	.bss.nMaxSyncMan,"aw",%nobits
 5598              		.set	.LANCHOR11,. + 0
 5601              	nMaxSyncMan:
 5602 0000 00       		.space	1
 5603              		.section	.bss.nPdInputSize,"aw",%nobits
 5604              		.align	1
 5605              		.set	.LANCHOR4,. + 0
 5608              	nPdInputSize:
 5609 0000 0000     		.space	2
 5610              		.section	.bss.nPdOutputSize,"aw",%nobits
 5611              		.align	1
 5612              		.set	.LANCHOR7,. + 0
 5615              	nPdOutputSize:
 5616 0000 0000     		.space	2
 5617              		.section	.bss.u16ALEventMask,"aw",%nobits
 5618              		.align	1
 5619              		.set	.LANCHOR12,. + 0
 5622              	u16ALEventMask:
 5623 0000 0000     		.space	2
 5624              		.section	.bss.u16LocalErrorCode,"aw",%nobits
 5625              		.align	1
 5626              		.set	.LANCHOR29,. + 0
 5629              	u16LocalErrorCode:
 5630 0000 0000     		.space	2
 5631              		.section	.bss.u16SmSync0Counter,"aw",%nobits
 5632              		.align	1
 5633              		.set	.LANCHOR19,. + 0
 5636              	u16SmSync0Counter:
 5637 0000 0000     		.space	2
 5638              		.section	.bss.u16SmSync0Value,"aw",%nobits
 5639              		.align	1
 5640              		.set	.LANCHOR18,. + 0
ARM GAS  /tmp/ccWTp91B.s 			page 190


 5643              	u16SmSync0Value:
 5644 0000 0000     		.space	2
 5645              		.section	.bss.u16dummy,"aw",%nobits
 5646              		.align	1
 5647              		.set	.LANCHOR37,. + 0
 5650              	u16dummy:
 5651 0000 0000     		.space	2
 5652              		.text
 5653              	.Letext0:
 5654              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 5655              		.file 5 "Lib/ssc/include/esc.h"
 5656              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
 5657              		.file 7 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 5658              		.file 8 "Lib/ssc/include/ecatslv.h"
 5659              		.file 9 "Lib/ssc/include/mailbox.h"
 5660              		.file 10 "Lib/ssc/include/objdef.h"
 5661              		.file 11 "Lib/ssc/include/el9800hw.h"
 5662              		.file 12 "Lib/ssc/include/ecatcoe.h"
 5663              		.file 13 "Lib/ssc_app/include/el9800appl.h"
 5664              		.file 14 "Lib/ssc_app/include/ecatappl.h"
ARM GAS  /tmp/ccWTp91B.s 			page 191


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ecatslv.c
     /tmp/ccWTp91B.s:20     .text.ResetALEventMask:0000000000000000 $t
     /tmp/ccWTp91B.s:26     .text.ResetALEventMask:0000000000000000 ResetALEventMask
     /tmp/ccWTp91B.s:132    .text.ResetALEventMask:0000000000000044 $d
     /tmp/ccWTp91B.s:137    .text.SetALEventMask:0000000000000000 $t
     /tmp/ccWTp91B.s:143    .text.SetALEventMask:0000000000000000 SetALEventMask
     /tmp/ccWTp91B.s:246    .text.SetALEventMask:0000000000000044 $d
     /tmp/ccWTp91B.s:251    .text.UpdateEEPROMLoadedState:0000000000000000 $t
     /tmp/ccWTp91B.s:257    .text.UpdateEEPROMLoadedState:0000000000000000 UpdateEEPROMLoadedState
     /tmp/ccWTp91B.s:317    .text.UpdateEEPROMLoadedState:000000000000003c $d
     /tmp/ccWTp91B.s:322    .text.GetSyncMan:0000000000000000 $t
     /tmp/ccWTp91B.s:328    .text.GetSyncMan:0000000000000000 GetSyncMan
     /tmp/ccWTp91B.s:359    .text.GetSyncMan:0000000000000018 $d
     /tmp/ccWTp91B.s:364    .text.DisableSyncManChannel:0000000000000000 $t
     /tmp/ccWTp91B.s:370    .text.DisableSyncManChannel:0000000000000000 DisableSyncManChannel
     /tmp/ccWTp91B.s:427    .text.EnableSyncManChannel:0000000000000000 $t
     /tmp/ccWTp91B.s:433    .text.EnableSyncManChannel:0000000000000000 EnableSyncManChannel
     /tmp/ccWTp91B.s:490    .text.CheckSmSettings:0000000000000000 $t
     /tmp/ccWTp91B.s:496    .text.CheckSmSettings:0000000000000000 CheckSmSettings
     /tmp/ccWTp91B.s:1127   .text.CheckSmSettings:000000000000027c $d
     /tmp/ccWTp91B.s:1140   .text.CheckSmSettings:00000000000002a4 $t
     /tmp/ccWTp91B.s:1190   .text.StartInputHandler:0000000000000000 $t
     /tmp/ccWTp91B.s:1196   .text.StartInputHandler:0000000000000000 StartInputHandler
     /tmp/ccWTp91B.s:1561   .text.StartInputHandler:00000000000001b4 $d
     /tmp/ccWTp91B.s:1578   .text.StartInputHandler:00000000000001ec $t
     /tmp/ccWTp91B.s:2115   .text.StartInputHandler:0000000000000434 $d
     /tmp/ccWTp91B.s:2142   .text.StartInputHandler:0000000000000494 $t
     /tmp/ccWTp91B.s:2362   .text.StartInputHandler:000000000000057c $d
     /tmp/ccWTp91B.s:2373   .text.StartOutputHandler:0000000000000000 $t
     /tmp/ccWTp91B.s:2379   .text.StartOutputHandler:0000000000000000 StartOutputHandler
     /tmp/ccWTp91B.s:2427   .text.StartOutputHandler:0000000000000028 $d
     /tmp/ccWTp91B.s:2436   .text.StopOutputHandler:0000000000000000 $t
     /tmp/ccWTp91B.s:2442   .text.StopOutputHandler:0000000000000000 StopOutputHandler
     /tmp/ccWTp91B.s:2463   .text.StopOutputHandler:000000000000000c $d
     /tmp/ccWTp91B.s:2469   .text.StopInputHandler:0000000000000000 $t
     /tmp/ccWTp91B.s:2475   .text.StopInputHandler:0000000000000000 StopInputHandler
     /tmp/ccWTp91B.s:2602   .text.StopInputHandler:0000000000000078 $d
     /tmp/ccWTp91B.s:2626   .text.BackToInitTransition:0000000000000000 $t
     /tmp/ccWTp91B.s:2632   .text.BackToInitTransition:0000000000000000 BackToInitTransition
     /tmp/ccWTp91B.s:2649   .text.BackToInitTransition:0000000000000008 $d
     /tmp/ccWTp91B.s:2654   .text.SetALStatus:0000000000000000 $t
     /tmp/ccWTp91B.s:2660   .text.SetALStatus:0000000000000000 SetALStatus
     /tmp/ccWTp91B.s:2732   .text.SetALStatus:0000000000000048 $d
     /tmp/ccWTp91B.s:2737   .text.AL_ControlInd:0000000000000000 $t
     /tmp/ccWTp91B.s:2743   .text.AL_ControlInd:0000000000000000 AL_ControlInd
     /tmp/ccWTp91B.s:2823   .text.AL_ControlInd:000000000000004a $d
     /tmp/ccWTp91B.s:2990   .text.AL_ControlInd:0000000000000124 $d
     /tmp/ccWTp91B.s:3001   .text.AL_ControlInd:0000000000000144 $t
     /tmp/ccWTp91B.s:3015   .text.AL_ControlInd:000000000000015c $d
     /tmp/ccWTp91B.s:3136   .text.AL_ControlInd:000000000000024c $t
     /tmp/ccWTp91B.s:3468   .text.AL_ControlInd:00000000000003c0 $d
     /tmp/ccWTp91B.s:3478   .text.AL_ControlInd:00000000000003dc $t
     /tmp/ccWTp91B.s:3758   .text.AL_ControlInd:0000000000000524 $d
     /tmp/ccWTp91B.s:3769   .text.AL_ControlRes:0000000000000000 $t
     /tmp/ccWTp91B.s:3775   .text.AL_ControlRes:0000000000000000 AL_ControlRes
     /tmp/ccWTp91B.s:4249   .text.AL_ControlRes:00000000000001e4 $d
ARM GAS  /tmp/ccWTp91B.s 			page 192


     /tmp/ccWTp91B.s:4270   .text.DC_CheckWatchdog:0000000000000000 $t
     /tmp/ccWTp91B.s:4276   .text.DC_CheckWatchdog:0000000000000000 DC_CheckWatchdog
     /tmp/ccWTp91B.s:4443   .text.DC_CheckWatchdog:00000000000000b4 $d
     /tmp/ccWTp91B.s:4458   .text.CheckIfEcatError:0000000000000000 $t
     /tmp/ccWTp91B.s:4464   .text.CheckIfEcatError:0000000000000000 CheckIfEcatError
     /tmp/ccWTp91B.s:4579   .text.CheckIfEcatError:000000000000007c $d
     /tmp/ccWTp91B.s:4590   .text.ECAT_StateChange:0000000000000000 $t
     /tmp/ccWTp91B.s:4596   .text.ECAT_StateChange:0000000000000000 ECAT_StateChange
     /tmp/ccWTp91B.s:4866   .text.ECAT_StateChange:0000000000000114 $d
     /tmp/ccWTp91B.s:4882   .text.ECAT_Init:0000000000000000 $t
     /tmp/ccWTp91B.s:4888   .text.ECAT_Init:0000000000000000 ECAT_Init
     /tmp/ccWTp91B.s:5069   .text.ECAT_Init:00000000000000bc $d
     /tmp/ccWTp91B.s:5095   .text.ECAT_Main:0000000000000000 $t
     /tmp/ccWTp91B.s:5101   .text.ECAT_Main:0000000000000000 ECAT_Main
     /tmp/ccWTp91B.s:5354   .text.ECAT_Main:0000000000000138 $d
     /tmp/ccWTp91B.s:5412   .bss.EepromLoaded:0000000000000000 EepromLoaded
     /tmp/ccWTp91B.s:5475   .bss.SyncManInfo:0000000000000000 SyncManInfo
     /tmp/ccWTp91B.s:5440   .bss.SMActivate:0000000000000000 SMActivate
     /tmp/ccWTp91B.s:5650   .bss.u16dummy:0000000000000000 u16dummy
     /tmp/ccWTp91B.s:5622   .bss.u16ALEventMask:0000000000000000 u16ALEventMask
     /tmp/ccWTp91B.s:5581   .bss.nEscAddrInputData:0000000000000000 nEscAddrInputData
     /tmp/ccWTp91B.s:5588   .bss.nEscAddrOutputData:0000000000000000 nEscAddrOutputData
     /tmp/ccWTp91B.s:5406   .bss.EcatWdValue:0000000000000000 EcatWdValue
     /tmp/ccWTp91B.s:5567   .bss.nAlStatus:0000000000000000 nAlStatus
     /tmp/ccWTp91B.s:5595   .bss.nMaxEscAddress:0000000000000000 nMaxEscAddress
     /tmp/ccWTp91B.s:5601   .bss.nMaxSyncMan:0000000000000000 nMaxSyncMan
     /tmp/ccWTp91B.s:5615   .bss.nPdOutputSize:0000000000000000 nPdOutputSize
     /tmp/ccWTp91B.s:5608   .bss.nPdInputSize:0000000000000000 nPdInputSize
     /tmp/ccWTp91B.s:5574   .bss.nEcatStateTrans:0000000000000000 nEcatStateTrans
     /tmp/ccWTp91B.s:5523   .bss.bEcatWaitForAlControlRes:0000000000000000 bEcatWaitForAlControlRes
     /tmp/ccWTp91B.s:5487   .bss.bApplEsmPending:0000000000000000 bApplEsmPending
     /tmp/ccWTp91B.s:5629   .bss.u16LocalErrorCode:0000000000000000 u16LocalErrorCode
     /tmp/ccWTp91B.s:5535   .bss.bLocalErrorFlag:0000000000000000 bLocalErrorFlag
     /tmp/ccWTp91B.s:5481   .bss.b3BufferMode:0000000000000000 b3BufferMode
     /tmp/ccWTp91B.s:5529   .bss.bEscIntEnabled:0000000000000000 bEscIntEnabled
     /tmp/ccWTp91B.s:5426   .bss.LatchInputSync0Counter:0000000000000000 LatchInputSync0Counter
     /tmp/ccWTp91B.s:5433   .bss.LatchInputSync0Value:0000000000000000 LatchInputSync0Value
     /tmp/ccWTp91B.s:5468   .bss.Sync1WdValue:0000000000000000 Sync1WdValue
     /tmp/ccWTp91B.s:5461   .bss.Sync1WdCounter:0000000000000000 Sync1WdCounter
     /tmp/ccWTp91B.s:5454   .bss.Sync0WdValue:0000000000000000 Sync0WdValue
     /tmp/ccWTp91B.s:5447   .bss.Sync0WdCounter:0000000000000000 Sync0WdCounter
     /tmp/ccWTp91B.s:5554   .bss.i16WaitForPllRunningCnt:0000000000000000 i16WaitForPllRunningCnt
     /tmp/ccWTp91B.s:5561   .bss.i16WaitForPllRunningTimeout:0000000000000000 i16WaitForPllRunningTimeout
     /tmp/ccWTp91B.s:5541   .bss.bSmSyncSequenceValid:0000000000000000 bSmSyncSequenceValid
     /tmp/ccWTp91B.s:5643   .bss.u16SmSync0Value:0000000000000000 u16SmSync0Value
     /tmp/ccWTp91B.s:5636   .bss.u16SmSync0Counter:0000000000000000 u16SmSync0Counter
     /tmp/ccWTp91B.s:5493   .bss.bDcRunning:0000000000000000 bDcRunning
     /tmp/ccWTp91B.s:5419   .bss.EsmTimeoutCounter:0000000000000000 EsmTimeoutCounter
     /tmp/ccWTp91B.s:5499   .bss.bDcSyncActive:0000000000000000 bDcSyncActive
     /tmp/ccWTp91B.s:5547   .bss.bWdTrigger:0000000000000000 bWdTrigger
     /tmp/ccWTp91B.s:5505   .bss.bEcatFirstOutputsReceived:0000000000000000 bEcatFirstOutputsReceived
     /tmp/ccWTp91B.s:5511   .bss.bEcatInputUpdateRunning:0000000000000000 bEcatInputUpdateRunning
     /tmp/ccWTp91B.s:5517   .bss.bEcatOutputUpdateRunning:0000000000000000 bEcatOutputUpdateRunning
     /tmp/ccWTp91B.s:5402   .bss.EcatWdValue:0000000000000000 $d
     /tmp/ccWTp91B.s:5413   .bss.EepromLoaded:0000000000000000 $d
     /tmp/ccWTp91B.s:5415   .bss.EsmTimeoutCounter:0000000000000000 $d
     /tmp/ccWTp91B.s:5422   .bss.LatchInputSync0Counter:0000000000000000 $d
ARM GAS  /tmp/ccWTp91B.s 			page 193


     /tmp/ccWTp91B.s:5429   .bss.LatchInputSync0Value:0000000000000000 $d
     /tmp/ccWTp91B.s:5436   .bss.SMActivate:0000000000000000 $d
     /tmp/ccWTp91B.s:5443   .bss.Sync0WdCounter:0000000000000000 $d
     /tmp/ccWTp91B.s:5450   .bss.Sync0WdValue:0000000000000000 $d
     /tmp/ccWTp91B.s:5457   .bss.Sync1WdCounter:0000000000000000 $d
     /tmp/ccWTp91B.s:5464   .bss.Sync1WdValue:0000000000000000 $d
     /tmp/ccWTp91B.s:5471   .bss.SyncManInfo:0000000000000000 $d
     /tmp/ccWTp91B.s:5482   .bss.b3BufferMode:0000000000000000 $d
     /tmp/ccWTp91B.s:5488   .bss.bApplEsmPending:0000000000000000 $d
     /tmp/ccWTp91B.s:5494   .bss.bDcRunning:0000000000000000 $d
     /tmp/ccWTp91B.s:5500   .bss.bDcSyncActive:0000000000000000 $d
     /tmp/ccWTp91B.s:5506   .bss.bEcatFirstOutputsReceived:0000000000000000 $d
     /tmp/ccWTp91B.s:5512   .bss.bEcatInputUpdateRunning:0000000000000000 $d
     /tmp/ccWTp91B.s:5518   .bss.bEcatOutputUpdateRunning:0000000000000000 $d
     /tmp/ccWTp91B.s:5524   .bss.bEcatWaitForAlControlRes:0000000000000000 $d
     /tmp/ccWTp91B.s:5530   .bss.bEscIntEnabled:0000000000000000 $d
     /tmp/ccWTp91B.s:5536   .bss.bLocalErrorFlag:0000000000000000 $d
     /tmp/ccWTp91B.s:5542   .bss.bSmSyncSequenceValid:0000000000000000 $d
     /tmp/ccWTp91B.s:5548   .bss.bWdTrigger:0000000000000000 $d
     /tmp/ccWTp91B.s:5550   .bss.i16WaitForPllRunningCnt:0000000000000000 $d
     /tmp/ccWTp91B.s:5557   .bss.i16WaitForPllRunningTimeout:0000000000000000 $d
     /tmp/ccWTp91B.s:5568   .bss.nAlStatus:0000000000000000 $d
     /tmp/ccWTp91B.s:5570   .bss.nEcatStateTrans:0000000000000000 $d
     /tmp/ccWTp91B.s:5577   .bss.nEscAddrInputData:0000000000000000 $d
     /tmp/ccWTp91B.s:5584   .bss.nEscAddrOutputData:0000000000000000 $d
     /tmp/ccWTp91B.s:5591   .bss.nMaxEscAddress:0000000000000000 $d
     /tmp/ccWTp91B.s:5602   .bss.nMaxSyncMan:0000000000000000 $d
     /tmp/ccWTp91B.s:5604   .bss.nPdInputSize:0000000000000000 $d
     /tmp/ccWTp91B.s:5611   .bss.nPdOutputSize:0000000000000000 $d
     /tmp/ccWTp91B.s:5618   .bss.u16ALEventMask:0000000000000000 $d
     /tmp/ccWTp91B.s:5625   .bss.u16LocalErrorCode:0000000000000000 $d
     /tmp/ccWTp91B.s:5632   .bss.u16SmSync0Counter:0000000000000000 $d
     /tmp/ccWTp91B.s:5639   .bss.u16SmSync0Value:0000000000000000 $d
     /tmp/ccWTp91B.s:5646   .bss.u16dummy:0000000000000000 $d
     /tmp/ccWTp91B.s:2863   .text.AL_ControlInd:0000000000000071 $d
     /tmp/ccWTp91B.s:2863   .text.AL_ControlInd:0000000000000072 $t

UNDEFINED SYMBOLS
HW_EscRead
HW_EscWrite
sSyncManOutPar
sSyncManInPar
u16EscAddrSendMbx
u16SendMbxSize
u16EscAddrReceiveMbx
u16ReceiveMbxSize
bSyncSetByUser
PDO_InputMapping
sCycleDiag
APPL_GenerateMapping
MBX_StartMailboxHandler
MBX_StopMailboxHandler
APPL_StartMailboxHandler
APPL_StopMailboxHandler
APPL_StartInputHandler
APPL_StopInputHandler
APPL_StartOutputHandler
ARM GAS  /tmp/ccWTp91B.s 			page 194


APPL_StopOutputHandler
bMbxRunning
APPL_AckErrorInd
sErrorSettings
MBX_Init
COE_Init
MBX_Main
HW_GetALEventRegister
MBX_MailboxRepeatReq
MBX_MailboxReadInd
MBX_CheckAndCopyMailbox
bMbxRepeatToggle
