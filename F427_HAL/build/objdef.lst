ARM GAS  /tmp/ccHv31r6.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"objdef.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OBJ_GetObjectHandle,"ax",%progbits
  20              		.align	1
  21              		.global	OBJ_GetObjectHandle
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	OBJ_GetObjectHandle:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "Lib/ssc/src/objdef.c"
   1:Lib/ssc/src/objdef.c **** /**
   2:Lib/ssc/src/objdef.c **** \addtogroup CoE CAN Application Profile over EtherCAT
   3:Lib/ssc/src/objdef.c **** @{
   4:Lib/ssc/src/objdef.c **** */
   5:Lib/ssc/src/objdef.c **** 
   6:Lib/ssc/src/objdef.c **** /**
   7:Lib/ssc/src/objdef.c **** \file objdef.c
   8:Lib/ssc/src/objdef.c **** \author EthercatSSC@beckhoff.com
   9:Lib/ssc/src/objdef.c **** \brief Implementation
  10:Lib/ssc/src/objdef.c **** This file contains the object dictionary access functions
  11:Lib/ssc/src/objdef.c **** 
  12:Lib/ssc/src/objdef.c **** \version 5.11
  13:Lib/ssc/src/objdef.c **** 
  14:Lib/ssc/src/objdef.c **** <br>Changes to version V5.10.1:<br>
  15:Lib/ssc/src/objdef.c **** V5.11 DIAG4: change parameter handling in DIAG_CreateNewMessage()<br>
  16:Lib/ssc/src/objdef.c **** V5.11 ECAT: <br>
  17:Lib/ssc/src/objdef.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  18:Lib/ssc/src/objdef.c **** V5.11 ESM7: "add Sync define for 0x22 (""SYNCTYPE_SM2_SYNCHRON""), support value 0x22 for 0x1C33.1 
  19:Lib/ssc/src/objdef.c **** V5.11 OBJ1: OBJ_GetEntryOffset: return offset 0 for si0 (always offset 16 was returned before)<br>
  20:Lib/ssc/src/objdef.c **** V5.11 SDO1: "Obj_Read/Obj_Write: Check if entries > 8bit has even word offset (otherwise ""unsuppor
  21:Lib/ssc/src/objdef.c **** V5.11 SDO2: Obj_Read/Obj_Write: Handle arrays (string, array of byte, ...) with an odd word length 
  22:Lib/ssc/src/objdef.c **** V5.11 SDO3: handle not word aligned enums<br>
  23:Lib/ssc/src/objdef.c **** V5.11 SDO5: add missing swapping on SI0 write access<br>
  24:Lib/ssc/src/objdef.c **** V5.11 SDO6: OBJ_GetDesc ensure that the default string is used if no string was found<br>
  25:Lib/ssc/src/objdef.c **** V5.11 SDO7: add missing value swapping if memory values are bitwise modified on object read/write a
  26:Lib/ssc/src/objdef.c **** V5.11 SDO9: "handle SDO access for entries which are not accessible (in case of SDO complete access
  27:Lib/ssc/src/objdef.c **** V5.11 TEST2: add test 0x300C object (entry bitlength > 65535)<br>
  28:Lib/ssc/src/objdef.c **** V5.11 TEST8: create diag message on SDO write access to 0x3002<br>
  29:Lib/ssc/src/objdef.c **** <br>Changes to version V5.01:<br>
ARM GAS  /tmp/ccHv31r6.s 			page 2


  30:Lib/ssc/src/objdef.c **** V5.10 COE2: Change return value of Get ObjectSize to UINT32<br>
  31:Lib/ssc/src/objdef.c ****             Change object size to UINT32<br>
  32:Lib/ssc/src/objdef.c **** V5.10 ECAT11: Add define "USE_SINGLE_PDO_MAPPING_ENTRY_DESCR" (Only one entry description is requir
  33:Lib/ssc/src/objdef.c **** V5.10 ECAT13: Update Synchronisation handling (FreeRun,SM Sync, Sync0, Sync1)<br>
  34:Lib/ssc/src/objdef.c ****               Compare DC UINT configuration (by ESC Config data) vs. DC activation register setting
  35:Lib/ssc/src/objdef.c ****               Update 0x1C3x entries<br>
  36:Lib/ssc/src/objdef.c **** V5.10 ECAT3: Add new datatype handling (BITARRxx)<br>
  37:Lib/ssc/src/objdef.c ****              Use read/write marco to access STRING entries<br>
  38:Lib/ssc/src/objdef.c **** V5.10 SDO1: Handle access to enums on odd memory addresses (only for MBX_16BIT_ACCESS)<br>
  39:Lib/ssc/src/objdef.c **** V5.10 SDO2: Check for termination char in every substring<br>
  40:Lib/ssc/src/objdef.c **** V5.10 SDO5: Check also for PDO mapping object if the subindex 0 was set to 0 before the entries wil
  41:Lib/ssc/src/objdef.c **** V5.10 SDO9: SDO complete write access update buffer offset calculation in case of SI0 is readonly<b
  42:Lib/ssc/src/objdef.c **** V5.10 TEST2: Add 0x3004.14 (Access to this entry will always rejected with the code "cannot be acce
  43:Lib/ssc/src/objdef.c **** V5.10 TEST4: Add CoE test (0x2020.5) to return always max object data on complete access (not limit
  44:Lib/ssc/src/objdef.c **** <br>Changes to version V5.0:<br>
  45:Lib/ssc/src/objdef.c **** V5.01 COE2: Calculate the bit offset also for SI0 in case if an SDO download access.<br>
  46:Lib/ssc/src/objdef.c **** V5.01 SDO1: Update alignment entry handling.<br>
  47:Lib/ssc/src/objdef.c **** V5.01 SDO5: Update offset calculation in case of an not accessible entry<br>
  48:Lib/ssc/src/objdef.c **** V5.01 SDO7: Update object length calculation in case of an BitArray<br>
  49:Lib/ssc/src/objdef.c **** V5.01 TEST5: Add slave configuration object handling (0x8000, if test application is active)<br>
  50:Lib/ssc/src/objdef.c **** V5.01 TEST6: Add test to create dummy object dictionary.<br>
  51:Lib/ssc/src/objdef.c **** <br>Changes to version V4.40:<br>
  52:Lib/ssc/src/objdef.c **** V5.0 TEST1: Add test application.<br>
  53:Lib/ssc/src/objdef.c **** V5.0 COE3: Update OCTED_STRING and VISIBLE_STRING read/write.<br>
  54:Lib/ssc/src/objdef.c **** V5.0 COE5: Add BigEndian support for enum SDO read, handle complete access also for objects with al
  55:Lib/ssc/src/objdef.c **** V5.0 COE7: Support SDO Info entry name handling for 16Bit access<br>
  56:Lib/ssc/src/objdef.c **** V5.0 DIAG2: SDO Info request for diagnosis messages 0x10F3 SI5 or greater return always description
  57:Lib/ssc/src/objdef.c **** V5.0 COE2: Add plausibility check for PDO assign objects.<br>
  58:Lib/ssc/src/objdef.c **** V5.0 OBJ2: Support DWORD/WORD aligned object structures.<br>
  59:Lib/ssc/src/objdef.c **** V5.0 SDO7: Update SDO read/write for object(entries) less or equal 8Bit.<br>
  60:Lib/ssc/src/objdef.c **** <br>Changes to version V4.30:<br>
  61:Lib/ssc/src/objdef.c **** V4.40 DIAG1: Add diagnosis access functions<br>
  62:Lib/ssc/src/objdef.c **** V4.40 OBJ2: change counter variable to prevent deadlock caused by overrun (required if subindex0 is
  63:Lib/ssc/src/objdef.c **** V4.40 COE2: Prevent accessing empty object dictionary entry<br>
  64:Lib/ssc/src/objdef.c **** V4.40 COE3: Read whole object dictionary<br>
  65:Lib/ssc/src/objdef.c **** V4.40 COE1: Prototype of OBJ_GetObjectList() changed, set abort code if object dictionary is empty<
  66:Lib/ssc/src/objdef.c **** V4.30 OBJ 3: Object dictionary list handling<br>
  67:Lib/ssc/src/objdef.c **** V4.30 OBJ 2: fix SDO complete access bug<br>
  68:Lib/ssc/src/objdef.c **** V4.11 OBJ 1-3: OBJ_GetDesc() Now, subindex 0 instead of 0xFF is used to return the description of t
  69:Lib/ssc/src/objdef.c **** Subindex 0xFF could be used like a normal subindex.<br>
  70:Lib/ssc/src/objdef.c **** <br>Changes to version V4.08:<br>
  71:Lib/ssc/src/objdef.c **** V4.10 OBJ 1: calculate size of PdoObjectEntry Index 1 and not Index 0<br>
  72:Lib/ssc/src/objdef.c **** V4.10 OBJ 2: the pointer of the object dictionary will be get by a function (COE_GetObjectDictionar
  73:Lib/ssc/src/objdef.c **** <br>Changes to version V4.07:<br>
  74:Lib/ssc/src/objdef.c **** V4.08 OBJ 1: if subindex 0 is writable, the maximum subindex should be checked in an object specifi
  75:Lib/ssc/src/objdef.c ****              because for the PDO mapping and PDO assign the object shall only be written if subinde
  76:Lib/ssc/src/objdef.c **** <br>Changes to version V4.04:<br>
  77:Lib/ssc/src/objdef.c **** V4.04 OBJ 1: The loop in OBJ_GetObjectList was one subindex too low<br>
  78:Lib/ssc/src/objdef.c **** <br>Changes to version V4.03:<br>
  79:Lib/ssc/src/objdef.c **** V4.04 SDO 1: The SDO interface was changed in that way that a SDO response<br>
  80:Lib/ssc/src/objdef.c ****              could be sent by the application to a later time. In that case<br>
  81:Lib/ssc/src/objdef.c ****                  the functions OBJ_Read and OBJ_Write shall return the value<br>
  82:Lib/ssc/src/objdef.c ****                  ABORTIDX_WORKING. To send the SDO response the new function SDOS_SdoRes<br>
  83:Lib/ssc/src/objdef.c ****                  has to be called by the application. While waiting for the call<br>
  84:Lib/ssc/src/objdef.c ****                  of SDOS_SdoRes the SDO interface will answer to another SDO request<br>
  85:Lib/ssc/src/objdef.c ****                  with the error MBXERR_SERVICEINWORK in the mailbox protocol<br>
  86:Lib/ssc/src/objdef.c **** V4.04 OBJ 1: The loop in OBJ_GetNoOfObjects was one subindex too low<br>
ARM GAS  /tmp/ccHv31r6.s 			page 3


  87:Lib/ssc/src/objdef.c **** <br>Changes to version V4.02:<br>
  88:Lib/ssc/src/objdef.c **** V4.03 OBJ 1: The object list was not returned correctly for the list types 2-5<br>
  89:Lib/ssc/src/objdef.c **** <br>Changes to version V3.20:<br>
  90:Lib/ssc/src/objdef.c **** V4.00 OBJ 1: The OBJ functions are modified for a more flexible definition of<br>
  91:Lib/ssc/src/objdef.c ****              the object dictionary and to support bit types too<br>
  92:Lib/ssc/src/objdef.c **** V4.00 SDO 2: The object lists will be generated in the functions OBJ_GetNoOfObjects<br>
  93:Lib/ssc/src/objdef.c ****              and OBJ_GetObjectList in objdef.c to decouple the SDO services from<br>
  94:Lib/ssc/src/objdef.c ****              the implementation of the object dictionary<br>
  95:Lib/ssc/src/objdef.c **** V4.00 COEAPPL 2: The handling of backup parameters was included according to<br>
  96:Lib/ssc/src/objdef.c ****                  the EtherCAT Guidelines and Protocol Enhancements Specification
  97:Lib/ssc/src/objdef.c **** 
  98:Lib/ssc/src/objdef.c **** */
  99:Lib/ssc/src/objdef.c **** 
 100:Lib/ssc/src/objdef.c **** 
 101:Lib/ssc/src/objdef.c **** #define    OBJDEF        0x4000
 102:Lib/ssc/src/objdef.c **** #define    OBJDEFMAX    0x0A
 103:Lib/ssc/src/objdef.c **** 
 104:Lib/ssc/src/objdef.c **** /*---------------------------------------------------------------------------------------
 105:Lib/ssc/src/objdef.c **** ------
 106:Lib/ssc/src/objdef.c **** ------    Includes
 107:Lib/ssc/src/objdef.c **** ------
 108:Lib/ssc/src/objdef.c **** ---------------------------------------------------------------------------------------*/
 109:Lib/ssc/src/objdef.c **** 
 110:Lib/ssc/src/objdef.c **** #include "ecat_def.h"
 111:Lib/ssc/src/objdef.c **** 
 112:Lib/ssc/src/objdef.c **** 
 113:Lib/ssc/src/objdef.c **** #include "ecatslv.h"
 114:Lib/ssc/src/objdef.c **** #include "coeappl.h"
 115:Lib/ssc/src/objdef.c **** 
 116:Lib/ssc/src/objdef.c **** #define  _OBJDEF_    1
 117:Lib/ssc/src/objdef.c **** #include "objdef.h"
 118:Lib/ssc/src/objdef.c **** #undef    _OBJDEF_
 119:Lib/ssc/src/objdef.c **** /* ECATCHANGE_START(V5.11) ECAT10*/
 120:Lib/ssc/src/objdef.c **** /*remove definition of _OBJDEF_ (#ifdef is used in objdef.h)*/
 121:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) ECAT10*/
 122:Lib/ssc/src/objdef.c **** 
 123:Lib/ssc/src/objdef.c **** 
 124:Lib/ssc/src/objdef.c **** 
 125:Lib/ssc/src/objdef.c **** 
 126:Lib/ssc/src/objdef.c **** extern OBJCONST TOBJECT OBJMEM *pSdoInfoObjEntry;
 127:Lib/ssc/src/objdef.c **** extern OBJCONST TSDOINFOENTRYDESC OBJMEM * OBJ_GetEntryDesc(OBJCONST TOBJECT OBJMEM * pObjEntry, UI
 128:Lib/ssc/src/objdef.c **** 
 129:Lib/ssc/src/objdef.c **** //---------------------------------------------------------------------------------------
 130:Lib/ssc/src/objdef.c **** 
 131:Lib/ssc/src/objdef.c **** /*---------------------------------------------------------------------------------------
 132:Lib/ssc/src/objdef.c **** ------
 133:Lib/ssc/src/objdef.c **** ------    Internal types and defines
 134:Lib/ssc/src/objdef.c **** ------
 135:Lib/ssc/src/objdef.c **** ---------------------------------------------------------------------------------------*/
 136:Lib/ssc/src/objdef.c **** 
 137:Lib/ssc/src/objdef.c **** /*---------------------------------------------------------------------------------------
 138:Lib/ssc/src/objdef.c **** ------
 139:Lib/ssc/src/objdef.c **** ------    module internal function declarations
 140:Lib/ssc/src/objdef.c **** ------
 141:Lib/ssc/src/objdef.c **** ---------------------------------------------------------------------------------------*/
 142:Lib/ssc/src/objdef.c **** 
 143:Lib/ssc/src/objdef.c **** /*---------------------------------------------------------------------------------------
ARM GAS  /tmp/ccHv31r6.s 			page 4


 144:Lib/ssc/src/objdef.c **** ------
 145:Lib/ssc/src/objdef.c **** ------    Module internal variable definitions
 146:Lib/ssc/src/objdef.c **** ------
 147:Lib/ssc/src/objdef.c **** ---------------------------------------------------------------------------------------*/
 148:Lib/ssc/src/objdef.c **** const UINT16 cBitMask[16] = {0x0000,0x0001,0x0003,0x0007,0x000F,0x001F,0x003F,0x007F,0x00FF,0x01FF,
 149:Lib/ssc/src/objdef.c **** /*---------------------------------------------------------------------------------------
 150:Lib/ssc/src/objdef.c **** ------
 151:Lib/ssc/src/objdef.c **** ------    Functions
 152:Lib/ssc/src/objdef.c **** ------
 153:Lib/ssc/src/objdef.c **** ---------------------------------------------------------------------------------------*/
 154:Lib/ssc/src/objdef.c **** 
 155:Lib/ssc/src/objdef.c **** 
 156:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 157:Lib/ssc/src/objdef.c **** /**
 158:Lib/ssc/src/objdef.c ****  \param     index     Indicates the index of the dictionary object.
 159:Lib/ssc/src/objdef.c **** 
 160:Lib/ssc/src/objdef.c ****  \return    A handle to an object of the requested index or NULL if not found.
 161:Lib/ssc/src/objdef.c **** 
 162:Lib/ssc/src/objdef.c ****  \brief    The function looks in all objects of the dictionary after the indicated index
 163:Lib/ssc/src/objdef.c ****              and returns a handle if found.
 164:Lib/ssc/src/objdef.c **** 
 165:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 166:Lib/ssc/src/objdef.c **** 
 167:Lib/ssc/src/objdef.c **** OBJCONST TOBJECT OBJMEM *  OBJ_GetObjectHandle( UINT16 index )
 168:Lib/ssc/src/objdef.c **** {
  30              		.loc 1 168 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 168 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
 169:Lib/ssc/src/objdef.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry = (OBJCONST TOBJECT OBJMEM *) COE_GetObjectDictionary();
  40              		.loc 1 169 5 is_stmt 1 view .LVU2
  41              		.loc 1 169 43 is_stmt 0 view .LVU3
  42 0004 FFF7FEFF 		bl	COE_GetObjectDictionary
  43              	.LVL1:
 170:Lib/ssc/src/objdef.c **** 
 171:Lib/ssc/src/objdef.c ****     while (pObjEntry!= NULL)
  44              		.loc 1 171 5 is_stmt 1 view .LVU4
  45              		.loc 1 171 11 is_stmt 0 view .LVU5
  46 0008 00E0     		b	.L2
  47              	.L6:
 172:Lib/ssc/src/objdef.c ****     {
 173:Lib/ssc/src/objdef.c ****         if (pObjEntry->Index == index)
 174:Lib/ssc/src/objdef.c ****             return pObjEntry;
 175:Lib/ssc/src/objdef.c ****         pObjEntry = (TOBJECT OBJMEM *) pObjEntry->pNext;
  48              		.loc 1 175 9 is_stmt 1 view .LVU6
  49              		.loc 1 175 19 is_stmt 0 view .LVU7
  50 000a 4068     		ldr	r0, [r0, #4]
  51              	.LVL2:
  52              	.L2:
 171:Lib/ssc/src/objdef.c ****     {
  53              		.loc 1 171 11 is_stmt 1 view .LVU8
ARM GAS  /tmp/ccHv31r6.s 			page 5


  54 000c 10B1     		cbz	r0, .L1
 173:Lib/ssc/src/objdef.c ****             return pObjEntry;
  55              		.loc 1 173 9 view .LVU9
 173:Lib/ssc/src/objdef.c ****             return pObjEntry;
  56              		.loc 1 173 22 is_stmt 0 view .LVU10
  57 000e 0389     		ldrh	r3, [r0, #8]
 173:Lib/ssc/src/objdef.c ****             return pObjEntry;
  58              		.loc 1 173 12 view .LVU11
  59 0010 A342     		cmp	r3, r4
  60 0012 FAD1     		bne	.L6
  61              	.L1:
 176:Lib/ssc/src/objdef.c ****     }
 177:Lib/ssc/src/objdef.c ****     return 0;
 178:Lib/ssc/src/objdef.c **** }
  62              		.loc 1 178 1 view .LVU12
  63 0014 10BD     		pop	{r4, pc}
  64              		.cfi_endproc
  65              	.LFE134:
  67              		.section	.text.OBJ_GetObjectLength,"ax",%progbits
  68              		.align	1
  69              		.global	OBJ_GetObjectLength
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	OBJ_GetObjectLength:
  75              	.LVL3:
  76              	.LFB135:
 179:Lib/ssc/src/objdef.c **** 
 180:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 181:Lib/ssc/src/objdef.c **** /**
 182:Lib/ssc/src/objdef.c ****  \param     index           Index of the requested object.
 183:Lib/ssc/src/objdef.c ****  \param     subindex        Subindex of the requested object.
 184:Lib/ssc/src/objdef.c ****  \param     pObjEntry       Handle to the dictionary object returned by
 185:Lib/ssc/src/objdef.c ****                             OBJ_GetObjectHandle which was called before
 186:Lib/ssc/src/objdef.c ****  \param     bCompleteAccess Indicates if a complete read of all subindices of the
 187:Lib/ssc/src/objdef.c ****                             object shall be done or not
 188:Lib/ssc/src/objdef.c **** 
 189:Lib/ssc/src/objdef.c ****  \return    The size of the object entry in bytes (!).
 190:Lib/ssc/src/objdef.c **** 
 191:Lib/ssc/src/objdef.c ****  \brief     This function returns the size of the requested entry. If bCompleteaccess is set the si
 192:Lib/ssc/src/objdef.c **** 
 193:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 194:Lib/ssc/src/objdef.c **** UINT32 OBJ_GetObjectLength( UINT16 index, UINT8 subindex, OBJCONST TOBJECT OBJMEM * pObjEntry, UINT
 195:Lib/ssc/src/objdef.c **** {
  77              		.loc 1 195 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 195 1 is_stmt 0 view .LVU14
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
 196:Lib/ssc/src/objdef.c ****     /* get the information of ObjCode and MaxSubindex in local variables to support different types
 197:Lib/ssc/src/objdef.c ****     UINT8 objCode = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT;
  86              		.loc 1 197 5 is_stmt 1 view .LVU15
  87              		.loc 1 197 40 is_stmt 0 view .LVU16
ARM GAS  /tmp/ccHv31r6.s 			page 6


  88 0002 B2F80CE0 		ldrh	lr, [r2, #12]
  89              		.loc 1 197 11 view .LVU17
  90 0006 CEF30320 		ubfx	r0, lr, #8, #4
  91              	.LVL4:
 198:Lib/ssc/src/objdef.c ****     UINT8 maxSubindex = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_MAXSUBINDEXMASK) >> OBJFLAGS_MAXSUB
  92              		.loc 1 198 5 is_stmt 1 view .LVU18
 199:Lib/ssc/src/objdef.c ****     UINT32 size = 0;
  93              		.loc 1 199 5 view .LVU19
 200:Lib/ssc/src/objdef.c **** 
 201:Lib/ssc/src/objdef.c ****     if ( bCompleteAccess )
  94              		.loc 1 201 5 view .LVU20
  95              		.loc 1 201 8 is_stmt 0 view .LVU21
  96 000a 23B3     		cbz	r3, .L8
  97 000c 5FFA8EFE 		uxtb	lr, lr
 202:Lib/ssc/src/objdef.c ****     {
 203:Lib/ssc/src/objdef.c ****         if ( objCode == OBJCODE_VAR )
  98              		.loc 1 203 9 is_stmt 1 view .LVU22
  99              		.loc 1 203 12 is_stmt 0 view .LVU23
 100 0010 0728     		cmp	r0, #7
 101 0012 38D0     		beq	.L16
 204:Lib/ssc/src/objdef.c ****             return 0;
 205:Lib/ssc/src/objdef.c ****         else if ((objCode == OBJCODE_ARR)
 102              		.loc 1 205 14 is_stmt 1 view .LVU24
 103              		.loc 1 205 17 is_stmt 0 view .LVU25
 104 0014 0828     		cmp	r0, #8
 105 0016 02D0     		beq	.L20
 106              	.LBB2:
 206:Lib/ssc/src/objdef.c ****             )
 207:Lib/ssc/src/objdef.c ****         {
 208:Lib/ssc/src/objdef.c **** 
 209:Lib/ssc/src/objdef.c ****             /* we have to get the maxSubindex from the actual value of subindex 0,
 210:Lib/ssc/src/objdef.c ****                 which is stored as UINT16 at the beginning of the object's variable */
 211:Lib/ssc/src/objdef.c ****             maxSubindex = (UINT8) ((UINT16 MBXMEM *) (pObjEntry->pVarPtr))[0];
 212:Lib/ssc/src/objdef.c **** 
 213:Lib/ssc/src/objdef.c **** 
 214:Lib/ssc/src/objdef.c ****             size = pObjEntry->pEntryDesc[1].BitLength *maxSubindex;
 215:Lib/ssc/src/objdef.c **** 
 216:Lib/ssc/src/objdef.c **** /* no padding required: Bit entries within an array object may overlap byte borders*/
 217:Lib/ssc/src/objdef.c **** 
 218:Lib/ssc/src/objdef.c ****             /* we have to convert the size in bytes */
 219:Lib/ssc/src/objdef.c ****             size = BIT2BYTE(size);
 220:Lib/ssc/src/objdef.c **** 
 221:Lib/ssc/src/objdef.c ****             if ( subindex == 0 )
 222:Lib/ssc/src/objdef.c ****             {
 223:Lib/ssc/src/objdef.c ****                 /* add size for subindex 0 (is transmitted as UINT16) */
 224:Lib/ssc/src/objdef.c ****                 size += 2;
 225:Lib/ssc/src/objdef.c ****             }
 226:Lib/ssc/src/objdef.c ****             return size;
 227:Lib/ssc/src/objdef.c ****         }
 228:Lib/ssc/src/objdef.c ****         else
 229:Lib/ssc/src/objdef.c ****         {
 230:Lib/ssc/src/objdef.c ****             UINT8 i;
 231:Lib/ssc/src/objdef.c **** 
 232:Lib/ssc/src/objdef.c ****             /* add the sizes of all entries */
 233:Lib/ssc/src/objdef.c ****             for (i = 1; i <= maxSubindex; i++)
 107              		.loc 1 233 20 view .LVU26
 108 0018 0123     		movs	r3, #1
ARM GAS  /tmp/ccHv31r6.s 			page 7


 109              	.LVL5:
 110              		.loc 1 233 20 view .LVU27
 111              	.LBE2:
 199:Lib/ssc/src/objdef.c **** 
 112              		.loc 1 199 12 view .LVU28
 113 001a 0020     		movs	r0, #0
 114              	.LVL6:
 199:Lib/ssc/src/objdef.c **** 
 115              		.loc 1 199 12 view .LVU29
 116 001c 14E0     		b	.L10
 117              	.LVL7:
 118              	.L20:
 211:Lib/ssc/src/objdef.c **** 
 119              		.loc 1 211 13 is_stmt 1 view .LVU30
 211:Lib/ssc/src/objdef.c **** 
 120              		.loc 1 211 64 is_stmt 0 view .LVU31
 121 001e 9369     		ldr	r3, [r2, #24]
 122              	.LVL8:
 211:Lib/ssc/src/objdef.c **** 
 123              		.loc 1 211 25 view .LVU32
 124 0020 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 125              	.LVL9:
 214:Lib/ssc/src/objdef.c **** 
 126              		.loc 1 214 13 is_stmt 1 view .LVU33
 214:Lib/ssc/src/objdef.c **** 
 127              		.loc 1 214 29 is_stmt 0 view .LVU34
 128 0022 1369     		ldr	r3, [r2, #16]
 214:Lib/ssc/src/objdef.c **** 
 129              		.loc 1 214 44 view .LVU35
 130 0024 1B89     		ldrh	r3, [r3, #8]
 214:Lib/ssc/src/objdef.c **** 
 131              		.loc 1 214 55 view .LVU36
 132 0026 03FB00F0 		mul	r0, r3, r0
 133              	.LVL10:
 219:Lib/ssc/src/objdef.c **** 
 134              		.loc 1 219 13 is_stmt 1 view .LVU37
 219:Lib/ssc/src/objdef.c **** 
 135              		.loc 1 219 20 is_stmt 0 view .LVU38
 136 002a 0730     		adds	r0, r0, #7
 137              	.LVL11:
 219:Lib/ssc/src/objdef.c **** 
 138              		.loc 1 219 18 view .LVU39
 139 002c C008     		lsrs	r0, r0, #3
 140              	.LVL12:
 221:Lib/ssc/src/objdef.c ****             {
 141              		.loc 1 221 13 is_stmt 1 view .LVU40
 221:Lib/ssc/src/objdef.c ****             {
 142              		.loc 1 221 16 is_stmt 0 view .LVU41
 143 002e F9B9     		cbnz	r1, .L7
 224:Lib/ssc/src/objdef.c ****             }
 144              		.loc 1 224 17 is_stmt 1 view .LVU42
 224:Lib/ssc/src/objdef.c ****             }
 145              		.loc 1 224 22 is_stmt 0 view .LVU43
 146 0030 0230     		adds	r0, r0, #2
 147              	.LVL13:
 226:Lib/ssc/src/objdef.c ****         }
 148              		.loc 1 226 13 is_stmt 1 view .LVU44
ARM GAS  /tmp/ccHv31r6.s 			page 8


 226:Lib/ssc/src/objdef.c ****         }
 149              		.loc 1 226 20 is_stmt 0 view .LVU45
 150 0032 1DE0     		b	.L7
 151              	.LVL14:
 152              	.L12:
 153              	.LBB3:
 234:Lib/ssc/src/objdef.c ****             {
 235:Lib/ssc/src/objdef.c ****                 size += pObjEntry->pEntryDesc[i].BitLength;
 154              		.loc 1 235 17 is_stmt 1 discriminator 3 view .LVU46
 155              		.loc 1 235 46 is_stmt 0 discriminator 3 view .LVU47
 156 0034 03EB430C 		add	ip, r3, r3, lsl #1
 157 0038 1469     		ldr	r4, [r2, #16]
 158 003a 04EB4C0C 		add	ip, r4, ip, lsl #1
 159              		.loc 1 235 49 discriminator 3 view .LVU48
 160 003e BCF802C0 		ldrh	ip, [ip, #2]
 161              		.loc 1 235 22 discriminator 3 view .LVU49
 162 0042 6044     		add	r0, r0, ip
 163              	.LVL15:
 233:Lib/ssc/src/objdef.c ****             {
 164              		.loc 1 233 43 is_stmt 1 discriminator 3 view .LVU50
 233:Lib/ssc/src/objdef.c ****             {
 165              		.loc 1 233 44 is_stmt 0 discriminator 3 view .LVU51
 166 0044 0133     		adds	r3, r3, #1
 167              	.LVL16:
 233:Lib/ssc/src/objdef.c ****             {
 168              		.loc 1 233 44 discriminator 3 view .LVU52
 169 0046 DBB2     		uxtb	r3, r3
 170              	.LVL17:
 171              	.L10:
 233:Lib/ssc/src/objdef.c ****             {
 172              		.loc 1 233 25 is_stmt 1 discriminator 1 view .LVU53
 233:Lib/ssc/src/objdef.c ****             {
 173              		.loc 1 233 13 is_stmt 0 discriminator 1 view .LVU54
 174 0048 7345     		cmp	r3, lr
 175 004a F3D9     		bls	.L12
 236:Lib/ssc/src/objdef.c ****             }
 237:Lib/ssc/src/objdef.c ****             /* we have to convert the size in bytes */
 238:Lib/ssc/src/objdef.c ****             size = BIT2BYTE(size);
 176              		.loc 1 238 13 is_stmt 1 view .LVU55
 177              		.loc 1 238 20 is_stmt 0 view .LVU56
 178 004c 0730     		adds	r0, r0, #7
 179              	.LVL18:
 180              		.loc 1 238 18 view .LVU57
 181 004e C008     		lsrs	r0, r0, #3
 182              	.LVL19:
 239:Lib/ssc/src/objdef.c **** 
 240:Lib/ssc/src/objdef.c ****             if ( subindex == 0 )
 183              		.loc 1 240 13 is_stmt 1 view .LVU58
 184              		.loc 1 240 16 is_stmt 0 view .LVU59
 185 0050 71B9     		cbnz	r1, .L7
 241:Lib/ssc/src/objdef.c ****             {
 242:Lib/ssc/src/objdef.c ****                 /* add size for subindex 0 (is transmitted as UINT16) */
 243:Lib/ssc/src/objdef.c ****                 size += 2;
 186              		.loc 1 243 17 is_stmt 1 view .LVU60
 187              		.loc 1 243 22 is_stmt 0 view .LVU61
 188 0052 0230     		adds	r0, r0, #2
 189              	.LVL20:
ARM GAS  /tmp/ccHv31r6.s 			page 9


 244:Lib/ssc/src/objdef.c ****             }
 245:Lib/ssc/src/objdef.c ****             return size;
 190              		.loc 1 245 13 is_stmt 1 view .LVU62
 191              		.loc 1 245 20 is_stmt 0 view .LVU63
 192 0054 0CE0     		b	.L7
 193              	.LVL21:
 194              	.L8:
 195              		.loc 1 245 20 view .LVU64
 196              	.LBE3:
 246:Lib/ssc/src/objdef.c ****         }
 247:Lib/ssc/src/objdef.c ****     }
 248:Lib/ssc/src/objdef.c ****     else
 249:Lib/ssc/src/objdef.c ****     {
 250:Lib/ssc/src/objdef.c ****         if ( objCode == OBJCODE_VAR )
 197              		.loc 1 250 9 is_stmt 1 view .LVU65
 198              		.loc 1 250 12 is_stmt 0 view .LVU66
 199 0056 0728     		cmp	r0, #7
 200 0058 0BD0     		beq	.L21
 251:Lib/ssc/src/objdef.c ****         {
 252:Lib/ssc/src/objdef.c ****             return (BIT2BYTE(pObjEntry->pEntryDesc->BitLength));
 253:Lib/ssc/src/objdef.c **** 
 254:Lib/ssc/src/objdef.c ****         }
 255:Lib/ssc/src/objdef.c ****         else if ( subindex == 0 )
 201              		.loc 1 255 14 is_stmt 1 view .LVU67
 202              		.loc 1 255 17 is_stmt 0 view .LVU68
 203 005a B1B1     		cbz	r1, .L18
 256:Lib/ssc/src/objdef.c ****         {
 257:Lib/ssc/src/objdef.c ****             /* for single access subindex 0 is transmitted as UINT8 */
 258:Lib/ssc/src/objdef.c ****             return 1;
 259:Lib/ssc/src/objdef.c ****         }
 260:Lib/ssc/src/objdef.c ****         else if((objCode == OBJCODE_ARR)
 204              		.loc 1 260 14 is_stmt 1 view .LVU69
 205              		.loc 1 260 16 is_stmt 0 view .LVU70
 206 005c 0828     		cmp	r0, #8
 207 005e 0DD0     		beq	.L22
 261:Lib/ssc/src/objdef.c ****             )
 262:Lib/ssc/src/objdef.c ****         {
 263:Lib/ssc/src/objdef.c ****             return (BIT2BYTE(pObjEntry->pEntryDesc[1].BitLength));
 264:Lib/ssc/src/objdef.c ****         }
 265:Lib/ssc/src/objdef.c ****         else
 266:Lib/ssc/src/objdef.c ****         {
 267:Lib/ssc/src/objdef.c ****                 return (BIT2BYTE(pObjEntry->pEntryDesc[subindex].BitLength));
 208              		.loc 1 267 17 is_stmt 1 view .LVU71
 209              		.loc 1 267 25 is_stmt 0 view .LVU72
 210 0060 1369     		ldr	r3, [r2, #16]
 211              	.LVL22:
 212              		.loc 1 267 25 view .LVU73
 213 0062 01EB4101 		add	r1, r1, r1, lsl #1
 214              	.LVL23:
 215              		.loc 1 267 25 view .LVU74
 216 0066 03EB4101 		add	r1, r3, r1, lsl #1
 217 006a 4888     		ldrh	r0, [r1, #2]
 218              	.LVL24:
 219              		.loc 1 267 25 view .LVU75
 220 006c 0730     		adds	r0, r0, #7
 221 006e C010     		asrs	r0, r0, #3
 222              	.LVL25:
ARM GAS  /tmp/ccHv31r6.s 			page 10


 223              	.L7:
 268:Lib/ssc/src/objdef.c ****         }
 269:Lib/ssc/src/objdef.c ****     }
 270:Lib/ssc/src/objdef.c **** }
 224              		.loc 1 270 1 view .LVU76
 225 0070 10BD     		pop	{r4, pc}
 226              	.LVL26:
 227              	.L21:
 252:Lib/ssc/src/objdef.c **** 
 228              		.loc 1 252 13 is_stmt 1 view .LVU77
 252:Lib/ssc/src/objdef.c **** 
 229              		.loc 1 252 21 is_stmt 0 view .LVU78
 230 0072 1369     		ldr	r3, [r2, #16]
 231              	.LVL27:
 252:Lib/ssc/src/objdef.c **** 
 232              		.loc 1 252 21 view .LVU79
 233 0074 5888     		ldrh	r0, [r3, #2]
 234              	.LVL28:
 252:Lib/ssc/src/objdef.c **** 
 235              		.loc 1 252 21 view .LVU80
 236 0076 0730     		adds	r0, r0, #7
 237 0078 C010     		asrs	r0, r0, #3
 238 007a F9E7     		b	.L7
 239              	.LVL29:
 240              	.L22:
 263:Lib/ssc/src/objdef.c ****         }
 241              		.loc 1 263 13 is_stmt 1 view .LVU81
 263:Lib/ssc/src/objdef.c ****         }
 242              		.loc 1 263 21 is_stmt 0 view .LVU82
 243 007c 1369     		ldr	r3, [r2, #16]
 244              	.LVL30:
 263:Lib/ssc/src/objdef.c ****         }
 245              		.loc 1 263 21 view .LVU83
 246 007e 1889     		ldrh	r0, [r3, #8]
 247              	.LVL31:
 263:Lib/ssc/src/objdef.c ****         }
 248              		.loc 1 263 21 view .LVU84
 249 0080 0730     		adds	r0, r0, #7
 250 0082 C010     		asrs	r0, r0, #3
 251 0084 F4E7     		b	.L7
 252              	.LVL32:
 253              	.L16:
 204:Lib/ssc/src/objdef.c ****         else if ((objCode == OBJCODE_ARR)
 254              		.loc 1 204 20 view .LVU85
 255 0086 0020     		movs	r0, #0
 256              	.LVL33:
 204:Lib/ssc/src/objdef.c ****         else if ((objCode == OBJCODE_ARR)
 257              		.loc 1 204 20 view .LVU86
 258 0088 F2E7     		b	.L7
 259              	.LVL34:
 260              	.L18:
 258:Lib/ssc/src/objdef.c ****         }
 261              		.loc 1 258 20 view .LVU87
 262 008a 0120     		movs	r0, #1
 263              	.LVL35:
 258:Lib/ssc/src/objdef.c ****         }
 264              		.loc 1 258 20 view .LVU88
ARM GAS  /tmp/ccHv31r6.s 			page 11


 265 008c F0E7     		b	.L7
 266              		.cfi_endproc
 267              	.LFE135:
 269              		.section	.text.OBJ_CopyNumberToString,"ax",%progbits
 270              		.align	1
 271              		.global	OBJ_CopyNumberToString
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	OBJ_CopyNumberToString:
 277              	.LVL36:
 278              	.LFB136:
 271:Lib/ssc/src/objdef.c **** 
 272:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 273:Lib/ssc/src/objdef.c **** /**
 274:Lib/ssc/src/objdef.c ****  \param     pStr         Pointer to a string
 275:Lib/ssc/src/objdef.c ****  \param  Number   Number to be included in the string
 276:Lib/ssc/src/objdef.c **** 
 277:Lib/ssc/src/objdef.c ****  \brief    The function copies the Number in the string pStr,
 278:Lib/ssc/src/objdef.c ****          which shall be initialized with 000
 279:Lib/ssc/src/objdef.c **** 
 280:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 281:Lib/ssc/src/objdef.c **** 
 282:Lib/ssc/src/objdef.c **** void OBJ_CopyNumberToString(UCHAR MBXMEM *pStr, UINT8 Number)
 283:Lib/ssc/src/objdef.c **** {
 279              		.loc 1 283 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284:Lib/ssc/src/objdef.c ****     UINT8 Modulo;
 284              		.loc 1 284 5 view .LVU90
 285:Lib/ssc/src/objdef.c **** 
 286:Lib/ssc/src/objdef.c ****     pStr[2] = '0';
 285              		.loc 1 286 5 view .LVU91
 286              		.loc 1 286 13 is_stmt 0 view .LVU92
 287 0000 3023     		movs	r3, #48
 288 0002 8370     		strb	r3, [r0, #2]
 287:Lib/ssc/src/objdef.c ****     pStr[0] += (Number / 100);
 289              		.loc 1 287 5 is_stmt 1 view .LVU93
 290              		.loc 1 287 13 is_stmt 0 view .LVU94
 291 0004 0E4B     		ldr	r3, .L24
 292 0006 A3FB0123 		umull	r2, r3, r3, r1
 293 000a 4FEA531C 		lsr	ip, r3, #5
 294 000e 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 295 0010 02EB5313 		add	r3, r2, r3, lsr #5
 296 0014 0370     		strb	r3, [r0]
 288:Lib/ssc/src/objdef.c ****     Modulo = Number % 100;
 297              		.loc 1 288 5 is_stmt 1 view .LVU95
 298              		.loc 1 288 12 is_stmt 0 view .LVU96
 299 0016 6423     		movs	r3, #100
 300 0018 03FB1C11 		mls	r1, r3, ip, r1
 301              	.LVL37:
 302              		.loc 1 288 12 view .LVU97
 303 001c C9B2     		uxtb	r1, r1
 304              	.LVL38:
 289:Lib/ssc/src/objdef.c ****     pStr[1] += (Modulo / 10);
ARM GAS  /tmp/ccHv31r6.s 			page 12


 305              		.loc 1 289 5 is_stmt 1 view .LVU98
 306              		.loc 1 289 13 is_stmt 0 view .LVU99
 307 001e 094A     		ldr	r2, .L24+4
 308 0020 A2FB0132 		umull	r3, r2, r2, r1
 309 0024 D308     		lsrs	r3, r2, #3
 310 0026 90F801C0 		ldrb	ip, [r0, #1]	@ zero_extendqisi2
 311 002a 0CEBD202 		add	r2, ip, r2, lsr #3
 312 002e 4270     		strb	r2, [r0, #1]
 290:Lib/ssc/src/objdef.c ****     pStr[2] += (Modulo % 10);
 313              		.loc 1 290 5 is_stmt 1 view .LVU100
 314              		.loc 1 290 13 is_stmt 0 view .LVU101
 315 0030 03EB8303 		add	r3, r3, r3, lsl #2
 316 0034 A1EB4301 		sub	r1, r1, r3, lsl #1
 317              	.LVL39:
 318              		.loc 1 290 13 view .LVU102
 319 0038 3031     		adds	r1, r1, #48
 320 003a 8170     		strb	r1, [r0, #2]
 291:Lib/ssc/src/objdef.c **** }
 321              		.loc 1 291 1 view .LVU103
 322 003c 7047     		bx	lr
 323              	.L25:
 324 003e 00BF     		.align	2
 325              	.L24:
 326 0040 1F85EB51 		.word	1374389535
 327 0044 CDCCCCCC 		.word	-858993459
 328              		.cfi_endproc
 329              	.LFE136:
 331              		.section	.text.OBJ_GetDesc,"ax",%progbits
 332              		.align	1
 333              		.global	OBJ_GetDesc
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 338              	OBJ_GetDesc:
 339              	.LVL40:
 340              	.LFB139:
 292:Lib/ssc/src/objdef.c **** 
 293:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 294:Lib/ssc/src/objdef.c **** /**
 295:Lib/ssc/src/objdef.c ****  \param     listType requested listType (0=all objects, 1=RxPDO mappable objects,
 296:Lib/ssc/src/objdef.c ****                         2=TxPDO mappable objects, 3=backup objects, 4=setting objects)
 297:Lib/ssc/src/objdef.c **** 
 298:Lib/ssc/src/objdef.c ****  \return Number of objects of the requested list type
 299:Lib/ssc/src/objdef.c **** 
 300:Lib/ssc/src/objdef.c ****  \brief    The function counts the number of objects of the requested list type
 301:Lib/ssc/src/objdef.c **** 
 302:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 303:Lib/ssc/src/objdef.c **** 
 304:Lib/ssc/src/objdef.c **** UINT16    OBJ_GetNoOfObjects(UINT8 listType)
 305:Lib/ssc/src/objdef.c **** {
 306:Lib/ssc/src/objdef.c ****     /* the variable listFlags contains the mask used for the ObjAccess in the Entry-Desc
 307:Lib/ssc/src/objdef.c ****        see the structure TSDOINFOENTRYDESC in sdoserv.h, listType = 0 indicates that
 308:Lib/ssc/src/objdef.c ****        all objects has to be counted */
 309:Lib/ssc/src/objdef.c ****     
 310:Lib/ssc/src/objdef.c ****     UINT16 listFlags = 0x0020 << listType;
 311:Lib/ssc/src/objdef.c ****     
 312:Lib/ssc/src/objdef.c ****     /* set pObjEntry to the beginning of the object dictionary */
ARM GAS  /tmp/ccHv31r6.s 			page 13


 313:Lib/ssc/src/objdef.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry = (OBJCONST TOBJECT OBJMEM *) COE_GetObjectDictionary();
 314:Lib/ssc/src/objdef.c ****     UINT16 n = 0;
 315:Lib/ssc/src/objdef.c **** 
 316:Lib/ssc/src/objdef.c **** 
 317:Lib/ssc/src/objdef.c ****     while (pObjEntry != NULL)
 318:Lib/ssc/src/objdef.c ****     {
 319:Lib/ssc/src/objdef.c ****         /* count the objects of the requested list type */
 320:Lib/ssc/src/objdef.c ****         if ( pObjEntry->Index >= 0x1000 )
 321:Lib/ssc/src/objdef.c ****         {
 322:Lib/ssc/src/objdef.c ****             UINT8 t = listType;
 323:Lib/ssc/src/objdef.c ****             if ( t )
 324:Lib/ssc/src/objdef.c ****             {
 325:Lib/ssc/src/objdef.c ****                 UINT8 maxSubindex = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_MAXSUBINDEXMASK) >> OBJ
 326:Lib/ssc/src/objdef.c ****                 UINT16 i = 0;
 327:Lib/ssc/src/objdef.c **** 
 328:Lib/ssc/src/objdef.c ****                 while ( t && i <= maxSubindex )
 329:Lib/ssc/src/objdef.c ****                 {
 330:Lib/ssc/src/objdef.c ****                     if ( OBJ_GetEntryDesc(pObjEntry,(UINT8) i)->ObjAccess & listFlags )
 331:Lib/ssc/src/objdef.c ****                         t = 0;
 332:Lib/ssc/src/objdef.c ****                     i++;
 333:Lib/ssc/src/objdef.c ****                 }
 334:Lib/ssc/src/objdef.c ****             }
 335:Lib/ssc/src/objdef.c ****             if ( !t )
 336:Lib/ssc/src/objdef.c ****             {
 337:Lib/ssc/src/objdef.c ****                 /* object from listType found */
 338:Lib/ssc/src/objdef.c ****                 n++;
 339:Lib/ssc/src/objdef.c ****             }
 340:Lib/ssc/src/objdef.c ****         }
 341:Lib/ssc/src/objdef.c ****         /* next object in object dictionary */
 342:Lib/ssc/src/objdef.c ****         pObjEntry = (TOBJECT OBJMEM *) pObjEntry->pNext;
 343:Lib/ssc/src/objdef.c ****     }
 344:Lib/ssc/src/objdef.c **** 
 345:Lib/ssc/src/objdef.c ****     return n;
 346:Lib/ssc/src/objdef.c **** }
 347:Lib/ssc/src/objdef.c **** 
 348:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 349:Lib/ssc/src/objdef.c **** /**
 350:Lib/ssc/src/objdef.c ****  \param     listType 	Requested listType (0=all objects, 1=RxPDO mappable objects,
 351:Lib/ssc/src/objdef.c ****                         2=TxPDO mappable objects, 3=backup objects, 4=setting objects)
 352:Lib/ssc/src/objdef.c ****  \param     pIndex     	Pointer to the next Index of the object list to copied in the mailbox buffe
 353:Lib/ssc/src/objdef.c ****                          has to adapted    at the end of the function
 354:Lib/ssc/src/objdef.c ****  \param     size        Size of the available mailbox buffer
 355:Lib/ssc/src/objdef.c ****  \param     pData     	Pointer to the mailbox buffer where (the part of) the object list requested 
 356:Lib/ssc/src/objdef.c ****  \param     pAbort    	Pointer to abortCode
 357:Lib/ssc/src/objdef.c **** 
 358:Lib/ssc/src/objdef.c ****  \return 	Size of the available mailbox buffer which was not copied to
 359:Lib/ssc/src/objdef.c **** 
 360:Lib/ssc/src/objdef.c ****  \brief    The function copies (the part of) the object list in the mailbox buffer
 361:Lib/ssc/src/objdef.c **** 
 362:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 363:Lib/ssc/src/objdef.c **** UINT16    OBJ_GetObjectList(UINT16 listType, UINT16 *pIndex, UINT16 size, UINT16 MBXMEM *pData,UINT
 364:Lib/ssc/src/objdef.c **** {
 365:Lib/ssc/src/objdef.c ****     /* the variable listFlags contains the mask used for the ObjAccess in the Entry-Desc
 366:Lib/ssc/src/objdef.c ****        see the structure TSDOINFOENTRYDESC in sdoserv.h, listType = 0 indicates that
 367:Lib/ssc/src/objdef.c ****        all objects has to be counted */
 368:Lib/ssc/src/objdef.c ****     UINT16 listFlags = 0x0020 << listType;
 369:Lib/ssc/src/objdef.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry;
ARM GAS  /tmp/ccHv31r6.s 			page 14


 370:Lib/ssc/src/objdef.c **** 
 371:Lib/ssc/src/objdef.c **** 
 372:Lib/ssc/src/objdef.c ****     if ( pIndex[0] == 0x1000 )
 373:Lib/ssc/src/objdef.c ****     {
 374:Lib/ssc/src/objdef.c ****         /* beginning of object list, set pObjEntry to the beginning of the object dictionary */
 375:Lib/ssc/src/objdef.c ****        pObjEntry = (OBJCONST TOBJECT OBJMEM *) COE_GetObjectDictionary();
 376:Lib/ssc/src/objdef.c ****         // set abort code if no object dictionary is available
 377:Lib/ssc/src/objdef.c ****         if((pObjEntry == NULL) && (pAbort != NULL))
 378:Lib/ssc/src/objdef.c ****         {
 379:Lib/ssc/src/objdef.c ****             *pAbort = ABORTIDX_NO_OBJECT_DICTIONARY_IS_PRESENT;
 380:Lib/ssc/src/objdef.c ****         }
 381:Lib/ssc/src/objdef.c ****     }
 382:Lib/ssc/src/objdef.c ****     else
 383:Lib/ssc/src/objdef.c ****     {
 384:Lib/ssc/src/objdef.c ****         /* next fragment, the next object to be handled was stored in pSdoInfoObjEntry */
 385:Lib/ssc/src/objdef.c ****         pObjEntry = pSdoInfoObjEntry;
 386:Lib/ssc/src/objdef.c ****     }
 387:Lib/ssc/src/objdef.c **** 
 388:Lib/ssc/src/objdef.c ****     if ( pObjEntry != NULL )
 389:Lib/ssc/src/objdef.c ****     {
 390:Lib/ssc/src/objdef.c ****         while (pObjEntry != NULL && size > 1 )
 391:Lib/ssc/src/objdef.c ****         {
 392:Lib/ssc/src/objdef.c ****             /* get the next index of the requested object list if there is enough space in the mail
 393:Lib/ssc/src/objdef.c ****             if ( pObjEntry->Index >= 0x1000 )
 394:Lib/ssc/src/objdef.c ****             {
 395:Lib/ssc/src/objdef.c ****                 /* UINT8 was changed to UINT16 */
 396:Lib/ssc/src/objdef.c ****                 UINT16 t = listType;
 397:Lib/ssc/src/objdef.c ****                 if ( t )
 398:Lib/ssc/src/objdef.c ****                 {
 399:Lib/ssc/src/objdef.c ****                     UINT8 maxSubindex = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_MAXSUBINDEXMASK) >>
 400:Lib/ssc/src/objdef.c ****                     UINT8 i = 0;
 401:Lib/ssc/src/objdef.c **** 
 402:Lib/ssc/src/objdef.c ****                     while ( t && i <= maxSubindex )
 403:Lib/ssc/src/objdef.c ****                     {
 404:Lib/ssc/src/objdef.c ****                         if ( OBJ_GetEntryDesc(pObjEntry, i)->ObjAccess & listFlags )
 405:Lib/ssc/src/objdef.c ****                             t = 0;
 406:Lib/ssc/src/objdef.c ****                         i++;
 407:Lib/ssc/src/objdef.c ****                     }
 408:Lib/ssc/src/objdef.c ****                 }
 409:Lib/ssc/src/objdef.c ****                 if ( !t )
 410:Lib/ssc/src/objdef.c ****                 {
 411:Lib/ssc/src/objdef.c ****                     /* store the index in the mailbox buffer */
 412:Lib/ssc/src/objdef.c ****                     *pData = SWAPWORD(pObjEntry->Index);
 413:Lib/ssc/src/objdef.c ****                     pData++;
 414:Lib/ssc/src/objdef.c ****                     size -= 2;
 415:Lib/ssc/src/objdef.c ****                 }
 416:Lib/ssc/src/objdef.c ****             }
 417:Lib/ssc/src/objdef.c ****         pObjEntry = (TOBJECT OBJMEM *) pObjEntry->pNext;
 418:Lib/ssc/src/objdef.c ****         }
 419:Lib/ssc/src/objdef.c ****     }
 420:Lib/ssc/src/objdef.c **** 
 421:Lib/ssc/src/objdef.c ****         /* return the next Index to be handled */
 422:Lib/ssc/src/objdef.c ****         if(pObjEntry != NULL)
 423:Lib/ssc/src/objdef.c ****         {
 424:Lib/ssc/src/objdef.c ****             pIndex[0] = pObjEntry->Index;
 425:Lib/ssc/src/objdef.c ****         }
 426:Lib/ssc/src/objdef.c ****         else
ARM GAS  /tmp/ccHv31r6.s 			page 15


 427:Lib/ssc/src/objdef.c ****         {
 428:Lib/ssc/src/objdef.c ****             /*last entry reached*/
 429:Lib/ssc/src/objdef.c ****             pIndex[0] = 0xFFFF;
 430:Lib/ssc/src/objdef.c ****         }
 431:Lib/ssc/src/objdef.c **** 
 432:Lib/ssc/src/objdef.c ****     /* store object description pointer and index for next fragment */
 433:Lib/ssc/src/objdef.c ****     pSdoInfoObjEntry = pObjEntry;
 434:Lib/ssc/src/objdef.c **** 
 435:Lib/ssc/src/objdef.c ****     /* return the size of the available mailbox buffer which was not copied to */
 436:Lib/ssc/src/objdef.c ****     return size;
 437:Lib/ssc/src/objdef.c **** }
 438:Lib/ssc/src/objdef.c **** 
 439:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 440:Lib/ssc/src/objdef.c **** /**
 441:Lib/ssc/src/objdef.c ****  \param     index     Indicates the index of the dictionary object.
 442:Lib/ssc/src/objdef.c ****  \param  	subindex  Indicates the subindex of the dictionary object.
 443:Lib/ssc/src/objdef.c ****                         Subindex 0xff returns the description of the whole object ( the name of
 444:Lib/ssc/src/objdef.c ****                         the object ).
 445:Lib/ssc/src/objdef.c ****                         Subindex 0x00 returns the description of the subindex 0 and so on.
 446:Lib/ssc/src/objdef.c ****  \param     pObjEntry Is a handle to the dictionary object ( for faster access ) or NULL.						
 447:Lib/ssc/src/objdef.c ****  \param    pData        Is the memory field for the description string or NULL ( if the size of
 448:Lib/ssc/src/objdef.c ****                         string is unknown ):
 449:Lib/ssc/src/objdef.c **** 
 450:Lib/ssc/src/objdef.c ****  \return    The size in bytes of the description string (without null termination byte ).
 451:Lib/ssc/src/objdef.c ****             0 will be returned if a description for the indicated entry was not found.
 452:Lib/ssc/src/objdef.c **** 
 453:Lib/ssc/src/objdef.c ****  \brief    The function returns size and description string of the requested entry.
 454:Lib/ssc/src/objdef.c **** 
 455:Lib/ssc/src/objdef.c ****             Its possible to define all description strings of one entry ( including the name
 456:Lib/ssc/src/objdef.c ****             of the object ) in one structure:        <br>
 457:Lib/ssc/src/objdef.c ****             {                                                    <br>
 458:Lib/ssc/src/objdef.c ****                 name_of_object with index,              <br>
 459:Lib/ssc/src/objdef.c ****                 description_of_subindex0,                <br>
 460:Lib/ssc/src/objdef.c ****                 .                                                <br>
 461:Lib/ssc/src/objdef.c ****                 description_of_subindexN,                <br>
 462:Lib/ssc/src/objdef.c ****                 0xFF                                            <br>
 463:Lib/ssc/src/objdef.c ****             }
 464:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 465:Lib/ssc/src/objdef.c **** 
 466:Lib/ssc/src/objdef.c **** UINT16 OBJ_GetDesc( UINT16 index, UINT8 subindex, OBJCONST TOBJECT OBJMEM * pObjEntry, UINT16 MBXME
 467:Lib/ssc/src/objdef.c **** {
 341              		.loc 1 467 1 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 16
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		.loc 1 467 1 is_stmt 0 view .LVU105
 346 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 347              		.cfi_def_cfa_offset 24
 348              		.cfi_offset 4, -24
 349              		.cfi_offset 5, -20
 350              		.cfi_offset 6, -16
 351              		.cfi_offset 7, -12
 352              		.cfi_offset 8, -8
 353              		.cfi_offset 14, -4
 354 0004 84B0     		sub	sp, sp, #16
 355              		.cfi_def_cfa_offset 40
 356 0006 1D46     		mov	r5, r3
ARM GAS  /tmp/ccHv31r6.s 			page 16


 468:Lib/ssc/src/objdef.c ****     UINT16 strSize = 0;
 357              		.loc 1 468 5 is_stmt 1 view .LVU106
 358              	.LVL41:
 469:Lib/ssc/src/objdef.c ****     OBJCONST UCHAR OBJMEM * pDesc = (OBJCONST UCHAR OBJMEM *) pObjEntry->pName;
 359              		.loc 1 469 5 view .LVU107
 360              		.loc 1 469 29 is_stmt 0 view .LVU108
 361 0008 5469     		ldr	r4, [r2, #20]
 362              	.LVL42:
 470:Lib/ssc/src/objdef.c **** /* get the information of ObjCode and MaxSubindex in local variables to support different types of 
 471:Lib/ssc/src/objdef.c ****     UINT8 objCode = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT;
 363              		.loc 1 471 5 is_stmt 1 view .LVU109
 364              		.loc 1 471 40 is_stmt 0 view .LVU110
 365 000a 9389     		ldrh	r3, [r2, #12]
 366              	.LVL43:
 367              		.loc 1 471 11 view .LVU111
 368 000c C3F30323 		ubfx	r3, r3, #8, #4
 369              	.LVL44:
 472:Lib/ssc/src/objdef.c **** 
 473:Lib/ssc/src/objdef.c ****     if ( (subindex == 0) || (objCode == OBJCODE_VAR) )
 370              		.loc 1 473 5 is_stmt 1 view .LVU112
 371              		.loc 1 473 8 is_stmt 0 view .LVU113
 372 0010 D1B1     		cbz	r1, .L27
 373 0012 0F46     		mov	r7, r1
 374              		.loc 1 473 26 discriminator 1 view .LVU114
 375 0014 072B     		cmp	r3, #7
 376 0016 17D0     		beq	.L27
 474:Lib/ssc/src/objdef.c ****     {
 475:Lib/ssc/src/objdef.c ****         // Get object description length
 476:Lib/ssc/src/objdef.c ****         strSize = OBJSTRLEN( (OBJCONST CHAR OBJMEM *) pDesc );
 477:Lib/ssc/src/objdef.c **** 
 478:Lib/ssc/src/objdef.c ****         // If there is a pointer given, copy data:
 479:Lib/ssc/src/objdef.c ****         if ( pData )
 480:Lib/ssc/src/objdef.c ****         {
 481:Lib/ssc/src/objdef.c ****             OBJTOMBXSTRCPY( pData, pDesc, strSize );
 482:Lib/ssc/src/objdef.c ****         }
 483:Lib/ssc/src/objdef.c ****     }
 484:Lib/ssc/src/objdef.c ****     else
 485:Lib/ssc/src/objdef.c ****     {
 486:Lib/ssc/src/objdef.c ****         if ( objCode == OBJCODE_REC )
 377              		.loc 1 486 9 is_stmt 1 view .LVU115
 378              		.loc 1 486 12 is_stmt 0 view .LVU116
 379 0018 092B     		cmp	r3, #9
 380 001a 24D0     		beq	.L38
 381              	.LVL45:
 382              	.L30:
 487:Lib/ssc/src/objdef.c ****         {
 488:Lib/ssc/src/objdef.c ****             {
 489:Lib/ssc/src/objdef.c ****             // get pointer to description of subindex 1 :
 490:Lib/ssc/src/objdef.c ****             // 16bit variable to avoid overflow if subindex 0xFF is read
 491:Lib/ssc/src/objdef.c ****             UINT16 i = 1;
 492:Lib/ssc/src/objdef.c ****             UINT16 tmpSubindex = subindex;
 493:Lib/ssc/src/objdef.c **** 
 494:Lib/ssc/src/objdef.c ****             {
 495:Lib/ssc/src/objdef.c **** 
 496:Lib/ssc/src/objdef.c ****             OBJCONST UCHAR OBJMEM * pSubDesc = (OBJCONST UCHAR OBJMEM *) OBJGETNEXTSTR( pDesc );
 497:Lib/ssc/src/objdef.c ****             while (( i <= tmpSubindex )
 498:Lib/ssc/src/objdef.c ****                 &&( pSubDesc[0] != 0xFF && pSubDesc[0] != 0xFE ))
ARM GAS  /tmp/ccHv31r6.s 			page 17


 499:Lib/ssc/src/objdef.c ****             {
 500:Lib/ssc/src/objdef.c ****                 if ( i == tmpSubindex )
 501:Lib/ssc/src/objdef.c ****                 {
 502:Lib/ssc/src/objdef.c ****                     strSize = OBJSTRLEN( (OBJCONST CHAR OBJMEM *) pSubDesc );
 503:Lib/ssc/src/objdef.c ****                     if ( pData && strSize )
 504:Lib/ssc/src/objdef.c ****                         OBJTOMBXSTRCPY( pData, pSubDesc, strSize );
 505:Lib/ssc/src/objdef.c **** /* ECATCHANGE_START(V5.11) SDO6*/
 506:Lib/ssc/src/objdef.c ****                     else
 507:Lib/ssc/src/objdef.c ****                         strSize = 0;
 508:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) SDO6*/
 509:Lib/ssc/src/objdef.c **** 
 510:Lib/ssc/src/objdef.c ****                     break;
 511:Lib/ssc/src/objdef.c ****                 }
 512:Lib/ssc/src/objdef.c ****                 else
 513:Lib/ssc/src/objdef.c ****                 {
 514:Lib/ssc/src/objdef.c ****                     i++;
 515:Lib/ssc/src/objdef.c ****                     pSubDesc = (OBJCONST UCHAR OBJMEM *) OBJGETNEXTSTR( pSubDesc );
 516:Lib/ssc/src/objdef.c ****                 }
 517:Lib/ssc/src/objdef.c ****             }
 518:Lib/ssc/src/objdef.c ****             }
 519:Lib/ssc/src/objdef.c ****             }
 520:Lib/ssc/src/objdef.c ****         }
 521:Lib/ssc/src/objdef.c **** 
 522:Lib/ssc/src/objdef.c ****         if ( strSize == 0 )
 523:Lib/ssc/src/objdef.c ****         {
 524:Lib/ssc/src/objdef.c ****             // no string found for subindex x -> name is Subindex x
 525:Lib/ssc/src/objdef.c ****             strSize =    12;
 383              		.loc 1 525 13 is_stmt 1 view .LVU117
 526:Lib/ssc/src/objdef.c **** 
 527:Lib/ssc/src/objdef.c ****             if ( pData )
 384              		.loc 1 527 13 view .LVU118
 385              		.loc 1 527 16 is_stmt 0 view .LVU119
 386 001c 002D     		cmp	r5, #0
 387 001e 52D0     		beq	.L36
 388              	.LBB4:
 528:Lib/ssc/src/objdef.c ****             {
 529:Lib/ssc/src/objdef.c ****                 UCHAR OBJMEM         TmpDescr[13];
 389              		.loc 1 529 17 is_stmt 1 view .LVU120
 530:Lib/ssc/src/objdef.c ****                 OBJSTRCPY(TmpDescr,aSubindexDesc,SIZEOF(TmpDescr));
 390              		.loc 1 530 17 view .LVU121
 391 0020 2A4B     		ldr	r3, .L41
 392 0022 6C46     		mov	r4, sp
 393 0024 0FCB     		ldm	r3, {r0, r1, r2, r3}
 394 0026 07C4     		stmia	r4!, {r0, r1, r2}
 395 0028 2370     		strb	r3, [r4]
 531:Lib/ssc/src/objdef.c ****                 
 532:Lib/ssc/src/objdef.c ****                 OBJ_CopyNumberToString( &TmpDescr[9], subindex );
 396              		.loc 1 532 17 view .LVU122
 397 002a 3946     		mov	r1, r7
 398 002c 0DF10900 		add	r0, sp, #9
 399 0030 FFF7FEFF 		bl	OBJ_CopyNumberToString
 400              	.LVL46:
 533:Lib/ssc/src/objdef.c ****                 MBXSTRCPY( pData, TmpDescr, SIZEOF(TmpDescr) );
 401              		.loc 1 533 17 view .LVU123
 402 0034 6B46     		mov	r3, sp
 403 0036 07CB     		ldmia	r3!, {r0, r1, r2}
 404 0038 2860     		str	r0, [r5]	@ unaligned
ARM GAS  /tmp/ccHv31r6.s 			page 18


 405 003a 6960     		str	r1, [r5, #4]	@ unaligned
 406 003c AA60     		str	r2, [r5, #8]	@ unaligned
 407 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0040 2B73     		strb	r3, [r5, #12]
 409              	.LBE4:
 525:Lib/ssc/src/objdef.c **** 
 410              		.loc 1 525 21 is_stmt 0 view .LVU124
 411 0042 4FF00C08 		mov	r8, #12
 412 0046 0AE0     		b	.L29
 413              	.LVL47:
 414              	.L27:
 476:Lib/ssc/src/objdef.c **** 
 415              		.loc 1 476 9 is_stmt 1 view .LVU125
 476:Lib/ssc/src/objdef.c **** 
 416              		.loc 1 476 19 is_stmt 0 view .LVU126
 417 0048 2046     		mov	r0, r4
 418              	.LVL48:
 476:Lib/ssc/src/objdef.c **** 
 419              		.loc 1 476 19 view .LVU127
 420 004a FFF7FEFF 		bl	strlen
 421              	.LVL49:
 476:Lib/ssc/src/objdef.c **** 
 422              		.loc 1 476 17 view .LVU128
 423 004e 1FFA80F8 		uxth	r8, r0
 424              	.LVL50:
 479:Lib/ssc/src/objdef.c ****         {
 425              		.loc 1 479 9 is_stmt 1 view .LVU129
 479:Lib/ssc/src/objdef.c ****         {
 426              		.loc 1 479 12 is_stmt 0 view .LVU130
 427 0052 25B1     		cbz	r5, .L29
 481:Lib/ssc/src/objdef.c ****         }
 428              		.loc 1 481 13 is_stmt 1 view .LVU131
 429 0054 4246     		mov	r2, r8
 430 0056 2146     		mov	r1, r4
 431 0058 2846     		mov	r0, r5
 432 005a FFF7FEFF 		bl	memcpy
 433              	.LVL51:
 434              	.L29:
 534:Lib/ssc/src/objdef.c ****             }
 535:Lib/ssc/src/objdef.c ****         }
 536:Lib/ssc/src/objdef.c ****     }
 537:Lib/ssc/src/objdef.c **** 
 538:Lib/ssc/src/objdef.c ****     return strSize;
 435              		.loc 1 538 5 view .LVU132
 539:Lib/ssc/src/objdef.c **** }
 436              		.loc 1 539 1 is_stmt 0 view .LVU133
 437 005e 4046     		mov	r0, r8
 438 0060 04B0     		add	sp, sp, #16
 439              		.cfi_remember_state
 440              		.cfi_def_cfa_offset 24
 441              		@ sp needed
 442 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 443              	.LVL52:
 444              	.L38:
 445              		.cfi_restore_state
 446              	.LBB5:
 491:Lib/ssc/src/objdef.c ****             UINT16 tmpSubindex = subindex;
ARM GAS  /tmp/ccHv31r6.s 			page 19


 447              		.loc 1 491 13 is_stmt 1 view .LVU134
 492:Lib/ssc/src/objdef.c **** 
 448              		.loc 1 492 13 view .LVU135
 492:Lib/ssc/src/objdef.c **** 
 449              		.loc 1 492 20 is_stmt 0 view .LVU136
 450 0066 1FFA81F8 		uxth	r8, r1
 451              	.LVL53:
 452              	.LBB6:
 496:Lib/ssc/src/objdef.c ****             while (( i <= tmpSubindex )
 453              		.loc 1 496 13 is_stmt 1 view .LVU137
 496:Lib/ssc/src/objdef.c ****             while (( i <= tmpSubindex )
 454              		.loc 1 496 74 is_stmt 0 view .LVU138
 455 006a 2046     		mov	r0, r4
 456              	.LVL54:
 496:Lib/ssc/src/objdef.c ****             while (( i <= tmpSubindex )
 457              		.loc 1 496 74 view .LVU139
 458 006c FFF7FEFF 		bl	strlen
 459              	.LVL55:
 496:Lib/ssc/src/objdef.c ****             while (( i <= tmpSubindex )
 460              		.loc 1 496 74 view .LVU140
 461 0070 461C     		adds	r6, r0, #1
 496:Lib/ssc/src/objdef.c ****             while (( i <= tmpSubindex )
 462              		.loc 1 496 37 view .LVU141
 463 0072 2644     		add	r6, r6, r4
 464              	.LVL56:
 497:Lib/ssc/src/objdef.c ****                 &&( pSubDesc[0] != 0xFF && pSubDesc[0] != 0xFE ))
 465              		.loc 1 497 13 is_stmt 1 view .LVU142
 466              	.LBE6:
 491:Lib/ssc/src/objdef.c ****             UINT16 tmpSubindex = subindex;
 467              		.loc 1 491 20 is_stmt 0 view .LVU143
 468 0074 0124     		movs	r4, #1
 469              	.LVL57:
 470              	.L31:
 471              	.LBB7:
 497:Lib/ssc/src/objdef.c ****                 &&( pSubDesc[0] != 0xFF && pSubDesc[0] != 0xFE ))
 472              		.loc 1 497 19 is_stmt 1 view .LVU144
 473 0076 4445     		cmp	r4, r8
 474 0078 1FD8     		bhi	.L35
 498:Lib/ssc/src/objdef.c ****             {
 475              		.loc 1 498 29 is_stmt 0 view .LVU145
 476 007a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 498:Lib/ssc/src/objdef.c ****             {
 477              		.loc 1 498 17 view .LVU146
 478 007c FD2B     		cmp	r3, #253
 479 007e 19D8     		bhi	.L39
 500:Lib/ssc/src/objdef.c ****                 {
 480              		.loc 1 500 17 is_stmt 1 view .LVU147
 500:Lib/ssc/src/objdef.c ****                 {
 481              		.loc 1 500 20 is_stmt 0 view .LVU148
 482 0080 4445     		cmp	r4, r8
 483 0082 07D0     		beq	.L40
 514:Lib/ssc/src/objdef.c ****                     pSubDesc = (OBJCONST UCHAR OBJMEM *) OBJGETNEXTSTR( pSubDesc );
 484              		.loc 1 514 21 is_stmt 1 view .LVU149
 514:Lib/ssc/src/objdef.c ****                     pSubDesc = (OBJCONST UCHAR OBJMEM *) OBJGETNEXTSTR( pSubDesc );
 485              		.loc 1 514 22 is_stmt 0 view .LVU150
 486 0084 0134     		adds	r4, r4, #1
 487              	.LVL58:
ARM GAS  /tmp/ccHv31r6.s 			page 20


 514:Lib/ssc/src/objdef.c ****                     pSubDesc = (OBJCONST UCHAR OBJMEM *) OBJGETNEXTSTR( pSubDesc );
 488              		.loc 1 514 22 view .LVU151
 489 0086 A4B2     		uxth	r4, r4
 490              	.LVL59:
 515:Lib/ssc/src/objdef.c ****                 }
 491              		.loc 1 515 21 is_stmt 1 view .LVU152
 515:Lib/ssc/src/objdef.c ****                 }
 492              		.loc 1 515 58 is_stmt 0 view .LVU153
 493 0088 3046     		mov	r0, r6
 494 008a FFF7FEFF 		bl	strlen
 495              	.LVL60:
 496 008e 0130     		adds	r0, r0, #1
 515:Lib/ssc/src/objdef.c ****                 }
 497              		.loc 1 515 30 view .LVU154
 498 0090 0644     		add	r6, r6, r0
 499              	.LVL61:
 515:Lib/ssc/src/objdef.c ****                 }
 500              		.loc 1 515 30 view .LVU155
 501 0092 F0E7     		b	.L31
 502              	.L40:
 502:Lib/ssc/src/objdef.c ****                     if ( pData && strSize )
 503              		.loc 1 502 21 is_stmt 1 view .LVU156
 502:Lib/ssc/src/objdef.c ****                     if ( pData && strSize )
 504              		.loc 1 502 31 is_stmt 0 view .LVU157
 505 0094 3046     		mov	r0, r6
 506 0096 FFF7FEFF 		bl	strlen
 507              	.LVL62:
 502:Lib/ssc/src/objdef.c ****                     if ( pData && strSize )
 508              		.loc 1 502 29 view .LVU158
 509 009a 1FFA80F8 		uxth	r8, r0
 510              	.LVL63:
 503:Lib/ssc/src/objdef.c ****                         OBJTOMBXSTRCPY( pData, pSubDesc, strSize );
 511              		.loc 1 503 21 is_stmt 1 view .LVU159
 503:Lib/ssc/src/objdef.c ****                         OBJTOMBXSTRCPY( pData, pSubDesc, strSize );
 512              		.loc 1 503 24 is_stmt 0 view .LVU160
 513 009e 002D     		cmp	r5, #0
 514 00a0 BCD0     		beq	.L30
 503:Lib/ssc/src/objdef.c ****                         OBJTOMBXSTRCPY( pData, pSubDesc, strSize );
 515              		.loc 1 503 32 discriminator 1 view .LVU161
 516 00a2 B8F1000F 		cmp	r8, #0
 517 00a6 B9D0     		beq	.L30
 504:Lib/ssc/src/objdef.c **** /* ECATCHANGE_START(V5.11) SDO6*/
 518              		.loc 1 504 25 is_stmt 1 view .LVU162
 519 00a8 4246     		mov	r2, r8
 520 00aa 3146     		mov	r1, r6
 521 00ac 2846     		mov	r0, r5
 522 00ae FFF7FEFF 		bl	memcpy
 523              	.LVL64:
 524 00b2 04E0     		b	.L33
 525              	.LVL65:
 526              	.L39:
 504:Lib/ssc/src/objdef.c **** /* ECATCHANGE_START(V5.11) SDO6*/
 527              		.loc 1 504 25 is_stmt 0 view .LVU163
 528              	.LBE7:
 529              	.LBE5:
 468:Lib/ssc/src/objdef.c ****     OBJCONST UCHAR OBJMEM * pDesc = (OBJCONST UCHAR OBJMEM *) pObjEntry->pName;
 530              		.loc 1 468 12 view .LVU164
ARM GAS  /tmp/ccHv31r6.s 			page 21


 531 00b4 4FF00008 		mov	r8, #0
 532              	.LVL66:
 533              	.LBB9:
 534              	.LBB8:
 468:Lib/ssc/src/objdef.c ****     OBJCONST UCHAR OBJMEM * pDesc = (OBJCONST UCHAR OBJMEM *) pObjEntry->pName;
 535              		.loc 1 468 12 view .LVU165
 536 00b8 01E0     		b	.L33
 537              	.LVL67:
 538              	.L35:
 468:Lib/ssc/src/objdef.c ****     OBJCONST UCHAR OBJMEM * pDesc = (OBJCONST UCHAR OBJMEM *) pObjEntry->pName;
 539              		.loc 1 468 12 view .LVU166
 540              	.LBE8:
 541              	.LBE9:
 542 00ba 4FF00008 		mov	r8, #0
 543              	.LVL68:
 544              	.L33:
 522:Lib/ssc/src/objdef.c ****         {
 545              		.loc 1 522 9 is_stmt 1 view .LVU167
 522:Lib/ssc/src/objdef.c ****         {
 546              		.loc 1 522 12 is_stmt 0 view .LVU168
 547 00be B8F1000F 		cmp	r8, #0
 548 00c2 CCD1     		bne	.L29
 549 00c4 AAE7     		b	.L30
 550              	.LVL69:
 551              	.L36:
 525:Lib/ssc/src/objdef.c **** 
 552              		.loc 1 525 21 view .LVU169
 553 00c6 4FF00C08 		mov	r8, #12
 554 00ca C8E7     		b	.L29
 555              	.L42:
 556              		.align	2
 557              	.L41:
 558 00cc 00000000 		.word	.LANCHOR0
 559              		.cfi_endproc
 560              	.LFE139:
 562              		.section	.text.OBJ_GetEntryDesc,"ax",%progbits
 563              		.align	1
 564              		.global	OBJ_GetEntryDesc
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	OBJ_GetEntryDesc:
 570              	.LVL70:
 571              	.LFB140:
 540:Lib/ssc/src/objdef.c **** 
 541:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 542:Lib/ssc/src/objdef.c **** /**
 543:Lib/ssc/src/objdef.c ****  \param     pObjEntry            handle to the dictionary object returned by
 544:Lib/ssc/src/objdef.c ****                                      OBJ_GetObjectHandle which was called before
 545:Lib/ssc/src/objdef.c ****  \param     Subindex                subindex of the requested object.
 546:Lib/ssc/src/objdef.c **** 
 547:Lib/ssc/src/objdef.c ****  \return    Pointer to the EntryDesc of the Subindex
 548:Lib/ssc/src/objdef.c **** 
 549:Lib/ssc/src/objdef.c ****  \brief    The function returns the Entry-Desc of a subindex to allow the application
 550:Lib/ssc/src/objdef.c ****          to define the object dictionary independent of the sdoserv-files
 551:Lib/ssc/src/objdef.c **** 
 552:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
ARM GAS  /tmp/ccHv31r6.s 			page 22


 553:Lib/ssc/src/objdef.c **** 
 554:Lib/ssc/src/objdef.c **** OBJCONST TSDOINFOENTRYDESC OBJMEM * OBJ_GetEntryDesc(OBJCONST TOBJECT OBJMEM * pObjEntry, UINT8 Sub
 555:Lib/ssc/src/objdef.c **** {
 572              		.loc 1 555 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 556:Lib/ssc/src/objdef.c ****     OBJCONST TSDOINFOENTRYDESC OBJMEM *pEntry;
 577              		.loc 1 556 5 view .LVU171
 557:Lib/ssc/src/objdef.c ****     UINT8 objCode = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT;
 578              		.loc 1 557 5 view .LVU172
 579              		.loc 1 557 40 is_stmt 0 view .LVU173
 580 0000 8389     		ldrh	r3, [r0, #12]
 581              		.loc 1 557 11 view .LVU174
 582 0002 C3F30323 		ubfx	r3, r3, #8, #4
 583              	.LVL71:
 558:Lib/ssc/src/objdef.c **** 
 559:Lib/ssc/src/objdef.c ****     if ((objCode == OBJCODE_ARR)
 584              		.loc 1 559 5 is_stmt 1 view .LVU175
 585              		.loc 1 559 8 is_stmt 0 view .LVU176
 586 0006 082B     		cmp	r3, #8
 587 0008 05D0     		beq	.L47
 560:Lib/ssc/src/objdef.c ****         )
 561:Lib/ssc/src/objdef.c ****     {
 562:Lib/ssc/src/objdef.c ****         /* object is an array */
 563:Lib/ssc/src/objdef.c ****         if ( Subindex == 0 )
 564:Lib/ssc/src/objdef.c ****             /* subindex 0 has a description */
 565:Lib/ssc/src/objdef.c ****             pEntry = &pObjEntry->pEntryDesc[0];
 566:Lib/ssc/src/objdef.c ****         else
 567:Lib/ssc/src/objdef.c ****             /* and all other elements have the same description */
 568:Lib/ssc/src/objdef.c ****             pEntry = &pObjEntry->pEntryDesc[1];
 569:Lib/ssc/src/objdef.c ****     }
 570:Lib/ssc/src/objdef.c ****     else
 571:Lib/ssc/src/objdef.c ****     {
 572:Lib/ssc/src/objdef.c ****         {
 573:Lib/ssc/src/objdef.c ****             /* object is a variable or a record return the corresponding entry */
 574:Lib/ssc/src/objdef.c ****             pEntry = &pObjEntry->pEntryDesc[Subindex];
 588              		.loc 1 574 13 is_stmt 1 view .LVU177
 589              		.loc 1 574 32 is_stmt 0 view .LVU178
 590 000a 0069     		ldr	r0, [r0, #16]
 591              	.LVL72:
 592              		.loc 1 574 44 view .LVU179
 593 000c 01EB4101 		add	r1, r1, r1, lsl #1
 594              	.LVL73:
 595              		.loc 1 574 20 view .LVU180
 596 0010 00EB4100 		add	r0, r0, r1, lsl #1
 597              	.LVL74:
 575:Lib/ssc/src/objdef.c ****         }
 576:Lib/ssc/src/objdef.c ****     }
 577:Lib/ssc/src/objdef.c **** 
 578:Lib/ssc/src/objdef.c ****     return pEntry;
 598              		.loc 1 578 5 is_stmt 1 view .LVU181
 579:Lib/ssc/src/objdef.c **** }
 599              		.loc 1 579 1 is_stmt 0 view .LVU182
 600 0014 7047     		bx	lr
 601              	.LVL75:
ARM GAS  /tmp/ccHv31r6.s 			page 23


 602              	.L47:
 563:Lib/ssc/src/objdef.c ****             /* subindex 0 has a description */
 603              		.loc 1 563 9 is_stmt 1 view .LVU183
 563:Lib/ssc/src/objdef.c ****             /* subindex 0 has a description */
 604              		.loc 1 563 12 is_stmt 0 view .LVU184
 605 0016 09B9     		cbnz	r1, .L45
 565:Lib/ssc/src/objdef.c ****         else
 606              		.loc 1 565 13 is_stmt 1 view .LVU185
 565:Lib/ssc/src/objdef.c ****         else
 607              		.loc 1 565 20 is_stmt 0 view .LVU186
 608 0018 0069     		ldr	r0, [r0, #16]
 609              	.LVL76:
 565:Lib/ssc/src/objdef.c ****         else
 610              		.loc 1 565 20 view .LVU187
 611 001a 7047     		bx	lr
 612              	.LVL77:
 613              	.L45:
 568:Lib/ssc/src/objdef.c ****     }
 614              		.loc 1 568 13 is_stmt 1 view .LVU188
 568:Lib/ssc/src/objdef.c ****     }
 615              		.loc 1 568 32 is_stmt 0 view .LVU189
 616 001c 0069     		ldr	r0, [r0, #16]
 617              	.LVL78:
 568:Lib/ssc/src/objdef.c ****     }
 618              		.loc 1 568 20 view .LVU190
 619 001e 0630     		adds	r0, r0, #6
 620              	.LVL79:
 568:Lib/ssc/src/objdef.c ****     }
 621              		.loc 1 568 20 view .LVU191
 622 0020 7047     		bx	lr
 623              		.cfi_endproc
 624              	.LFE140:
 626              		.section	.text.OBJ_GetNoOfObjects,"ax",%progbits
 627              		.align	1
 628              		.global	OBJ_GetNoOfObjects
 629              		.syntax unified
 630              		.thumb
 631              		.thumb_func
 633              	OBJ_GetNoOfObjects:
 634              	.LVL80:
 635              	.LFB137:
 305:Lib/ssc/src/objdef.c ****     /* the variable listFlags contains the mask used for the ObjAccess in the Entry-Desc
 636              		.loc 1 305 1 is_stmt 1 view -0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 305:Lib/ssc/src/objdef.c ****     /* the variable listFlags contains the mask used for the ObjAccess in the Entry-Desc
 640              		.loc 1 305 1 is_stmt 0 view .LVU193
 641 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 642              		.cfi_def_cfa_offset 32
 643              		.cfi_offset 4, -32
 644              		.cfi_offset 5, -28
 645              		.cfi_offset 6, -24
 646              		.cfi_offset 7, -20
 647              		.cfi_offset 8, -16
 648              		.cfi_offset 9, -12
 649              		.cfi_offset 10, -8
ARM GAS  /tmp/ccHv31r6.s 			page 24


 650              		.cfi_offset 14, -4
 651 0004 8046     		mov	r8, r0
 310:Lib/ssc/src/objdef.c ****     
 652              		.loc 1 310 5 is_stmt 1 view .LVU194
 310:Lib/ssc/src/objdef.c ****     
 653              		.loc 1 310 31 is_stmt 0 view .LVU195
 654 0006 2027     		movs	r7, #32
 655 0008 8740     		lsls	r7, r7, r0
 310:Lib/ssc/src/objdef.c ****     
 656              		.loc 1 310 12 view .LVU196
 657 000a BFB2     		uxth	r7, r7
 658              	.LVL81:
 313:Lib/ssc/src/objdef.c ****     UINT16 n = 0;
 659              		.loc 1 313 5 is_stmt 1 view .LVU197
 313:Lib/ssc/src/objdef.c ****     UINT16 n = 0;
 660              		.loc 1 313 43 is_stmt 0 view .LVU198
 661 000c FFF7FEFF 		bl	COE_GetObjectDictionary
 662              	.LVL82:
 313:Lib/ssc/src/objdef.c ****     UINT16 n = 0;
 663              		.loc 1 313 43 view .LVU199
 664 0010 0546     		mov	r5, r0
 665              	.LVL83:
 314:Lib/ssc/src/objdef.c **** 
 666              		.loc 1 314 5 is_stmt 1 view .LVU200
 317:Lib/ssc/src/objdef.c ****     {
 667              		.loc 1 317 5 view .LVU201
 314:Lib/ssc/src/objdef.c **** 
 668              		.loc 1 314 12 is_stmt 0 view .LVU202
 669 0012 4FF0000A 		mov	r10, #0
 317:Lib/ssc/src/objdef.c ****     {
 670              		.loc 1 317 11 view .LVU203
 671 0016 15E0     		b	.L49
 672              	.LVL84:
 673              	.L60:
 674              	.LBB10:
 675              	.LBB11:
 325:Lib/ssc/src/objdef.c ****                 UINT16 i = 0;
 676              		.loc 1 325 17 is_stmt 1 view .LVU204
 325:Lib/ssc/src/objdef.c ****                 UINT16 i = 0;
 677              		.loc 1 325 56 is_stmt 0 view .LVU205
 678 0018 B5F80C90 		ldrh	r9, [r5, #12]
 679              	.LVL85:
 326:Lib/ssc/src/objdef.c **** 
 680              		.loc 1 326 17 is_stmt 1 view .LVU206
 328:Lib/ssc/src/objdef.c ****                 {
 681              		.loc 1 328 17 view .LVU207
 682              	.LBE11:
 322:Lib/ssc/src/objdef.c ****             if ( t )
 683              		.loc 1 322 19 is_stmt 0 view .LVU208
 684 001c 4646     		mov	r6, r8
 685              	.LBB12:
 326:Lib/ssc/src/objdef.c **** 
 686              		.loc 1 326 24 view .LVU209
 687 001e 0024     		movs	r4, #0
 328:Lib/ssc/src/objdef.c ****                 {
 688              		.loc 1 328 23 view .LVU210
 689 0020 01E0     		b	.L52
ARM GAS  /tmp/ccHv31r6.s 			page 25


 690              	.LVL86:
 691              	.L53:
 332:Lib/ssc/src/objdef.c ****                 }
 692              		.loc 1 332 21 is_stmt 1 view .LVU211
 332:Lib/ssc/src/objdef.c ****                 }
 693              		.loc 1 332 22 is_stmt 0 view .LVU212
 694 0022 0134     		adds	r4, r4, #1
 695              	.LVL87:
 332:Lib/ssc/src/objdef.c ****                 }
 696              		.loc 1 332 22 view .LVU213
 697 0024 A4B2     		uxth	r4, r4
 698              	.LVL88:
 699              	.L52:
 328:Lib/ssc/src/objdef.c ****                 {
 700              		.loc 1 328 23 is_stmt 1 view .LVU214
 701 0026 B6B1     		cbz	r6, .L51
 328:Lib/ssc/src/objdef.c ****                 {
 702              		.loc 1 328 27 is_stmt 0 discriminator 1 view .LVU215
 703 0028 5FFA89F3 		uxtb	r3, r9
 704 002c 9C42     		cmp	r4, r3
 705 002e 12D8     		bhi	.L51
 330:Lib/ssc/src/objdef.c ****                         t = 0;
 706              		.loc 1 330 21 is_stmt 1 view .LVU216
 330:Lib/ssc/src/objdef.c ****                         t = 0;
 707              		.loc 1 330 26 is_stmt 0 view .LVU217
 708 0030 E1B2     		uxtb	r1, r4
 709 0032 2846     		mov	r0, r5
 710 0034 FFF7FEFF 		bl	OBJ_GetEntryDesc
 711              	.LVL89:
 330:Lib/ssc/src/objdef.c ****                         t = 0;
 712              		.loc 1 330 63 view .LVU218
 713 0038 8388     		ldrh	r3, [r0, #4]
 330:Lib/ssc/src/objdef.c ****                         t = 0;
 714              		.loc 1 330 24 view .LVU219
 715 003a 3B42     		tst	r3, r7
 716 003c F1D0     		beq	.L53
 331:Lib/ssc/src/objdef.c ****                     i++;
 717              		.loc 1 331 27 view .LVU220
 718 003e 0026     		movs	r6, #0
 719              	.LVL90:
 331:Lib/ssc/src/objdef.c ****                     i++;
 720              		.loc 1 331 27 view .LVU221
 721 0040 EFE7     		b	.L53
 722              	.LVL91:
 723              	.L50:
 331:Lib/ssc/src/objdef.c ****                     i++;
 724              		.loc 1 331 27 view .LVU222
 725              	.LBE12:
 726              	.LBE10:
 342:Lib/ssc/src/objdef.c ****     }
 727              		.loc 1 342 9 is_stmt 1 view .LVU223
 342:Lib/ssc/src/objdef.c ****     }
 728              		.loc 1 342 19 is_stmt 0 view .LVU224
 729 0042 6D68     		ldr	r5, [r5, #4]
 730              	.LVL92:
 731              	.L49:
 317:Lib/ssc/src/objdef.c ****     {
ARM GAS  /tmp/ccHv31r6.s 			page 26


 732              		.loc 1 317 11 is_stmt 1 view .LVU225
 733 0044 75B1     		cbz	r5, .L59
 320:Lib/ssc/src/objdef.c ****         {
 734              		.loc 1 320 9 view .LVU226
 320:Lib/ssc/src/objdef.c ****         {
 735              		.loc 1 320 23 is_stmt 0 view .LVU227
 736 0046 2B89     		ldrh	r3, [r5, #8]
 320:Lib/ssc/src/objdef.c ****         {
 737              		.loc 1 320 12 view .LVU228
 738 0048 B3F5805F 		cmp	r3, #4096
 739 004c F9D3     		bcc	.L50
 740              	.LBB13:
 322:Lib/ssc/src/objdef.c ****             if ( t )
 741              		.loc 1 322 13 is_stmt 1 view .LVU229
 742              	.LVL93:
 323:Lib/ssc/src/objdef.c ****             {
 743              		.loc 1 323 13 view .LVU230
 323:Lib/ssc/src/objdef.c ****             {
 744              		.loc 1 323 16 is_stmt 0 view .LVU231
 745 004e B8F1000F 		cmp	r8, #0
 746 0052 E1D1     		bne	.L60
 322:Lib/ssc/src/objdef.c ****             if ( t )
 747              		.loc 1 322 19 view .LVU232
 748 0054 4646     		mov	r6, r8
 749              	.LVL94:
 750              	.L51:
 335:Lib/ssc/src/objdef.c ****             {
 751              		.loc 1 335 13 is_stmt 1 view .LVU233
 335:Lib/ssc/src/objdef.c ****             {
 752              		.loc 1 335 16 is_stmt 0 view .LVU234
 753 0056 002E     		cmp	r6, #0
 754 0058 F3D1     		bne	.L50
 338:Lib/ssc/src/objdef.c ****             }
 755              		.loc 1 338 17 is_stmt 1 view .LVU235
 338:Lib/ssc/src/objdef.c ****             }
 756              		.loc 1 338 18 is_stmt 0 view .LVU236
 757 005a 0AF1010A 		add	r10, r10, #1
 758              	.LVL95:
 338:Lib/ssc/src/objdef.c ****             }
 759              		.loc 1 338 18 view .LVU237
 760 005e 1FFA8AFA 		uxth	r10, r10
 761              	.LVL96:
 338:Lib/ssc/src/objdef.c ****             }
 762              		.loc 1 338 18 view .LVU238
 763 0062 EEE7     		b	.L50
 764              	.LVL97:
 765              	.L59:
 338:Lib/ssc/src/objdef.c ****             }
 766              		.loc 1 338 18 view .LVU239
 767              	.LBE13:
 345:Lib/ssc/src/objdef.c **** }
 768              		.loc 1 345 5 is_stmt 1 view .LVU240
 346:Lib/ssc/src/objdef.c **** 
 769              		.loc 1 346 1 is_stmt 0 view .LVU241
 770 0064 5046     		mov	r0, r10
 771 0066 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 346:Lib/ssc/src/objdef.c **** 
ARM GAS  /tmp/ccHv31r6.s 			page 27


 772              		.loc 1 346 1 view .LVU242
 773              		.cfi_endproc
 774              	.LFE137:
 776              		.section	.text.OBJ_GetObjectList,"ax",%progbits
 777              		.align	1
 778              		.global	OBJ_GetObjectList
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 783              	OBJ_GetObjectList:
 784              	.LVL98:
 785              	.LFB138:
 364:Lib/ssc/src/objdef.c ****     /* the variable listFlags contains the mask used for the ObjAccess in the Entry-Desc
 786              		.loc 1 364 1 is_stmt 1 view -0
 787              		.cfi_startproc
 788              		@ args = 4, pretend = 0, frame = 8
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 364:Lib/ssc/src/objdef.c ****     /* the variable listFlags contains the mask used for the ObjAccess in the Entry-Desc
 790              		.loc 1 364 1 is_stmt 0 view .LVU244
 791 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 792              		.cfi_def_cfa_offset 36
 793              		.cfi_offset 4, -36
 794              		.cfi_offset 5, -32
 795              		.cfi_offset 6, -28
 796              		.cfi_offset 7, -24
 797              		.cfi_offset 8, -20
 798              		.cfi_offset 9, -16
 799              		.cfi_offset 10, -12
 800              		.cfi_offset 11, -8
 801              		.cfi_offset 14, -4
 802 0004 83B0     		sub	sp, sp, #12
 803              		.cfi_def_cfa_offset 48
 804 0006 8246     		mov	r10, r0
 805 0008 0191     		str	r1, [sp, #4]
 806 000a 1746     		mov	r7, r2
 807 000c 0093     		str	r3, [sp]
 368:Lib/ssc/src/objdef.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry;
 808              		.loc 1 368 5 is_stmt 1 view .LVU245
 368:Lib/ssc/src/objdef.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry;
 809              		.loc 1 368 31 is_stmt 0 view .LVU246
 810 000e 4FF02009 		mov	r9, #32
 811 0012 09FA00F9 		lsl	r9, r9, r0
 368:Lib/ssc/src/objdef.c ****     OBJCONST TOBJECT OBJMEM * pObjEntry;
 812              		.loc 1 368 12 view .LVU247
 813 0016 1FFA89F9 		uxth	r9, r9
 814              	.LVL99:
 369:Lib/ssc/src/objdef.c **** 
 815              		.loc 1 369 5 is_stmt 1 view .LVU248
 372:Lib/ssc/src/objdef.c ****     {
 816              		.loc 1 372 5 view .LVU249
 372:Lib/ssc/src/objdef.c ****     {
 817              		.loc 1 372 16 is_stmt 0 view .LVU250
 818 001a 0B88     		ldrh	r3, [r1]
 819              	.LVL100:
 372:Lib/ssc/src/objdef.c ****     {
 820              		.loc 1 372 8 view .LVU251
 821 001c B3F5805F 		cmp	r3, #4096
ARM GAS  /tmp/ccHv31r6.s 			page 28


 822 0020 0DD0     		beq	.L77
 385:Lib/ssc/src/objdef.c ****     }
 823              		.loc 1 385 9 is_stmt 1 view .LVU252
 385:Lib/ssc/src/objdef.c ****     }
 824              		.loc 1 385 19 is_stmt 0 view .LVU253
 825 0022 254B     		ldr	r3, .L79
 826 0024 1D68     		ldr	r5, [r3]
 827              	.LVL101:
 828              	.L63:
 388:Lib/ssc/src/objdef.c ****     {
 829              		.loc 1 388 5 is_stmt 1 view .LVU254
 388:Lib/ssc/src/objdef.c ****     {
 830              		.loc 1 388 8 is_stmt 0 view .LVU255
 831 0026 5DBB     		cbnz	r5, .L64
 832              	.LVL102:
 833              	.L65:
 422:Lib/ssc/src/objdef.c ****         {
 834              		.loc 1 422 9 is_stmt 1 view .LVU256
 422:Lib/ssc/src/objdef.c ****         {
 835              		.loc 1 422 11 is_stmt 0 view .LVU257
 836 0028 002D     		cmp	r5, #0
 837 002a 3FD0     		beq	.L72
 424:Lib/ssc/src/objdef.c ****         }
 838              		.loc 1 424 13 is_stmt 1 view .LVU258
 424:Lib/ssc/src/objdef.c ****         }
 839              		.loc 1 424 34 is_stmt 0 view .LVU259
 840 002c 2B89     		ldrh	r3, [r5, #8]
 424:Lib/ssc/src/objdef.c ****         }
 841              		.loc 1 424 23 view .LVU260
 842 002e 019A     		ldr	r2, [sp, #4]
 843 0030 1380     		strh	r3, [r2]	@ movhi
 844              	.L73:
 433:Lib/ssc/src/objdef.c **** 
 845              		.loc 1 433 5 is_stmt 1 view .LVU261
 433:Lib/ssc/src/objdef.c **** 
 846              		.loc 1 433 22 is_stmt 0 view .LVU262
 847 0032 214B     		ldr	r3, .L79
 848 0034 1D60     		str	r5, [r3]
 436:Lib/ssc/src/objdef.c **** }
 849              		.loc 1 436 5 is_stmt 1 view .LVU263
 437:Lib/ssc/src/objdef.c **** 
 850              		.loc 1 437 1 is_stmt 0 view .LVU264
 851 0036 3846     		mov	r0, r7
 852 0038 03B0     		add	sp, sp, #12
 853              		.cfi_remember_state
 854              		.cfi_def_cfa_offset 36
 855              	.LVL103:
 437:Lib/ssc/src/objdef.c **** 
 856              		.loc 1 437 1 view .LVU265
 857              		@ sp needed
 858 003a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 859              	.LVL104:
 860              	.L77:
 861              		.cfi_restore_state
 375:Lib/ssc/src/objdef.c ****         // set abort code if no object dictionary is available
 862              		.loc 1 375 8 is_stmt 1 view .LVU266
 375:Lib/ssc/src/objdef.c ****         // set abort code if no object dictionary is available
ARM GAS  /tmp/ccHv31r6.s 			page 29


 863              		.loc 1 375 20 is_stmt 0 view .LVU267
 864 003e FFF7FEFF 		bl	COE_GetObjectDictionary
 865              	.LVL105:
 377:Lib/ssc/src/objdef.c ****         {
 866              		.loc 1 377 9 is_stmt 1 view .LVU268
 377:Lib/ssc/src/objdef.c ****         {
 867              		.loc 1 377 11 is_stmt 0 view .LVU269
 868 0042 0546     		mov	r5, r0
 869 0044 0028     		cmp	r0, #0
 870 0046 EED1     		bne	.L63
 377:Lib/ssc/src/objdef.c ****         {
 871              		.loc 1 377 32 discriminator 1 view .LVU270
 872 0048 0C9B     		ldr	r3, [sp, #48]
 873 004a 002B     		cmp	r3, #0
 874 004c EBD0     		beq	.L63
 379:Lib/ssc/src/objdef.c ****         }
 875              		.loc 1 379 13 is_stmt 1 view .LVU271
 379:Lib/ssc/src/objdef.c ****         }
 876              		.loc 1 379 21 is_stmt 0 view .LVU272
 877 004e 1B23     		movs	r3, #27
 878 0050 0C9A     		ldr	r2, [sp, #48]
 879 0052 1370     		strb	r3, [r2]
 880 0054 E7E7     		b	.L63
 881              	.LVL106:
 882              	.L78:
 883              	.LBB14:
 884              	.LBB15:
 399:Lib/ssc/src/objdef.c ****                     UINT8 i = 0;
 885              		.loc 1 399 21 is_stmt 1 view .LVU273
 399:Lib/ssc/src/objdef.c ****                     UINT8 i = 0;
 886              		.loc 1 399 27 is_stmt 0 view .LVU274
 887 0056 95F80CB0 		ldrb	fp, [r5, #12]	@ zero_extendqisi2
 888              	.LVL107:
 400:Lib/ssc/src/objdef.c **** 
 889              		.loc 1 400 21 is_stmt 1 view .LVU275
 402:Lib/ssc/src/objdef.c ****                     {
 890              		.loc 1 402 21 view .LVU276
 891              	.LBE15:
 396:Lib/ssc/src/objdef.c ****                 if ( t )
 892              		.loc 1 396 24 is_stmt 0 view .LVU277
 893 005a 5646     		mov	r6, r10
 894              	.LBB16:
 400:Lib/ssc/src/objdef.c **** 
 895              		.loc 1 400 27 view .LVU278
 896 005c 0024     		movs	r4, #0
 402:Lib/ssc/src/objdef.c ****                     {
 897              		.loc 1 402 27 view .LVU279
 898 005e 01E0     		b	.L68
 899              	.LVL108:
 900              	.L69:
 406:Lib/ssc/src/objdef.c ****                     }
 901              		.loc 1 406 25 is_stmt 1 view .LVU280
 406:Lib/ssc/src/objdef.c ****                     }
 902              		.loc 1 406 26 is_stmt 0 view .LVU281
 903 0060 0134     		adds	r4, r4, #1
 904              	.LVL109:
 406:Lib/ssc/src/objdef.c ****                     }
ARM GAS  /tmp/ccHv31r6.s 			page 30


 905              		.loc 1 406 26 view .LVU282
 906 0062 E4B2     		uxtb	r4, r4
 907              	.LVL110:
 908              	.L68:
 402:Lib/ssc/src/objdef.c ****                     {
 909              		.loc 1 402 27 is_stmt 1 view .LVU283
 910 0064 CEB1     		cbz	r6, .L67
 402:Lib/ssc/src/objdef.c ****                     {
 911              		.loc 1 402 31 is_stmt 0 discriminator 1 view .LVU284
 912 0066 5C45     		cmp	r4, fp
 913 0068 17D8     		bhi	.L67
 404:Lib/ssc/src/objdef.c ****                             t = 0;
 914              		.loc 1 404 25 is_stmt 1 view .LVU285
 404:Lib/ssc/src/objdef.c ****                             t = 0;
 915              		.loc 1 404 30 is_stmt 0 view .LVU286
 916 006a 2146     		mov	r1, r4
 917 006c 2846     		mov	r0, r5
 918 006e FFF7FEFF 		bl	OBJ_GetEntryDesc
 919              	.LVL111:
 404:Lib/ssc/src/objdef.c ****                             t = 0;
 920              		.loc 1 404 60 view .LVU287
 921 0072 8388     		ldrh	r3, [r0, #4]
 404:Lib/ssc/src/objdef.c ****                             t = 0;
 922              		.loc 1 404 28 view .LVU288
 923 0074 13EA090F 		tst	r3, r9
 924 0078 F2D0     		beq	.L69
 405:Lib/ssc/src/objdef.c ****                         i++;
 925              		.loc 1 405 31 view .LVU289
 926 007a 0026     		movs	r6, #0
 927              	.LVL112:
 405:Lib/ssc/src/objdef.c ****                         i++;
 928              		.loc 1 405 31 view .LVU290
 929 007c F0E7     		b	.L69
 930              	.LVL113:
 931              	.L66:
 405:Lib/ssc/src/objdef.c ****                         i++;
 932              		.loc 1 405 31 view .LVU291
 933              	.LBE16:
 934              	.LBE14:
 417:Lib/ssc/src/objdef.c ****         }
 935              		.loc 1 417 9 is_stmt 1 view .LVU292
 417:Lib/ssc/src/objdef.c ****         }
 936              		.loc 1 417 19 is_stmt 0 view .LVU293
 937 007e 6D68     		ldr	r5, [r5, #4]
 938              	.LVL114:
 939              	.L64:
 390:Lib/ssc/src/objdef.c ****         {
 940              		.loc 1 390 15 is_stmt 1 view .LVU294
 941 0080 002D     		cmp	r5, #0
 942 0082 D1D0     		beq	.L65
 390:Lib/ssc/src/objdef.c ****         {
 943              		.loc 1 390 34 is_stmt 0 discriminator 1 view .LVU295
 944 0084 012F     		cmp	r7, #1
 945 0086 CFD9     		bls	.L65
 393:Lib/ssc/src/objdef.c ****             {
 946              		.loc 1 393 13 is_stmt 1 view .LVU296
 393:Lib/ssc/src/objdef.c ****             {
ARM GAS  /tmp/ccHv31r6.s 			page 31


 947              		.loc 1 393 27 is_stmt 0 view .LVU297
 948 0088 B5F80880 		ldrh	r8, [r5, #8]
 393:Lib/ssc/src/objdef.c ****             {
 949              		.loc 1 393 16 view .LVU298
 950 008c B8F5805F 		cmp	r8, #4096
 951 0090 F5D3     		bcc	.L66
 952              	.LBB17:
 396:Lib/ssc/src/objdef.c ****                 if ( t )
 953              		.loc 1 396 17 is_stmt 1 view .LVU299
 954              	.LVL115:
 397:Lib/ssc/src/objdef.c ****                 {
 955              		.loc 1 397 17 view .LVU300
 397:Lib/ssc/src/objdef.c ****                 {
 956              		.loc 1 397 20 is_stmt 0 view .LVU301
 957 0092 BAF1000F 		cmp	r10, #0
 958 0096 DED1     		bne	.L78
 396:Lib/ssc/src/objdef.c ****                 if ( t )
 959              		.loc 1 396 24 view .LVU302
 960 0098 5646     		mov	r6, r10
 961              	.LVL116:
 962              	.L67:
 409:Lib/ssc/src/objdef.c ****                 {
 963              		.loc 1 409 17 is_stmt 1 view .LVU303
 409:Lib/ssc/src/objdef.c ****                 {
 964              		.loc 1 409 20 is_stmt 0 view .LVU304
 965 009a 002E     		cmp	r6, #0
 966 009c EFD1     		bne	.L66
 412:Lib/ssc/src/objdef.c ****                     pData++;
 967              		.loc 1 412 21 is_stmt 1 view .LVU305
 412:Lib/ssc/src/objdef.c ****                     pData++;
 968              		.loc 1 412 28 is_stmt 0 view .LVU306
 969 009e 009B     		ldr	r3, [sp]
 970 00a0 23F8028B 		strh	r8, [r3], #2	@ movhi
 971 00a4 0093     		str	r3, [sp]
 972              	.LVL117:
 413:Lib/ssc/src/objdef.c ****                     size -= 2;
 973              		.loc 1 413 21 is_stmt 1 view .LVU307
 414:Lib/ssc/src/objdef.c ****                 }
 974              		.loc 1 414 21 view .LVU308
 414:Lib/ssc/src/objdef.c ****                 }
 975              		.loc 1 414 26 is_stmt 0 view .LVU309
 976 00a6 023F     		subs	r7, r7, #2
 977              	.LVL118:
 414:Lib/ssc/src/objdef.c ****                 }
 978              		.loc 1 414 26 view .LVU310
 979 00a8 BFB2     		uxth	r7, r7
 980              	.LVL119:
 414:Lib/ssc/src/objdef.c ****                 }
 981              		.loc 1 414 26 view .LVU311
 982 00aa E8E7     		b	.L66
 983              	.LVL120:
 984              	.L72:
 414:Lib/ssc/src/objdef.c ****                 }
 985              		.loc 1 414 26 view .LVU312
 986              	.LBE17:
 429:Lib/ssc/src/objdef.c ****         }
 987              		.loc 1 429 13 is_stmt 1 view .LVU313
ARM GAS  /tmp/ccHv31r6.s 			page 32


 429:Lib/ssc/src/objdef.c ****         }
 988              		.loc 1 429 23 is_stmt 0 view .LVU314
 989 00ac 4FF6FF73 		movw	r3, #65535
 990 00b0 019A     		ldr	r2, [sp, #4]
 991 00b2 1380     		strh	r3, [r2]	@ movhi
 992 00b4 BDE7     		b	.L73
 993              	.L80:
 994 00b6 00BF     		.align	2
 995              	.L79:
 996 00b8 00000000 		.word	pSdoInfoObjEntry
 997              		.cfi_endproc
 998              	.LFE138:
 1000              		.section	.text.OBJ_GetObjDesc,"ax",%progbits
 1001              		.align	1
 1002              		.global	OBJ_GetObjDesc
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1007              	OBJ_GetObjDesc:
 1008              	.LVL121:
 1009              	.LFB141:
 580:Lib/ssc/src/objdef.c **** 
 581:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 582:Lib/ssc/src/objdef.c **** /**
 583:Lib/ssc/src/objdef.c ****  \param     pObjEntry            handle to the dictionary object returned by
 584:Lib/ssc/src/objdef.c ****                                      OBJ_GetObjectHandle which was called before
 585:Lib/ssc/src/objdef.c **** 
 586:Lib/ssc/src/objdef.c ****  \return    Pointer to the ObjDesc of the Object
 587:Lib/ssc/src/objdef.c **** 
 588:Lib/ssc/src/objdef.c ****  \brief    The function returns the Obj-Desc of an object to allow the application
 589:Lib/ssc/src/objdef.c ****          to define the object dictionary independent of the sdoserv-files
 590:Lib/ssc/src/objdef.c **** 
 591:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 592:Lib/ssc/src/objdef.c **** 
 593:Lib/ssc/src/objdef.c **** OBJCONST TSDOINFOOBJDESC OBJMEM * OBJ_GetObjDesc(OBJCONST TOBJECT OBJMEM * pObjEntry)
 594:Lib/ssc/src/objdef.c **** {
 1010              		.loc 1 594 1 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              		@ link register save eliminated.
 595:Lib/ssc/src/objdef.c ****     return &pObjEntry->ObjDesc;
 1015              		.loc 1 595 5 view .LVU316
 596:Lib/ssc/src/objdef.c **** }
 1016              		.loc 1 596 1 is_stmt 0 view .LVU317
 1017 0000 0A30     		adds	r0, r0, #10
 1018              	.LVL122:
 1019              		.loc 1 596 1 view .LVU318
 1020 0002 7047     		bx	lr
 1021              		.cfi_endproc
 1022              	.LFE141:
 1024              		.section	.text.OBJ_GetEntryOffset,"ax",%progbits
 1025              		.align	1
 1026              		.global	OBJ_GetEntryOffset
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
ARM GAS  /tmp/ccHv31r6.s 			page 33


 1031              	OBJ_GetEntryOffset:
 1032              	.LVL123:
 1033              	.LFB142:
 597:Lib/ssc/src/objdef.c **** 
 598:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 599:Lib/ssc/src/objdef.c **** /**
 600:Lib/ssc/src/objdef.c ****  \param     subindex                subindex of the entry
 601:Lib/ssc/src/objdef.c ****  \param     pObjEntry            handle to the dictionary object returned by
 602:Lib/ssc/src/objdef.c ****                                      OBJ_GetObjectHandle which was called before
 603:Lib/ssc/src/objdef.c **** 
 604:Lib/ssc/src/objdef.c ****  \return    bit offset of the entry in the variable
 605:Lib/ssc/src/objdef.c **** 
 606:Lib/ssc/src/objdef.c ****  \brief    This function calculates the bit offset of the entry in the object's variable
 607:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 608:Lib/ssc/src/objdef.c **** 
 609:Lib/ssc/src/objdef.c **** UINT16 OBJ_GetEntryOffset(UINT8 subindex, OBJCONST TOBJECT OBJMEM * pObjEntry)
 610:Lib/ssc/src/objdef.c **** {
 1034              		.loc 1 610 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		.loc 1 610 1 is_stmt 0 view .LVU320
 1039 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1040              		.cfi_def_cfa_offset 20
 1041              		.cfi_offset 4, -20
 1042              		.cfi_offset 5, -16
 1043              		.cfi_offset 6, -12
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 611:Lib/ssc/src/objdef.c ****     UINT16 i;
 1046              		.loc 1 611 5 is_stmt 1 view .LVU321
 612:Lib/ssc/src/objdef.c ****     /* bitOffset will be initialized with the bit offset of subindex 1 */
 613:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) OBJ1*/
 614:Lib/ssc/src/objdef.c ****     UINT16 bitOffset = 0;
 1047              		.loc 1 614 5 view .LVU322
 1048              	.LVL124:
 615:Lib/ssc/src/objdef.c ****     UINT8 objCode = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT;
 1049              		.loc 1 615 5 view .LVU323
 1050              		.loc 1 615 40 is_stmt 0 view .LVU324
 1051 0002 B1F80CE0 		ldrh	lr, [r1, #12]
 1052              		.loc 1 615 11 view .LVU325
 1053 0006 CEF3032E 		ubfx	lr, lr, #8, #4
 1054              	.LVL125:
 616:Lib/ssc/src/objdef.c ****     OBJCONST TSDOINFOENTRYDESC OBJMEM *pEntry;
 1055              		.loc 1 616 5 is_stmt 1 view .LVU326
 617:Lib/ssc/src/objdef.c **** 
 618:Lib/ssc/src/objdef.c ****     if(subindex > 0)
 1056              		.loc 1 618 5 view .LVU327
 1057              		.loc 1 618 7 is_stmt 0 view .LVU328
 1058 000a 0446     		mov	r4, r0
 1059 000c 00B1     		cbz	r0, .L83
 619:Lib/ssc/src/objdef.c ****     {
 620:Lib/ssc/src/objdef.c ****         /*subindex 1 has an offset of 16Bit (even if Si0 is only an UINT8) */
 621:Lib/ssc/src/objdef.c ****         bitOffset +=16;
 1060              		.loc 1 621 19 view .LVU329
 1061 000e 1020     		movs	r0, #16
 1062              	.LVL126:
ARM GAS  /tmp/ccHv31r6.s 			page 34


 1063              	.L83:
 622:Lib/ssc/src/objdef.c ****     }
 623:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) OBJ1*/
 624:Lib/ssc/src/objdef.c **** 
 625:Lib/ssc/src/objdef.c ****     if (objCode == OBJCODE_VAR)
 1064              		.loc 1 625 5 is_stmt 1 view .LVU330
 1065              		.loc 1 625 8 is_stmt 0 view .LVU331
 1066 0010 BEF1070F 		cmp	lr, #7
 1067 0014 00F0B180 		beq	.L99
 626:Lib/ssc/src/objdef.c ****         return 0;
 627:Lib/ssc/src/objdef.c **** 
 628:Lib/ssc/src/objdef.c ****     for (i = 1; i <= subindex; i++)
 1068              		.loc 1 628 12 view .LVU332
 1069 0018 0122     		movs	r2, #1
 1070 001a 27E0     		b	.L85
 1071              	.LVL127:
 1072              	.L101:
 629:Lib/ssc/src/objdef.c ****     {
 630:Lib/ssc/src/objdef.c ****         /* get the entry description */
 631:Lib/ssc/src/objdef.c ****         if ((objCode == OBJCODE_ARR)
 632:Lib/ssc/src/objdef.c ****            )
 633:Lib/ssc/src/objdef.c ****             pEntry = &pObjEntry->pEntryDesc[1];
 1073              		.loc 1 633 13 is_stmt 1 view .LVU333
 1074              		.loc 1 633 32 is_stmt 0 view .LVU334
 1075 001c 0D69     		ldr	r5, [r1, #16]
 1076              		.loc 1 633 20 view .LVU335
 1077 001e 0635     		adds	r5, r5, #6
 1078              	.LVL128:
 1079              		.loc 1 633 20 view .LVU336
 1080 0020 30E0     		b	.L87
 1081              	.L88:
 634:Lib/ssc/src/objdef.c ****         else
 635:Lib/ssc/src/objdef.c ****         {
 636:Lib/ssc/src/objdef.c ****             pEntry = &pObjEntry->pEntryDesc[i];
 637:Lib/ssc/src/objdef.c ****         }
 638:Lib/ssc/src/objdef.c **** 
 639:Lib/ssc/src/objdef.c ****         switch (pEntry->DataType)
 1082              		.loc 1 639 9 view .LVU337
 1083 0022 B3F5187F 		cmp	r3, #608
 1084 0026 0ED0     		beq	.L92
 1085 0028 07D3     		bcc	.L89
 1086 002a A3F2622C 		subw	ip, r3, #610
 1087 002e 1FFA8CFC 		uxth	ip, ip
 1088 0032 BCF1010F 		cmp	ip, #1
 1089 0036 40F28D80 		bls	.L90
 1090              	.L89:
 640:Lib/ssc/src/objdef.c ****         {
 641:Lib/ssc/src/objdef.c ****         case    DEFTYPE_INTEGER16:
 642:Lib/ssc/src/objdef.c ****         case    DEFTYPE_UNSIGNED16:
 643:Lib/ssc/src/objdef.c ****         case    DEFTYPE_BITARR16:
 644:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
 645:Lib/ssc/src/objdef.c ****         case    DEFTYPE_WORD:
 646:Lib/ssc/src/objdef.c ****         case    DEFTYPE_UNICODE_STRING:
 647:Lib/ssc/src/objdef.c ****         case    DEFTYPE_ARRAY_OF_INT :
 648:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
 649:Lib/ssc/src/objdef.c **** 
 650:Lib/ssc/src/objdef.c **** #if OBJ_WORD_ALIGN    || OBJ_DWORD_ALIGN
ARM GAS  /tmp/ccHv31r6.s 			page 35


 651:Lib/ssc/src/objdef.c ****             /* the 16-bit variables in the structure are word-aligned,
 652:Lib/ssc/src/objdef.c ****                align the actual bitOffset to a word */
 653:Lib/ssc/src/objdef.c ****             bitOffset = (bitOffset+15) & 0xFFF0;
 654:Lib/ssc/src/objdef.c **** #endif
 655:Lib/ssc/src/objdef.c **** 
 656:Lib/ssc/src/objdef.c **** 
 657:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
 658:Lib/ssc/src/objdef.c ****             if (i < subindex)
 659:Lib/ssc/src/objdef.c ****             {
 660:Lib/ssc/src/objdef.c ****                 if((pEntry->DataType == DEFTYPE_UNICODE_STRING)
 661:Lib/ssc/src/objdef.c ****                     ||(pEntry->DataType == DEFTYPE_ARRAY_OF_INT))
 662:Lib/ssc/src/objdef.c ****                 {
 663:Lib/ssc/src/objdef.c ****                     bitOffset += pEntry->BitLength;
 664:Lib/ssc/src/objdef.c ****                 }
 665:Lib/ssc/src/objdef.c **** 
 666:Lib/ssc/src/objdef.c ****                 bitOffset += 16;
 667:Lib/ssc/src/objdef.c ****             }
 668:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
 669:Lib/ssc/src/objdef.c ****             break;
 670:Lib/ssc/src/objdef.c ****         case    DEFTYPE_UNSIGNED32:
 671:Lib/ssc/src/objdef.c ****         case    DEFTYPE_INTEGER32:
 672:Lib/ssc/src/objdef.c ****         case    DEFTYPE_REAL32:
 673:Lib/ssc/src/objdef.c ****         case    DEFTYPE_BITARR32:
 674:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
 675:Lib/ssc/src/objdef.c ****         case    DEFTYPE_DWORD:
 676:Lib/ssc/src/objdef.c ****         case    DEFTYPE_ARRAY_OF_DINT :
 677:Lib/ssc/src/objdef.c ****         case    DEFTYPE_ARRAY_OF_UDINT:
 678:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
 679:Lib/ssc/src/objdef.c **** #if OBJ_DWORD_ALIGN
 680:Lib/ssc/src/objdef.c ****             /* the 32-bit variables in the structure are dword-aligned,
 681:Lib/ssc/src/objdef.c ****                align the actual bitOffset to a dword */
 682:Lib/ssc/src/objdef.c ****             bitOffset = (bitOffset+31) & 0xFFE0;
 683:Lib/ssc/src/objdef.c **** #elif OBJ_WORD_ALIGN
 684:Lib/ssc/src/objdef.c ****             /* the 32-bit variables in the structure are word-aligned,
 685:Lib/ssc/src/objdef.c ****                align the actual bitOffset to a word */
 686:Lib/ssc/src/objdef.c ****             bitOffset = (bitOffset+15) & 0xFFF0;
 687:Lib/ssc/src/objdef.c **** #endif
 688:Lib/ssc/src/objdef.c **** 
 689:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
 690:Lib/ssc/src/objdef.c ****             if (i < subindex)
 691:Lib/ssc/src/objdef.c ****             {
 692:Lib/ssc/src/objdef.c ****                 if((pEntry->DataType == DEFTYPE_ARRAY_OF_DINT)
 693:Lib/ssc/src/objdef.c ****                     ||(pEntry->DataType == DEFTYPE_ARRAY_OF_UDINT))
 694:Lib/ssc/src/objdef.c ****                 {
 695:Lib/ssc/src/objdef.c ****                     bitOffset += pEntry->BitLength;
 696:Lib/ssc/src/objdef.c ****                 }
 697:Lib/ssc/src/objdef.c ****                 else
 698:Lib/ssc/src/objdef.c ****                    bitOffset += 32;
 699:Lib/ssc/src/objdef.c ****             }
 700:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
 701:Lib/ssc/src/objdef.c ****             break;
 702:Lib/ssc/src/objdef.c ****         default:
 703:Lib/ssc/src/objdef.c ****             /* align the actual bitOffset to a byte */
 704:Lib/ssc/src/objdef.c ****             if (i < subindex)
 1091              		.loc 1 704 13 is_stmt 1 view .LVU338
 1092              		.loc 1 704 16 is_stmt 0 view .LVU339
 1093 003a 9642     		cmp	r6, r2
ARM GAS  /tmp/ccHv31r6.s 			page 36


 1094 003c 14D9     		bls	.L93
 705:Lib/ssc/src/objdef.c ****                 bitOffset += pEntry->BitLength;
 1095              		.loc 1 705 17 is_stmt 1 view .LVU340
 1096              		.loc 1 705 36 is_stmt 0 view .LVU341
 1097 003e 6B88     		ldrh	r3, [r5, #2]
 1098              		.loc 1 705 27 view .LVU342
 1099 0040 1844     		add	r0, r0, r3
 1100              	.LVL129:
 1101              		.loc 1 705 27 view .LVU343
 1102 0042 80B2     		uxth	r0, r0
 1103              	.LVL130:
 1104              		.loc 1 705 27 view .LVU344
 1105 0044 10E0     		b	.L93
 1106              	.L92:
 653:Lib/ssc/src/objdef.c **** #endif
 1107              		.loc 1 653 13 is_stmt 1 view .LVU345
 653:Lib/ssc/src/objdef.c **** #endif
 1108              		.loc 1 653 35 is_stmt 0 view .LVU346
 1109 0046 0F30     		adds	r0, r0, #15
 1110              	.LVL131:
 653:Lib/ssc/src/objdef.c **** #endif
 1111              		.loc 1 653 35 view .LVU347
 1112 0048 80B2     		uxth	r0, r0
 653:Lib/ssc/src/objdef.c **** #endif
 1113              		.loc 1 653 23 view .LVU348
 1114 004a 20F00F00 		bic	r0, r0, #15
 1115 004e 80B2     		uxth	r0, r0
 1116              	.LVL132:
 658:Lib/ssc/src/objdef.c ****             {
 1117              		.loc 1 658 13 is_stmt 1 view .LVU349
 658:Lib/ssc/src/objdef.c ****             {
 1118              		.loc 1 658 16 is_stmt 0 view .LVU350
 1119 0050 9642     		cmp	r6, r2
 1120 0052 09D9     		bls	.L93
 660:Lib/ssc/src/objdef.c ****                     ||(pEntry->DataType == DEFTYPE_ARRAY_OF_INT))
 1121              		.loc 1 660 17 is_stmt 1 view .LVU351
 660:Lib/ssc/src/objdef.c ****                     ||(pEntry->DataType == DEFTYPE_ARRAY_OF_INT))
 1122              		.loc 1 660 19 is_stmt 0 view .LVU352
 1123 0054 0B2B     		cmp	r3, #11
 1124 0056 02D0     		beq	.L94
 661:Lib/ssc/src/objdef.c ****                 {
 1125              		.loc 1 661 21 view .LVU353
 1126 0058 B3F5187F 		cmp	r3, #608
 1127 005c 02D1     		bne	.L95
 1128              	.L94:
 663:Lib/ssc/src/objdef.c ****                 }
 1129              		.loc 1 663 21 is_stmt 1 view .LVU354
 663:Lib/ssc/src/objdef.c ****                 }
 1130              		.loc 1 663 40 is_stmt 0 view .LVU355
 1131 005e 6B88     		ldrh	r3, [r5, #2]
 663:Lib/ssc/src/objdef.c ****                 }
 1132              		.loc 1 663 31 view .LVU356
 1133 0060 1844     		add	r0, r0, r3
 1134              	.LVL133:
 663:Lib/ssc/src/objdef.c ****                 }
 1135              		.loc 1 663 31 view .LVU357
 1136 0062 80B2     		uxth	r0, r0
ARM GAS  /tmp/ccHv31r6.s 			page 37


 1137              	.LVL134:
 1138              	.L95:
 666:Lib/ssc/src/objdef.c ****             }
 1139              		.loc 1 666 17 is_stmt 1 view .LVU358
 666:Lib/ssc/src/objdef.c ****             }
 1140              		.loc 1 666 27 is_stmt 0 view .LVU359
 1141 0064 1030     		adds	r0, r0, #16
 1142              	.LVL135:
 666:Lib/ssc/src/objdef.c ****             }
 1143              		.loc 1 666 27 view .LVU360
 1144 0066 80B2     		uxth	r0, r0
 1145              	.LVL136:
 1146              	.L93:
 628:Lib/ssc/src/objdef.c ****     {
 1147              		.loc 1 628 32 is_stmt 1 discriminator 2 view .LVU361
 628:Lib/ssc/src/objdef.c ****     {
 1148              		.loc 1 628 33 is_stmt 0 discriminator 2 view .LVU362
 1149 0068 0132     		adds	r2, r2, #1
 1150              	.LVL137:
 628:Lib/ssc/src/objdef.c ****     {
 1151              		.loc 1 628 33 discriminator 2 view .LVU363
 1152 006a 92B2     		uxth	r2, r2
 1153              	.LVL138:
 1154              	.L85:
 628:Lib/ssc/src/objdef.c ****     {
 1155              		.loc 1 628 17 is_stmt 1 discriminator 1 view .LVU364
 628:Lib/ssc/src/objdef.c ****     {
 1156              		.loc 1 628 19 is_stmt 0 discriminator 1 view .LVU365
 1157 006c A6B2     		uxth	r6, r4
 628:Lib/ssc/src/objdef.c ****     {
 1158              		.loc 1 628 5 discriminator 1 view .LVU366
 1159 006e 9642     		cmp	r6, r2
 1160 0070 C0F08480 		bcc	.L84
 631:Lib/ssc/src/objdef.c ****            )
 1161              		.loc 1 631 9 is_stmt 1 view .LVU367
 631:Lib/ssc/src/objdef.c ****            )
 1162              		.loc 1 631 12 is_stmt 0 view .LVU368
 1163 0074 BEF1080F 		cmp	lr, #8
 1164 0078 D0D0     		beq	.L101
 636:Lib/ssc/src/objdef.c ****         }
 1165              		.loc 1 636 13 is_stmt 1 view .LVU369
 636:Lib/ssc/src/objdef.c ****         }
 1166              		.loc 1 636 32 is_stmt 0 view .LVU370
 1167 007a 0D69     		ldr	r5, [r1, #16]
 636:Lib/ssc/src/objdef.c ****         }
 1168              		.loc 1 636 44 view .LVU371
 1169 007c 02EB4203 		add	r3, r2, r2, lsl #1
 636:Lib/ssc/src/objdef.c ****         }
 1170              		.loc 1 636 20 view .LVU372
 1171 0080 05EB4305 		add	r5, r5, r3, lsl #1
 1172              	.LVL139:
 1173              	.L87:
 639:Lib/ssc/src/objdef.c ****         {
 1174              		.loc 1 639 9 is_stmt 1 view .LVU373
 639:Lib/ssc/src/objdef.c ****         {
 1175              		.loc 1 639 23 is_stmt 0 view .LVU374
 1176 0084 2B88     		ldrh	r3, [r5]
ARM GAS  /tmp/ccHv31r6.s 			page 38


 639:Lib/ssc/src/objdef.c ****         {
 1177              		.loc 1 639 9 view .LVU375
 1178 0086 2F2B     		cmp	r3, #47
 1179 0088 CBD8     		bhi	.L88
 639:Lib/ssc/src/objdef.c ****         {
 1180              		.loc 1 639 9 view .LVU376
 1181 008a 032B     		cmp	r3, #3
 1182 008c D5D3     		bcc	.L89
 1183 008e A3F1030C 		sub	ip, r3, #3
 1184 0092 BCF12C0F 		cmp	ip, #44
 1185 0096 D0D8     		bhi	.L89
 1186 0098 01A7     		adr	r7, .L91
 1187 009a 57F82CF0 		ldr	pc, [r7, ip, lsl #2]
 1188 009e 00BF     		.p2align 2
 1189              	.L91:
 1190 00a0 47000000 		.word	.L92+1
 1191 00a4 55010000 		.word	.L90+1
 1192 00a8 3B000000 		.word	.L89+1
 1193 00ac 47000000 		.word	.L92+1
 1194 00b0 55010000 		.word	.L90+1
 1195 00b4 55010000 		.word	.L90+1
 1196 00b8 3B000000 		.word	.L89+1
 1197 00bc 3B000000 		.word	.L89+1
 1198 00c0 47000000 		.word	.L92+1
 1199 00c4 3B000000 		.word	.L89+1
 1200 00c8 3B000000 		.word	.L89+1
 1201 00cc 3B000000 		.word	.L89+1
 1202 00d0 3B000000 		.word	.L89+1
 1203 00d4 3B000000 		.word	.L89+1
 1204 00d8 3B000000 		.word	.L89+1
 1205 00dc 3B000000 		.word	.L89+1
 1206 00e0 3B000000 		.word	.L89+1
 1207 00e4 3B000000 		.word	.L89+1
 1208 00e8 3B000000 		.word	.L89+1
 1209 00ec 3B000000 		.word	.L89+1
 1210 00f0 3B000000 		.word	.L89+1
 1211 00f4 3B000000 		.word	.L89+1
 1212 00f8 3B000000 		.word	.L89+1
 1213 00fc 3B000000 		.word	.L89+1
 1214 0100 3B000000 		.word	.L89+1
 1215 0104 3B000000 		.word	.L89+1
 1216 0108 3B000000 		.word	.L89+1
 1217 010c 3B000000 		.word	.L89+1
 1218 0110 47000000 		.word	.L92+1
 1219 0114 55010000 		.word	.L90+1
 1220 0118 3B000000 		.word	.L89+1
 1221 011c 3B000000 		.word	.L89+1
 1222 0120 3B000000 		.word	.L89+1
 1223 0124 3B000000 		.word	.L89+1
 1224 0128 3B000000 		.word	.L89+1
 1225 012c 3B000000 		.word	.L89+1
 1226 0130 3B000000 		.word	.L89+1
 1227 0134 3B000000 		.word	.L89+1
 1228 0138 3B000000 		.word	.L89+1
 1229 013c 3B000000 		.word	.L89+1
 1230 0140 3B000000 		.word	.L89+1
 1231 0144 3B000000 		.word	.L89+1
ARM GAS  /tmp/ccHv31r6.s 			page 39


 1232 0148 3B000000 		.word	.L89+1
 1233 014c 47000000 		.word	.L92+1
 1234 0150 55010000 		.word	.L90+1
 1235              		.p2align 1
 1236              	.L90:
 682:Lib/ssc/src/objdef.c **** #elif OBJ_WORD_ALIGN
 1237              		.loc 1 682 13 is_stmt 1 view .LVU377
 682:Lib/ssc/src/objdef.c **** #elif OBJ_WORD_ALIGN
 1238              		.loc 1 682 35 is_stmt 0 view .LVU378
 1239 0154 1F30     		adds	r0, r0, #31
 1240              	.LVL140:
 682:Lib/ssc/src/objdef.c **** #elif OBJ_WORD_ALIGN
 1241              		.loc 1 682 35 view .LVU379
 1242 0156 80B2     		uxth	r0, r0
 682:Lib/ssc/src/objdef.c **** #elif OBJ_WORD_ALIGN
 1243              		.loc 1 682 23 view .LVU380
 1244 0158 20F01F00 		bic	r0, r0, #31
 1245 015c 80B2     		uxth	r0, r0
 1246              	.LVL141:
 690:Lib/ssc/src/objdef.c ****             {
 1247              		.loc 1 690 13 is_stmt 1 view .LVU381
 690:Lib/ssc/src/objdef.c ****             {
 1248              		.loc 1 690 16 is_stmt 0 view .LVU382
 1249 015e 9642     		cmp	r6, r2
 1250 0160 82D9     		bls	.L93
 692:Lib/ssc/src/objdef.c ****                     ||(pEntry->DataType == DEFTYPE_ARRAY_OF_UDINT))
 1251              		.loc 1 692 17 is_stmt 1 view .LVU383
 693:Lib/ssc/src/objdef.c ****                 {
 1252              		.loc 1 693 21 is_stmt 0 view .LVU384
 1253 0162 A3F26223 		subw	r3, r3, #610
 1254 0166 9BB2     		uxth	r3, r3
 692:Lib/ssc/src/objdef.c ****                     ||(pEntry->DataType == DEFTYPE_ARRAY_OF_UDINT))
 1255              		.loc 1 692 19 view .LVU385
 1256 0168 012B     		cmp	r3, #1
 1257 016a 02D9     		bls	.L102
 698:Lib/ssc/src/objdef.c ****             }
 1258              		.loc 1 698 20 is_stmt 1 view .LVU386
 698:Lib/ssc/src/objdef.c ****             }
 1259              		.loc 1 698 30 is_stmt 0 view .LVU387
 1260 016c 2030     		adds	r0, r0, #32
 1261              	.LVL142:
 698:Lib/ssc/src/objdef.c ****             }
 1262              		.loc 1 698 30 view .LVU388
 1263 016e 80B2     		uxth	r0, r0
 1264              	.LVL143:
 698:Lib/ssc/src/objdef.c ****             }
 1265              		.loc 1 698 30 view .LVU389
 1266 0170 7AE7     		b	.L93
 1267              	.L102:
 695:Lib/ssc/src/objdef.c ****                 }
 1268              		.loc 1 695 21 is_stmt 1 view .LVU390
 695:Lib/ssc/src/objdef.c ****                 }
 1269              		.loc 1 695 40 is_stmt 0 view .LVU391
 1270 0172 6B88     		ldrh	r3, [r5, #2]
 695:Lib/ssc/src/objdef.c ****                 }
 1271              		.loc 1 695 31 view .LVU392
 1272 0174 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccHv31r6.s 			page 40


 1273              	.LVL144:
 695:Lib/ssc/src/objdef.c ****                 }
 1274              		.loc 1 695 31 view .LVU393
 1275 0176 80B2     		uxth	r0, r0
 1276              	.LVL145:
 695:Lib/ssc/src/objdef.c ****                 }
 1277              		.loc 1 695 31 view .LVU394
 1278 0178 76E7     		b	.L93
 1279              	.LVL146:
 1280              	.L99:
 626:Lib/ssc/src/objdef.c **** 
 1281              		.loc 1 626 16 view .LVU395
 1282 017a 0020     		movs	r0, #0
 1283              	.LVL147:
 1284              	.L84:
 706:Lib/ssc/src/objdef.c ****             break;
 707:Lib/ssc/src/objdef.c ****         }
 708:Lib/ssc/src/objdef.c ****     }
 709:Lib/ssc/src/objdef.c **** 
 710:Lib/ssc/src/objdef.c ****     return bitOffset;
 711:Lib/ssc/src/objdef.c **** }
 1285              		.loc 1 711 1 view .LVU396
 1286 017c F0BD     		pop	{r4, r5, r6, r7, pc}
 1287              		.cfi_endproc
 1288              	.LFE142:
 1290 017e 00BF     		.section	.text.CheckSyncTypeValue,"ax",%progbits
 1291              		.align	1
 1292              		.global	CheckSyncTypeValue
 1293              		.syntax unified
 1294              		.thumb
 1295              		.thumb_func
 1297              	CheckSyncTypeValue:
 1298              	.LVL148:
 1299              	.LFB143:
 712:Lib/ssc/src/objdef.c **** 
 713:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 714:Lib/ssc/src/objdef.c **** /**
 715:Lib/ssc/src/objdef.c ****  \param     index                 index of the SyncManager Parameter object 
 716:Lib/ssc/src/objdef.c ****  \param     NewSyncType           New value for the Sync Type (SubIndex 1)
 717:Lib/ssc/src/objdef.c **** 
 718:Lib/ssc/src/objdef.c ****  \return    result                Result of the value validation
 719:Lib/ssc/src/objdef.c **** 
 720:Lib/ssc/src/objdef.c ****  \brief    Checks if the new Sync type value is valid
 721:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 722:Lib/ssc/src/objdef.c **** UINT8 CheckSyncTypeValue(UINT16 index, UINT16 NewSyncType)
 723:Lib/ssc/src/objdef.c **** {
 1300              		.loc 1 723 1 is_stmt 1 view -0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 724:Lib/ssc/src/objdef.c ****     /*ECATCHANGE_START(V5.11) ESM7*/
 725:Lib/ssc/src/objdef.c ****     switch (NewSyncType)
 1305              		.loc 1 725 5 view .LVU398
 1306 0000 2229     		cmp	r1, #34
 1307 0002 7AD8     		bhi	.L114
 1308 0004 DFE801F0 		tbb	[pc, r1]
ARM GAS  /tmp/ccHv31r6.s 			page 41


 1309              	.L106:
 1310 0008 12       		.byte	(.L110-.L106)/2
 1311 0009 14       		.byte	(.L109-.L106)/2
 1312 000a 49       		.byte	(.L108-.L106)/2
 1313 000b 61       		.byte	(.L107-.L106)/2
 1314 000c 79       		.byte	(.L114-.L106)/2
 1315 000d 79       		.byte	(.L114-.L106)/2
 1316 000e 79       		.byte	(.L114-.L106)/2
 1317 000f 79       		.byte	(.L114-.L106)/2
 1318 0010 79       		.byte	(.L114-.L106)/2
 1319 0011 79       		.byte	(.L114-.L106)/2
 1320 0012 79       		.byte	(.L114-.L106)/2
 1321 0013 79       		.byte	(.L114-.L106)/2
 1322 0014 79       		.byte	(.L114-.L106)/2
 1323 0015 79       		.byte	(.L114-.L106)/2
 1324 0016 79       		.byte	(.L114-.L106)/2
 1325 0017 79       		.byte	(.L114-.L106)/2
 1326 0018 79       		.byte	(.L114-.L106)/2
 1327 0019 79       		.byte	(.L114-.L106)/2
 1328 001a 79       		.byte	(.L114-.L106)/2
 1329 001b 79       		.byte	(.L114-.L106)/2
 1330 001c 79       		.byte	(.L114-.L106)/2
 1331 001d 79       		.byte	(.L114-.L106)/2
 1332 001e 79       		.byte	(.L114-.L106)/2
 1333 001f 79       		.byte	(.L114-.L106)/2
 1334 0020 79       		.byte	(.L114-.L106)/2
 1335 0021 79       		.byte	(.L114-.L106)/2
 1336 0022 79       		.byte	(.L114-.L106)/2
 1337 0023 79       		.byte	(.L114-.L106)/2
 1338 0024 79       		.byte	(.L114-.L106)/2
 1339 0025 79       		.byte	(.L114-.L106)/2
 1340 0026 79       		.byte	(.L114-.L106)/2
 1341 0027 79       		.byte	(.L114-.L106)/2
 1342 0028 79       		.byte	(.L114-.L106)/2
 1343 0029 79       		.byte	(.L114-.L106)/2
 1344 002a 38       		.byte	(.L105-.L106)/2
 1345 002b 00       		.p2align 1
 1346              	.L110:
 1347 002c 0020     		movs	r0, #0
 1348              	.LVL149:
 1349              		.loc 1 725 5 is_stmt 0 view .LVU399
 1350 002e 7047     		bx	lr
 1351              	.LVL150:
 1352              	.L109:
 726:Lib/ssc/src/objdef.c ****     {
 727:Lib/ssc/src/objdef.c ****     case SYNCTYPE_FREERUN:
 728:Lib/ssc/src/objdef.c ****         return 0; //free run sync mode is always accepted
 729:Lib/ssc/src/objdef.c ****         break;
 1353              		.loc 1 729 9 is_stmt 1 view .LVU400
 730:Lib/ssc/src/objdef.c **** 
 731:Lib/ssc/src/objdef.c ****     case SYNCTYPE_SM_SYNCHRON:
 732:Lib/ssc/src/objdef.c ****         if ((index == 0x1C32) 
 1354              		.loc 1 732 9 view .LVU401
 1355              		.loc 1 732 12 is_stmt 0 view .LVU402
 1356 0030 41F63243 		movw	r3, #7218
 1357 0034 9842     		cmp	r0, r3
 1358 0036 05D0     		beq	.L129
ARM GAS  /tmp/ccHv31r6.s 			page 42


 1359              	.L111:
 733:Lib/ssc/src/objdef.c ****             && (nPdOutputSize > 0) 
 734:Lib/ssc/src/objdef.c ****             && ((sSyncManOutPar.u16SyncTypesSupported & SYNCTYPE_SYNCHRONSUPP) > 0))
 735:Lib/ssc/src/objdef.c ****         {
 736:Lib/ssc/src/objdef.c ****             /*SyncManager sync mode is supported and output process data is configured*/
 737:Lib/ssc/src/objdef.c ****             return 0;
 738:Lib/ssc/src/objdef.c ****         }
 739:Lib/ssc/src/objdef.c ****         else
 740:Lib/ssc/src/objdef.c ****         if ((index == 0x1C33) 
 1360              		.loc 1 740 9 is_stmt 1 view .LVU403
 1361              		.loc 1 740 12 is_stmt 0 view .LVU404
 1362 0038 41F63343 		movw	r3, #7219
 1363 003c 9842     		cmp	r0, r3
 1364 003e 0CD0     		beq	.L130
 741:Lib/ssc/src/objdef.c ****             && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_SYNCHRONSUPP) > 0)
 742:Lib/ssc/src/objdef.c ****             && (nPdOutputSize == 0) 
 743:Lib/ssc/src/objdef.c ****             && (nPdInputSize > 0))
 744:Lib/ssc/src/objdef.c ****             {
 745:Lib/ssc/src/objdef.c ****                 /*SyncManager sync mode is supported and input only shall be configured*/
 746:Lib/ssc/src/objdef.c ****                 return 0;
 747:Lib/ssc/src/objdef.c ****             }
 748:Lib/ssc/src/objdef.c ****         break;
 749:Lib/ssc/src/objdef.c **** 
 750:Lib/ssc/src/objdef.c ****     case SYNCTYPE_SM2_SYNCHRON:
 751:Lib/ssc/src/objdef.c ****         if ((index == 0x1C33) 
 752:Lib/ssc/src/objdef.c ****             && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_SYNCHRONSUPP) > 0)
 753:Lib/ssc/src/objdef.c ****             && (nPdOutputSize > 0))
 754:Lib/ssc/src/objdef.c ****             {
 755:Lib/ssc/src/objdef.c ****                 /*SyncManager sync mode is supported and outputs are defined*/
 756:Lib/ssc/src/objdef.c ****                 return 0;
 757:Lib/ssc/src/objdef.c ****             }
 758:Lib/ssc/src/objdef.c ****         break;
 759:Lib/ssc/src/objdef.c **** 
 760:Lib/ssc/src/objdef.c ****     case SYNCTYPE_DCSYNC0:
 761:Lib/ssc/src/objdef.c ****         if ((index == 0x1C32) && ((sSyncManOutPar.u16SyncTypesSupported & SYNCTYPE_DCSYNC0SUPP) > 0
 762:Lib/ssc/src/objdef.c ****         {
 763:Lib/ssc/src/objdef.c ****             return 0;
 764:Lib/ssc/src/objdef.c ****         }
 765:Lib/ssc/src/objdef.c ****         else
 766:Lib/ssc/src/objdef.c ****         if ((index == 0x1C33) && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_DCSYNC0SUPP) > 0)
 767:Lib/ssc/src/objdef.c ****         {
 768:Lib/ssc/src/objdef.c ****             return 0;
 769:Lib/ssc/src/objdef.c ****         }
 770:Lib/ssc/src/objdef.c ****         break;
 771:Lib/ssc/src/objdef.c **** 
 772:Lib/ssc/src/objdef.c ****     case SYNCTYPE_DCSYNC1:
 773:Lib/ssc/src/objdef.c ****         if ((index == 0x1C32) && ((sSyncManOutPar.u16SyncTypesSupported & SYNCTYPE_DCSYNC1SUPP) > 0
 774:Lib/ssc/src/objdef.c ****         {
 775:Lib/ssc/src/objdef.c ****             return 0;
 776:Lib/ssc/src/objdef.c ****         }
 777:Lib/ssc/src/objdef.c ****         else
 778:Lib/ssc/src/objdef.c ****         if ((index == 0x1C33) && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_DCSYNC1SUPP) > 0)
 779:Lib/ssc/src/objdef.c ****         {
 780:Lib/ssc/src/objdef.c ****             return 0;
 781:Lib/ssc/src/objdef.c ****         }
 782:Lib/ssc/src/objdef.c ****         break;
 783:Lib/ssc/src/objdef.c ****     } //switch 
ARM GAS  /tmp/ccHv31r6.s 			page 43


 784:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) ESM7*/
 785:Lib/ssc/src/objdef.c ****     return ABORTIDX_VALUE_EXCEEDED;
 1365              		.loc 1 785 12 view .LVU405
 1366 0040 1220     		movs	r0, #18
 1367              	.LVL151:
 1368              		.loc 1 785 12 view .LVU406
 1369 0042 7047     		bx	lr
 1370              	.LVL152:
 1371              	.L129:
 733:Lib/ssc/src/objdef.c ****             && (nPdOutputSize > 0) 
 1372              		.loc 1 733 31 view .LVU407
 1373 0044 354B     		ldr	r3, .L136
 1374 0046 1B88     		ldrh	r3, [r3]
 733:Lib/ssc/src/objdef.c ****             && (nPdOutputSize > 0) 
 1375              		.loc 1 733 13 view .LVU408
 1376 0048 002B     		cmp	r3, #0
 1377 004a F5D0     		beq	.L111
 734:Lib/ssc/src/objdef.c ****         {
 1378              		.loc 1 734 32 view .LVU409
 1379 004c 344B     		ldr	r3, .L136+4
 1380 004e 9B89     		ldrh	r3, [r3, #12]
 734:Lib/ssc/src/objdef.c ****         {
 1381              		.loc 1 734 13 view .LVU410
 1382 0050 13F0020F 		tst	r3, #2
 1383 0054 F0D0     		beq	.L111
 737:Lib/ssc/src/objdef.c ****         }
 1384              		.loc 1 737 20 view .LVU411
 1385 0056 0020     		movs	r0, #0
 1386              	.LVL153:
 737:Lib/ssc/src/objdef.c ****         }
 1387              		.loc 1 737 20 view .LVU412
 1388 0058 7047     		bx	lr
 1389              	.LVL154:
 1390              	.L130:
 741:Lib/ssc/src/objdef.c ****             && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_SYNCHRONSUPP) > 0)
 1391              		.loc 1 741 31 view .LVU413
 1392 005a 324B     		ldr	r3, .L136+8
 1393 005c 9B89     		ldrh	r3, [r3, #12]
 741:Lib/ssc/src/objdef.c ****             && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_SYNCHRONSUPP) > 0)
 1394              		.loc 1 741 13 view .LVU414
 1395 005e 13F0020F 		tst	r3, #2
 1396 0062 4CD0     		beq	.L117
 742:Lib/ssc/src/objdef.c ****             && (nPdInputSize > 0))
 1397              		.loc 1 742 31 view .LVU415
 1398 0064 2D4B     		ldr	r3, .L136
 1399 0066 1B88     		ldrh	r3, [r3]
 742:Lib/ssc/src/objdef.c ****             && (nPdInputSize > 0))
 1400              		.loc 1 742 13 view .LVU416
 1401 0068 002B     		cmp	r3, #0
 1402 006a 4AD1     		bne	.L118
 743:Lib/ssc/src/objdef.c ****             {
 1403              		.loc 1 743 30 view .LVU417
 1404 006c 2E4B     		ldr	r3, .L136+12
 1405 006e 1B88     		ldrh	r3, [r3]
 743:Lib/ssc/src/objdef.c ****             {
 1406              		.loc 1 743 13 view .LVU418
 1407 0070 002B     		cmp	r3, #0
ARM GAS  /tmp/ccHv31r6.s 			page 44


 1408 0072 48D1     		bne	.L119
 1409              		.loc 1 785 12 view .LVU419
 1410 0074 1220     		movs	r0, #18
 1411              	.LVL155:
 1412              		.loc 1 785 12 view .LVU420
 1413 0076 7047     		bx	lr
 1414              	.LVL156:
 1415              	.L105:
 751:Lib/ssc/src/objdef.c ****             && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_SYNCHRONSUPP) > 0)
 1416              		.loc 1 751 9 is_stmt 1 view .LVU421
 751:Lib/ssc/src/objdef.c ****             && ((sSyncManInPar.u16SyncTypesSupported & SYNCTYPE_SYNCHRONSUPP) > 0)
 1417              		.loc 1 751 12 is_stmt 0 view .LVU422
 1418 0078 41F63343 		movw	r3, #7219
 1419 007c 9842     		cmp	r0, r3
 1420 007e 01D0     		beq	.L131
 1421              		.loc 1 785 12 view .LVU423
 1422 0080 1220     		movs	r0, #18
 1423              	.LVL157:
 1424              		.loc 1 785 12 view .LVU424
 1425 0082 7047     		bx	lr
 1426              	.LVL158:
 1427              	.L131:
 752:Lib/ssc/src/objdef.c ****             && (nPdOutputSize > 0))
 1428              		.loc 1 752 31 view .LVU425
 1429 0084 274B     		ldr	r3, .L136+8
 1430 0086 9B89     		ldrh	r3, [r3, #12]
 752:Lib/ssc/src/objdef.c ****             && (nPdOutputSize > 0))
 1431              		.loc 1 752 13 view .LVU426
 1432 0088 13F0020F 		tst	r3, #2
 1433 008c 3DD0     		beq	.L121
 753:Lib/ssc/src/objdef.c ****             {
 1434              		.loc 1 753 31 view .LVU427
 1435 008e 234B     		ldr	r3, .L136
 1436 0090 1B88     		ldrh	r3, [r3]
 753:Lib/ssc/src/objdef.c ****             {
 1437              		.loc 1 753 13 view .LVU428
 1438 0092 002B     		cmp	r3, #0
 1439 0094 3BD1     		bne	.L122
 1440              		.loc 1 785 12 view .LVU429
 1441 0096 1220     		movs	r0, #18
 1442              	.LVL159:
 1443              		.loc 1 785 12 view .LVU430
 1444 0098 7047     		bx	lr
 1445              	.LVL160:
 1446              	.L108:
 761:Lib/ssc/src/objdef.c ****         {
 1447              		.loc 1 761 9 is_stmt 1 view .LVU431
 761:Lib/ssc/src/objdef.c ****         {
 1448              		.loc 1 761 12 is_stmt 0 view .LVU432
 1449 009a 41F63243 		movw	r3, #7218
 1450 009e 9842     		cmp	r0, r3
 1451 00a0 05D0     		beq	.L132
 1452              	.L112:
 766:Lib/ssc/src/objdef.c ****         {
 1453              		.loc 1 766 9 is_stmt 1 view .LVU433
 766:Lib/ssc/src/objdef.c ****         {
 1454              		.loc 1 766 12 is_stmt 0 view .LVU434
ARM GAS  /tmp/ccHv31r6.s 			page 45


 1455 00a2 41F63343 		movw	r3, #7219
 1456 00a6 9842     		cmp	r0, r3
 1457 00a8 08D0     		beq	.L133
 1458              		.loc 1 785 12 view .LVU435
 1459 00aa 1220     		movs	r0, #18
 1460              	.LVL161:
 1461              		.loc 1 785 12 view .LVU436
 1462 00ac 7047     		bx	lr
 1463              	.LVL162:
 1464              	.L132:
 761:Lib/ssc/src/objdef.c ****         {
 1465              		.loc 1 761 50 discriminator 1 view .LVU437
 1466 00ae 1C4B     		ldr	r3, .L136+4
 1467 00b0 9B89     		ldrh	r3, [r3, #12]
 761:Lib/ssc/src/objdef.c ****         {
 1468              		.loc 1 761 31 discriminator 1 view .LVU438
 1469 00b2 13F0040F 		tst	r3, #4
 1470 00b6 F4D0     		beq	.L112
 763:Lib/ssc/src/objdef.c ****         }
 1471              		.loc 1 763 20 view .LVU439
 1472 00b8 0020     		movs	r0, #0
 1473              	.LVL163:
 763:Lib/ssc/src/objdef.c ****         }
 1474              		.loc 1 763 20 view .LVU440
 1475 00ba 7047     		bx	lr
 1476              	.LVL164:
 1477              	.L133:
 766:Lib/ssc/src/objdef.c ****         {
 1478              		.loc 1 766 49 discriminator 1 view .LVU441
 1479 00bc 194B     		ldr	r3, .L136+8
 1480 00be 9B89     		ldrh	r3, [r3, #12]
 766:Lib/ssc/src/objdef.c ****         {
 1481              		.loc 1 766 31 discriminator 1 view .LVU442
 1482 00c0 13F0040F 		tst	r3, #4
 1483 00c4 25D1     		bne	.L125
 1484              		.loc 1 785 12 view .LVU443
 1485 00c6 1220     		movs	r0, #18
 1486              	.LVL165:
 1487              		.loc 1 785 12 view .LVU444
 1488 00c8 7047     		bx	lr
 1489              	.LVL166:
 1490              	.L107:
 773:Lib/ssc/src/objdef.c ****         {
 1491              		.loc 1 773 9 is_stmt 1 view .LVU445
 773:Lib/ssc/src/objdef.c ****         {
 1492              		.loc 1 773 12 is_stmt 0 view .LVU446
 1493 00ca 41F63243 		movw	r3, #7218
 1494 00ce 9842     		cmp	r0, r3
 1495 00d0 05D0     		beq	.L134
 1496              	.L113:
 778:Lib/ssc/src/objdef.c ****         {
 1497              		.loc 1 778 9 is_stmt 1 view .LVU447
 778:Lib/ssc/src/objdef.c ****         {
 1498              		.loc 1 778 12 is_stmt 0 view .LVU448
 1499 00d2 41F63343 		movw	r3, #7219
 1500 00d6 9842     		cmp	r0, r3
 1501 00d8 08D0     		beq	.L135
ARM GAS  /tmp/ccHv31r6.s 			page 46


 1502              		.loc 1 785 12 view .LVU449
 1503 00da 1220     		movs	r0, #18
 1504              	.LVL167:
 1505              		.loc 1 785 12 view .LVU450
 1506 00dc 7047     		bx	lr
 1507              	.LVL168:
 1508              	.L134:
 773:Lib/ssc/src/objdef.c ****         {
 1509              		.loc 1 773 50 discriminator 1 view .LVU451
 1510 00de 104B     		ldr	r3, .L136+4
 1511 00e0 9B89     		ldrh	r3, [r3, #12]
 773:Lib/ssc/src/objdef.c ****         {
 1512              		.loc 1 773 31 discriminator 1 view .LVU452
 1513 00e2 13F0080F 		tst	r3, #8
 1514 00e6 F4D0     		beq	.L113
 775:Lib/ssc/src/objdef.c ****         }
 1515              		.loc 1 775 20 view .LVU453
 1516 00e8 0020     		movs	r0, #0
 1517              	.LVL169:
 775:Lib/ssc/src/objdef.c ****         }
 1518              		.loc 1 775 20 view .LVU454
 1519 00ea 7047     		bx	lr
 1520              	.LVL170:
 1521              	.L135:
 778:Lib/ssc/src/objdef.c ****         {
 1522              		.loc 1 778 49 discriminator 1 view .LVU455
 1523 00ec 0D4B     		ldr	r3, .L136+8
 1524 00ee 9B89     		ldrh	r3, [r3, #12]
 778:Lib/ssc/src/objdef.c ****         {
 1525              		.loc 1 778 31 discriminator 1 view .LVU456
 1526 00f0 13F0080F 		tst	r3, #8
 1527 00f4 0FD1     		bne	.L128
 1528              		.loc 1 785 12 view .LVU457
 1529 00f6 1220     		movs	r0, #18
 1530              	.LVL171:
 1531              		.loc 1 785 12 view .LVU458
 1532 00f8 7047     		bx	lr
 1533              	.LVL172:
 1534              	.L114:
 1535              		.loc 1 785 12 view .LVU459
 1536 00fa 1220     		movs	r0, #18
 1537              	.LVL173:
 1538              		.loc 1 785 12 view .LVU460
 1539 00fc 7047     		bx	lr
 1540              	.LVL174:
 1541              	.L117:
 1542              		.loc 1 785 12 view .LVU461
 1543 00fe 1220     		movs	r0, #18
 1544              	.LVL175:
 1545              		.loc 1 785 12 view .LVU462
 1546 0100 7047     		bx	lr
 1547              	.LVL176:
 1548              	.L118:
 1549              		.loc 1 785 12 view .LVU463
 1550 0102 1220     		movs	r0, #18
 1551              	.LVL177:
 1552              		.loc 1 785 12 view .LVU464
ARM GAS  /tmp/ccHv31r6.s 			page 47


 1553 0104 7047     		bx	lr
 1554              	.LVL178:
 1555              	.L119:
 746:Lib/ssc/src/objdef.c ****             }
 1556              		.loc 1 746 24 view .LVU465
 1557 0106 0020     		movs	r0, #0
 1558              	.LVL179:
 746:Lib/ssc/src/objdef.c ****             }
 1559              		.loc 1 746 24 view .LVU466
 1560 0108 7047     		bx	lr
 1561              	.LVL180:
 1562              	.L121:
 1563              		.loc 1 785 12 view .LVU467
 1564 010a 1220     		movs	r0, #18
 1565              	.LVL181:
 1566              		.loc 1 785 12 view .LVU468
 1567 010c 7047     		bx	lr
 1568              	.LVL182:
 1569              	.L122:
 756:Lib/ssc/src/objdef.c ****             }
 1570              		.loc 1 756 24 view .LVU469
 1571 010e 0020     		movs	r0, #0
 1572              	.LVL183:
 756:Lib/ssc/src/objdef.c ****             }
 1573              		.loc 1 756 24 view .LVU470
 1574 0110 7047     		bx	lr
 1575              	.LVL184:
 1576              	.L125:
 768:Lib/ssc/src/objdef.c ****         }
 1577              		.loc 1 768 20 view .LVU471
 1578 0112 0020     		movs	r0, #0
 1579              	.LVL185:
 768:Lib/ssc/src/objdef.c ****         }
 1580              		.loc 1 768 20 view .LVU472
 1581 0114 7047     		bx	lr
 1582              	.LVL186:
 1583              	.L128:
 780:Lib/ssc/src/objdef.c ****         }
 1584              		.loc 1 780 20 view .LVU473
 1585 0116 0020     		movs	r0, #0
 1586              	.LVL187:
 786:Lib/ssc/src/objdef.c **** 
 787:Lib/ssc/src/objdef.c **** }
 1587              		.loc 1 787 1 view .LVU474
 1588 0118 7047     		bx	lr
 1589              	.L137:
 1590 011a 00BF     		.align	2
 1591              	.L136:
 1592 011c 00000000 		.word	nPdOutputSize
 1593 0120 00000000 		.word	.LANCHOR1
 1594 0124 00000000 		.word	.LANCHOR2
 1595 0128 00000000 		.word	nPdInputSize
 1596              		.cfi_endproc
 1597              	.LFE143:
 1599              		.section	.text.OBJ_Read,"ax",%progbits
 1600              		.align	1
 1601              		.global	OBJ_Read
ARM GAS  /tmp/ccHv31r6.s 			page 48


 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1606              	OBJ_Read:
 1607              	.LVL188:
 1608              	.LFB144:
 788:Lib/ssc/src/objdef.c **** 
 789:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
 790:Lib/ssc/src/objdef.c **** /**
 791:Lib/ssc/src/objdef.c ****  \param     index                 index of the requested object.
 792:Lib/ssc/src/objdef.c ****  \param     subindex                subindex of the requested object.
 793:Lib/ssc/src/objdef.c ****  \param    objSize                Size of the object, returned by the function OBJ_GetObjectLength
 794:Lib/ssc/src/objdef.c ****                                      which was called before
 795:Lib/ssc/src/objdef.c ****  \param     pObjEntry            handle to the dictionary object returned by
 796:Lib/ssc/src/objdef.c ****                                      OBJ_GetObjectHandle which was called before
 797:Lib/ssc/src/objdef.c ****  \param    pData                    Pointer to the buffer where the read data shall be copied to
 798:Lib/ssc/src/objdef.c ****  \param    bCompleteAccess    Indicates if a complete read of all subindices of the
 799:Lib/ssc/src/objdef.c ****                                      object shall be done or not
 800:Lib/ssc/src/objdef.c **** 
 801:Lib/ssc/src/objdef.c ****  \return    result of the read operation (0 (success) or an abort code (ABORTIDX_.... defined in
 802:Lib/ssc/src/objdef.c ****             sdosrv.h))
 803:Lib/ssc/src/objdef.c **** 
 804:Lib/ssc/src/objdef.c ****  \brief    This function reads the requested object
 805:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
 806:Lib/ssc/src/objdef.c **** 
 807:Lib/ssc/src/objdef.c **** UINT8 OBJ_Read( UINT16 index, UINT8 subindex, UINT32 objSize, OBJCONST TOBJECT OBJMEM * pObjEntry, 
 808:Lib/ssc/src/objdef.c **** {
 1609              		.loc 1 808 1 is_stmt 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 8, pretend = 0, frame = 32
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              		.loc 1 808 1 is_stmt 0 view .LVU476
 1614 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1615              		.cfi_def_cfa_offset 36
 1616              		.cfi_offset 4, -36
 1617              		.cfi_offset 5, -32
 1618              		.cfi_offset 6, -28
 1619              		.cfi_offset 7, -24
 1620              		.cfi_offset 8, -20
 1621              		.cfi_offset 9, -16
 1622              		.cfi_offset 10, -12
 1623              		.cfi_offset 11, -8
 1624              		.cfi_offset 14, -4
 1625 0004 8BB0     		sub	sp, sp, #44
 1626              		.cfi_def_cfa_offset 80
 1627 0006 0490     		str	r0, [sp, #16]
 1628 0008 0791     		str	r1, [sp, #28]
 1629 000a 1446     		mov	r4, r2
 1630 000c 1F46     		mov	r7, r3
 1631 000e 149E     		ldr	r6, [sp, #80]
 1632 0010 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 1633              	.LVL189:
 1634              		.loc 1 808 1 view .LVU477
 1635 0014 0393     		str	r3, [sp, #12]
 809:Lib/ssc/src/objdef.c ****     UINT16 i = subindex;
 1636              		.loc 1 809 5 is_stmt 1 view .LVU478
 1637              		.loc 1 809 12 is_stmt 0 view .LVU479
ARM GAS  /tmp/ccHv31r6.s 			page 49


 1638 0016 1FFA81FB 		uxth	fp, r1
 1639              	.LVL190:
 810:Lib/ssc/src/objdef.c ****     /* get the information of ObjCode and MaxSubindex in local variables to support different types
 811:Lib/ssc/src/objdef.c ****     UINT8 objCode = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT;
 1640              		.loc 1 811 5 is_stmt 1 view .LVU480
 1641              		.loc 1 811 40 is_stmt 0 view .LVU481
 1642 001a BB89     		ldrh	r3, [r7, #12]
 1643              		.loc 1 811 11 view .LVU482
 1644 001c C3F30322 		ubfx	r2, r3, #8, #4
 1645              	.LVL191:
 1646              		.loc 1 811 11 view .LVU483
 1647 0020 0992     		str	r2, [sp, #36]
 1648              	.LVL192:
 812:Lib/ssc/src/objdef.c ****     UINT16 maxSubindex = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_MAXSUBINDEXMASK) >> OBJFLAGS_MAXSU
 1649              		.loc 1 812 5 is_stmt 1 view .LVU484
 1650              		.loc 1 812 12 is_stmt 0 view .LVU485
 1651 0022 DBB2     		uxtb	r3, r3
 1652 0024 0893     		str	r3, [sp, #32]
 1653              	.LVL193:
 813:Lib/ssc/src/objdef.c ****     OBJCONST TSDOINFOENTRYDESC OBJMEM *pEntry;
 1654              		.loc 1 813 5 is_stmt 1 view .LVU486
 814:Lib/ssc/src/objdef.c ****     /* lastSubindex is used for complete access to make loop over the requested entries
 815:Lib/ssc/src/objdef.c ****     to be read, we initialize this variable with the requested subindex that only
 816:Lib/ssc/src/objdef.c ****     one loop will be done for a single access */
 817:Lib/ssc/src/objdef.c ****     UINT16 lastSubindex = subindex;
 1655              		.loc 1 817 5 view .LVU487
 818:Lib/ssc/src/objdef.c **** 
 819:Lib/ssc/src/objdef.c ****     if ( objCode != OBJCODE_VAR && index >= 0x1000 )
 1656              		.loc 1 819 5 view .LVU488
 1657              		.loc 1 819 8 is_stmt 0 view .LVU489
 1658 0026 072A     		cmp	r2, #7
 1659 0028 05D0     		beq	.L139
 1660              		.loc 1 819 33 discriminator 1 view .LVU490
 1661 002a B0F5805F 		cmp	r0, #4096
 1662 002e 02D3     		bcc	.L139
 820:Lib/ssc/src/objdef.c ****     {
 821:Lib/ssc/src/objdef.c ****         /* if the object is an array or record we have to get the maxSubindex from the
 822:Lib/ssc/src/objdef.c ****         actual value of subindex 0, which is stored as UINT16 at the beginning of the
 823:Lib/ssc/src/objdef.c ****         object's variable */
 824:Lib/ssc/src/objdef.c ****         maxSubindex = (*((UINT16 *) (pObjEntry->pVarPtr))) & 0x00FF;
 1663              		.loc 1 824 9 is_stmt 1 view .LVU491
 1664              		.loc 1 824 47 is_stmt 0 view .LVU492
 1665 0030 BB69     		ldr	r3, [r7, #24]
 1666              		.loc 1 824 21 view .LVU493
 1667 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1668 0034 0893     		str	r3, [sp, #32]
 1669              	.LVL194:
 1670              	.L139:
 825:Lib/ssc/src/objdef.c **** 
 826:Lib/ssc/src/objdef.c ****     }
 827:Lib/ssc/src/objdef.c **** 
 828:Lib/ssc/src/objdef.c ****     if ( bCompleteAccess )
 1671              		.loc 1 828 5 is_stmt 1 view .LVU494
 1672              		.loc 1 828 8 is_stmt 0 view .LVU495
 1673 0036 039B     		ldr	r3, [sp, #12]
 1674 0038 ABB1     		cbz	r3, .L140
 829:Lib/ssc/src/objdef.c ****     {
ARM GAS  /tmp/ccHv31r6.s 			page 50


 830:Lib/ssc/src/objdef.c ****         if ( objCode == OBJCODE_VAR || index < 0x1000 )
 1675              		.loc 1 830 9 is_stmt 1 view .LVU496
 1676              		.loc 1 830 12 is_stmt 0 view .LVU497
 1677 003a 099B     		ldr	r3, [sp, #36]
 1678 003c 072B     		cmp	r3, #7
 1679 003e 00F0E781 		beq	.L174
 1680              		.loc 1 830 37 discriminator 1 view .LVU498
 1681 0042 049B     		ldr	r3, [sp, #16]
 1682 0044 B3F5805F 		cmp	r3, #4096
 1683 0048 C0F0E581 		bcc	.L175
 831:Lib/ssc/src/objdef.c ****         {
 832:Lib/ssc/src/objdef.c ****             /* complete access is not supported with simple objects or ENUM descriptions */
 833:Lib/ssc/src/objdef.c ****             return ABORTIDX_UNSUPPORTED_ACCESS;
 834:Lib/ssc/src/objdef.c ****         }
 835:Lib/ssc/src/objdef.c **** 
 836:Lib/ssc/src/objdef.c ****         /* we read until the maximum subindex */
 837:Lib/ssc/src/objdef.c ****         lastSubindex = maxSubindex;
 1684              		.loc 1 837 22 view .LVU499
 1685 004c 089B     		ldr	r3, [sp, #32]
 1686 004e 0293     		str	r3, [sp, #8]
 1687              	.LVL195:
 1688              	.L142:
 838:Lib/ssc/src/objdef.c ****     }
 839:Lib/ssc/src/objdef.c ****     else
 840:Lib/ssc/src/objdef.c ****         if ( subindex > maxSubindex )
 841:Lib/ssc/src/objdef.c ****         {
 842:Lib/ssc/src/objdef.c ****             /* the maximum subindex is reached */
 843:Lib/ssc/src/objdef.c ****             return ABORTIDX_SUBINDEX_NOT_EXISTING;
 844:Lib/ssc/src/objdef.c ****         }
 845:Lib/ssc/src/objdef.c ****         else
 846:Lib/ssc/src/objdef.c ****         {
 847:Lib/ssc/src/objdef.c ****             /* get the corresponding entry description */
 848:Lib/ssc/src/objdef.c ****             pEntry = OBJ_GetEntryDesc(pObjEntry, (UINT8)i);
 849:Lib/ssc/src/objdef.c **** 
 850:Lib/ssc/src/objdef.c ****             /*Check access only for non-align entries*/
 851:Lib/ssc/src/objdef.c ****             if(pEntry->ObjAccess != 0x0)
 852:Lib/ssc/src/objdef.c ****             {
 853:Lib/ssc/src/objdef.c ****                 /* check if we have read access (bits 0-2 (PREOP, SAFEOP, OP) of ObjAccess)
 854:Lib/ssc/src/objdef.c ****                 by comparing with the actual state (bits 1-3 (PREOP, SAFEOP, OP) of AL Status) */
 855:Lib/ssc/src/objdef.c ****                 if ( ((UINT8) ((pEntry->ObjAccess & ACCESS_READ)<<1)) < (nAlStatus & STATE_MASK) )
 856:Lib/ssc/src/objdef.c ****                 {
 857:Lib/ssc/src/objdef.c ****                     /* we don't have read access */
 858:Lib/ssc/src/objdef.c ****                     if ( (pEntry->ObjAccess & ACCESS_READ) == 0 )
 859:Lib/ssc/src/objdef.c ****                     {
 860:Lib/ssc/src/objdef.c ****                         /* it is a write only entry */
 861:Lib/ssc/src/objdef.c ****                         return ABORTIDX_WRITE_ONLY_ENTRY;
 862:Lib/ssc/src/objdef.c ****                     }
 863:Lib/ssc/src/objdef.c ****                     else
 864:Lib/ssc/src/objdef.c ****                     {
 865:Lib/ssc/src/objdef.c ****                         /* we don't have read access in this state */
 866:Lib/ssc/src/objdef.c ****                         return ABORTIDX_IN_THIS_STATE_DATA_CANNOT_BE_READ_OR_STORED;
 867:Lib/ssc/src/objdef.c ****                     }
 868:Lib/ssc/src/objdef.c ****                 }
 869:Lib/ssc/src/objdef.c ****             }
 870:Lib/ssc/src/objdef.c ****         }
 871:Lib/ssc/src/objdef.c ****         if ( pObjEntry->Read != NULL )
 1689              		.loc 1 871 9 is_stmt 1 view .LVU500
ARM GAS  /tmp/ccHv31r6.s 			page 51


 1690              		.loc 1 871 23 is_stmt 0 view .LVU501
 1691 0050 FD69     		ldr	r5, [r7, #28]
 1692              		.loc 1 871 12 view .LVU502
 1693 0052 4DB3     		cbz	r5, .L143
 872:Lib/ssc/src/objdef.c ****         {
 873:Lib/ssc/src/objdef.c ****             /* Read function is defined, we call the object specific read function */
 874:Lib/ssc/src/objdef.c ****             return pObjEntry->Read(index, subindex, objSize, pData, bCompleteAccess);
 1694              		.loc 1 874 13 is_stmt 1 view .LVU503
 1695              		.loc 1 874 20 is_stmt 0 view .LVU504
 1696 0054 039B     		ldr	r3, [sp, #12]
 1697 0056 0093     		str	r3, [sp]
 1698 0058 3346     		mov	r3, r6
 1699 005a 2246     		mov	r2, r4
 1700 005c 0799     		ldr	r1, [sp, #28]
 1701 005e 0498     		ldr	r0, [sp, #16]
 1702 0060 A847     		blx	r5
 1703              	.LVL196:
 1704 0062 0590     		str	r0, [sp, #20]
 1705 0064 E8E1     		b	.L141
 1706              	.LVL197:
 1707              	.L140:
 840:Lib/ssc/src/objdef.c ****         {
 1708              		.loc 1 840 9 is_stmt 1 view .LVU505
 840:Lib/ssc/src/objdef.c ****         {
 1709              		.loc 1 840 12 is_stmt 0 view .LVU506
 1710 0066 089B     		ldr	r3, [sp, #32]
 1711 0068 5B45     		cmp	r3, fp
 1712 006a C0F0D781 		bcc	.L176
 848:Lib/ssc/src/objdef.c **** 
 1713              		.loc 1 848 13 is_stmt 1 view .LVU507
 848:Lib/ssc/src/objdef.c **** 
 1714              		.loc 1 848 22 is_stmt 0 view .LVU508
 1715 006e 0799     		ldr	r1, [sp, #28]
 1716              	.LVL198:
 848:Lib/ssc/src/objdef.c **** 
 1717              		.loc 1 848 22 view .LVU509
 1718 0070 3846     		mov	r0, r7
 1719              	.LVL199:
 848:Lib/ssc/src/objdef.c **** 
 1720              		.loc 1 848 22 view .LVU510
 1721 0072 FFF7FEFF 		bl	OBJ_GetEntryDesc
 1722              	.LVL200:
 851:Lib/ssc/src/objdef.c ****             {
 1723              		.loc 1 851 13 is_stmt 1 view .LVU511
 851:Lib/ssc/src/objdef.c ****             {
 1724              		.loc 1 851 22 is_stmt 0 view .LVU512
 1725 0076 8288     		ldrh	r2, [r0, #4]
 851:Lib/ssc/src/objdef.c ****             {
 1726              		.loc 1 851 15 view .LVU513
 1727 0078 82B1     		cbz	r2, .L177
 855:Lib/ssc/src/objdef.c ****                 {
 1728              		.loc 1 855 17 is_stmt 1 view .LVU514
 855:Lib/ssc/src/objdef.c ****                 {
 1729              		.loc 1 855 51 is_stmt 0 view .LVU515
 1730 007a D3B2     		uxtb	r3, r2
 855:Lib/ssc/src/objdef.c ****                 {
 1731              		.loc 1 855 65 view .LVU516
ARM GAS  /tmp/ccHv31r6.s 			page 52


 1732 007c 5B00     		lsls	r3, r3, #1
 855:Lib/ssc/src/objdef.c ****                 {
 1733              		.loc 1 855 84 view .LVU517
 1734 007e A249     		ldr	r1, .L200
 1735 0080 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 855:Lib/ssc/src/objdef.c ****                 {
 1736              		.loc 1 855 20 view .LVU518
 1737 0082 03F00E03 		and	r3, r3, #14
 1738 0086 01F00F01 		and	r1, r1, #15
 1739 008a 8B42     		cmp	r3, r1
 1740 008c 09D2     		bcs	.L178
 858:Lib/ssc/src/objdef.c ****                     {
 1741              		.loc 1 858 21 is_stmt 1 view .LVU519
 858:Lib/ssc/src/objdef.c ****                     {
 1742              		.loc 1 858 24 is_stmt 0 view .LVU520
 1743 008e 12F0070F 		tst	r2, #7
 1744 0092 40F0C681 		bne	.L179
 861:Lib/ssc/src/objdef.c ****                     }
 1745              		.loc 1 861 32 view .LVU521
 1746 0096 0623     		movs	r3, #6
 1747 0098 0593     		str	r3, [sp, #20]
 1748 009a CDE1     		b	.L141
 1749              	.L177:
 817:Lib/ssc/src/objdef.c **** 
 1750              		.loc 1 817 12 view .LVU522
 1751 009c CDF808B0 		str	fp, [sp, #8]
 1752 00a0 D6E7     		b	.L142
 1753              	.L178:
 1754 00a2 CDF808B0 		str	fp, [sp, #8]
 1755 00a6 D3E7     		b	.L142
 1756              	.LVL201:
 1757              	.L143:
 875:Lib/ssc/src/objdef.c ****         }
 876:Lib/ssc/src/objdef.c ****         else if ( index < 0x1000 && subindex != 0 )
 1758              		.loc 1 876 14 is_stmt 1 view .LVU523
 1759              		.loc 1 876 17 is_stmt 0 view .LVU524
 1760 00a8 049B     		ldr	r3, [sp, #16]
 1761 00aa B3F5805F 		cmp	r3, #4096
 1762 00ae 80F09D81 		bcs	.L180
 1763              		.loc 1 876 34 discriminator 1 view .LVU525
 1764 00b2 079D     		ldr	r5, [sp, #28]
 1765 00b4 002D     		cmp	r5, #0
 1766 00b6 00F0A081 		beq	.L181
 1767              	.LBB18:
 877:Lib/ssc/src/objdef.c ****         {
 878:Lib/ssc/src/objdef.c ****             /* an ENUM description is read */
 879:Lib/ssc/src/objdef.c ****             UINT16 size;
 1768              		.loc 1 879 13 is_stmt 1 view .LVU526
 880:Lib/ssc/src/objdef.c ****             UINT16 MBXMEM *pVarPtr = (UINT16 MBXMEM *) pObjEntry->pVarPtr;
 1769              		.loc 1 880 13 view .LVU527
 1770              		.loc 1 880 28 is_stmt 0 view .LVU528
 1771 00ba BC69     		ldr	r4, [r7, #24]
 1772              	.LVL202:
 881:Lib/ssc/src/objdef.c ****             CHAR **p;
 1773              		.loc 1 881 13 is_stmt 1 view .LVU529
 882:Lib/ssc/src/objdef.c **** 
 883:Lib/ssc/src/objdef.c ****             /* we get the corresponding entry description */
ARM GAS  /tmp/ccHv31r6.s 			page 53


 884:Lib/ssc/src/objdef.c ****             pEntry = OBJ_GetEntryDesc(pObjEntry, subindex);
 1774              		.loc 1 884 13 view .LVU530
 1775              		.loc 1 884 22 is_stmt 0 view .LVU531
 1776 00bc 2946     		mov	r1, r5
 1777 00be 3846     		mov	r0, r7
 1778 00c0 FFF7FEFF 		bl	OBJ_GetEntryDesc
 1779              	.LVL203:
 885:Lib/ssc/src/objdef.c ****             size = BIT2BYTE(pEntry->BitLength);
 1780              		.loc 1 885 13 is_stmt 1 view .LVU532
 1781              		.loc 1 885 20 is_stmt 0 view .LVU533
 1782 00c4 4088     		ldrh	r0, [r0, #2]
 1783              	.LVL204:
 1784              		.loc 1 885 20 view .LVU534
 1785 00c6 0730     		adds	r0, r0, #7
 1786 00c8 C210     		asrs	r2, r0, #3
 1787              		.loc 1 885 18 view .LVU535
 1788 00ca C008     		lsrs	r0, r0, #3
 1789              	.LVL205:
 886:Lib/ssc/src/objdef.c **** 
 887:Lib/ssc/src/objdef.c ****             p = (CHAR **) pVarPtr;
 1790              		.loc 1 887 13 is_stmt 1 view .LVU536
 888:Lib/ssc/src/objdef.c ****             pVarPtr = (UINT16 MBXMEM *)p[subindex-1];
 1791              		.loc 1 888 13 view .LVU537
 1792              		.loc 1 888 41 is_stmt 0 view .LVU538
 1793 00cc 05F18043 		add	r3, r5, #1073741824
 1794 00d0 013B     		subs	r3, r3, #1
 1795              		.loc 1 888 21 view .LVU539
 1796 00d2 54F82310 		ldr	r1, [r4, r3, lsl #2]
 1797              	.LVL206:
 889:Lib/ssc/src/objdef.c **** 
 890:Lib/ssc/src/objdef.c ****             if((((UINT16)pVarPtr) & 0x1) == 0x1)
 1798              		.loc 1 890 13 is_stmt 1 view .LVU540
 1799              		.loc 1 890 15 is_stmt 0 view .LVU541
 1800 00d6 11F0010F 		tst	r1, #1
 1801 00da 22D0     		beq	.L145
 1802              	.LBB19:
 891:Lib/ssc/src/objdef.c ****             {
 892:Lib/ssc/src/objdef.c ****                 /*enum is stored at an odd address*/
 893:Lib/ssc/src/objdef.c ****                 UINT16 cnt = 0;
 1803              		.loc 1 893 17 is_stmt 1 view .LVU542
 1804              	.LVL207:
 894:Lib/ssc/src/objdef.c **** 
 895:Lib/ssc/src/objdef.c ****                 //get last even WORD address
 896:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO3*/
 897:Lib/ssc/src/objdef.c ****                 pVarPtr = (UINT16 MBXMEM *)(((MEM_ADDR)pVarPtr)& ~(MEM_ADDR)0x1);
 1805              		.loc 1 897 17 view .LVU543
 1806              		.loc 1 897 64 is_stmt 0 view .LVU544
 1807 00dc 21F00101 		bic	r1, r1, #1
 1808              	.LVL208:
 1809              		.loc 1 897 64 view .LVU545
 1810 00e0 0904     		lsls	r1, r1, #16
 1811 00e2 090C     		lsrs	r1, r1, #16
 1812              	.LVL209:
 898:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO3*/
 899:Lib/ssc/src/objdef.c **** 
 900:Lib/ssc/src/objdef.c ****                 for(cnt = 0; cnt < (size / 2);cnt++)
 1813              		.loc 1 900 17 is_stmt 1 view .LVU546
ARM GAS  /tmp/ccHv31r6.s 			page 54


 1814              		.loc 1 900 25 is_stmt 0 view .LVU547
 1815 00e4 0022     		movs	r2, #0
 1816              		.loc 1 900 17 view .LVU548
 1817 00e6 0AE0     		b	.L146
 1818              	.LVL210:
 1819              	.L147:
 901:Lib/ssc/src/objdef.c ****                 {
 902:Lib/ssc/src/objdef.c ****                     //clear destination buffer
 903:Lib/ssc/src/objdef.c ****                     pData[0] = (pVarPtr[0] & 0xFF00) >> 8;
 1820              		.loc 1 903 21 is_stmt 1 discriminator 3 view .LVU549
 1821              		.loc 1 903 40 is_stmt 0 discriminator 3 view .LVU550
 1822 00e8 0B88     		ldrh	r3, [r1]
 1823              		.loc 1 903 54 discriminator 3 view .LVU551
 1824 00ea 1B0A     		lsrs	r3, r3, #8
 1825              		.loc 1 903 30 discriminator 3 view .LVU552
 1826 00ec 3380     		strh	r3, [r6]	@ movhi
 904:Lib/ssc/src/objdef.c ****                     pData[0] |= (pVarPtr[1] & 0xFF) << 8;
 1827              		.loc 1 904 21 is_stmt 1 discriminator 3 view .LVU553
 1828              		.loc 1 904 41 is_stmt 0 discriminator 3 view .LVU554
 1829 00ee 31F8024F 		ldrh	r4, [r1, #2]!
 1830              	.LVL211:
 1831              		.loc 1 904 30 discriminator 3 view .LVU555
 1832 00f2 43EA0423 		orr	r3, r3, r4, lsl #8
 1833 00f6 26F8023B 		strh	r3, [r6], #2	@ movhi
 1834              	.LVL212:
 905:Lib/ssc/src/objdef.c **** 
 906:Lib/ssc/src/objdef.c ****                     pData++;
 1835              		.loc 1 906 21 is_stmt 1 discriminator 3 view .LVU556
 907:Lib/ssc/src/objdef.c ****                     pVarPtr++;
 1836              		.loc 1 907 21 discriminator 3 view .LVU557
 900:Lib/ssc/src/objdef.c ****                 {
 1837              		.loc 1 900 47 discriminator 3 view .LVU558
 900:Lib/ssc/src/objdef.c ****                 {
 1838              		.loc 1 900 50 is_stmt 0 discriminator 3 view .LVU559
 1839 00fa 0132     		adds	r2, r2, #1
 1840              	.LVL213:
 900:Lib/ssc/src/objdef.c ****                 {
 1841              		.loc 1 900 50 discriminator 3 view .LVU560
 1842 00fc 92B2     		uxth	r2, r2
 1843              	.LVL214:
 1844              	.L146:
 900:Lib/ssc/src/objdef.c ****                 {
 1845              		.loc 1 900 30 is_stmt 1 discriminator 1 view .LVU561
 900:Lib/ssc/src/objdef.c ****                 {
 1846              		.loc 1 900 17 is_stmt 0 discriminator 1 view .LVU562
 1847 00fe B2EB500F 		cmp	r2, r0, lsr #1
 1848 0102 F1D3     		bcc	.L147
 908:Lib/ssc/src/objdef.c ****                 }
 909:Lib/ssc/src/objdef.c **** 
 910:Lib/ssc/src/objdef.c ****                 if((size % 2) == 1)
 1849              		.loc 1 910 17 is_stmt 1 view .LVU563
 1850              		.loc 1 910 19 is_stmt 0 view .LVU564
 1851 0104 10F0010F 		tst	r0, #1
 1852 0108 00F08E81 		beq	.L182
 911:Lib/ssc/src/objdef.c ****                 {
 912:Lib/ssc/src/objdef.c ****                     pData[0] &= 0xFF00; //Clear last Byte
 1853              		.loc 1 912 21 is_stmt 1 view .LVU565
ARM GAS  /tmp/ccHv31r6.s 			page 55


 1854              		.loc 1 912 30 is_stmt 0 view .LVU566
 1855 010c 3388     		ldrh	r3, [r6]
 1856 010e 03F47F43 		and	r3, r3, #65280
 1857 0112 3380     		strh	r3, [r6]	@ movhi
 913:Lib/ssc/src/objdef.c ****                     pData[0] |= (pVarPtr[0] & 0xFF00) >> 8; //Write last byte
 1858              		.loc 1 913 21 is_stmt 1 view .LVU567
 1859              		.loc 1 913 41 is_stmt 0 view .LVU568
 1860 0114 0A88     		ldrh	r2, [r1]
 1861              	.LVL215:
 1862              		.loc 1 913 30 view .LVU569
 1863 0116 43EA1223 		orr	r3, r3, r2, lsr #8
 1864 011a 3380     		strh	r3, [r6]	@ movhi
 1865              	.LBE19:
 1866              	.LBE18:
 914:Lib/ssc/src/objdef.c ****                 }
 915:Lib/ssc/src/objdef.c ****             }
 916:Lib/ssc/src/objdef.c ****             else
 917:Lib/ssc/src/objdef.c ****             {
 918:Lib/ssc/src/objdef.c ****             // Get enum value (first 32Bit)
 919:Lib/ssc/src/objdef.c ****             pData[0] = pVarPtr[0];
 920:Lib/ssc/src/objdef.c ****             pData[1] = pVarPtr[1];
 921:Lib/ssc/src/objdef.c ****             pData += 2;
 922:Lib/ssc/src/objdef.c ****             pVarPtr += 2;
 923:Lib/ssc/src/objdef.c **** 
 924:Lib/ssc/src/objdef.c ****             // Get enum description
 925:Lib/ssc/src/objdef.c ****             OBJTOMBXSTRCPY(pData,pVarPtr,size-4);
 926:Lib/ssc/src/objdef.c ****             }
 927:Lib/ssc/src/objdef.c ****         }
 928:Lib/ssc/src/objdef.c ****         else
 929:Lib/ssc/src/objdef.c ****         {
 930:Lib/ssc/src/objdef.c ****             UINT8 bRead = 0x0;
 931:Lib/ssc/src/objdef.c ****             UINT8 result = 0;
 932:Lib/ssc/src/objdef.c **** 
 933:Lib/ssc/src/objdef.c **** 
 934:Lib/ssc/src/objdef.c ****             /* a variable object is read */
 935:Lib/ssc/src/objdef.c ****             for (i = subindex; i <= lastSubindex; i++)
 936:Lib/ssc/src/objdef.c ****             {
 937:Lib/ssc/src/objdef.c ****                 /* if only a single entry is requested, this loop will only be done once */
 938:Lib/ssc/src/objdef.c ****                 UINT16 MBXMEM *pVarPtr = (UINT16 MBXMEM *) pObjEntry->pVarPtr;
 939:Lib/ssc/src/objdef.c ****                 UINT16 bitOffset = 0;
 940:Lib/ssc/src/objdef.c **** 
 941:Lib/ssc/src/objdef.c ****                 if (i == 0)
 942:Lib/ssc/src/objdef.c ****                 {
 943:Lib/ssc/src/objdef.c ****                     /* subindex 0 is requested, the entry's data is at the beginning of the object'
 944:Lib/ssc/src/objdef.c ****                 }
 945:Lib/ssc/src/objdef.c ****                 else if ( index >= 0x1000 )
 946:Lib/ssc/src/objdef.c ****                 {
 947:Lib/ssc/src/objdef.c ****                     /* subindex 1-n of an variable object is requested, we get the offset of the va
 948:Lib/ssc/src/objdef.c ****                     bitOffset = OBJ_GetEntryOffset((UINT8)i, pObjEntry);
 949:Lib/ssc/src/objdef.c ****                 }
 950:Lib/ssc/src/objdef.c **** 
 951:Lib/ssc/src/objdef.c ****                 /* we increment the variable pointer to the corresponding word address */
 952:Lib/ssc/src/objdef.c ****                 pVarPtr += (bitOffset >> 4);
 953:Lib/ssc/src/objdef.c **** 
 954:Lib/ssc/src/objdef.c ****                 /* get the corresponding entry description */
 955:Lib/ssc/src/objdef.c ****                 pEntry = OBJ_GetEntryDesc(pObjEntry, (UINT8)i);
 956:Lib/ssc/src/objdef.c **** 
ARM GAS  /tmp/ccHv31r6.s 			page 56


 957:Lib/ssc/src/objdef.c ****                 if ( ((UINT8) ((pEntry->ObjAccess & ACCESS_READ)<<1)) >= (nAlStatus & STATE_MASK) )
 958:Lib/ssc/src/objdef.c ****                 {
 959:Lib/ssc/src/objdef.c ****                     if ( i == subindex                                     /* requested entry */
 960:Lib/ssc/src/objdef.c ****                         || (bCompleteAccess && i >= subindex) )       /* complete access and entry 
 961:Lib/ssc/src/objdef.c ****                     {
 962:Lib/ssc/src/objdef.c ****                         UINT16 bitMask;
 963:Lib/ssc/src/objdef.c **** 
 964:Lib/ssc/src/objdef.c ****                         /* we have to copy the entry */
 965:Lib/ssc/src/objdef.c ****                         if ( i == 0 && objCode != OBJCODE_VAR )
 966:Lib/ssc/src/objdef.c ****                         {
 967:Lib/ssc/src/objdef.c ****                             /* we read subindex 0 of an array or record */
 968:Lib/ssc/src/objdef.c ****                             {
 969:Lib/ssc/src/objdef.c ****                                 pData[0] = SWAPWORD((UINT16)maxSubindex);
 970:Lib/ssc/src/objdef.c ****                             }
 971:Lib/ssc/src/objdef.c **** 
 972:Lib/ssc/src/objdef.c ****                             /* we increment the destination pointer by 2 because the subindex 0 wil
 973:Lib/ssc/src/objdef.c ****                             transmitted as UINT16 for a complete access */
 974:Lib/ssc/src/objdef.c ****                             pData++;
 975:Lib/ssc/src/objdef.c ****                         }
 976:Lib/ssc/src/objdef.c ****                         else
 977:Lib/ssc/src/objdef.c ****                         {
 978:Lib/ssc/src/objdef.c ****                             UINT16 dataType = pEntry->DataType;
 979:Lib/ssc/src/objdef.c ****                             if (pEntry->DataType >= 0x700)
 980:Lib/ssc/src/objdef.c ****                             {
 981:Lib/ssc/src/objdef.c ****                                 /* the ENUM data types are defined from index 0x700 in this example
 982:Lib/ssc/src/objdef.c ****                                 convert in standard data type for the read access */
 983:Lib/ssc/src/objdef.c ****                                 if ( pEntry->BitLength <= 8 )
 984:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
 985:Lib/ssc/src/objdef.c ****                                 else if ( pEntry->BitLength == 16 )
 986:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_UNSIGNED16;
 987:Lib/ssc/src/objdef.c ****                                 else if ( pEntry->BitLength == 32 )
 988:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_UNSIGNED32;
 989:Lib/ssc/src/objdef.c ****                             }
 990:Lib/ssc/src/objdef.c **** 
 991:Lib/ssc/src/objdef.c ****                             switch (dataType)
 992:Lib/ssc/src/objdef.c ****                             {
 993:Lib/ssc/src/objdef.c ****                             case DEFTYPE_NULL:
 994:Lib/ssc/src/objdef.c ****                                 if(bCompleteAccess)
 995:Lib/ssc/src/objdef.c ****                                 {
 996:Lib/ssc/src/objdef.c ****                                     /*Handle alignment entry*/
 997:Lib/ssc/src/objdef.c ****                                     if (((pEntry->BitLength & 0xF) > 0)
 998:Lib/ssc/src/objdef.c ****                                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 999:Lib/ssc/src/objdef.c ****                                     {
1000:Lib/ssc/src/objdef.c ****                                         /* we have reached the UINT16 border */
1001:Lib/ssc/src/objdef.c ****                                         pData++;
1002:Lib/ssc/src/objdef.c ****                                     }
1003:Lib/ssc/src/objdef.c **** 
1004:Lib/ssc/src/objdef.c ****                                     /*increment WORD offset*/
1005:Lib/ssc/src/objdef.c ****                                     pData += ((pEntry->BitLength & 0xF0) >> 4);
1006:Lib/ssc/src/objdef.c ****                                 }
1007:Lib/ssc/src/objdef.c ****                                 else
1008:Lib/ssc/src/objdef.c ****                                 {
1009:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_DATA_CANNOT_BE_READ_OR_STORED;
1010:Lib/ssc/src/objdef.c ****                                 }
1011:Lib/ssc/src/objdef.c ****                                 break;
1012:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BOOLEAN:
1013:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT1:
ARM GAS  /tmp/ccHv31r6.s 			page 57


1014:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT2:
1015:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT3:
1016:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT4:
1017:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT5:
1018:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT6:
1019:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT7:
1020:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BIT8:
1021:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BITARR8:
1022:Lib/ssc/src/objdef.c ****                                 /* in this example the objects are defined in that way,
1023:Lib/ssc/src/objdef.c ****                                 that the bit types are always inside a 16-bit field,
1024:Lib/ssc/src/objdef.c ****                                 and they shall not overlap a byte border*/
1025:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_INTEGER8:
1026:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_UNSIGNED8:
1027:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1028:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_BYTE :
1029:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1030:Lib/ssc/src/objdef.c ****                                 {
1031:Lib/ssc/src/objdef.c ****                                     /* depending on the bitOffset we have to copy the Hi or the Lo-
1032:Lib/ssc/src/objdef.c ****                                     UINT16 TmpValue = 0x0000;
1033:Lib/ssc/src/objdef.c **** 
1034:Lib/ssc/src/objdef.c ****                                     bitMask = cBitMask[pEntry->BitLength] << (bitOffset & 0x0F);
1035:Lib/ssc/src/objdef.c **** 
1036:Lib/ssc/src/objdef.c ****                                     /*Swap object data (if required); all masks and offsets are def
1037:Lib/ssc/src/objdef.c ****                                     TmpValue = SWAPWORD(pVarPtr[0]);
1038:Lib/ssc/src/objdef.c **** 
1039:Lib/ssc/src/objdef.c ****                                     /*Clear pData if the first bits within the WORD memory will be 
1040:Lib/ssc/src/objdef.c ****                                     if ((bitOffset & 0x0F) == 0) 
1041:Lib/ssc/src/objdef.c ****                                     {
1042:Lib/ssc/src/objdef.c ****                                         pData[0] = 0;
1043:Lib/ssc/src/objdef.c ****                                     }
1044:Lib/ssc/src/objdef.c **** 
1045:Lib/ssc/src/objdef.c **** /* ECATCHANGE_START(V5.11) SDO7*/
1046:Lib/ssc/src/objdef.c ****                                     pData[0] = SWAPWORD(pData[0]);
1047:Lib/ssc/src/objdef.c **** 
1048:Lib/ssc/src/objdef.c ****                                     if (bCompleteAccess) 
1049:Lib/ssc/src/objdef.c ****                                     {
1050:Lib/ssc/src/objdef.c ****                                         /*shifting is not required for Complete access because the 
1051:Lib/ssc/src/objdef.c ****                                         pData[0] |= TmpValue & bitMask;
1052:Lib/ssc/src/objdef.c ****                                     }
1053:Lib/ssc/src/objdef.c ****                                     else
1054:Lib/ssc/src/objdef.c ****                                     {
1055:Lib/ssc/src/objdef.c ****                                         /*Shift Bits to the beginning of the mailbox memory*/
1056:Lib/ssc/src/objdef.c ****                                         pData[0] |= ((TmpValue & bitMask) >> (bitOffset & 0x0F));
1057:Lib/ssc/src/objdef.c ****                                     }
1058:Lib/ssc/src/objdef.c **** 
1059:Lib/ssc/src/objdef.c ****                                     pData[0] = SWAPWORD(pData[0]);
1060:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) SDO7*/
1061:Lib/ssc/src/objdef.c ****                                     if ( ((bitOffset + pEntry->BitLength) & 0x0F) == 0 )
1062:Lib/ssc/src/objdef.c ****                                     {
1063:Lib/ssc/src/objdef.c ****                                         /* we have reached the UINT16 border */
1064:Lib/ssc/src/objdef.c ****                                         pData++;
1065:Lib/ssc/src/objdef.c ****                                     }
1066:Lib/ssc/src/objdef.c **** 
1067:Lib/ssc/src/objdef.c ****                                 }
1068:Lib/ssc/src/objdef.c ****                                 break;
1069:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_INTEGER16:
1070:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_UNSIGNED16:
ARM GAS  /tmp/ccHv31r6.s 			page 58


1071:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_BITARR16:
1072:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1073:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_WORD:
1074:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1075:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1076:Lib/ssc/src/objdef.c ****                                 if(bitOffset & 0xF)
1077:Lib/ssc/src/objdef.c ****                                 {
1078:Lib/ssc/src/objdef.c ****                                     /* return an error in case of an odd word offset (to support 16
1079:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_UNSUPPORTED_ACCESS;
1080:Lib/ssc/src/objdef.c ****                                 }
1081:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1082:Lib/ssc/src/objdef.c ****                                 /* in this example the objects are defined in that way,
1083:Lib/ssc/src/objdef.c ****                                 that the 16 bit type are always starting at an exact WORD offset */
1084:Lib/ssc/src/objdef.c ****                                 pData[0] = SWAPWORD(pVarPtr[0]);
1085:Lib/ssc/src/objdef.c ****                                 pData++;
1086:Lib/ssc/src/objdef.c ****                                 break;
1087:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_UNSIGNED32:
1088:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_INTEGER32:
1089:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_REAL32:
1090:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_BITARR32:
1091:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1092:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_DWORD:
1093:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1094:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1095:Lib/ssc/src/objdef.c ****                                 if(bitOffset & 0xF)
1096:Lib/ssc/src/objdef.c ****                                 {
1097:Lib/ssc/src/objdef.c ****                                     /* return an error in case of an odd word offset (to support 16
1098:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_UNSUPPORTED_ACCESS;
1099:Lib/ssc/src/objdef.c ****                                 }
1100:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1101:Lib/ssc/src/objdef.c **** 
1102:Lib/ssc/src/objdef.c ****                                 /* in this example the objects are defined in that way,
1103:Lib/ssc/src/objdef.c ****                                 that the 32 bit type are always starting at an exact WORD offset */
1104:Lib/ssc/src/objdef.c ****                                 pData[0] = pVarPtr[0];
1105:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
1106:Lib/ssc/src/objdef.c ****                                 pData += 2;
1107:Lib/ssc/src/objdef.c ****                                 break;
1108:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_REAL64:
1109:Lib/ssc/src/objdef.c ****                             case 	DEFTYPE_INTEGER64:
1110:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_UNSIGNED64:
1111:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1112:Lib/ssc/src/objdef.c ****                                 if(bitOffset & 0xF)
1113:Lib/ssc/src/objdef.c ****                                 {
1114:Lib/ssc/src/objdef.c ****                                     /* return an error in case of an odd word offset (to support 16
1115:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_UNSUPPORTED_ACCESS;
1116:Lib/ssc/src/objdef.c ****                                 }
1117:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1118:Lib/ssc/src/objdef.c **** 
1119:Lib/ssc/src/objdef.c ****                                 /* in this example the objects are defined in that way,
1120:Lib/ssc/src/objdef.c ****                                 that the 64 bit type are always starting at an exact WORD offset */
1121:Lib/ssc/src/objdef.c ****                                 pData[0] = pVarPtr[0];
1122:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
1123:Lib/ssc/src/objdef.c ****                                 pData[2] = pVarPtr[2];
1124:Lib/ssc/src/objdef.c ****                                 pData[3] = pVarPtr[3];
1125:Lib/ssc/src/objdef.c ****                                 pData += 4;
1126:Lib/ssc/src/objdef.c ****                                 break;
1127:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_OCTETSTRING:
ARM GAS  /tmp/ccHv31r6.s 			page 59


1128:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_UNICODE_STRING:
1129:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1130:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_INT :
1131:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_SINT :
1132:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_DINT :
1133:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_UDINT:
1134:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1135:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1136:Lib/ssc/src/objdef.c ****                                 if(bitOffset & 0xF)
1137:Lib/ssc/src/objdef.c ****                                 {
1138:Lib/ssc/src/objdef.c ****                                     /* return an error in case of an odd word offset (to support 16
1139:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_UNSUPPORTED_ACCESS;
1140:Lib/ssc/src/objdef.c ****                                 }
1141:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1142:Lib/ssc/src/objdef.c **** 
1143:Lib/ssc/src/objdef.c ****                                 OBJTOMBXMEMCPY(pData, pVarPtr, BIT2BYTE(pEntry->BitLength));
1144:Lib/ssc/src/objdef.c **** 
1145:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
1146:Lib/ssc/src/objdef.c ****                                 pData += BIT2WORD((pEntry->BitLength & ~0xF));
1147:Lib/ssc/src/objdef.c ****                                 
1148:Lib/ssc/src/objdef.c ****                                 if((pEntry->BitLength & 0xF) != 0)
1149:Lib/ssc/src/objdef.c ****                                 {
1150:Lib/ssc/src/objdef.c ****                                     /*current entry has an odd word length => clear last byte of ne
1151:Lib/ssc/src/objdef.c ****                                     *pData &= 0xFF;
1152:Lib/ssc/src/objdef.c ****                                 }
1153:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
1154:Lib/ssc/src/objdef.c **** 
1155:Lib/ssc/src/objdef.c ****                                 break;
1156:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_VISIBLESTRING:
1157:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1158:Lib/ssc/src/objdef.c ****                                 if(bitOffset & 0xF)
1159:Lib/ssc/src/objdef.c ****                                 {
1160:Lib/ssc/src/objdef.c ****                                     /* return an error in case of an odd word offset (to support 16
1161:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_UNSUPPORTED_ACCESS;
1162:Lib/ssc/src/objdef.c ****                                 }
1163:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1164:Lib/ssc/src/objdef.c **** 
1165:Lib/ssc/src/objdef.c ****                                 /* in this example the objects are defined in that way,
1166:Lib/ssc/src/objdef.c ****                                 that these types are always starting at an even WORD offset */
1167:Lib/ssc/src/objdef.c ****                                 OBJTOMBXSTRCPY(pData, pVarPtr, BIT2BYTE(pEntry->BitLength));
1168:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
1169:Lib/ssc/src/objdef.c ****                                 pData += BIT2WORD((pEntry->BitLength & ~0xF));
1170:Lib/ssc/src/objdef.c **** 
1171:Lib/ssc/src/objdef.c ****                                 if((pEntry->BitLength & 0xF) != 0)
1172:Lib/ssc/src/objdef.c ****                                 {
1173:Lib/ssc/src/objdef.c ****                                     /*current entry has an odd word length => clear last byte of ne
1174:Lib/ssc/src/objdef.c ****                                     *pData &= 0xFF;
1175:Lib/ssc/src/objdef.c ****                                 }
1176:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
1177:Lib/ssc/src/objdef.c ****                                 
1178:Lib/ssc/src/objdef.c ****                                 break;
1179:Lib/ssc/src/objdef.c ****                             default:
1180:Lib/ssc/src/objdef.c ****                                 /* other data types are not supported from this example */
1181:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_DATA_CANNOT_BE_READ_OR_STORED;
1182:Lib/ssc/src/objdef.c ****                             } //switch (deftype)
1183:Lib/ssc/src/objdef.c **** 
1184:Lib/ssc/src/objdef.c ****                             bRead = 1;
ARM GAS  /tmp/ccHv31r6.s 			page 60


1185:Lib/ssc/src/objdef.c ****                         }
1186:Lib/ssc/src/objdef.c ****                     }
1187:Lib/ssc/src/objdef.c ****                 }
1188:Lib/ssc/src/objdef.c ****                 else
1189:Lib/ssc/src/objdef.c ****                 {
1190:Lib/ssc/src/objdef.c ****                     /*No access to current object entry => shift pData if required*/
1191:Lib/ssc/src/objdef.c ****                     UINT8 cnt = 0;
1192:Lib/ssc/src/objdef.c **** 
1193:Lib/ssc/src/objdef.c ****                     /*If this entry is the first in the 16Bit block clear the memory*/
1194:Lib/ssc/src/objdef.c ****                     if ((bitOffset & 0x0F) == 0) 
1195:Lib/ssc/src/objdef.c ****                     {
1196:Lib/ssc/src/objdef.c ****                         *pData = 0;
1197:Lib/ssc/src/objdef.c ****                     }
1198:Lib/ssc/src/objdef.c **** 
1199:Lib/ssc/src/objdef.c ****                     /*Handle Bit/Byte Offset*/
1200:Lib/ssc/src/objdef.c ****                     if (((pEntry->BitLength & 0xF) > 0)
1201:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
1202:Lib/ssc/src/objdef.c ****                     {
1203:Lib/ssc/src/objdef.c ****                         /* we have reached the UINT16 border */
1204:Lib/ssc/src/objdef.c ****                         pData++;
1205:Lib/ssc/src/objdef.c ****                         
1206:Lib/ssc/src/objdef.c ****                         /*Clear new buffer*/
1207:Lib/ssc/src/objdef.c ****                         *pData = 0;
1208:Lib/ssc/src/objdef.c ****                     }
1209:Lib/ssc/src/objdef.c **** 
1210:Lib/ssc/src/objdef.c ****                     /*increment WORD offset*/
1211:Lib/ssc/src/objdef.c ****                     for(cnt = 0; cnt <((pEntry->BitLength & 0xF0) >> 4); cnt++)
1212:Lib/ssc/src/objdef.c ****                     {
1213:Lib/ssc/src/objdef.c ****                         /*current 16Bit are skipped => clear current buffer */
1214:Lib/ssc/src/objdef.c ****                         pData++;
1215:Lib/ssc/src/objdef.c **** 
1216:Lib/ssc/src/objdef.c ****                         /*Clear new buffer*/
1217:Lib/ssc/src/objdef.c ****                         *pData = 0;
1218:Lib/ssc/src/objdef.c ****                     }
1219:Lib/ssc/src/objdef.c **** 
1220:Lib/ssc/src/objdef.c **** 
1221:Lib/ssc/src/objdef.c ****                     
1222:Lib/ssc/src/objdef.c **** 
1223:Lib/ssc/src/objdef.c ****                     /* we don't have read access */
1224:Lib/ssc/src/objdef.c ****                     if ( (pEntry->ObjAccess & ACCESS_READ) == 0 )
1225:Lib/ssc/src/objdef.c ****                     {
1226:Lib/ssc/src/objdef.c ****                         /* it is a write only entry */
1227:Lib/ssc/src/objdef.c ****                         result = ABORTIDX_WRITE_ONLY_ENTRY;
1228:Lib/ssc/src/objdef.c ****                     }
1229:Lib/ssc/src/objdef.c ****                     else
1230:Lib/ssc/src/objdef.c ****                     {
1231:Lib/ssc/src/objdef.c ****                         /* we don't have read access in this state */
1232:Lib/ssc/src/objdef.c ****                         result = ABORTIDX_IN_THIS_STATE_DATA_CANNOT_BE_READ_OR_STORED;
1233:Lib/ssc/src/objdef.c ****                     }
1234:Lib/ssc/src/objdef.c ****                 }
1235:Lib/ssc/src/objdef.c ****             }
1236:Lib/ssc/src/objdef.c **** 
1237:Lib/ssc/src/objdef.c ****             if(bRead == 0)
1238:Lib/ssc/src/objdef.c ****                 return result;
1239:Lib/ssc/src/objdef.c ****         }
1240:Lib/ssc/src/objdef.c **** 
1241:Lib/ssc/src/objdef.c ****     return 0;
ARM GAS  /tmp/ccHv31r6.s 			page 61


 1867              		.loc 1 1241 12 view .LVU570
 1868 011c 0023     		movs	r3, #0
 1869 011e 0593     		str	r3, [sp, #20]
 1870 0120 8AE1     		b	.L141
 1871              	.LVL216:
 1872              	.L145:
 1873              	.LBB20:
 919:Lib/ssc/src/objdef.c ****             pData[1] = pVarPtr[1];
 1874              		.loc 1 919 13 is_stmt 1 view .LVU571
 919:Lib/ssc/src/objdef.c ****             pData[1] = pVarPtr[1];
 1875              		.loc 1 919 31 is_stmt 0 view .LVU572
 1876 0122 0B88     		ldrh	r3, [r1]
 919:Lib/ssc/src/objdef.c ****             pData[1] = pVarPtr[1];
 1877              		.loc 1 919 22 view .LVU573
 1878 0124 3380     		strh	r3, [r6]	@ movhi
 920:Lib/ssc/src/objdef.c ****             pData += 2;
 1879              		.loc 1 920 13 is_stmt 1 view .LVU574
 920:Lib/ssc/src/objdef.c ****             pData += 2;
 1880              		.loc 1 920 22 is_stmt 0 view .LVU575
 1881 0126 4B88     		ldrh	r3, [r1, #2]
 1882 0128 7380     		strh	r3, [r6, #2]	@ movhi
 921:Lib/ssc/src/objdef.c ****             pVarPtr += 2;
 1883              		.loc 1 921 13 is_stmt 1 view .LVU576
 1884              	.LVL217:
 922:Lib/ssc/src/objdef.c **** 
 1885              		.loc 1 922 13 view .LVU577
 925:Lib/ssc/src/objdef.c ****             }
 1886              		.loc 1 925 13 view .LVU578
 1887 012a 043A     		subs	r2, r2, #4
 1888 012c 0431     		adds	r1, r1, #4
 1889              	.LVL218:
 925:Lib/ssc/src/objdef.c ****             }
 1890              		.loc 1 925 13 is_stmt 0 view .LVU579
 1891 012e 301D     		adds	r0, r6, #4
 1892              	.LVL219:
 925:Lib/ssc/src/objdef.c ****             }
 1893              		.loc 1 925 13 view .LVU580
 1894 0130 FFF7FEFF 		bl	memcpy
 1895              	.LVL220:
 925:Lib/ssc/src/objdef.c ****             }
 1896              		.loc 1 925 13 view .LVU581
 1897              	.LBE20:
 1898              		.loc 1 1241 12 view .LVU582
 1899 0134 0023     		movs	r3, #0
 1900 0136 0593     		str	r3, [sp, #20]
 1901 0138 7EE1     		b	.L141
 1902              	.LVL221:
 1903              	.L183:
 1904              	.LBB21:
 1905              	.LBB22:
 939:Lib/ssc/src/objdef.c **** 
 1906              		.loc 1 939 24 view .LVU583
 1907 013a A046     		mov	r8, r4
 1908              	.LVL222:
 1909              	.L148:
 952:Lib/ssc/src/objdef.c **** 
 1910              		.loc 1 952 17 is_stmt 1 view .LVU584
ARM GAS  /tmp/ccHv31r6.s 			page 62


 952:Lib/ssc/src/objdef.c **** 
 1911              		.loc 1 952 39 is_stmt 0 view .LVU585
 1912 013c C8F30F1A 		ubfx	r10, r8, #4, #16
 952:Lib/ssc/src/objdef.c **** 
 1913              		.loc 1 952 25 view .LVU586
 1914 0140 09EB4A0B 		add	fp, r9, r10, lsl #1
 1915              	.LVL223:
 955:Lib/ssc/src/objdef.c **** 
 1916              		.loc 1 955 17 is_stmt 1 view .LVU587
 955:Lib/ssc/src/objdef.c **** 
 1917              		.loc 1 955 26 is_stmt 0 view .LVU588
 1918 0144 E1B2     		uxtb	r1, r4
 1919 0146 3846     		mov	r0, r7
 1920 0148 FFF7FEFF 		bl	OBJ_GetEntryDesc
 1921              	.LVL224:
 1922 014c 0546     		mov	r5, r0
 1923              	.LVL225:
 957:Lib/ssc/src/objdef.c ****                 {
 1924              		.loc 1 957 17 is_stmt 1 view .LVU589
 957:Lib/ssc/src/objdef.c ****                 {
 1925              		.loc 1 957 51 is_stmt 0 view .LVU590
 1926 014e 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 957:Lib/ssc/src/objdef.c ****                 {
 1927              		.loc 1 957 65 view .LVU591
 1928 0150 5B00     		lsls	r3, r3, #1
 957:Lib/ssc/src/objdef.c ****                 {
 1929              		.loc 1 957 85 view .LVU592
 1930 0152 6D4A     		ldr	r2, .L200
 1931 0154 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 957:Lib/ssc/src/objdef.c ****                 {
 1932              		.loc 1 957 20 view .LVU593
 1933 0156 03F00E03 		and	r3, r3, #14
 1934 015a 02F00F02 		and	r2, r2, #15
 1935 015e 9342     		cmp	r3, r2
 1936 0160 C0F00181 		bcc	.L149
 959:Lib/ssc/src/objdef.c ****                         || (bCompleteAccess && i >= subindex) )       /* complete access and entry 
 1937              		.loc 1 959 21 is_stmt 1 view .LVU594
 959:Lib/ssc/src/objdef.c ****                         || (bCompleteAccess && i >= subindex) )       /* complete access and entry 
 1938              		.loc 1 959 24 is_stmt 0 view .LVU595
 1939 0164 069B     		ldr	r3, [sp, #24]
 1940 0166 9C42     		cmp	r4, r3
 1941 0168 06D0     		beq	.L150
 960:Lib/ssc/src/objdef.c ****                     {
 1942              		.loc 1 960 25 view .LVU596
 1943 016a 039A     		ldr	r2, [sp, #12]
 1944 016c 002A     		cmp	r2, #0
 1945 016e 00F01C81 		beq	.L151
 960:Lib/ssc/src/objdef.c ****                     {
 1946              		.loc 1 960 45 discriminator 1 view .LVU597
 1947 0172 9C42     		cmp	r4, r3
 1948 0174 C0F01981 		bcc	.L151
 1949              	.L150:
 1950              	.LBB23:
 962:Lib/ssc/src/objdef.c **** 
 1951              		.loc 1 962 25 is_stmt 1 view .LVU598
 965:Lib/ssc/src/objdef.c ****                         {
 1952              		.loc 1 965 25 view .LVU599
ARM GAS  /tmp/ccHv31r6.s 			page 63


 965:Lib/ssc/src/objdef.c ****                         {
 1953              		.loc 1 965 28 is_stmt 0 view .LVU600
 1954 0178 002C     		cmp	r4, #0
 1955 017a 4BD0     		beq	.L198
 1956              	.L152:
 1957              	.LBB24:
 978:Lib/ssc/src/objdef.c ****                             if (pEntry->DataType >= 0x700)
 1958              		.loc 1 978 29 is_stmt 1 view .LVU601
 978:Lib/ssc/src/objdef.c ****                             if (pEntry->DataType >= 0x700)
 1959              		.loc 1 978 36 is_stmt 0 view .LVU602
 1960 017c 2B88     		ldrh	r3, [r5]
 1961              	.LVL226:
 979:Lib/ssc/src/objdef.c ****                             {
 1962              		.loc 1 979 29 is_stmt 1 view .LVU603
 979:Lib/ssc/src/objdef.c ****                             {
 1963              		.loc 1 979 32 is_stmt 0 view .LVU604
 1964 017e B3F5E06F 		cmp	r3, #1792
 1965 0182 05D3     		bcc	.L153
 983:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
 1966              		.loc 1 983 33 is_stmt 1 view .LVU605
 983:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
 1967              		.loc 1 983 44 is_stmt 0 view .LVU606
 1968 0184 6A88     		ldrh	r2, [r5, #2]
 983:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
 1969              		.loc 1 983 36 view .LVU607
 1970 0186 082A     		cmp	r2, #8
 1971 0188 4BD8     		bhi	.L154
 984:Lib/ssc/src/objdef.c ****                                 else if ( pEntry->BitLength == 16 )
 1972              		.loc 1 984 37 is_stmt 1 view .LVU608
 984:Lib/ssc/src/objdef.c ****                                 else if ( pEntry->BitLength == 16 )
 1973              		.loc 1 984 46 is_stmt 0 view .LVU609
 1974 018a 02F12F03 		add	r3, r2, #47
 1975              	.LVL227:
 984:Lib/ssc/src/objdef.c ****                                 else if ( pEntry->BitLength == 16 )
 1976              		.loc 1 984 46 view .LVU610
 1977 018e 9BB2     		uxth	r3, r3
 1978              	.LVL228:
 1979              	.L153:
 991:Lib/ssc/src/objdef.c ****                             {
 1980              		.loc 1 991 29 is_stmt 1 view .LVU611
 1981 0190 372B     		cmp	r3, #55
 1982 0192 58D8     		bhi	.L157
 991:Lib/ssc/src/objdef.c ****                             {
 1983              		.loc 1 991 29 is_stmt 0 view .LVU612
 1984 0194 372B     		cmp	r3, #55
 1985 0196 00F24A81 		bhi	.L185
 1986 019a DFE813F0 		tbh	[pc, r3, lsl #1]
 1987              	.L159:
 1988 019e 7200     		.2byte	(.L163-.L159)/2
 1989 01a0 8600     		.2byte	(.L158-.L159)/2
 1990 01a2 8600     		.2byte	(.L158-.L159)/2
 1991 01a4 AA00     		.2byte	(.L155-.L159)/2
 1992 01a6 4600     		.2byte	(.L156-.L159)/2
 1993 01a8 8600     		.2byte	(.L158-.L159)/2
 1994 01aa AA00     		.2byte	(.L155-.L159)/2
 1995 01ac 4600     		.2byte	(.L156-.L159)/2
 1996 01ae 4600     		.2byte	(.L156-.L159)/2
ARM GAS  /tmp/ccHv31r6.s 			page 64


 1997 01b0 CD00     		.2byte	(.L162-.L159)/2
 1998 01b2 5A00     		.2byte	(.L161-.L159)/2
 1999 01b4 5A00     		.2byte	(.L161-.L159)/2
 2000 01b6 4801     		.2byte	(.L185-.L159)/2
 2001 01b8 4801     		.2byte	(.L185-.L159)/2
 2002 01ba 4801     		.2byte	(.L185-.L159)/2
 2003 01bc 4801     		.2byte	(.L185-.L159)/2
 2004 01be 4801     		.2byte	(.L185-.L159)/2
 2005 01c0 B900     		.2byte	(.L160-.L159)/2
 2006 01c2 4801     		.2byte	(.L185-.L159)/2
 2007 01c4 4801     		.2byte	(.L185-.L159)/2
 2008 01c6 4801     		.2byte	(.L185-.L159)/2
 2009 01c8 B900     		.2byte	(.L160-.L159)/2
 2010 01ca 4801     		.2byte	(.L185-.L159)/2
 2011 01cc 4801     		.2byte	(.L185-.L159)/2
 2012 01ce 4801     		.2byte	(.L185-.L159)/2
 2013 01d0 4801     		.2byte	(.L185-.L159)/2
 2014 01d2 4801     		.2byte	(.L185-.L159)/2
 2015 01d4 B900     		.2byte	(.L160-.L159)/2
 2016 01d6 4801     		.2byte	(.L185-.L159)/2
 2017 01d8 4801     		.2byte	(.L185-.L159)/2
 2018 01da 8600     		.2byte	(.L158-.L159)/2
 2019 01dc AA00     		.2byte	(.L155-.L159)/2
 2020 01de 4600     		.2byte	(.L156-.L159)/2
 2021 01e0 4801     		.2byte	(.L185-.L159)/2
 2022 01e2 4801     		.2byte	(.L185-.L159)/2
 2023 01e4 4801     		.2byte	(.L185-.L159)/2
 2024 01e6 4801     		.2byte	(.L185-.L159)/2
 2025 01e8 4801     		.2byte	(.L185-.L159)/2
 2026 01ea 4801     		.2byte	(.L185-.L159)/2
 2027 01ec 4801     		.2byte	(.L185-.L159)/2
 2028 01ee 4801     		.2byte	(.L185-.L159)/2
 2029 01f0 4801     		.2byte	(.L185-.L159)/2
 2030 01f2 4801     		.2byte	(.L185-.L159)/2
 2031 01f4 4801     		.2byte	(.L185-.L159)/2
 2032 01f6 4801     		.2byte	(.L185-.L159)/2
 2033 01f8 8600     		.2byte	(.L158-.L159)/2
 2034 01fa AA00     		.2byte	(.L155-.L159)/2
 2035 01fc 4600     		.2byte	(.L156-.L159)/2
 2036 01fe 8600     		.2byte	(.L158-.L159)/2
 2037 0200 8600     		.2byte	(.L158-.L159)/2
 2038 0202 8600     		.2byte	(.L158-.L159)/2
 2039 0204 8600     		.2byte	(.L158-.L159)/2
 2040 0206 8600     		.2byte	(.L158-.L159)/2
 2041 0208 8600     		.2byte	(.L158-.L159)/2
 2042 020a 8600     		.2byte	(.L158-.L159)/2
 2043 020c 8600     		.2byte	(.L158-.L159)/2
 2044              	.LVL229:
 2045              		.p2align 1
 2046              	.L184:
 991:Lib/ssc/src/objdef.c ****                             {
 2047              		.loc 1 991 29 view .LVU613
 2048              	.LBE24:
 2049              	.LBE23:
 939:Lib/ssc/src/objdef.c **** 
 2050              		.loc 1 939 24 view .LVU614
 2051 020e 4FF00008 		mov	r8, #0
ARM GAS  /tmp/ccHv31r6.s 			page 65


 2052 0212 93E7     		b	.L148
 2053              	.LVL230:
 2054              	.L198:
 2055              	.LBB31:
 965:Lib/ssc/src/objdef.c ****                         {
 2056              		.loc 1 965 37 discriminator 1 view .LVU615
 2057 0214 099B     		ldr	r3, [sp, #36]
 2058 0216 072B     		cmp	r3, #7
 2059 0218 B0D0     		beq	.L152
 969:Lib/ssc/src/objdef.c ****                             }
 2060              		.loc 1 969 33 is_stmt 1 view .LVU616
 969:Lib/ssc/src/objdef.c ****                             }
 2061              		.loc 1 969 42 is_stmt 0 view .LVU617
 2062 021a 089B     		ldr	r3, [sp, #32]
 2063 021c 26F8023B 		strh	r3, [r6], #2	@ movhi
 2064              	.LVL231:
 974:Lib/ssc/src/objdef.c ****                         }
 2065              		.loc 1 974 29 is_stmt 1 view .LVU618
 974:Lib/ssc/src/objdef.c ****                         }
 2066              		.loc 1 974 34 is_stmt 0 view .LVU619
 2067 0220 C3E0     		b	.L151
 2068              	.LVL232:
 2069              	.L154:
 2070              	.LBB27:
 985:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_UNSIGNED16;
 2071              		.loc 1 985 38 is_stmt 1 view .LVU620
 985:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_UNSIGNED16;
 2072              		.loc 1 985 41 is_stmt 0 view .LVU621
 2073 0222 102A     		cmp	r2, #16
 2074 0224 65D0     		beq	.L155
 987:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_UNSIGNED32;
 2075              		.loc 1 987 38 is_stmt 1 view .LVU622
 987:Lib/ssc/src/objdef.c ****                                     dataType = DEFTYPE_UNSIGNED32;
 2076              		.loc 1 987 41 is_stmt 0 view .LVU623
 2077 0226 202A     		cmp	r2, #32
 2078 0228 B2D1     		bne	.L153
 2079              	.L156:
 2080              	.LVL233:
1095:Lib/ssc/src/objdef.c ****                                 {
 2081              		.loc 1 1095 33 is_stmt 1 view .LVU624
1095:Lib/ssc/src/objdef.c ****                                 {
 2082              		.loc 1 1095 35 is_stmt 0 view .LVU625
 2083 022a 18F00F0F 		tst	r8, #15
 2084 022e 40F00D81 		bne	.L190
1104:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
 2085              		.loc 1 1104 33 is_stmt 1 view .LVU626
1104:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
 2086              		.loc 1 1104 51 is_stmt 0 view .LVU627
 2087 0232 39F81A30 		ldrh	r3, [r9, r10, lsl #1]
1104:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
 2088              		.loc 1 1104 42 view .LVU628
 2089 0236 3380     		strh	r3, [r6]	@ movhi
1105:Lib/ssc/src/objdef.c ****                                 pData += 2;
 2090              		.loc 1 1105 33 is_stmt 1 view .LVU629
1105:Lib/ssc/src/objdef.c ****                                 pData += 2;
 2091              		.loc 1 1105 42 is_stmt 0 view .LVU630
 2092 0238 BBF80230 		ldrh	r3, [fp, #2]
ARM GAS  /tmp/ccHv31r6.s 			page 66


 2093 023c 7380     		strh	r3, [r6, #2]	@ movhi
1106:Lib/ssc/src/objdef.c ****                                 break;
 2094              		.loc 1 1106 33 is_stmt 1 view .LVU631
1106:Lib/ssc/src/objdef.c ****                                 break;
 2095              		.loc 1 1106 39 is_stmt 0 view .LVU632
 2096 023e 0436     		adds	r6, r6, #4
 2097              	.LVL234:
1107:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_REAL64:
 2098              		.loc 1 1107 33 is_stmt 1 view .LVU633
1184:Lib/ssc/src/objdef.c ****                         }
 2099              		.loc 1 1184 35 is_stmt 0 view .LVU634
 2100 0240 0123     		movs	r3, #1
 2101 0242 0793     		str	r3, [sp, #28]
 2102              	.LVL235:
1107:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_REAL64:
 2103              		.loc 1 1107 33 view .LVU635
 2104 0244 B1E0     		b	.L151
 2105              	.LVL236:
 2106              	.L157:
 991:Lib/ssc/src/objdef.c ****                             {
 2107              		.loc 1 991 29 view .LVU636
 2108 0246 A3F51873 		sub	r3, r3, #608
 2109              	.LVL237:
 991:Lib/ssc/src/objdef.c ****                             {
 2110              		.loc 1 991 29 view .LVU637
 2111 024a 9BB2     		uxth	r3, r3
 2112 024c 032B     		cmp	r3, #3
 2113 024e 00F2F180 		bhi	.L186
 2114              	.L161:
1136:Lib/ssc/src/objdef.c ****                                 {
 2115              		.loc 1 1136 33 is_stmt 1 view .LVU638
1136:Lib/ssc/src/objdef.c ****                                 {
 2116              		.loc 1 1136 35 is_stmt 0 view .LVU639
 2117 0252 18F00F0F 		tst	r8, #15
 2118 0256 40F0FF80 		bne	.L192
1143:Lib/ssc/src/objdef.c **** 
 2119              		.loc 1 1143 33 is_stmt 1 view .LVU640
1143:Lib/ssc/src/objdef.c **** 
 2120              		.loc 1 1143 64 is_stmt 0 view .LVU641
 2121 025a 6A88     		ldrh	r2, [r5, #2]
 2122 025c 0732     		adds	r2, r2, #7
1143:Lib/ssc/src/objdef.c **** 
 2123              		.loc 1 1143 33 view .LVU642
 2124 025e D210     		asrs	r2, r2, #3
 2125 0260 5946     		mov	r1, fp
 2126 0262 3046     		mov	r0, r6
 2127              	.LVL238:
1143:Lib/ssc/src/objdef.c **** 
 2128              		.loc 1 1143 33 view .LVU643
 2129 0264 FFF7FEFF 		bl	memcpy
 2130              	.LVL239:
1146:Lib/ssc/src/objdef.c ****                                 
 2131              		.loc 1 1146 33 is_stmt 1 view .LVU644
1146:Lib/ssc/src/objdef.c ****                                 
 2132              		.loc 1 1146 42 is_stmt 0 view .LVU645
 2133 0268 6B88     		ldrh	r3, [r5, #2]
 2134 026a 1A09     		lsrs	r2, r3, #4
ARM GAS  /tmp/ccHv31r6.s 			page 67


1146:Lib/ssc/src/objdef.c ****                                 
 2135              		.loc 1 1146 39 view .LVU646
 2136 026c 06EB4206 		add	r6, r6, r2, lsl #1
 2137              	.LVL240:
1148:Lib/ssc/src/objdef.c ****                                 {
 2138              		.loc 1 1148 33 is_stmt 1 view .LVU647
1148:Lib/ssc/src/objdef.c ****                                 {
 2139              		.loc 1 1148 35 is_stmt 0 view .LVU648
 2140 0270 13F00F0F 		tst	r3, #15
 2141 0274 00F0B180 		beq	.L193
1151:Lib/ssc/src/objdef.c ****                                 }
 2142              		.loc 1 1151 37 is_stmt 1 view .LVU649
1151:Lib/ssc/src/objdef.c ****                                 }
 2143              		.loc 1 1151 44 is_stmt 0 view .LVU650
 2144 0278 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2145 027a 3380     		strh	r3, [r6]	@ movhi
1184:Lib/ssc/src/objdef.c ****                         }
 2146              		.loc 1 1184 35 view .LVU651
 2147 027c 0123     		movs	r3, #1
 2148 027e 0793     		str	r3, [sp, #28]
 2149              	.LVL241:
1184:Lib/ssc/src/objdef.c ****                         }
 2150              		.loc 1 1184 35 view .LVU652
 2151 0280 93E0     		b	.L151
 2152              	.LVL242:
 2153              	.L163:
 994:Lib/ssc/src/objdef.c ****                                 {
 2154              		.loc 1 994 33 is_stmt 1 view .LVU653
 994:Lib/ssc/src/objdef.c ****                                 {
 2155              		.loc 1 994 35 is_stmt 0 view .LVU654
 2156 0282 039B     		ldr	r3, [sp, #12]
 2157              	.LVL243:
 994:Lib/ssc/src/objdef.c ****                                 {
 2158              		.loc 1 994 35 view .LVU655
 2159 0284 002B     		cmp	r3, #0
 2160 0286 00F0DB80 		beq	.L187
 997:Lib/ssc/src/objdef.c ****                                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 2161              		.loc 1 997 37 is_stmt 1 view .LVU656
 997:Lib/ssc/src/objdef.c ****                                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 2162              		.loc 1 997 49 is_stmt 0 view .LVU657
 2163 028a 6B88     		ldrh	r3, [r5, #2]
 997:Lib/ssc/src/objdef.c ****                                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 2164              		.loc 1 997 40 view .LVU658
 2165 028c 13F00F0F 		tst	r3, #15
 2166 0290 04D0     		beq	.L164
 998:Lib/ssc/src/objdef.c ****                                     {
 2167              		.loc 1 998 78 view .LVU659
 2168 0292 9844     		add	r8, r8, r3
 2169              	.LVL244:
 998:Lib/ssc/src/objdef.c ****                                     {
 2170              		.loc 1 998 41 view .LVU660
 2171 0294 18F00F0F 		tst	r8, #15
 2172 0298 00D1     		bne	.L164
1001:Lib/ssc/src/objdef.c ****                                     }
 2173              		.loc 1 1001 41 is_stmt 1 view .LVU661
1001:Lib/ssc/src/objdef.c ****                                     }
 2174              		.loc 1 1001 46 is_stmt 0 view .LVU662
ARM GAS  /tmp/ccHv31r6.s 			page 68


 2175 029a 0236     		adds	r6, r6, #2
 2176              	.LVL245:
 2177              	.L164:
1005:Lib/ssc/src/objdef.c ****                                 }
 2178              		.loc 1 1005 37 is_stmt 1 view .LVU663
1005:Lib/ssc/src/objdef.c ****                                 }
 2179              		.loc 1 1005 74 is_stmt 0 view .LVU664
 2180 029c C3F30313 		ubfx	r3, r3, #4, #4
1005:Lib/ssc/src/objdef.c ****                                 }
 2181              		.loc 1 1005 43 view .LVU665
 2182 02a0 06EB4306 		add	r6, r6, r3, lsl #1
 2183              	.LVL246:
1011:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BOOLEAN:
 2184              		.loc 1 1011 33 is_stmt 1 view .LVU666
1184:Lib/ssc/src/objdef.c ****                         }
 2185              		.loc 1 1184 35 is_stmt 0 view .LVU667
 2186 02a4 0123     		movs	r3, #1
 2187 02a6 0793     		str	r3, [sp, #28]
 2188              	.LVL247:
1011:Lib/ssc/src/objdef.c ****                             case     DEFTYPE_BOOLEAN:
 2189              		.loc 1 1011 33 view .LVU668
 2190 02a8 7FE0     		b	.L151
 2191              	.LVL248:
 2192              	.L158:
 2193              	.LBB25:
1032:Lib/ssc/src/objdef.c **** 
 2194              		.loc 1 1032 37 is_stmt 1 view .LVU669
1034:Lib/ssc/src/objdef.c **** 
 2195              		.loc 1 1034 37 view .LVU670
1034:Lib/ssc/src/objdef.c **** 
 2196              		.loc 1 1034 62 is_stmt 0 view .LVU671
 2197 02aa 6A88     		ldrh	r2, [r5, #2]
1034:Lib/ssc/src/objdef.c **** 
 2198              		.loc 1 1034 55 view .LVU672
 2199 02ac 174B     		ldr	r3, .L200+4
 2200              	.LVL249:
1034:Lib/ssc/src/objdef.c **** 
 2201              		.loc 1 1034 55 view .LVU673
 2202 02ae 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2203 02b2 08F00F02 		and	r2, r8, #15
1034:Lib/ssc/src/objdef.c **** 
 2204              		.loc 1 1034 75 view .LVU674
 2205 02b6 9340     		lsls	r3, r3, r2
1034:Lib/ssc/src/objdef.c **** 
 2206              		.loc 1 1034 45 view .LVU675
 2207 02b8 1FFA83FC 		uxth	ip, r3
 2208              	.LVL250:
1037:Lib/ssc/src/objdef.c **** 
 2209              		.loc 1 1037 37 is_stmt 1 view .LVU676
1037:Lib/ssc/src/objdef.c **** 
 2210              		.loc 1 1037 46 is_stmt 0 view .LVU677
 2211 02bc 39F81A00 		ldrh	r0, [r9, r10, lsl #1]
 2212              	.LVL251:
1040:Lib/ssc/src/objdef.c ****                                     {
 2213              		.loc 1 1040 37 is_stmt 1 view .LVU678
1040:Lib/ssc/src/objdef.c ****                                     {
 2214              		.loc 1 1040 40 is_stmt 0 view .LVU679
ARM GAS  /tmp/ccHv31r6.s 			page 69


 2215 02c0 0AB9     		cbnz	r2, .L165
1042:Lib/ssc/src/objdef.c ****                                     }
 2216              		.loc 1 1042 41 is_stmt 1 view .LVU680
1042:Lib/ssc/src/objdef.c ****                                     }
 2217              		.loc 1 1042 50 is_stmt 0 view .LVU681
 2218 02c2 0021     		movs	r1, #0
 2219 02c4 3180     		strh	r1, [r6]	@ movhi
 2220              	.L165:
1046:Lib/ssc/src/objdef.c **** 
 2221              		.loc 1 1046 37 is_stmt 1 view .LVU682
1046:Lib/ssc/src/objdef.c **** 
 2222              		.loc 1 1046 48 is_stmt 0 view .LVU683
 2223 02c6 3188     		ldrh	r1, [r6]
1048:Lib/ssc/src/objdef.c ****                                     {
 2224              		.loc 1 1048 37 is_stmt 1 view .LVU684
1048:Lib/ssc/src/objdef.c ****                                     {
 2225              		.loc 1 1048 40 is_stmt 0 view .LVU685
 2226 02c8 039B     		ldr	r3, [sp, #12]
 2227 02ca 63B1     		cbz	r3, .L166
1051:Lib/ssc/src/objdef.c ****                                     }
 2228              		.loc 1 1051 41 is_stmt 1 view .LVU686
1051:Lib/ssc/src/objdef.c ****                                     }
 2229              		.loc 1 1051 50 is_stmt 0 view .LVU687
 2230 02cc 0CEA0003 		and	r3, ip, r0
 2231 02d0 0B43     		orrs	r3, r3, r1
 2232 02d2 3380     		strh	r3, [r6]	@ movhi
 2233              	.L167:
1059:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) SDO7*/
 2234              		.loc 1 1059 37 is_stmt 1 view .LVU688
1061:Lib/ssc/src/objdef.c ****                                     {
 2235              		.loc 1 1061 37 view .LVU689
1061:Lib/ssc/src/objdef.c ****                                     {
 2236              		.loc 1 1061 62 is_stmt 0 view .LVU690
 2237 02d4 6B88     		ldrh	r3, [r5, #2]
1061:Lib/ssc/src/objdef.c ****                                     {
 2238              		.loc 1 1061 75 view .LVU691
 2239 02d6 9844     		add	r8, r8, r3
 2240              	.LVL252:
1061:Lib/ssc/src/objdef.c ****                                     {
 2241              		.loc 1 1061 40 view .LVU692
 2242 02d8 18F00F0F 		tst	r8, #15
 2243 02dc 7AD1     		bne	.L188
1064:Lib/ssc/src/objdef.c ****                                     }
 2244              		.loc 1 1064 41 is_stmt 1 view .LVU693
1064:Lib/ssc/src/objdef.c ****                                     }
 2245              		.loc 1 1064 46 is_stmt 0 view .LVU694
 2246 02de 0236     		adds	r6, r6, #2
 2247              	.LVL253:
1064:Lib/ssc/src/objdef.c ****                                     }
 2248              		.loc 1 1064 46 view .LVU695
 2249              	.LBE25:
1184:Lib/ssc/src/objdef.c ****                         }
 2250              		.loc 1 1184 35 view .LVU696
 2251 02e0 0123     		movs	r3, #1
 2252 02e2 0793     		str	r3, [sp, #28]
 2253              	.LVL254:
1184:Lib/ssc/src/objdef.c ****                         }
ARM GAS  /tmp/ccHv31r6.s 			page 70


 2254              		.loc 1 1184 35 view .LVU697
 2255 02e4 61E0     		b	.L151
 2256              	.LVL255:
 2257              	.L166:
 2258              	.LBB26:
1056:Lib/ssc/src/objdef.c ****                                     }
 2259              		.loc 1 1056 41 is_stmt 1 view .LVU698
1056:Lib/ssc/src/objdef.c ****                                     }
 2260              		.loc 1 1056 64 is_stmt 0 view .LVU699
 2261 02e6 0CEA0003 		and	r3, ip, r0
1056:Lib/ssc/src/objdef.c ****                                     }
 2262              		.loc 1 1056 75 view .LVU700
 2263 02ea 1341     		asrs	r3, r3, r2
1056:Lib/ssc/src/objdef.c ****                                     }
 2264              		.loc 1 1056 50 view .LVU701
 2265 02ec 0B43     		orrs	r3, r3, r1
 2266 02ee 3380     		strh	r3, [r6]	@ movhi
 2267 02f0 F0E7     		b	.L167
 2268              	.LVL256:
 2269              	.L155:
1056:Lib/ssc/src/objdef.c ****                                     }
 2270              		.loc 1 1056 50 view .LVU702
 2271              	.LBE26:
1076:Lib/ssc/src/objdef.c ****                                 {
 2272              		.loc 1 1076 33 is_stmt 1 view .LVU703
1076:Lib/ssc/src/objdef.c ****                                 {
 2273              		.loc 1 1076 35 is_stmt 0 view .LVU704
 2274 02f2 18F00F0F 		tst	r8, #15
 2275 02f6 40F0A680 		bne	.L189
1084:Lib/ssc/src/objdef.c ****                                 pData++;
 2276              		.loc 1 1084 33 is_stmt 1 view .LVU705
1084:Lib/ssc/src/objdef.c ****                                 pData++;
 2277              		.loc 1 1084 44 is_stmt 0 view .LVU706
 2278 02fa 39F81A30 		ldrh	r3, [r9, r10, lsl #1]
1084:Lib/ssc/src/objdef.c ****                                 pData++;
 2279              		.loc 1 1084 42 view .LVU707
 2280 02fe 26F8023B 		strh	r3, [r6], #2	@ movhi
 2281              	.LVL257:
1085:Lib/ssc/src/objdef.c ****                                 break;
 2282              		.loc 1 1085 33 is_stmt 1 view .LVU708
1086:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_UNSIGNED32:
 2283              		.loc 1 1086 33 view .LVU709
1184:Lib/ssc/src/objdef.c ****                         }
 2284              		.loc 1 1184 35 is_stmt 0 view .LVU710
 2285 0302 0123     		movs	r3, #1
 2286 0304 0793     		str	r3, [sp, #28]
 2287              	.LVL258:
1086:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_UNSIGNED32:
 2288              		.loc 1 1086 33 view .LVU711
 2289 0306 50E0     		b	.L151
 2290              	.L201:
 2291              		.align	2
 2292              	.L200:
 2293 0308 00000000 		.word	nAlStatus
 2294 030c 00000000 		.word	.LANCHOR3
 2295              	.LVL259:
 2296              	.L160:
ARM GAS  /tmp/ccHv31r6.s 			page 71


1112:Lib/ssc/src/objdef.c ****                                 {
 2297              		.loc 1 1112 33 is_stmt 1 view .LVU712
1112:Lib/ssc/src/objdef.c ****                                 {
 2298              		.loc 1 1112 35 is_stmt 0 view .LVU713
 2299 0310 18F00F0F 		tst	r8, #15
 2300 0314 40F09D80 		bne	.L191
1121:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
 2301              		.loc 1 1121 33 is_stmt 1 view .LVU714
1121:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
 2302              		.loc 1 1121 51 is_stmt 0 view .LVU715
 2303 0318 39F81A30 		ldrh	r3, [r9, r10, lsl #1]
 2304              	.LVL260:
1121:Lib/ssc/src/objdef.c ****                                 pData[1] = pVarPtr[1];
 2305              		.loc 1 1121 42 view .LVU716
 2306 031c 3380     		strh	r3, [r6]	@ movhi
1122:Lib/ssc/src/objdef.c ****                                 pData[2] = pVarPtr[2];
 2307              		.loc 1 1122 33 is_stmt 1 view .LVU717
1122:Lib/ssc/src/objdef.c ****                                 pData[2] = pVarPtr[2];
 2308              		.loc 1 1122 42 is_stmt 0 view .LVU718
 2309 031e BBF80230 		ldrh	r3, [fp, #2]
 2310 0322 7380     		strh	r3, [r6, #2]	@ movhi
1123:Lib/ssc/src/objdef.c ****                                 pData[3] = pVarPtr[3];
 2311              		.loc 1 1123 33 is_stmt 1 view .LVU719
1123:Lib/ssc/src/objdef.c ****                                 pData[3] = pVarPtr[3];
 2312              		.loc 1 1123 42 is_stmt 0 view .LVU720
 2313 0324 BBF80430 		ldrh	r3, [fp, #4]
 2314 0328 B380     		strh	r3, [r6, #4]	@ movhi
1124:Lib/ssc/src/objdef.c ****                                 pData += 4;
 2315              		.loc 1 1124 33 is_stmt 1 view .LVU721
1124:Lib/ssc/src/objdef.c ****                                 pData += 4;
 2316              		.loc 1 1124 42 is_stmt 0 view .LVU722
 2317 032a BBF80630 		ldrh	r3, [fp, #6]
 2318 032e F380     		strh	r3, [r6, #6]	@ movhi
1125:Lib/ssc/src/objdef.c ****                                 break;
 2319              		.loc 1 1125 33 is_stmt 1 view .LVU723
1125:Lib/ssc/src/objdef.c ****                                 break;
 2320              		.loc 1 1125 39 is_stmt 0 view .LVU724
 2321 0330 0836     		adds	r6, r6, #8
 2322              	.LVL261:
1126:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_OCTETSTRING:
 2323              		.loc 1 1126 33 is_stmt 1 view .LVU725
1184:Lib/ssc/src/objdef.c ****                         }
 2324              		.loc 1 1184 35 is_stmt 0 view .LVU726
 2325 0332 0123     		movs	r3, #1
 2326 0334 0793     		str	r3, [sp, #28]
 2327              	.LVL262:
1126:Lib/ssc/src/objdef.c ****                             case    DEFTYPE_OCTETSTRING:
 2328              		.loc 1 1126 33 view .LVU727
 2329 0336 38E0     		b	.L151
 2330              	.LVL263:
 2331              	.L162:
1158:Lib/ssc/src/objdef.c ****                                 {
 2332              		.loc 1 1158 33 is_stmt 1 view .LVU728
1158:Lib/ssc/src/objdef.c ****                                 {
 2333              		.loc 1 1158 35 is_stmt 0 view .LVU729
 2334 0338 18F00F0F 		tst	r8, #15
 2335 033c 40F08F80 		bne	.L194
ARM GAS  /tmp/ccHv31r6.s 			page 72


1167:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 2336              		.loc 1 1167 33 is_stmt 1 view .LVU730
1167:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 2337              		.loc 1 1167 64 is_stmt 0 view .LVU731
 2338 0340 6A88     		ldrh	r2, [r5, #2]
 2339 0342 0732     		adds	r2, r2, #7
1167:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 2340              		.loc 1 1167 33 view .LVU732
 2341 0344 D210     		asrs	r2, r2, #3
 2342 0346 5946     		mov	r1, fp
 2343 0348 3046     		mov	r0, r6
 2344              	.LVL264:
1167:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 2345              		.loc 1 1167 33 view .LVU733
 2346 034a FFF7FEFF 		bl	memcpy
 2347              	.LVL265:
1169:Lib/ssc/src/objdef.c **** 
 2348              		.loc 1 1169 33 is_stmt 1 view .LVU734
1169:Lib/ssc/src/objdef.c **** 
 2349              		.loc 1 1169 42 is_stmt 0 view .LVU735
 2350 034e 6B88     		ldrh	r3, [r5, #2]
 2351 0350 1A09     		lsrs	r2, r3, #4
1169:Lib/ssc/src/objdef.c **** 
 2352              		.loc 1 1169 39 view .LVU736
 2353 0352 06EB4206 		add	r6, r6, r2, lsl #1
 2354              	.LVL266:
1171:Lib/ssc/src/objdef.c ****                                 {
 2355              		.loc 1 1171 33 is_stmt 1 view .LVU737
1171:Lib/ssc/src/objdef.c ****                                 {
 2356              		.loc 1 1171 35 is_stmt 0 view .LVU738
 2357 0356 13F00F0F 		tst	r3, #15
 2358 035a 41D0     		beq	.L195
1174:Lib/ssc/src/objdef.c ****                                 }
 2359              		.loc 1 1174 37 is_stmt 1 view .LVU739
1174:Lib/ssc/src/objdef.c ****                                 }
 2360              		.loc 1 1174 44 is_stmt 0 view .LVU740
 2361 035c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2362 035e 3380     		strh	r3, [r6]	@ movhi
1184:Lib/ssc/src/objdef.c ****                         }
 2363              		.loc 1 1184 35 view .LVU741
 2364 0360 0123     		movs	r3, #1
 2365 0362 0793     		str	r3, [sp, #28]
 2366              	.LVL267:
1184:Lib/ssc/src/objdef.c ****                         }
 2367              		.loc 1 1184 35 view .LVU742
 2368 0364 21E0     		b	.L151
 2369              	.LVL268:
 2370              	.L149:
1184:Lib/ssc/src/objdef.c ****                         }
 2371              		.loc 1 1184 35 view .LVU743
 2372              	.LBE27:
 2373              	.LBE31:
 2374              	.LBB32:
1191:Lib/ssc/src/objdef.c **** 
 2375              		.loc 1 1191 21 is_stmt 1 view .LVU744
1194:Lib/ssc/src/objdef.c ****                     {
 2376              		.loc 1 1194 21 view .LVU745
ARM GAS  /tmp/ccHv31r6.s 			page 73


1194:Lib/ssc/src/objdef.c ****                     {
 2377              		.loc 1 1194 24 is_stmt 0 view .LVU746
 2378 0366 18F00F0F 		tst	r8, #15
 2379 036a 01D1     		bne	.L168
1196:Lib/ssc/src/objdef.c ****                     }
 2380              		.loc 1 1196 25 is_stmt 1 view .LVU747
1196:Lib/ssc/src/objdef.c ****                     }
 2381              		.loc 1 1196 32 is_stmt 0 view .LVU748
 2382 036c 0023     		movs	r3, #0
 2383 036e 3380     		strh	r3, [r6]	@ movhi
 2384              	.L168:
1200:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 2385              		.loc 1 1200 21 is_stmt 1 view .LVU749
1200:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 2386              		.loc 1 1200 33 is_stmt 0 view .LVU750
 2387 0370 6B88     		ldrh	r3, [r5, #2]
1200:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 2388              		.loc 1 1200 24 view .LVU751
 2389 0372 13F00F0F 		tst	r3, #15
 2390 0376 06D0     		beq	.L169
1201:Lib/ssc/src/objdef.c ****                     {
 2391              		.loc 1 1201 62 view .LVU752
 2392 0378 4344     		add	r3, r3, r8
1201:Lib/ssc/src/objdef.c ****                     {
 2393              		.loc 1 1201 25 view .LVU753
 2394 037a 13F00F0F 		tst	r3, #15
 2395 037e 02D1     		bne	.L169
1204:Lib/ssc/src/objdef.c ****                         
 2396              		.loc 1 1204 25 is_stmt 1 view .LVU754
 2397              	.LVL269:
1207:Lib/ssc/src/objdef.c ****                     }
 2398              		.loc 1 1207 25 view .LVU755
1207:Lib/ssc/src/objdef.c ****                     }
 2399              		.loc 1 1207 32 is_stmt 0 view .LVU756
 2400 0380 0023     		movs	r3, #0
 2401 0382 7380     		strh	r3, [r6, #2]	@ movhi
1204:Lib/ssc/src/objdef.c ****                         
 2402              		.loc 1 1204 30 view .LVU757
 2403 0384 0236     		adds	r6, r6, #2
 2404              	.LVL270:
 2405              	.L169:
1204:Lib/ssc/src/objdef.c ****                         
 2406              		.loc 1 1204 30 discriminator 1 view .LVU758
 2407 0386 0023     		movs	r3, #0
 2408 0388 04E0     		b	.L170
 2409              	.LVL271:
 2410              	.L171:
1214:Lib/ssc/src/objdef.c **** 
 2411              		.loc 1 1214 25 is_stmt 1 discriminator 3 view .LVU759
1217:Lib/ssc/src/objdef.c ****                     }
 2412              		.loc 1 1217 25 discriminator 3 view .LVU760
1217:Lib/ssc/src/objdef.c ****                     }
 2413              		.loc 1 1217 32 is_stmt 0 discriminator 3 view .LVU761
 2414 038a 0022     		movs	r2, #0
 2415 038c 26F8022F 		strh	r2, [r6, #2]!	@ movhi
 2416              	.LVL272:
1211:Lib/ssc/src/objdef.c ****                     {
ARM GAS  /tmp/ccHv31r6.s 			page 74


 2417              		.loc 1 1211 74 is_stmt 1 discriminator 3 view .LVU762
1211:Lib/ssc/src/objdef.c ****                     {
 2418              		.loc 1 1211 77 is_stmt 0 discriminator 3 view .LVU763
 2419 0390 0133     		adds	r3, r3, #1
 2420              	.LVL273:
1211:Lib/ssc/src/objdef.c ****                     {
 2421              		.loc 1 1211 77 discriminator 3 view .LVU764
 2422 0392 DBB2     		uxtb	r3, r3
 2423              	.LVL274:
 2424              	.L170:
1211:Lib/ssc/src/objdef.c ****                     {
 2425              		.loc 1 1211 34 is_stmt 1 discriminator 1 view .LVU765
1211:Lib/ssc/src/objdef.c ****                     {
 2426              		.loc 1 1211 47 is_stmt 0 discriminator 1 view .LVU766
 2427 0394 6A88     		ldrh	r2, [r5, #2]
1211:Lib/ssc/src/objdef.c ****                     {
 2428              		.loc 1 1211 67 discriminator 1 view .LVU767
 2429 0396 C2F30312 		ubfx	r2, r2, #4, #4
1211:Lib/ssc/src/objdef.c ****                     {
 2430              		.loc 1 1211 21 discriminator 1 view .LVU768
 2431 039a 9342     		cmp	r3, r2
 2432 039c F5DB     		blt	.L171
1224:Lib/ssc/src/objdef.c ****                     {
 2433              		.loc 1 1224 21 is_stmt 1 view .LVU769
1224:Lib/ssc/src/objdef.c ****                     {
 2434              		.loc 1 1224 33 is_stmt 0 view .LVU770
 2435 039e AB88     		ldrh	r3, [r5, #4]
 2436              	.LVL275:
1224:Lib/ssc/src/objdef.c ****                     {
 2437              		.loc 1 1224 24 view .LVU771
 2438 03a0 13F0070F 		tst	r3, #7
 2439 03a4 1FD1     		bne	.L196
1227:Lib/ssc/src/objdef.c ****                     }
 2440              		.loc 1 1227 32 view .LVU772
 2441 03a6 0623     		movs	r3, #6
 2442 03a8 0593     		str	r3, [sp, #20]
 2443              	.LVL276:
 2444              	.L151:
1227:Lib/ssc/src/objdef.c ****                     }
 2445              		.loc 1 1227 32 view .LVU773
 2446              	.LBE32:
 2447              	.LBE22:
 935:Lib/ssc/src/objdef.c ****             {
 2448              		.loc 1 935 51 is_stmt 1 discriminator 2 view .LVU774
 935:Lib/ssc/src/objdef.c ****             {
 2449              		.loc 1 935 52 is_stmt 0 discriminator 2 view .LVU775
 2450 03aa 0134     		adds	r4, r4, #1
 2451              	.LVL277:
 935:Lib/ssc/src/objdef.c ****             {
 2452              		.loc 1 935 52 discriminator 2 view .LVU776
 2453 03ac A4B2     		uxth	r4, r4
 2454              	.LVL278:
 2455              	.L172:
 935:Lib/ssc/src/objdef.c ****             {
 2456              		.loc 1 935 32 is_stmt 1 discriminator 1 view .LVU777
 935:Lib/ssc/src/objdef.c ****             {
 2457              		.loc 1 935 13 is_stmt 0 discriminator 1 view .LVU778
ARM GAS  /tmp/ccHv31r6.s 			page 75


 2458 03ae 029B     		ldr	r3, [sp, #8]
 2459 03b0 9C42     		cmp	r4, r3
 2460 03b2 28D8     		bhi	.L199
 2461              	.LBB37:
 938:Lib/ssc/src/objdef.c ****                 UINT16 bitOffset = 0;
 2462              		.loc 1 938 17 is_stmt 1 view .LVU779
 938:Lib/ssc/src/objdef.c ****                 UINT16 bitOffset = 0;
 2463              		.loc 1 938 32 is_stmt 0 view .LVU780
 2464 03b4 D7F81890 		ldr	r9, [r7, #24]
 2465              	.LVL279:
 939:Lib/ssc/src/objdef.c **** 
 2466              		.loc 1 939 17 is_stmt 1 view .LVU781
 941:Lib/ssc/src/objdef.c ****                 {
 2467              		.loc 1 941 17 view .LVU782
 941:Lib/ssc/src/objdef.c ****                 {
 2468              		.loc 1 941 20 is_stmt 0 view .LVU783
 2469 03b8 002C     		cmp	r4, #0
 2470 03ba 3FF4BEAE 		beq	.L183
 945:Lib/ssc/src/objdef.c ****                 {
 2471              		.loc 1 945 22 is_stmt 1 view .LVU784
 945:Lib/ssc/src/objdef.c ****                 {
 2472              		.loc 1 945 25 is_stmt 0 view .LVU785
 2473 03be 049B     		ldr	r3, [sp, #16]
 2474 03c0 B3F5805F 		cmp	r3, #4096
 2475 03c4 FFF423AF 		bcc	.L184
 948:Lib/ssc/src/objdef.c ****                 }
 2476              		.loc 1 948 21 is_stmt 1 view .LVU786
 948:Lib/ssc/src/objdef.c ****                 }
 2477              		.loc 1 948 33 is_stmt 0 view .LVU787
 2478 03c8 3946     		mov	r1, r7
 2479 03ca E0B2     		uxtb	r0, r4
 2480 03cc FFF7FEFF 		bl	OBJ_GetEntryOffset
 2481              	.LVL280:
 2482 03d0 8046     		mov	r8, r0
 2483              	.LVL281:
 948:Lib/ssc/src/objdef.c ****                 }
 2484              		.loc 1 948 33 view .LVU788
 2485 03d2 B3E6     		b	.L148
 2486              	.LVL282:
 2487              	.L188:
 2488              	.LBB33:
 2489              	.LBB28:
1184:Lib/ssc/src/objdef.c ****                         }
 2490              		.loc 1 1184 35 view .LVU789
 2491 03d4 0123     		movs	r3, #1
 2492 03d6 0793     		str	r3, [sp, #28]
 2493              	.LVL283:
1184:Lib/ssc/src/objdef.c ****                         }
 2494              		.loc 1 1184 35 view .LVU790
 2495 03d8 E7E7     		b	.L151
 2496              	.LVL284:
 2497              	.L193:
1184:Lib/ssc/src/objdef.c ****                         }
 2498              		.loc 1 1184 35 view .LVU791
 2499 03da 0123     		movs	r3, #1
 2500 03dc 0793     		str	r3, [sp, #28]
 2501              	.LVL285:
ARM GAS  /tmp/ccHv31r6.s 			page 76


1184:Lib/ssc/src/objdef.c ****                         }
 2502              		.loc 1 1184 35 view .LVU792
 2503 03de E4E7     		b	.L151
 2504              	.LVL286:
 2505              	.L195:
1184:Lib/ssc/src/objdef.c ****                         }
 2506              		.loc 1 1184 35 view .LVU793
 2507 03e0 0123     		movs	r3, #1
 2508 03e2 0793     		str	r3, [sp, #28]
 2509              	.LVL287:
1184:Lib/ssc/src/objdef.c ****                         }
 2510              		.loc 1 1184 35 view .LVU794
 2511 03e4 E1E7     		b	.L151
 2512              	.LVL288:
 2513              	.L196:
1184:Lib/ssc/src/objdef.c ****                         }
 2514              		.loc 1 1184 35 view .LVU795
 2515              	.LBE28:
 2516              	.LBE33:
 2517              	.LBB34:
1232:Lib/ssc/src/objdef.c ****                     }
 2518              		.loc 1 1232 32 view .LVU796
 2519 03e6 1A23     		movs	r3, #26
 2520 03e8 0593     		str	r3, [sp, #20]
 2521              	.LVL289:
1232:Lib/ssc/src/objdef.c ****                     }
 2522              		.loc 1 1232 32 view .LVU797
 2523 03ea DEE7     		b	.L151
 2524              	.LVL290:
 2525              	.L180:
1232:Lib/ssc/src/objdef.c ****                     }
 2526              		.loc 1 1232 32 view .LVU798
 2527              	.LBE34:
 2528              	.LBE37:
 2529              	.LBE21:
 2530 03ec 5C46     		mov	r4, fp
 2531              	.LVL291:
1232:Lib/ssc/src/objdef.c ****                     }
 2532              		.loc 1 1232 32 view .LVU799
 2533 03ee 0023     		movs	r3, #0
 2534 03f0 0593     		str	r3, [sp, #20]
 2535 03f2 0793     		str	r3, [sp, #28]
 2536 03f4 CDF818B0 		str	fp, [sp, #24]
 2537 03f8 D9E7     		b	.L172
 2538              	.LVL292:
 2539              	.L181:
1232:Lib/ssc/src/objdef.c ****                     }
 2540              		.loc 1 1232 32 view .LVU800
 2541 03fa 079B     		ldr	r3, [sp, #28]
 2542 03fc 0593     		str	r3, [sp, #20]
 2543 03fe 5C46     		mov	r4, fp
 2544              	.LVL293:
1232:Lib/ssc/src/objdef.c ****                     }
 2545              		.loc 1 1232 32 view .LVU801
 2546 0400 CDF818B0 		str	fp, [sp, #24]
 2547 0404 D3E7     		b	.L172
 2548              	.LVL294:
ARM GAS  /tmp/ccHv31r6.s 			page 77


 2549              	.L199:
 2550              	.LBB40:
1237:Lib/ssc/src/objdef.c ****                 return result;
 2551              		.loc 1 1237 13 is_stmt 1 view .LVU802
1237:Lib/ssc/src/objdef.c ****                 return result;
 2552              		.loc 1 1237 15 is_stmt 0 view .LVU803
 2553 0406 079B     		ldr	r3, [sp, #28]
 2554 0408 B3B1     		cbz	r3, .L141
 2555              	.LBE40:
 2556              		.loc 1 1241 12 view .LVU804
 2557 040a 0023     		movs	r3, #0
 2558 040c 0593     		str	r3, [sp, #20]
 2559              	.LVL295:
 2560              		.loc 1 1241 12 view .LVU805
 2561 040e 13E0     		b	.L141
 2562              	.LVL296:
 2563              	.L174:
 833:Lib/ssc/src/objdef.c ****         }
 2564              		.loc 1 833 20 view .LVU806
 2565 0410 0523     		movs	r3, #5
 2566 0412 0593     		str	r3, [sp, #20]
 2567 0414 10E0     		b	.L141
 2568              	.L175:
 2569 0416 0523     		movs	r3, #5
 2570 0418 0593     		str	r3, [sp, #20]
 2571 041a 0DE0     		b	.L141
 2572              	.L176:
 843:Lib/ssc/src/objdef.c ****         }
 2573              		.loc 1 843 20 view .LVU807
 2574 041c 1123     		movs	r3, #17
 2575 041e 0593     		str	r3, [sp, #20]
 2576 0420 0AE0     		b	.L141
 2577              	.LVL297:
 2578              	.L179:
 866:Lib/ssc/src/objdef.c ****                     }
 2579              		.loc 1 866 32 view .LVU808
 2580 0422 1A23     		movs	r3, #26
 2581 0424 0593     		str	r3, [sp, #20]
 2582 0426 07E0     		b	.L141
 2583              	.LVL298:
 2584              	.L182:
 2585              		.loc 1 1241 12 view .LVU809
 2586 0428 0023     		movs	r3, #0
 2587 042a 0593     		str	r3, [sp, #20]
 2588 042c 04E0     		b	.L141
 2589              	.LVL299:
 2590              	.L185:
 2591              	.LBB41:
 2592              	.LBB38:
 2593              	.LBB35:
 2594              	.LBB29:
 991:Lib/ssc/src/objdef.c ****                             {
 2595              		.loc 1 991 29 view .LVU810
 2596 042e 1823     		movs	r3, #24
 2597              	.LVL300:
 991:Lib/ssc/src/objdef.c ****                             {
 2598              		.loc 1 991 29 view .LVU811
ARM GAS  /tmp/ccHv31r6.s 			page 78


 2599 0430 0593     		str	r3, [sp, #20]
 2600              	.LVL301:
 991:Lib/ssc/src/objdef.c ****                             {
 2601              		.loc 1 991 29 view .LVU812
 2602 0432 01E0     		b	.L141
 2603              	.LVL302:
 2604              	.L186:
 991:Lib/ssc/src/objdef.c ****                             {
 2605              		.loc 1 991 29 view .LVU813
 2606 0434 1823     		movs	r3, #24
 2607 0436 0593     		str	r3, [sp, #20]
 2608              	.LVL303:
 2609              	.L141:
 991:Lib/ssc/src/objdef.c ****                             {
 2610              		.loc 1 991 29 view .LVU814
 2611              	.LBE29:
 2612              	.LBE35:
 2613              	.LBE38:
 2614              	.LBE41:
1242:Lib/ssc/src/objdef.c **** }
 2615              		.loc 1 1242 1 view .LVU815
 2616 0438 0598     		ldr	r0, [sp, #20]
 2617 043a 0BB0     		add	sp, sp, #44
 2618              		.cfi_remember_state
 2619              		.cfi_def_cfa_offset 36
 2620              		@ sp needed
 2621 043c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2622              	.LVL304:
 2623              	.L187:
 2624              		.cfi_restore_state
 2625              	.LBB42:
 2626              	.LBB39:
 2627              	.LBB36:
 2628              	.LBB30:
1009:Lib/ssc/src/objdef.c ****                                 }
 2629              		.loc 1 1009 44 view .LVU816
 2630 0440 1823     		movs	r3, #24
 2631 0442 0593     		str	r3, [sp, #20]
 2632              	.LVL305:
1009:Lib/ssc/src/objdef.c ****                                 }
 2633              		.loc 1 1009 44 view .LVU817
 2634 0444 F8E7     		b	.L141
 2635              	.LVL306:
 2636              	.L189:
1079:Lib/ssc/src/objdef.c ****                                 }
 2637              		.loc 1 1079 44 view .LVU818
 2638 0446 0523     		movs	r3, #5
 2639 0448 0593     		str	r3, [sp, #20]
 2640              	.LVL307:
1079:Lib/ssc/src/objdef.c ****                                 }
 2641              		.loc 1 1079 44 view .LVU819
 2642 044a F5E7     		b	.L141
 2643              	.LVL308:
 2644              	.L190:
1098:Lib/ssc/src/objdef.c ****                                 }
 2645              		.loc 1 1098 44 view .LVU820
 2646 044c 0523     		movs	r3, #5
ARM GAS  /tmp/ccHv31r6.s 			page 79


 2647 044e 0593     		str	r3, [sp, #20]
 2648              	.LVL309:
1098:Lib/ssc/src/objdef.c ****                                 }
 2649              		.loc 1 1098 44 view .LVU821
 2650 0450 F2E7     		b	.L141
 2651              	.LVL310:
 2652              	.L191:
1115:Lib/ssc/src/objdef.c ****                                 }
 2653              		.loc 1 1115 44 view .LVU822
 2654 0452 0523     		movs	r3, #5
 2655              	.LVL311:
1115:Lib/ssc/src/objdef.c ****                                 }
 2656              		.loc 1 1115 44 view .LVU823
 2657 0454 0593     		str	r3, [sp, #20]
 2658              	.LVL312:
1115:Lib/ssc/src/objdef.c ****                                 }
 2659              		.loc 1 1115 44 view .LVU824
 2660 0456 EFE7     		b	.L141
 2661              	.LVL313:
 2662              	.L192:
1139:Lib/ssc/src/objdef.c ****                                 }
 2663              		.loc 1 1139 44 view .LVU825
 2664 0458 0523     		movs	r3, #5
 2665 045a 0593     		str	r3, [sp, #20]
 2666              	.LVL314:
1139:Lib/ssc/src/objdef.c ****                                 }
 2667              		.loc 1 1139 44 view .LVU826
 2668 045c ECE7     		b	.L141
 2669              	.LVL315:
 2670              	.L194:
1161:Lib/ssc/src/objdef.c ****                                 }
 2671              		.loc 1 1161 44 view .LVU827
 2672 045e 0523     		movs	r3, #5
 2673              	.LVL316:
1161:Lib/ssc/src/objdef.c ****                                 }
 2674              		.loc 1 1161 44 view .LVU828
 2675 0460 0593     		str	r3, [sp, #20]
 2676              	.LVL317:
1161:Lib/ssc/src/objdef.c ****                                 }
 2677              		.loc 1 1161 44 view .LVU829
 2678 0462 E9E7     		b	.L141
 2679              	.LBE30:
 2680              	.LBE36:
 2681              	.LBE39:
 2682              	.LBE42:
 2683              		.cfi_endproc
 2684              	.LFE144:
 2686              		.section	.text.OBJ_Write,"ax",%progbits
 2687              		.align	1
 2688              		.global	OBJ_Write
 2689              		.syntax unified
 2690              		.thumb
 2691              		.thumb_func
 2693              	OBJ_Write:
 2694              	.LVL318:
 2695              	.LFB145:
1243:Lib/ssc/src/objdef.c **** 
ARM GAS  /tmp/ccHv31r6.s 			page 80


1244:Lib/ssc/src/objdef.c **** /////////////////////////////////////////////////////////////////////////////////////////
1245:Lib/ssc/src/objdef.c **** /**
1246:Lib/ssc/src/objdef.c ****  \param     index                 index of the requested object.
1247:Lib/ssc/src/objdef.c ****  \param     subindex                subindex of the requested object.
1248:Lib/ssc/src/objdef.c ****  \param    dataSize                received data size of the SDO Download
1249:Lib/ssc/src/objdef.c ****  \param     pObjEntry            handle to the dictionary object returned by
1250:Lib/ssc/src/objdef.c ****                                      OBJ_GetObjectHandle which was called before
1251:Lib/ssc/src/objdef.c ****  \param    pData                    Pointer to the buffer where the written data can be copied from
1252:Lib/ssc/src/objdef.c ****  \param    bCompleteAccess    Indicates if a complete write of all subindices of the
1253:Lib/ssc/src/objdef.c ****                                      object shall be done or not
1254:Lib/ssc/src/objdef.c **** 
1255:Lib/ssc/src/objdef.c ****  \return    result of the write operation (0 (success) or an abort code (ABORTIDX_.... defined in
1256:Lib/ssc/src/objdef.c ****             sdosrv.h))
1257:Lib/ssc/src/objdef.c **** 
1258:Lib/ssc/src/objdef.c ****  \brief    This function writes the requested object
1259:Lib/ssc/src/objdef.c **** *////////////////////////////////////////////////////////////////////////////////////////
1260:Lib/ssc/src/objdef.c **** 
1261:Lib/ssc/src/objdef.c **** UINT8 OBJ_Write( UINT16 index, UINT8 subindex, UINT32 dataSize, OBJCONST TOBJECT OBJMEM * pObjEntry
1262:Lib/ssc/src/objdef.c **** {
 2696              		.loc 1 1262 1 is_stmt 1 view -0
 2697              		.cfi_startproc
 2698              		@ args = 8, pretend = 0, frame = 32
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
 2700              		.loc 1 1262 1 is_stmt 0 view .LVU831
 2701 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2702              		.cfi_def_cfa_offset 36
 2703              		.cfi_offset 4, -36
 2704              		.cfi_offset 5, -32
 2705              		.cfi_offset 6, -28
 2706              		.cfi_offset 7, -24
 2707              		.cfi_offset 8, -20
 2708              		.cfi_offset 9, -16
 2709              		.cfi_offset 10, -12
 2710              		.cfi_offset 11, -8
 2711              		.cfi_offset 14, -4
 2712 0004 8BB0     		sub	sp, sp, #44
 2713              		.cfi_def_cfa_offset 80
 2714 0006 0590     		str	r0, [sp, #20]
 2715 0008 0C46     		mov	r4, r1
 2716 000a 1546     		mov	r5, r2
 2717 000c 1E46     		mov	r6, r3
 2718 000e DDF85080 		ldr	r8, [sp, #80]
 2719 0012 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 2720              	.LVL319:
 2721              		.loc 1 1262 1 view .LVU832
 2722 0016 0493     		str	r3, [sp, #16]
1263:Lib/ssc/src/objdef.c ****     UINT16 i = subindex;
 2723              		.loc 1 1263 5 is_stmt 1 view .LVU833
 2724              		.loc 1 1263 12 is_stmt 0 view .LVU834
 2725 0018 1FFA81FB 		uxth	fp, r1
 2726              	.LVL320:
1264:Lib/ssc/src/objdef.c ****     /* get the information of ObjCode and MaxSubindex in local variables to support different types
1265:Lib/ssc/src/objdef.c ****     UINT8 objCode = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_OBJCODEMASK) >> OBJFLAGS_OBJCODESHIFT;
 2727              		.loc 1 1265 5 is_stmt 1 view .LVU835
 2728              		.loc 1 1265 40 is_stmt 0 view .LVU836
 2729 001c B389     		ldrh	r3, [r6, #12]
 2730              		.loc 1 1265 11 view .LVU837
ARM GAS  /tmp/ccHv31r6.s 			page 81


 2731 001e C3F30322 		ubfx	r2, r3, #8, #4
 2732              	.LVL321:
 2733              		.loc 1 1265 11 view .LVU838
 2734 0022 0692     		str	r2, [sp, #24]
 2735              	.LVL322:
1266:Lib/ssc/src/objdef.c ****     UINT16 maxSubindex = 0;
 2736              		.loc 1 1266 5 is_stmt 1 view .LVU839
1267:Lib/ssc/src/objdef.c ****     UINT16 maxConfiguredSubindex = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_MAXSUBINDEXMASK) >> OBJF
 2737              		.loc 1 1267 5 view .LVU840
 2738              		.loc 1 1267 12 is_stmt 0 view .LVU841
 2739 0024 DBB2     		uxtb	r3, r3
 2740 0026 0793     		str	r3, [sp, #28]
 2741              	.LVL323:
1268:Lib/ssc/src/objdef.c ****     OBJCONST TSDOINFOENTRYDESC OBJMEM *pEntry;
 2742              		.loc 1 1268 5 is_stmt 1 view .LVU842
1269:Lib/ssc/src/objdef.c ****     BOOL bClearSubindex0Required = FALSE;
 2743              		.loc 1 1269 5 view .LVU843
1270:Lib/ssc/src/objdef.c ****     /* lastSubindex is used for complete access to make loop over the requested entries
1271:Lib/ssc/src/objdef.c ****        to be read, we initialize this variable with the requested subindex that only
1272:Lib/ssc/src/objdef.c ****        one loop will be done for a single access */
1273:Lib/ssc/src/objdef.c ****     UINT16 lastSubindex = subindex;
 2744              		.loc 1 1273 5 view .LVU844
1274:Lib/ssc/src/objdef.c **** 
1275:Lib/ssc/src/objdef.c ****     /* if subindex 0 is writable, the maximum subindex should be checked in an object specific func
1276:Lib/ssc/src/objdef.c ****         because for the PDO mapping and PDO assign the object shall only be written if subindex 0 i
1277:Lib/ssc/src/objdef.c ****     if ( objCode != OBJCODE_VAR )
 2745              		.loc 1 1277 5 view .LVU845
 2746              		.loc 1 1277 8 is_stmt 0 view .LVU846
 2747 0028 072A     		cmp	r2, #7
 2748 002a 1AD0     		beq	.L238
1278:Lib/ssc/src/objdef.c ****     {
1279:Lib/ssc/src/objdef.c ****         /* if the object is an array or record we have to get the maxSubindex from the
1280:Lib/ssc/src/objdef.c ****            actual value of subindex 0, which is stored as UINT16 at the beginning of the
1281:Lib/ssc/src/objdef.c ****             object's variable */
1282:Lib/ssc/src/objdef.c ****         maxSubindex = (UINT8) ((UINT16 MBXMEM *) (pObjEntry->pVarPtr))[0];
 2749              		.loc 1 1282 9 is_stmt 1 view .LVU847
 2750              		.loc 1 1282 60 is_stmt 0 view .LVU848
 2751 002c B369     		ldr	r3, [r6, #24]
 2752 002e 93F800A0 		ldrb	r10, [r3]	@ zero_extendqisi2
 2753              	.LVL324:
1283:Lib/ssc/src/objdef.c **** 
1284:Lib/ssc/src/objdef.c ****         /*If the subindex0 of a PDO assign or PDO mapping object is 0 the maximum subindex is speci
1285:Lib/ssc/src/objdef.c ****         if(maxSubindex == 0 && (IS_PDO_ASSIGN(index) || IS_RX_PDO(index) || IS_TX_PDO(index)))
 2754              		.loc 1 1285 9 is_stmt 1 view .LVU849
 2755              		.loc 1 1285 11 is_stmt 0 view .LVU850
 2756 0032 BAF1000F 		cmp	r10, #0
 2757 0036 16D1     		bne	.L203
 2758              		.loc 1 1285 33 discriminator 1 view .LVU851
 2759 0038 A0F5E053 		sub	r3, r0, #7168
 2760 003c 103B     		subs	r3, r3, #16
 2761 003e 9BB2     		uxth	r3, r3
 2762              		.loc 1 1285 29 discriminator 1 view .LVU852
 2763 0040 1F2B     		cmp	r3, #31
 2764 0042 1BD9     		bls	.L239
 2765              		.loc 1 1285 57 discriminator 2 view .LVU853
 2766 0044 A0F5B053 		sub	r3, r0, #5632
 2767 0048 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccHv31r6.s 			page 82


 2768              		.loc 1 1285 54 discriminator 2 view .LVU854
 2769 004a B3F5007F 		cmp	r3, #512
 2770 004e 18D3     		bcc	.L240
 2771              		.loc 1 1285 77 discriminator 3 view .LVU855
 2772 0050 A0F5D053 		sub	r3, r0, #6656
 2773 0054 9BB2     		uxth	r3, r3
 2774              		.loc 1 1285 74 discriminator 3 view .LVU856
 2775 0056 B3F5007F 		cmp	r3, #512
 2776 005a 04D2     		bcs	.L203
1286:Lib/ssc/src/objdef.c ****         {
1287:Lib/ssc/src/objdef.c ****             maxSubindex = maxConfiguredSubindex;
 2777              		.loc 1 1287 25 view .LVU857
 2778 005c DDF81CA0 		ldr	r10, [sp, #28]
 2779              	.LVL325:
 2780              		.loc 1 1287 25 view .LVU858
 2781 0060 01E0     		b	.L203
 2782              	.LVL326:
 2783              	.L238:
1266:Lib/ssc/src/objdef.c ****     UINT16 maxConfiguredSubindex = (pObjEntry->ObjDesc.ObjFlags & OBJFLAGS_MAXSUBINDEXMASK) >> OBJF
 2784              		.loc 1 1266 12 view .LVU859
 2785 0062 4FF0000A 		mov	r10, #0
 2786              	.LVL327:
 2787              	.L203:
1288:Lib/ssc/src/objdef.c ****         }
1289:Lib/ssc/src/objdef.c ****     }
1290:Lib/ssc/src/objdef.c **** 
1291:Lib/ssc/src/objdef.c **** 
1292:Lib/ssc/src/objdef.c ****     if ( bCompleteAccess )
 2788              		.loc 1 1292 5 is_stmt 1 view .LVU860
 2789              		.loc 1 1292 8 is_stmt 0 view .LVU861
 2790 0066 049B     		ldr	r3, [sp, #16]
 2791 0068 73B1     		cbz	r3, .L204
1293:Lib/ssc/src/objdef.c ****     {
1294:Lib/ssc/src/objdef.c ****         if ( objCode == OBJCODE_VAR )
 2792              		.loc 1 1294 9 is_stmt 1 view .LVU862
 2793              		.loc 1 1294 12 is_stmt 0 view .LVU863
 2794 006a 069B     		ldr	r3, [sp, #24]
 2795 006c 072B     		cmp	r3, #7
 2796 006e 00F03282 		beq	.L242
1295:Lib/ssc/src/objdef.c ****             /* complete access is not supported with simple objects */
1296:Lib/ssc/src/objdef.c ****             return ABORTIDX_UNSUPPORTED_ACCESS;
1297:Lib/ssc/src/objdef.c **** 
1298:Lib/ssc/src/objdef.c ****         if ((subindex == 0) && (dataSize > 0))
 2797              		.loc 1 1298 9 is_stmt 1 view .LVU864
 2798              		.loc 1 1298 12 is_stmt 0 view .LVU865
 2799 0072 14BB     		cbnz	r4, .L206
 2800              		.loc 1 1298 29 discriminator 1 view .LVU866
 2801 0074 0DB3     		cbz	r5, .L206
1299:Lib/ssc/src/objdef.c ****         {
1300:Lib/ssc/src/objdef.c ****             /* we change the subindex 0 */
1301:Lib/ssc/src/objdef.c ****             maxSubindex = (UINT8) SWAPWORD(pData[0]);
 2802              		.loc 1 1301 13 is_stmt 1 view .LVU867
 2803 0076 98F800A0 		ldrb	r10, [r8]	@ zero_extendqisi2
 2804              	.LVL328:
 2805              		.loc 1 1301 13 is_stmt 0 view .LVU868
 2806 007a 1EE0     		b	.L206
 2807              	.L239:
ARM GAS  /tmp/ccHv31r6.s 			page 83


1287:Lib/ssc/src/objdef.c ****         }
 2808              		.loc 1 1287 25 view .LVU869
 2809 007c DDF81CA0 		ldr	r10, [sp, #28]
 2810              	.LVL329:
1287:Lib/ssc/src/objdef.c ****         }
 2811              		.loc 1 1287 25 view .LVU870
 2812 0080 F1E7     		b	.L203
 2813              	.LVL330:
 2814              	.L240:
1287:Lib/ssc/src/objdef.c ****         }
 2815              		.loc 1 1287 25 view .LVU871
 2816 0082 DDF81CA0 		ldr	r10, [sp, #28]
 2817              	.LVL331:
1287:Lib/ssc/src/objdef.c ****         }
 2818              		.loc 1 1287 25 view .LVU872
 2819 0086 EEE7     		b	.L203
 2820              	.LVL332:
 2821              	.L204:
1302:Lib/ssc/src/objdef.c ****         }
1303:Lib/ssc/src/objdef.c **** 
1304:Lib/ssc/src/objdef.c ****         /* we write until the maximum subindex */
1305:Lib/ssc/src/objdef.c ****         lastSubindex = maxSubindex;
1306:Lib/ssc/src/objdef.c ****     }
1307:Lib/ssc/src/objdef.c ****     else
1308:Lib/ssc/src/objdef.c ****     if (subindex > maxSubindex)
 2822              		.loc 1 1308 5 is_stmt 1 view .LVU873
 2823              		.loc 1 1308 8 is_stmt 0 view .LVU874
 2824 0088 DA45     		cmp	r10, fp
 2825 008a C0F02782 		bcc	.L243
1309:Lib/ssc/src/objdef.c ****     {
1310:Lib/ssc/src/objdef.c ****         /* the maximum subindex is reached */
1311:Lib/ssc/src/objdef.c ****         return ABORTIDX_SUBINDEX_NOT_EXISTING;
1312:Lib/ssc/src/objdef.c ****     }
1313:Lib/ssc/src/objdef.c ****     else
1314:Lib/ssc/src/objdef.c ****     {
1315:Lib/ssc/src/objdef.c ****         /* we check the write access for single accesses here, a complete write access
1316:Lib/ssc/src/objdef.c ****            is allowed if at least one entry is writable (in this case the values for the
1317:Lib/ssc/src/objdef.c ****             read only entries shall be ignored) */
1318:Lib/ssc/src/objdef.c ****         /* we get the corresponding entry description */
1319:Lib/ssc/src/objdef.c ****         pEntry = OBJ_GetEntryDesc(pObjEntry, subindex);
 2826              		.loc 1 1319 9 is_stmt 1 view .LVU875
 2827              		.loc 1 1319 18 is_stmt 0 view .LVU876
 2828 008e 2146     		mov	r1, r4
 2829              	.LVL333:
 2830              		.loc 1 1319 18 view .LVU877
 2831 0090 3046     		mov	r0, r6
 2832              	.LVL334:
 2833              		.loc 1 1319 18 view .LVU878
 2834 0092 FFF7FEFF 		bl	OBJ_GetEntryDesc
 2835              	.LVL335:
1320:Lib/ssc/src/objdef.c **** 
1321:Lib/ssc/src/objdef.c ****         /* check if we have write access (bits 3-5 (PREOP, SAFEOP, OP) of ObjAccess)
1322:Lib/ssc/src/objdef.c ****            by comparing with the actual state (bits 1-3 (PREOP, SAFEOP, OP) of AL Status) */
1323:Lib/ssc/src/objdef.c ****         if ( ((UINT8) ((pEntry->ObjAccess & ACCESS_WRITE) >> 2)) < (nAlStatus & STATE_MASK) )
 2836              		.loc 1 1323 9 is_stmt 1 view .LVU879
 2837              		.loc 1 1323 31 is_stmt 0 view .LVU880
 2838 0096 8188     		ldrh	r1, [r0, #4]
ARM GAS  /tmp/ccHv31r6.s 			page 84


 2839              		.loc 1 1323 59 view .LVU881
 2840 0098 8A10     		asrs	r2, r1, #2
 2841              		.loc 1 1323 15 view .LVU882
 2842 009a 02F00E02 		and	r2, r2, #14
 2843              		.loc 1 1323 79 view .LVU883
 2844 009e A34B     		ldr	r3, .L270
 2845 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2846 00a2 03F00F03 		and	r3, r3, #15
 2847              		.loc 1 1323 12 view .LVU884
 2848 00a6 9A42     		cmp	r2, r3
 2849 00a8 06DA     		bge	.L244
1324:Lib/ssc/src/objdef.c ****         {
1325:Lib/ssc/src/objdef.c ****             /* we don't have write access */
1326:Lib/ssc/src/objdef.c ****             if ( (pEntry->ObjAccess & ACCESS_WRITE) == 0 )
 2850              		.loc 1 1326 13 is_stmt 1 view .LVU885
 2851              		.loc 1 1326 16 is_stmt 0 view .LVU886
 2852 00aa 11F0380F 		tst	r1, #56
 2853 00ae 40F01882 		bne	.L245
1327:Lib/ssc/src/objdef.c ****             {
1328:Lib/ssc/src/objdef.c ****                 /* it is a read only entry */
1329:Lib/ssc/src/objdef.c ****                 return ABORTIDX_READ_ONLY_ENTRY;
 2854              		.loc 1 1329 24 view .LVU887
 2855 00b2 0723     		movs	r3, #7
 2856 00b4 0393     		str	r3, [sp, #12]
 2857 00b6 24E0     		b	.L205
 2858              	.L244:
1273:Lib/ssc/src/objdef.c **** 
 2859              		.loc 1 1273 12 view .LVU888
 2860 00b8 DA46     		mov	r10, fp
 2861              	.LVL336:
 2862              	.L206:
1330:Lib/ssc/src/objdef.c ****             }
1331:Lib/ssc/src/objdef.c ****             else
1332:Lib/ssc/src/objdef.c ****             {
1333:Lib/ssc/src/objdef.c ****                 /* we don't have write access in this state */
1334:Lib/ssc/src/objdef.c ****                 return ABORTIDX_IN_THIS_STATE_DATA_CANNOT_BE_READ_OR_STORED;
1335:Lib/ssc/src/objdef.c ****             }
1336:Lib/ssc/src/objdef.c ****         }
1337:Lib/ssc/src/objdef.c ****     }
1338:Lib/ssc/src/objdef.c **** 
1339:Lib/ssc/src/objdef.c ****     /* Subindex 0 shall be set to zero if a single PDO / PDO assign entry is written
1340:Lib/ssc/src/objdef.c ****     or a complete access without subindex0 is requested */
1341:Lib/ssc/src/objdef.c ****     if((subindex > 0) &&
 2863              		.loc 1 1341 5 is_stmt 1 view .LVU889
 2864              		.loc 1 1341 7 is_stmt 0 view .LVU890
 2865 00ba BCB1     		cbz	r4, .L246
1342:Lib/ssc/src/objdef.c ****         (IS_PDO_ASSIGN(index) || IS_RX_PDO(index)|| IS_TX_PDO(index))
 2866              		.loc 1 1342 10 discriminator 1 view .LVU891
 2867 00bc 059A     		ldr	r2, [sp, #20]
 2868 00be A2F5E053 		sub	r3, r2, #7168
 2869 00c2 103B     		subs	r3, r3, #16
 2870 00c4 9BB2     		uxth	r3, r3
1341:Lib/ssc/src/objdef.c ****         (IS_PDO_ASSIGN(index) || IS_RX_PDO(index)|| IS_TX_PDO(index))
 2871              		.loc 1 1341 23 discriminator 1 view .LVU892
 2872 00c6 1F2B     		cmp	r3, #31
 2873 00c8 0BD9     		bls	.L208
 2874              		.loc 1 1342 34 view .LVU893
ARM GAS  /tmp/ccHv31r6.s 			page 85


 2875 00ca A2F5B053 		sub	r3, r2, #5632
 2876 00ce 9BB2     		uxth	r3, r3
 2877              		.loc 1 1342 31 view .LVU894
 2878 00d0 B3F5007F 		cmp	r3, #512
 2879 00d4 05D3     		bcc	.L208
 2880              		.loc 1 1342 53 discriminator 1 view .LVU895
 2881 00d6 A2F5D053 		sub	r3, r2, #6656
 2882 00da 9BB2     		uxth	r3, r3
 2883              		.loc 1 1342 50 discriminator 1 view .LVU896
 2884 00dc B3F5007F 		cmp	r3, #512
 2885 00e0 13D2     		bcs	.L247
 2886              	.L208:
 2887              	.LBB43:
1343:Lib/ssc/src/objdef.c ****         )
1344:Lib/ssc/src/objdef.c ****     {
1345:Lib/ssc/src/objdef.c ****         /*Check if Subindex0 was cleared before*/
1346:Lib/ssc/src/objdef.c ****         UINT16 Subindex0 = (*(UINT16 *)pObjEntry->pVarPtr) & 0x00FF;
 2888              		.loc 1 1346 9 is_stmt 1 view .LVU897
 2889              		.loc 1 1346 49 is_stmt 0 view .LVU898
 2890 00e2 B369     		ldr	r3, [r6, #24]
 2891              		.loc 1 1346 16 view .LVU899
 2892 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2893              	.LVL337:
1347:Lib/ssc/src/objdef.c ****         if(Subindex0 != 0x00)
 2894              		.loc 1 1347 9 is_stmt 1 view .LVU900
 2895              		.loc 1 1347 11 is_stmt 0 view .LVU901
 2896 00e6 9BB9     		cbnz	r3, .L248
 2897              	.LBE43:
1269:Lib/ssc/src/objdef.c ****     /* lastSubindex is used for complete access to make loop over the requested entries
 2898              		.loc 1 1269 10 view .LVU902
 2899 00e8 0993     		str	r3, [sp, #36]
 2900 00ea 00E0     		b	.L207
 2901              	.LVL338:
 2902              	.L246:
1269:Lib/ssc/src/objdef.c ****     /* lastSubindex is used for complete access to make loop over the requested entries
 2903              		.loc 1 1269 10 view .LVU903
 2904 00ec 0994     		str	r4, [sp, #36]
 2905              	.L207:
 2906              	.LVL339:
1348:Lib/ssc/src/objdef.c ****             bClearSubindex0Required = TRUE;
1349:Lib/ssc/src/objdef.c ****     }
1350:Lib/ssc/src/objdef.c **** 
1351:Lib/ssc/src/objdef.c ****     if ( pObjEntry->Write != NULL )
 2907              		.loc 1 1351 5 is_stmt 1 view .LVU904
 2908              		.loc 1 1351 19 is_stmt 0 view .LVU905
 2909 00ee 376A     		ldr	r7, [r6, #32]
 2910              		.loc 1 1351 8 view .LVU906
 2911 00f0 8FB1     		cbz	r7, .L209
1352:Lib/ssc/src/objdef.c ****     {
1353:Lib/ssc/src/objdef.c ****         /* Write function is defined, we call the object specific write function */
1354:Lib/ssc/src/objdef.c ****         return pObjEntry->Write(index, subindex, dataSize, pData, bCompleteAccess);
 2912              		.loc 1 1354 9 is_stmt 1 view .LVU907
 2913              		.loc 1 1354 16 is_stmt 0 view .LVU908
 2914 00f2 049B     		ldr	r3, [sp, #16]
 2915 00f4 0093     		str	r3, [sp]
 2916 00f6 4346     		mov	r3, r8
 2917 00f8 2A46     		mov	r2, r5
ARM GAS  /tmp/ccHv31r6.s 			page 86


 2918 00fa 2146     		mov	r1, r4
 2919 00fc 0598     		ldr	r0, [sp, #20]
 2920 00fe B847     		blx	r7
 2921              	.LVL340:
 2922 0100 0390     		str	r0, [sp, #12]
 2923              	.LVL341:
 2924              	.L205:
1355:Lib/ssc/src/objdef.c ****     }
1356:Lib/ssc/src/objdef.c ****     else
1357:Lib/ssc/src/objdef.c ****     {
1358:Lib/ssc/src/objdef.c ****         UINT8 bWritten = 0;
1359:Lib/ssc/src/objdef.c ****         UINT8 result = ABORTIDX_READ_ONLY_ENTRY;
1360:Lib/ssc/src/objdef.c **** 
1361:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) ECAT*/
1362:Lib/ssc/src/objdef.c ****         if (dataSize == 0)
1363:Lib/ssc/src/objdef.c ****         {
1364:Lib/ssc/src/objdef.c ****            return 0; //no error
1365:Lib/ssc/src/objdef.c ****         }
1366:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) ECAT*/
1367:Lib/ssc/src/objdef.c **** 
1368:Lib/ssc/src/objdef.c ****         /* we use the standard write function */
1369:Lib/ssc/src/objdef.c ****         for (i = subindex; i <= lastSubindex; i++)
1370:Lib/ssc/src/objdef.c ****         {
1371:Lib/ssc/src/objdef.c ****             /* if only a single entry is requested, this loop will only be done once */
1372:Lib/ssc/src/objdef.c ****             UINT16 MBXMEM *pVarPtr = (UINT16 MBXMEM *) pObjEntry->pVarPtr;
1373:Lib/ssc/src/objdef.c ****             UINT16 bitOffset = 0;
1374:Lib/ssc/src/objdef.c **** 
1375:Lib/ssc/src/objdef.c ****             /* we get the corresponding entry description */
1376:Lib/ssc/src/objdef.c ****             pEntry = OBJ_GetEntryDesc(pObjEntry,(UINT8) i);
1377:Lib/ssc/src/objdef.c **** 
1378:Lib/ssc/src/objdef.c ****             /*Get the bitOffset before check the access rights to calculate pData offset*/
1379:Lib/ssc/src/objdef.c ****             bitOffset = OBJ_GetEntryOffset((UINT8)i, pObjEntry);
1380:Lib/ssc/src/objdef.c **** 
1381:Lib/ssc/src/objdef.c ****             /* we check if we have write access (bits 3-5 (PREOP, SAFEOP, OP) of ObjAccess)
1382:Lib/ssc/src/objdef.c ****                by comparing with the actual state (bits 1-3 (PREOP, SAFEOP, OP) of AL Status) */
1383:Lib/ssc/src/objdef.c ****             if ( ((UINT8)((pEntry->ObjAccess & ACCESS_WRITE) >> 2)) >= (nAlStatus & STATE_MASK) )
1384:Lib/ssc/src/objdef.c ****             {
1385:Lib/ssc/src/objdef.c ****                 /* we have write access for this entry */
1386:Lib/ssc/src/objdef.c ****                 if (i != 0)
1387:Lib/ssc/src/objdef.c ****                 {
1388:Lib/ssc/src/objdef.c ****                     /* we increment the variable pointer to the corresponding word address */
1389:Lib/ssc/src/objdef.c ****                     pVarPtr += (bitOffset >> 4);
1390:Lib/ssc/src/objdef.c ****                 }
1391:Lib/ssc/src/objdef.c **** 
1392:Lib/ssc/src/objdef.c **** 
1393:Lib/ssc/src/objdef.c ****                 if ( i == subindex                                     /* requested entry */
1394:Lib/ssc/src/objdef.c ****                   || (bCompleteAccess && i >= subindex) )       /* complete access and entry should
1395:Lib/ssc/src/objdef.c ****                 {
1396:Lib/ssc/src/objdef.c ****                     UINT16 bitMask;
1397:Lib/ssc/src/objdef.c **** 
1398:Lib/ssc/src/objdef.c ****                     /* we have to copy the entry */
1399:Lib/ssc/src/objdef.c ****                     if (i == 0 && objCode != OBJCODE_VAR)
1400:Lib/ssc/src/objdef.c ****                     {
1401:Lib/ssc/src/objdef.c ****                         /*check if the value for subindex0 is valid */
1402:Lib/ssc/src/objdef.c ****                         UINT8 NewSubindex0 = (UINT8) SWAPWORD(pData[0]);
1403:Lib/ssc/src/objdef.c ****                         if(maxConfiguredSubindex < NewSubindex0)
1404:Lib/ssc/src/objdef.c ****                         {
ARM GAS  /tmp/ccHv31r6.s 			page 87


1405:Lib/ssc/src/objdef.c ****                             return ABORTIDX_VALUE_TOO_GREAT;
1406:Lib/ssc/src/objdef.c ****                         }
1407:Lib/ssc/src/objdef.c **** 
1408:Lib/ssc/src/objdef.c ****                         /* subindex 0 of an array or record shall be written */
1409:Lib/ssc/src/objdef.c **** /* ECATCHANGE_START(V5.11) SDO5*/
1410:Lib/ssc/src/objdef.c ****                         pVarPtr[0] = SWAPWORD(pData[0]);
1411:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) SDO5*/
1412:Lib/ssc/src/objdef.c ****                         /* we increment the destination pointer by 2 because the subindex 0 will be
1413:Lib/ssc/src/objdef.c ****                            transmitted as UINT16 for a complete access */
1414:Lib/ssc/src/objdef.c ****                         pData++;
1415:Lib/ssc/src/objdef.c ****                     }
1416:Lib/ssc/src/objdef.c ****                     else
1417:Lib/ssc/src/objdef.c ****                     {
1418:Lib/ssc/src/objdef.c ****                         UINT16 dataType = pEntry->DataType;
1419:Lib/ssc/src/objdef.c ****                         if (pEntry->DataType >= 0x700)
1420:Lib/ssc/src/objdef.c ****                         {
1421:Lib/ssc/src/objdef.c ****                             /* the ENUM data types are defined from index 0x700 in this example
1422:Lib/ssc/src/objdef.c ****                                convert in standard data type for the write access */
1423:Lib/ssc/src/objdef.c ****                             if ( pEntry->BitLength <= 8 )
1424:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
1425:Lib/ssc/src/objdef.c ****                             else if ( pEntry->BitLength == 16 )
1426:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_UNSIGNED16;
1427:Lib/ssc/src/objdef.c ****                             else if ( pEntry->BitLength == 32 )
1428:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_UNSIGNED32;
1429:Lib/ssc/src/objdef.c ****                         }
1430:Lib/ssc/src/objdef.c **** 
1431:Lib/ssc/src/objdef.c ****                         switch (dataType)
1432:Lib/ssc/src/objdef.c ****                         {
1433:Lib/ssc/src/objdef.c ****                         case DEFTYPE_NULL:
1434:Lib/ssc/src/objdef.c ****                             if(bCompleteAccess)
1435:Lib/ssc/src/objdef.c ****                             {
1436:Lib/ssc/src/objdef.c ****                                 /*Handle alignment entry*/
1437:Lib/ssc/src/objdef.c ****                                 if (((pEntry->BitLength & 0xF) > 0)
1438:Lib/ssc/src/objdef.c ****                                     && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
1439:Lib/ssc/src/objdef.c ****                                 {
1440:Lib/ssc/src/objdef.c ****                                     /* we have reached the UINT16 border */
1441:Lib/ssc/src/objdef.c ****                                     pData++;
1442:Lib/ssc/src/objdef.c ****                                 }
1443:Lib/ssc/src/objdef.c **** 
1444:Lib/ssc/src/objdef.c ****                                 /*increment WORD offset*/
1445:Lib/ssc/src/objdef.c ****                                 pData += ((pEntry->BitLength & 0xF0) >> 4);
1446:Lib/ssc/src/objdef.c ****                             }
1447:Lib/ssc/src/objdef.c ****                             else
1448:Lib/ssc/src/objdef.c ****                             {
1449:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_DATA_CANNOT_BE_READ_OR_STORED;
1450:Lib/ssc/src/objdef.c ****                             }
1451:Lib/ssc/src/objdef.c ****                             break;
1452:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BOOLEAN:
1453:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT1:
1454:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT2:
1455:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT3:
1456:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT4:
1457:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT5:
1458:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT6:
1459:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT7:
1460:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BIT8:
1461:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BITARR8:
ARM GAS  /tmp/ccHv31r6.s 			page 88


1462:Lib/ssc/src/objdef.c ****                             /* in this example the objects are defined in that way,
1463:Lib/ssc/src/objdef.c ****                                that the bit types are always inside a 16-bit field,
1464:Lib/ssc/src/objdef.c ****                                and shall not overlap a byte border*/
1465:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_INTEGER8:
1466:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_UNSIGNED8:
1467:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1468:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_BYTE :
1469:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1470:Lib/ssc/src/objdef.c ****                         {
1471:Lib/ssc/src/objdef.c ****                             /* depending on the bitOffset we have to copy the Hi or the Lo-Byte */
1472:Lib/ssc/src/objdef.c ****                             UINT16 TmpValue = 0x0000;
1473:Lib/ssc/src/objdef.c **** 
1474:Lib/ssc/src/objdef.c ****                             bitMask = cBitMask[pEntry->BitLength] << (bitOffset & 0x0F);
1475:Lib/ssc/src/objdef.c **** 
1476:Lib/ssc/src/objdef.c ****                             /*Swap object data (if required); all masks and offsets are defined for
1477:Lib/ssc/src/objdef.c ****                             TmpValue = SWAPWORD(pVarPtr[0]);
1478:Lib/ssc/src/objdef.c **** 
1479:Lib/ssc/src/objdef.c ****                             /*Clear corresponding bits*/
1480:Lib/ssc/src/objdef.c ****                             TmpValue &= ~bitMask;
1481:Lib/ssc/src/objdef.c **** 
1482:Lib/ssc/src/objdef.c **** /* ECATCHANGE_START(V5.11) SDO7*/
1483:Lib/ssc/src/objdef.c ****                             if (bCompleteAccess) 
1484:Lib/ssc/src/objdef.c ****                             {
1485:Lib/ssc/src/objdef.c ****                                 /*shifting is not required for Complete access because the bits are
1486:Lib/ssc/src/objdef.c ****                                 TmpValue |= (SWAPWORD(pData[0]) & bitMask);
1487:Lib/ssc/src/objdef.c ****                             }
1488:Lib/ssc/src/objdef.c ****                             else
1489:Lib/ssc/src/objdef.c ****                             {
1490:Lib/ssc/src/objdef.c ****                                 if((SWAPWORD(pData[0]) & ~cBitMask[pEntry->BitLength]))
1491:Lib/ssc/src/objdef.c ****                                 {
1492:Lib/ssc/src/objdef.c ****                                     /*written value exceed entry range*/
1493:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_VALUE_EXCEEDED;
1494:Lib/ssc/src/objdef.c ****                                 }
1495:Lib/ssc/src/objdef.c ****                                 else
1496:Lib/ssc/src/objdef.c ****                                 {
1497:Lib/ssc/src/objdef.c ****                                     /*Shift Bits to corresponding offset within the object memory*/
1498:Lib/ssc/src/objdef.c ****                                     TmpValue |= ((SWAPWORD(pData[0]) & cBitMask[pEntry->BitLength])
1499:Lib/ssc/src/objdef.c ****                                 }
1500:Lib/ssc/src/objdef.c ****                             }
1501:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) SDO7*/
1502:Lib/ssc/src/objdef.c **** 
1503:Lib/ssc/src/objdef.c ****                             /*Swap written data to big endian format (if required)*/
1504:Lib/ssc/src/objdef.c ****                             pVarPtr[0] = SWAPWORD(TmpValue);
1505:Lib/ssc/src/objdef.c **** 
1506:Lib/ssc/src/objdef.c ****                             if ( ((bitOffset+pEntry->BitLength) & 0x0F) == 0 )
1507:Lib/ssc/src/objdef.c ****                                 /* we have reached the UINT16 border */
1508:Lib/ssc/src/objdef.c ****                                 pData++;
1509:Lib/ssc/src/objdef.c ****                         }
1510:Lib/ssc/src/objdef.c ****                             break;
1511:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_INTEGER16:
1512:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_UNSIGNED16:
1513:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_BITARR16:
1514:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1515:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_WORD:
1516:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1517:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1518:Lib/ssc/src/objdef.c ****                             if(bitOffset & 0xF)
ARM GAS  /tmp/ccHv31r6.s 			page 89


1519:Lib/ssc/src/objdef.c ****                             {
1520:Lib/ssc/src/objdef.c ****                                 /* return an error in case of an odd word offset (to support 16bit 
1521:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_UNSUPPORTED_ACCESS;
1522:Lib/ssc/src/objdef.c ****                             }
1523:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1524:Lib/ssc/src/objdef.c **** 
1525:Lib/ssc/src/objdef.c ****                             {
1526:Lib/ssc/src/objdef.c ****                             /* in this example the objects are defined in that way,
1527:Lib/ssc/src/objdef.c ****                             that the 16 bit type are always starting at an exact WORD offset */
1528:Lib/ssc/src/objdef.c ****                             UINT16 u16NewData = SWAPWORD(pData[0]);
1529:Lib/ssc/src/objdef.c ****                             if(bClearSubindex0Required && (pVarPtr[0] != u16NewData))
1530:Lib/ssc/src/objdef.c ****                             {
1531:Lib/ssc/src/objdef.c ****                                 /* try to write new data when subindex0 shall be reset*/
1532:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_ENTRY_CANT_BE_WRITTEN_SI0_NOT_0;
1533:Lib/ssc/src/objdef.c ****                             }
1534:Lib/ssc/src/objdef.c **** 
1535:Lib/ssc/src/objdef.c ****                             /*check value if a new PDO assign entry should be written*/
1536:Lib/ssc/src/objdef.c ****                             if(IS_PDO_ASSIGN(index))  //PDO assign
1537:Lib/ssc/src/objdef.c ****                             {
1538:Lib/ssc/src/objdef.c ****                                 if (!IS_RX_PDO(u16NewData) && !IS_TX_PDO(u16NewData) && (u16NewData
1539:Lib/ssc/src/objdef.c ****                                 {
1540:Lib/ssc/src/objdef.c ****                                     return ABORTIDX_VALUE_EXCEEDED;
1541:Lib/ssc/src/objdef.c ****                                 }
1542:Lib/ssc/src/objdef.c ****                             }
1543:Lib/ssc/src/objdef.c **** 
1544:Lib/ssc/src/objdef.c ****                             if((index == 0x1C32 || index == 0x1C33) && (i == 1))
1545:Lib/ssc/src/objdef.c ****                             {
1546:Lib/ssc/src/objdef.c ****                                 /* The Synchronisation type (0x1C3x.1) was written by the user => t
1547:Lib/ssc/src/objdef.c ****                                 if(pVarPtr[0] != u16NewData)
1548:Lib/ssc/src/objdef.c ****                                 {
1549:Lib/ssc/src/objdef.c ****                                     result = CheckSyncTypeValue(index,u16NewData);
1550:Lib/ssc/src/objdef.c **** 
1551:Lib/ssc/src/objdef.c ****                                     if(result != 0)
1552:Lib/ssc/src/objdef.c ****                                         return result;
1553:Lib/ssc/src/objdef.c ****                                 }
1554:Lib/ssc/src/objdef.c **** 
1555:Lib/ssc/src/objdef.c ****                                 /* The user may force to current Sync Mode for that reason the flag
1556:Lib/ssc/src/objdef.c ****                                 bSyncSetByUser = TRUE;
1557:Lib/ssc/src/objdef.c ****                             }
1558:Lib/ssc/src/objdef.c **** 
1559:Lib/ssc/src/objdef.c ****                             pVarPtr[0] = u16NewData;
1560:Lib/ssc/src/objdef.c ****                             pData++;
1561:Lib/ssc/src/objdef.c ****                             }
1562:Lib/ssc/src/objdef.c ****                             break;
1563:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_UNSIGNED32:
1564:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_INTEGER32:
1565:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_REAL32:
1566:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_BITARR32:
1567:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1568:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_DWORD:
1569:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1570:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1571:Lib/ssc/src/objdef.c ****                             if(bitOffset & 0xF)
1572:Lib/ssc/src/objdef.c ****                             {
1573:Lib/ssc/src/objdef.c ****                                 /* return an error in case of an odd word offset (to support 16bit 
1574:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_UNSUPPORTED_ACCESS;
1575:Lib/ssc/src/objdef.c ****                             }
ARM GAS  /tmp/ccHv31r6.s 			page 90


1576:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1577:Lib/ssc/src/objdef.c ****                             {
1578:Lib/ssc/src/objdef.c **** 
1579:Lib/ssc/src/objdef.c ****                             /* in this example the objects are defined in that way,
1580:Lib/ssc/src/objdef.c ****                                that the 32 bit type are always starting at an exact WORD offset */
1581:Lib/ssc/src/objdef.c ****                             if(bClearSubindex0Required && 
1582:Lib/ssc/src/objdef.c ****                                 ((pVarPtr[0] != pData[0])
1583:Lib/ssc/src/objdef.c ****                                 || (pVarPtr[1] != pData[1])))
1584:Lib/ssc/src/objdef.c ****                             {
1585:Lib/ssc/src/objdef.c ****                                 /* try to write new data when subindex0 shall be reset*/
1586:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_ENTRY_CANT_BE_WRITTEN_SI0_NOT_0;
1587:Lib/ssc/src/objdef.c ****                             }
1588:Lib/ssc/src/objdef.c **** 
1589:Lib/ssc/src/objdef.c ****                             pVarPtr[0] = pData[0];
1590:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
1591:Lib/ssc/src/objdef.c ****                             pData += 2;
1592:Lib/ssc/src/objdef.c ****                             }
1593:Lib/ssc/src/objdef.c ****                             break;
1594:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_REAL64:
1595:Lib/ssc/src/objdef.c ****                         case 	DEFTYPE_INTEGER64:
1596:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_UNSIGNED64:
1597:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1598:Lib/ssc/src/objdef.c ****                             if(bitOffset & 0xF)
1599:Lib/ssc/src/objdef.c ****                             {
1600:Lib/ssc/src/objdef.c ****                                 /* return an error in case of an odd word offset (to support 16bit 
1601:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_UNSUPPORTED_ACCESS;
1602:Lib/ssc/src/objdef.c ****                             }
1603:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1604:Lib/ssc/src/objdef.c ****                             /* in this example the objects are defined in that way,
1605:Lib/ssc/src/objdef.c ****                                that the 64 bit type are always starting at an exact WORD offset */
1606:Lib/ssc/src/objdef.c ****                             pVarPtr[0] = pData[0];
1607:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
1608:Lib/ssc/src/objdef.c ****                             pVarPtr[2] = pData[2];
1609:Lib/ssc/src/objdef.c ****                             pVarPtr[3] = pData[3];
1610:Lib/ssc/src/objdef.c ****                             pData += 4;
1611:Lib/ssc/src/objdef.c ****                             break;
1612:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_VISIBLESTRING:
1613:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1614:Lib/ssc/src/objdef.c ****                             if(bitOffset & 0xF)
1615:Lib/ssc/src/objdef.c ****                             {
1616:Lib/ssc/src/objdef.c ****                                 /* return an error in case of an odd word offset (to support 16bit 
1617:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_UNSUPPORTED_ACCESS;
1618:Lib/ssc/src/objdef.c ****                             }
1619:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1620:Lib/ssc/src/objdef.c **** 
1621:Lib/ssc/src/objdef.c ****                             OBJTOMBXSTRCPY(pVarPtr, pData, BIT2BYTE(pEntry->BitLength));
1622:Lib/ssc/src/objdef.c **** 
1623:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
1624:Lib/ssc/src/objdef.c ****                             pData += BIT2WORD((pEntry->BitLength)& ~0xF);
1625:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
1626:Lib/ssc/src/objdef.c ****                             break;
1627:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_OCTETSTRING:
1628:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_UNICODE_STRING:
1629:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1630:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_INT :
1631:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_SINT :
1632:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_DINT :
ARM GAS  /tmp/ccHv31r6.s 			page 91


1633:Lib/ssc/src/objdef.c ****                             case DEFTYPE_ARRAY_OF_UDINT:
1634:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1635:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO1*/
1636:Lib/ssc/src/objdef.c ****                             if(bitOffset & 0xF)
1637:Lib/ssc/src/objdef.c ****                             {
1638:Lib/ssc/src/objdef.c ****                                 /* return an error in case of an odd word offset (to support 16bit 
1639:Lib/ssc/src/objdef.c ****                                 return ABORTIDX_UNSUPPORTED_ACCESS;
1640:Lib/ssc/src/objdef.c ****                             }
1641:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO1*/
1642:Lib/ssc/src/objdef.c **** 
1643:Lib/ssc/src/objdef.c ****                             /* in this example the objects are defined in that way,
1644:Lib/ssc/src/objdef.c ****                                that the other types are always starting at an even byte offset */
1645:Lib/ssc/src/objdef.c ****                             OBJTOMBXMEMCPY(pVarPtr, pData, BIT2BYTE(pEntry->BitLength));
1646:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
1647:Lib/ssc/src/objdef.c ****                             pData += BIT2WORD((pEntry->BitLength) & ~0xF);
1648:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
1649:Lib/ssc/src/objdef.c **** 
1650:Lib/ssc/src/objdef.c ****                             break;
1651:Lib/ssc/src/objdef.c ****                         default:
1652:Lib/ssc/src/objdef.c ****                             /* other data types are not supported from this example */
1653:Lib/ssc/src/objdef.c ****                             return ABORTIDX_DATA_CANNOT_BE_READ_OR_STORED;
1654:Lib/ssc/src/objdef.c ****                         }
1655:Lib/ssc/src/objdef.c ****                     }
1656:Lib/ssc/src/objdef.c **** 
1657:Lib/ssc/src/objdef.c ****                     /* set flag */
1658:Lib/ssc/src/objdef.c ****                     bWritten = 1;
1659:Lib/ssc/src/objdef.c **** 
1660:Lib/ssc/src/objdef.c ****                 }
1661:Lib/ssc/src/objdef.c ****             }
1662:Lib/ssc/src/objdef.c ****             else
1663:Lib/ssc/src/objdef.c ****             {
1664:Lib/ssc/src/objdef.c ****                 if(i == 0)
1665:Lib/ssc/src/objdef.c ****                 {
1666:Lib/ssc/src/objdef.c ****                     /* For SubIndex0 16Bit are reserved even if the BitLength is 8 */
1667:Lib/ssc/src/objdef.c ****                     pData++;
1668:Lib/ssc/src/objdef.c ****                 }
1669:Lib/ssc/src/objdef.c ****                 else
1670:Lib/ssc/src/objdef.c ****                 {
1671:Lib/ssc/src/objdef.c ****                     /*Handle Bit/Byte Offset*/
1672:Lib/ssc/src/objdef.c ****                     if (((pEntry->BitLength & 0xF) > 0)
1673:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
1674:Lib/ssc/src/objdef.c ****                     {
1675:Lib/ssc/src/objdef.c ****                         /* we have reached the UINT16 border */
1676:Lib/ssc/src/objdef.c ****                         pData++;
1677:Lib/ssc/src/objdef.c ****                     }
1678:Lib/ssc/src/objdef.c **** 
1679:Lib/ssc/src/objdef.c ****                     /*increment WORD offset*/
1680:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO9*/
1681:Lib/ssc/src/objdef.c ****                     pData += ((pEntry->BitLength & 0xFFF0) >> 4);
1682:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
1683:Lib/ssc/src/objdef.c ****                 }
1684:Lib/ssc/src/objdef.c ****                 /*If no other entry was written this result will be returned*/
1685:Lib/ssc/src/objdef.c ****                 result = ABORTIDX_DATA_CANNOT_BE_READ_OR_STORED;
1686:Lib/ssc/src/objdef.c ****             }
1687:Lib/ssc/src/objdef.c ****         }
1688:Lib/ssc/src/objdef.c **** 
1689:Lib/ssc/src/objdef.c ****         if (bWritten == 0)
ARM GAS  /tmp/ccHv31r6.s 			page 92


1690:Lib/ssc/src/objdef.c ****             /* we didn't write anything, so we have to return the stored error code */
1691:Lib/ssc/src/objdef.c ****             return result;
1692:Lib/ssc/src/objdef.c ****     }
1693:Lib/ssc/src/objdef.c **** 
1694:Lib/ssc/src/objdef.c ****     return 0;
1695:Lib/ssc/src/objdef.c **** }
 2925              		.loc 1 1695 1 view .LVU909
 2926 0102 0398     		ldr	r0, [sp, #12]
 2927 0104 0BB0     		add	sp, sp, #44
 2928              		.cfi_remember_state
 2929              		.cfi_def_cfa_offset 36
 2930              		@ sp needed
 2931 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2932              	.LVL342:
 2933              	.L247:
 2934              		.cfi_restore_state
1269:Lib/ssc/src/objdef.c ****     /* lastSubindex is used for complete access to make loop over the requested entries
 2935              		.loc 1 1269 10 view .LVU910
 2936 010a 0023     		movs	r3, #0
 2937 010c 0993     		str	r3, [sp, #36]
 2938 010e EEE7     		b	.L207
 2939              	.LVL343:
 2940              	.L248:
 2941              	.LBB44:
1348:Lib/ssc/src/objdef.c ****     }
 2942              		.loc 1 1348 37 view .LVU911
 2943 0110 0123     		movs	r3, #1
 2944              	.LVL344:
1348:Lib/ssc/src/objdef.c ****     }
 2945              		.loc 1 1348 37 view .LVU912
 2946 0112 0993     		str	r3, [sp, #36]
 2947 0114 EBE7     		b	.L207
 2948              	.LVL345:
 2949              	.L209:
1348:Lib/ssc/src/objdef.c ****     }
 2950              		.loc 1 1348 37 view .LVU913
 2951              	.LBE44:
 2952              	.LBB45:
1358:Lib/ssc/src/objdef.c ****         UINT8 result = ABORTIDX_READ_ONLY_ENTRY;
 2953              		.loc 1 1358 9 is_stmt 1 view .LVU914
1359:Lib/ssc/src/objdef.c **** 
 2954              		.loc 1 1359 9 view .LVU915
1362:Lib/ssc/src/objdef.c ****         {
 2955              		.loc 1 1362 9 view .LVU916
1362:Lib/ssc/src/objdef.c ****         {
 2956              		.loc 1 1362 12 is_stmt 0 view .LVU917
 2957 0116 002D     		cmp	r5, #0
 2958 0118 00F0E681 		beq	.L249
1369:Lib/ssc/src/objdef.c ****         {
 2959              		.loc 1 1369 16 view .LVU918
 2960 011c 5C46     		mov	r4, fp
1359:Lib/ssc/src/objdef.c **** 
 2961              		.loc 1 1359 15 view .LVU919
 2962 011e 0723     		movs	r3, #7
 2963 0120 0393     		str	r3, [sp, #12]
1358:Lib/ssc/src/objdef.c ****         UINT8 result = ABORTIDX_READ_ONLY_ENTRY;
 2964              		.loc 1 1358 15 view .LVU920
ARM GAS  /tmp/ccHv31r6.s 			page 93


 2965 0122 0023     		movs	r3, #0
 2966 0124 0893     		str	r3, [sp, #32]
 2967 0126 1BE1     		b	.L210
 2968              	.LVL346:
 2969              	.L269:
 2970              	.LBB46:
 2971              	.LBB47:
1399:Lib/ssc/src/objdef.c ****                     {
 2972              		.loc 1 1399 32 discriminator 1 view .LVU921
 2973 0128 069B     		ldr	r3, [sp, #24]
 2974 012a 072B     		cmp	r3, #7
 2975 012c 00F04081 		beq	.L215
 2976              	.LBB48:
1402:Lib/ssc/src/objdef.c ****                         if(maxConfiguredSubindex < NewSubindex0)
 2977              		.loc 1 1402 25 is_stmt 1 view .LVU922
1402:Lib/ssc/src/objdef.c ****                         if(maxConfiguredSubindex < NewSubindex0)
 2978              		.loc 1 1402 54 is_stmt 0 view .LVU923
 2979 0130 B8F80030 		ldrh	r3, [r8]
 2980              	.LVL347:
1403:Lib/ssc/src/objdef.c ****                         {
 2981              		.loc 1 1403 25 is_stmt 1 view .LVU924
1403:Lib/ssc/src/objdef.c ****                         {
 2982              		.loc 1 1403 27 is_stmt 0 view .LVU925
 2983 0134 DAB2     		uxtb	r2, r3
 2984 0136 0799     		ldr	r1, [sp, #28]
 2985 0138 9142     		cmp	r1, r2
 2986 013a C0F0D881 		bcc	.L250
1410:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) SDO5*/
 2987              		.loc 1 1410 25 is_stmt 1 view .LVU926
1410:Lib/ssc/src/objdef.c **** /* ECATCHANGE_END(V5.11) SDO5*/
 2988              		.loc 1 1410 36 is_stmt 0 view .LVU927
 2989 013e A9F80030 		strh	r3, [r9]	@ movhi
1414:Lib/ssc/src/objdef.c ****                     }
 2990              		.loc 1 1414 25 is_stmt 1 view .LVU928
1414:Lib/ssc/src/objdef.c ****                     }
 2991              		.loc 1 1414 30 is_stmt 0 view .LVU929
 2992 0142 08F10208 		add	r8, r8, #2
 2993              	.LVL348:
1414:Lib/ssc/src/objdef.c ****                     }
 2994              		.loc 1 1414 30 view .LVU930
 2995              	.LBE48:
1658:Lib/ssc/src/objdef.c **** 
 2996              		.loc 1 1658 30 view .LVU931
 2997 0146 0123     		movs	r3, #1
 2998              	.LVL349:
1658:Lib/ssc/src/objdef.c **** 
 2999              		.loc 1 1658 30 view .LVU932
 3000 0148 0893     		str	r3, [sp, #32]
 3001              	.LVL350:
1400:Lib/ssc/src/objdef.c ****                         /*check if the value for subindex0 is valid */
 3002              		.loc 1 1400 21 view .LVU933
 3003 014a 07E1     		b	.L214
 3004              	.LVL351:
 3005              	.L217:
 3006              	.LBB49:
1425:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_UNSIGNED16;
 3007              		.loc 1 1425 34 is_stmt 1 view .LVU934
ARM GAS  /tmp/ccHv31r6.s 			page 94


1425:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_UNSIGNED16;
 3008              		.loc 1 1425 37 is_stmt 0 view .LVU935
 3009 014c 102A     		cmp	r2, #16
 3010 014e 7FD0     		beq	.L218
1427:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_UNSIGNED32;
 3011              		.loc 1 1427 34 is_stmt 1 view .LVU936
1427:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_UNSIGNED32;
 3012              		.loc 1 1427 37 is_stmt 0 view .LVU937
 3013 0150 202A     		cmp	r2, #32
 3014 0152 40F03881 		bne	.L216
 3015              	.L219:
 3016              	.LVL352:
1571:Lib/ssc/src/objdef.c ****                             {
 3017              		.loc 1 1571 29 is_stmt 1 view .LVU938
1571:Lib/ssc/src/objdef.c ****                             {
 3018              		.loc 1 1571 31 is_stmt 0 view .LVU939
 3019 0156 10F00F0F 		tst	r0, #15
 3020 015a 40F0E081 		bne	.L259
1581:Lib/ssc/src/objdef.c ****                                 ((pVarPtr[0] != pData[0])
 3021              		.loc 1 1581 29 is_stmt 1 view .LVU940
1581:Lib/ssc/src/objdef.c ****                                 ((pVarPtr[0] != pData[0])
 3022              		.loc 1 1581 31 is_stmt 0 view .LVU941
 3023 015e 099B     		ldr	r3, [sp, #36]
 3024 0160 6BB1     		cbz	r3, .L234
1582:Lib/ssc/src/objdef.c ****                                 || (pVarPtr[1] != pData[1])))
 3025              		.loc 1 1582 42 discriminator 1 view .LVU942
 3026 0162 B9F80020 		ldrh	r2, [r9]
1582:Lib/ssc/src/objdef.c ****                                 || (pVarPtr[1] != pData[1])))
 3027              		.loc 1 1582 54 discriminator 1 view .LVU943
 3028 0166 B8F80030 		ldrh	r3, [r8]
1581:Lib/ssc/src/objdef.c ****                                 ((pVarPtr[0] != pData[0])
 3029              		.loc 1 1581 56 discriminator 1 view .LVU944
 3030 016a 9A42     		cmp	r2, r3
 3031 016c 40F0DA81 		bne	.L260
1583:Lib/ssc/src/objdef.c ****                             {
 3032              		.loc 1 1583 44 view .LVU945
 3033 0170 B9F80220 		ldrh	r2, [r9, #2]
1583:Lib/ssc/src/objdef.c ****                             {
 3034              		.loc 1 1583 56 view .LVU946
 3035 0174 B8F80230 		ldrh	r3, [r8, #2]
1583:Lib/ssc/src/objdef.c ****                             {
 3036              		.loc 1 1583 33 view .LVU947
 3037 0178 9A42     		cmp	r2, r3
 3038 017a 40F0D681 		bne	.L261
 3039              	.L234:
1589:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
 3040              		.loc 1 1589 29 is_stmt 1 view .LVU948
1589:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
 3041              		.loc 1 1589 47 is_stmt 0 view .LVU949
 3042 017e B8F80030 		ldrh	r3, [r8]
1589:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
 3043              		.loc 1 1589 40 view .LVU950
 3044 0182 A9F80030 		strh	r3, [r9]	@ movhi
1590:Lib/ssc/src/objdef.c ****                             pData += 2;
 3045              		.loc 1 1590 29 is_stmt 1 view .LVU951
1590:Lib/ssc/src/objdef.c ****                             pData += 2;
 3046              		.loc 1 1590 40 is_stmt 0 view .LVU952
ARM GAS  /tmp/ccHv31r6.s 			page 95


 3047 0186 B8F80230 		ldrh	r3, [r8, #2]
 3048 018a A9F80230 		strh	r3, [r9, #2]	@ movhi
1591:Lib/ssc/src/objdef.c ****                             }
 3049              		.loc 1 1591 29 is_stmt 1 view .LVU953
1591:Lib/ssc/src/objdef.c ****                             }
 3050              		.loc 1 1591 35 is_stmt 0 view .LVU954
 3051 018e 08F10408 		add	r8, r8, #4
 3052              	.LVL353:
1593:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_REAL64:
 3053              		.loc 1 1593 29 is_stmt 1 view .LVU955
 3054              	.LBE49:
1658:Lib/ssc/src/objdef.c **** 
 3055              		.loc 1 1658 30 is_stmt 0 view .LVU956
 3056 0192 0123     		movs	r3, #1
 3057 0194 0893     		str	r3, [sp, #32]
 3058              	.LVL354:
 3059              	.LBB56:
1593:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_REAL64:
 3060              		.loc 1 1593 29 view .LVU957
 3061 0196 E1E0     		b	.L214
 3062              	.LVL355:
 3063              	.L220:
1431:Lib/ssc/src/objdef.c ****                         {
 3064              		.loc 1 1431 25 view .LVU958
 3065 0198 A3F51873 		sub	r3, r3, #608
 3066              	.LVL356:
1431:Lib/ssc/src/objdef.c ****                         {
 3067              		.loc 1 1431 25 view .LVU959
 3068 019c 9BB2     		uxth	r3, r3
 3069 019e 032B     		cmp	r3, #3
 3070 01a0 00F2AB81 		bhi	.L252
 3071              	.L224:
1636:Lib/ssc/src/objdef.c ****                             {
 3072              		.loc 1 1636 29 is_stmt 1 view .LVU960
1636:Lib/ssc/src/objdef.c ****                             {
 3073              		.loc 1 1636 31 is_stmt 0 view .LVU961
 3074 01a4 10F00F0F 		tst	r0, #15
 3075 01a8 40F0C881 		bne	.L264
1645:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 3076              		.loc 1 1645 29 is_stmt 1 view .LVU962
1645:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 3077              		.loc 1 1645 60 is_stmt 0 view .LVU963
 3078 01ac 6A88     		ldrh	r2, [r5, #2]
 3079 01ae 0732     		adds	r2, r2, #7
1645:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 3080              		.loc 1 1645 29 view .LVU964
 3081 01b0 D210     		asrs	r2, r2, #3
 3082 01b2 4146     		mov	r1, r8
 3083 01b4 4846     		mov	r0, r9
 3084              	.LVL357:
1645:Lib/ssc/src/objdef.c **** /*ECATCHANGE_START(V5.11) SDO2*/
 3085              		.loc 1 1645 29 view .LVU965
 3086 01b6 FFF7FEFF 		bl	memcpy
 3087              	.LVL358:
1647:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
 3088              		.loc 1 1647 29 is_stmt 1 view .LVU966
1647:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
ARM GAS  /tmp/ccHv31r6.s 			page 96


 3089              		.loc 1 1647 38 is_stmt 0 view .LVU967
 3090 01ba 6B88     		ldrh	r3, [r5, #2]
 3091 01bc 1B09     		lsrs	r3, r3, #4
1647:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
 3092              		.loc 1 1647 35 view .LVU968
 3093 01be 08EB4308 		add	r8, r8, r3, lsl #1
 3094              	.LVL359:
1650:Lib/ssc/src/objdef.c ****                         default:
 3095              		.loc 1 1650 29 is_stmt 1 view .LVU969
 3096              	.LBE56:
1658:Lib/ssc/src/objdef.c **** 
 3097              		.loc 1 1658 30 is_stmt 0 view .LVU970
 3098 01c2 0123     		movs	r3, #1
 3099 01c4 0893     		str	r3, [sp, #32]
 3100              	.LVL360:
 3101              	.LBB57:
1650:Lib/ssc/src/objdef.c ****                         default:
 3102              		.loc 1 1650 29 view .LVU971
 3103 01c6 C9E0     		b	.L214
 3104              	.LVL361:
 3105              	.L226:
1434:Lib/ssc/src/objdef.c ****                             {
 3106              		.loc 1 1434 29 is_stmt 1 view .LVU972
1434:Lib/ssc/src/objdef.c ****                             {
 3107              		.loc 1 1434 31 is_stmt 0 view .LVU973
 3108 01c8 049B     		ldr	r3, [sp, #16]
 3109              	.LVL362:
1434:Lib/ssc/src/objdef.c ****                             {
 3110              		.loc 1 1434 31 view .LVU974
 3111 01ca 002B     		cmp	r3, #0
 3112 01cc 00F09881 		beq	.L253
1437:Lib/ssc/src/objdef.c ****                                     && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 3113              		.loc 1 1437 33 is_stmt 1 view .LVU975
1437:Lib/ssc/src/objdef.c ****                                     && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 3114              		.loc 1 1437 45 is_stmt 0 view .LVU976
 3115 01d0 6B88     		ldrh	r3, [r5, #2]
1437:Lib/ssc/src/objdef.c ****                                     && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 3116              		.loc 1 1437 36 view .LVU977
 3117 01d2 13F00F0F 		tst	r3, #15
 3118 01d6 05D0     		beq	.L227
1438:Lib/ssc/src/objdef.c ****                                 {
 3119              		.loc 1 1438 74 view .LVU978
 3120 01d8 1844     		add	r0, r0, r3
 3121              	.LVL363:
1438:Lib/ssc/src/objdef.c ****                                 {
 3122              		.loc 1 1438 37 view .LVU979
 3123 01da 10F00F0F 		tst	r0, #15
 3124 01de 01D1     		bne	.L227
1441:Lib/ssc/src/objdef.c ****                                 }
 3125              		.loc 1 1441 37 is_stmt 1 view .LVU980
1441:Lib/ssc/src/objdef.c ****                                 }
 3126              		.loc 1 1441 42 is_stmt 0 view .LVU981
 3127 01e0 08F10208 		add	r8, r8, #2
 3128              	.LVL364:
 3129              	.L227:
1445:Lib/ssc/src/objdef.c ****                             }
 3130              		.loc 1 1445 33 is_stmt 1 view .LVU982
ARM GAS  /tmp/ccHv31r6.s 			page 97


1445:Lib/ssc/src/objdef.c ****                             }
 3131              		.loc 1 1445 70 is_stmt 0 view .LVU983
 3132 01e4 C3F30313 		ubfx	r3, r3, #4, #4
1445:Lib/ssc/src/objdef.c ****                             }
 3133              		.loc 1 1445 39 view .LVU984
 3134 01e8 08EB4308 		add	r8, r8, r3, lsl #1
 3135              	.LVL365:
1451:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BOOLEAN:
 3136              		.loc 1 1451 29 is_stmt 1 view .LVU985
 3137              	.LBE57:
1658:Lib/ssc/src/objdef.c **** 
 3138              		.loc 1 1658 30 is_stmt 0 view .LVU986
 3139 01ec 0123     		movs	r3, #1
 3140 01ee 0893     		str	r3, [sp, #32]
 3141              	.LVL366:
 3142              	.LBB58:
1451:Lib/ssc/src/objdef.c ****                         case     DEFTYPE_BOOLEAN:
 3143              		.loc 1 1451 29 view .LVU987
 3144 01f0 B4E0     		b	.L214
 3145              	.LVL367:
 3146              	.L221:
 3147              	.LBB50:
1472:Lib/ssc/src/objdef.c **** 
 3148              		.loc 1 1472 29 is_stmt 1 view .LVU988
1474:Lib/ssc/src/objdef.c **** 
 3149              		.loc 1 1474 29 view .LVU989
1474:Lib/ssc/src/objdef.c **** 
 3150              		.loc 1 1474 54 is_stmt 0 view .LVU990
 3151 01f2 6A88     		ldrh	r2, [r5, #2]
1474:Lib/ssc/src/objdef.c **** 
 3152              		.loc 1 1474 47 view .LVU991
 3153 01f4 4E4B     		ldr	r3, .L270+4
 3154              	.LVL368:
1474:Lib/ssc/src/objdef.c **** 
 3155              		.loc 1 1474 47 view .LVU992
 3156 01f6 33F81210 		ldrh	r1, [r3, r2, lsl #1]
1474:Lib/ssc/src/objdef.c **** 
 3157              		.loc 1 1474 81 view .LVU993
 3158 01fa 00F00F0C 		and	ip, r0, #15
1474:Lib/ssc/src/objdef.c **** 
 3159              		.loc 1 1474 67 view .LVU994
 3160 01fe 01FA0CF2 		lsl	r2, r1, ip
1474:Lib/ssc/src/objdef.c **** 
 3161              		.loc 1 1474 37 view .LVU995
 3162 0202 97B2     		uxth	r7, r2
 3163              	.LVL369:
1477:Lib/ssc/src/objdef.c **** 
 3164              		.loc 1 1477 29 is_stmt 1 view .LVU996
1477:Lib/ssc/src/objdef.c **** 
 3165              		.loc 1 1477 38 is_stmt 0 view .LVU997
 3166 0204 B9F80030 		ldrh	r3, [r9]
 3167              	.LVL370:
1480:Lib/ssc/src/objdef.c **** 
 3168              		.loc 1 1480 29 is_stmt 1 view .LVU998
1480:Lib/ssc/src/objdef.c **** 
 3169              		.loc 1 1480 38 is_stmt 0 view .LVU999
 3170 0208 23EA0203 		bic	r3, r3, r2
ARM GAS  /tmp/ccHv31r6.s 			page 98


 3171              	.LVL371:
1480:Lib/ssc/src/objdef.c **** 
 3172              		.loc 1 1480 38 view .LVU1000
 3173 020c 1AB2     		sxth	r2, r3
 3174 020e 9E46     		mov	lr, r3
 3175              	.LVL372:
1483:Lib/ssc/src/objdef.c ****                             {
 3176              		.loc 1 1483 29 is_stmt 1 view .LVU1001
1483:Lib/ssc/src/objdef.c ****                             {
 3177              		.loc 1 1483 32 is_stmt 0 view .LVU1002
 3178 0210 049B     		ldr	r3, [sp, #16]
 3179 0212 8BB1     		cbz	r3, .L228
1486:Lib/ssc/src/objdef.c ****                             }
 3180              		.loc 1 1486 33 is_stmt 1 view .LVU1003
1486:Lib/ssc/src/objdef.c ****                             }
 3181              		.loc 1 1486 46 is_stmt 0 view .LVU1004
 3182 0214 B8F80020 		ldrh	r2, [r8]
1486:Lib/ssc/src/objdef.c ****                             }
 3183              		.loc 1 1486 42 view .LVU1005
 3184 0218 3A40     		ands	r2, r2, r7
 3185 021a 4EEA0203 		orr	r3, lr, r2
 3186              	.LVL373:
 3187              	.L229:
1504:Lib/ssc/src/objdef.c **** 
 3188              		.loc 1 1504 29 is_stmt 1 view .LVU1006
1504:Lib/ssc/src/objdef.c **** 
 3189              		.loc 1 1504 40 is_stmt 0 view .LVU1007
 3190 021e A9F80030 		strh	r3, [r9]	@ movhi
1506:Lib/ssc/src/objdef.c ****                                 /* we have reached the UINT16 border */
 3191              		.loc 1 1506 29 is_stmt 1 view .LVU1008
1506:Lib/ssc/src/objdef.c ****                                 /* we have reached the UINT16 border */
 3192              		.loc 1 1506 52 is_stmt 0 view .LVU1009
 3193 0222 6B88     		ldrh	r3, [r5, #2]
 3194              	.LVL374:
1506:Lib/ssc/src/objdef.c ****                                 /* we have reached the UINT16 border */
 3195              		.loc 1 1506 65 view .LVU1010
 3196 0224 1844     		add	r0, r0, r3
 3197              	.LVL375:
1506:Lib/ssc/src/objdef.c ****                                 /* we have reached the UINT16 border */
 3198              		.loc 1 1506 32 view .LVU1011
 3199 0226 10F00F0F 		tst	r0, #15
 3200 022a 40F04A81 		bne	.L255
1508:Lib/ssc/src/objdef.c ****                         }
 3201              		.loc 1 1508 33 is_stmt 1 view .LVU1012
1508:Lib/ssc/src/objdef.c ****                         }
 3202              		.loc 1 1508 38 is_stmt 0 view .LVU1013
 3203 022e 08F10208 		add	r8, r8, #2
 3204              	.LVL376:
1508:Lib/ssc/src/objdef.c ****                         }
 3205              		.loc 1 1508 38 view .LVU1014
 3206              	.LBE50:
 3207              	.LBE58:
1658:Lib/ssc/src/objdef.c **** 
 3208              		.loc 1 1658 30 view .LVU1015
 3209 0232 0123     		movs	r3, #1
 3210 0234 0893     		str	r3, [sp, #32]
 3211              	.LVL377:
ARM GAS  /tmp/ccHv31r6.s 			page 99


1658:Lib/ssc/src/objdef.c **** 
 3212              		.loc 1 1658 30 view .LVU1016
 3213 0236 91E0     		b	.L214
 3214              	.LVL378:
 3215              	.L228:
 3216              	.LBB59:
 3217              	.LBB51:
1490:Lib/ssc/src/objdef.c ****                                 {
 3218              		.loc 1 1490 33 is_stmt 1 view .LVU1017
1490:Lib/ssc/src/objdef.c ****                                 {
 3219              		.loc 1 1490 37 is_stmt 0 view .LVU1018
 3220 0238 B8F80030 		ldrh	r3, [r8]
1490:Lib/ssc/src/objdef.c ****                                 {
 3221              		.loc 1 1490 35 view .LVU1019
 3222 023c 33EA0107 		bics	r7, r3, r1
 3223              	.LVL379:
1490:Lib/ssc/src/objdef.c ****                                 {
 3224              		.loc 1 1490 35 view .LVU1020
 3225 0240 40F06181 		bne	.L254
1498:Lib/ssc/src/objdef.c ****                                 }
 3226              		.loc 1 1498 37 is_stmt 1 view .LVU1021
1498:Lib/ssc/src/objdef.c ****                                 }
 3227              		.loc 1 1498 70 is_stmt 0 view .LVU1022
 3228 0244 0B40     		ands	r3, r3, r1
1498:Lib/ssc/src/objdef.c ****                                 }
 3229              		.loc 1 1498 101 view .LVU1023
 3230 0246 03FA0CF3 		lsl	r3, r3, ip
1498:Lib/ssc/src/objdef.c ****                                 }
 3231              		.loc 1 1498 46 view .LVU1024
 3232 024a 1343     		orrs	r3, r3, r2
 3233 024c 9BB2     		uxth	r3, r3
 3234              	.LVL380:
1498:Lib/ssc/src/objdef.c ****                                 }
 3235              		.loc 1 1498 46 view .LVU1025
 3236 024e E6E7     		b	.L229
 3237              	.LVL381:
 3238              	.L218:
1498:Lib/ssc/src/objdef.c ****                                 }
 3239              		.loc 1 1498 46 view .LVU1026
 3240              	.LBE51:
1518:Lib/ssc/src/objdef.c ****                             {
 3241              		.loc 1 1518 29 is_stmt 1 view .LVU1027
1518:Lib/ssc/src/objdef.c ****                             {
 3242              		.loc 1 1518 31 is_stmt 0 view .LVU1028
 3243 0250 10F00F0F 		tst	r0, #15
 3244 0254 40F05A81 		bne	.L256
 3245              	.LBB52:
1528:Lib/ssc/src/objdef.c ****                             if(bClearSubindex0Required && (pVarPtr[0] != u16NewData))
 3246              		.loc 1 1528 29 is_stmt 1 view .LVU1029
1528:Lib/ssc/src/objdef.c ****                             if(bClearSubindex0Required && (pVarPtr[0] != u16NewData))
 3247              		.loc 1 1528 36 is_stmt 0 view .LVU1030
 3248 0258 B8F80050 		ldrh	r5, [r8]
 3249              	.LVL382:
1529:Lib/ssc/src/objdef.c ****                             {
 3250              		.loc 1 1529 29 is_stmt 1 view .LVU1031
1529:Lib/ssc/src/objdef.c ****                             {
 3251              		.loc 1 1529 31 is_stmt 0 view .LVU1032
ARM GAS  /tmp/ccHv31r6.s 			page 100


 3252 025c 099B     		ldr	r3, [sp, #36]
 3253 025e 23B1     		cbz	r3, .L230
1529:Lib/ssc/src/objdef.c ****                             {
 3254              		.loc 1 1529 67 discriminator 1 view .LVU1033
 3255 0260 B9F80030 		ldrh	r3, [r9]
1529:Lib/ssc/src/objdef.c ****                             {
 3256              		.loc 1 1529 56 discriminator 1 view .LVU1034
 3257 0264 AB42     		cmp	r3, r5
 3258 0266 40F05481 		bne	.L257
 3259              	.L230:
1536:Lib/ssc/src/objdef.c ****                             {
 3260              		.loc 1 1536 29 is_stmt 1 view .LVU1035
1536:Lib/ssc/src/objdef.c ****                             {
 3261              		.loc 1 1536 32 is_stmt 0 view .LVU1036
 3262 026a 059B     		ldr	r3, [sp, #20]
 3263 026c A3F5E053 		sub	r3, r3, #7168
 3264 0270 103B     		subs	r3, r3, #16
 3265 0272 9BB2     		uxth	r3, r3
1536:Lib/ssc/src/objdef.c ****                             {
 3266              		.loc 1 1536 31 view .LVU1037
 3267 0274 1F2B     		cmp	r3, #31
 3268 0276 0ED8     		bhi	.L231
1538:Lib/ssc/src/objdef.c ****                                 {
 3269              		.loc 1 1538 33 is_stmt 1 view .LVU1038
1538:Lib/ssc/src/objdef.c ****                                 {
 3270              		.loc 1 1538 37 is_stmt 0 view .LVU1039
 3271 0278 A5F5B053 		sub	r3, r5, #5632
 3272 027c 9BB2     		uxth	r3, r3
1538:Lib/ssc/src/objdef.c ****                                 {
 3273              		.loc 1 1538 36 view .LVU1040
 3274 027e B3F5007F 		cmp	r3, #512
 3275 0282 08D3     		bcc	.L231
1538:Lib/ssc/src/objdef.c ****                                 {
 3276              		.loc 1 1538 63 discriminator 1 view .LVU1041
 3277 0284 A5F5D053 		sub	r3, r5, #6656
 3278 0288 9BB2     		uxth	r3, r3
1538:Lib/ssc/src/objdef.c ****                                 {
 3279              		.loc 1 1538 60 discriminator 1 view .LVU1042
 3280 028a B3F5007F 		cmp	r3, #512
 3281 028e 02D3     		bcc	.L231
1538:Lib/ssc/src/objdef.c ****                                 {
 3282              		.loc 1 1538 86 discriminator 2 view .LVU1043
 3283 0290 002D     		cmp	r5, #0
 3284 0292 40F04181 		bne	.L258
 3285              	.L231:
1544:Lib/ssc/src/objdef.c ****                             {
 3286              		.loc 1 1544 29 is_stmt 1 view .LVU1044
1544:Lib/ssc/src/objdef.c ****                             {
 3287              		.loc 1 1544 49 is_stmt 0 view .LVU1045
 3288 0296 059B     		ldr	r3, [sp, #20]
 3289 0298 A3F5E153 		sub	r3, r3, #7200
 3290 029c 123B     		subs	r3, r3, #18
 3291 029e 9BB2     		uxth	r3, r3
1544:Lib/ssc/src/objdef.c ****                             {
 3292              		.loc 1 1544 31 view .LVU1046
 3293 02a0 012B     		cmp	r3, #1
 3294 02a2 06D9     		bls	.L266
ARM GAS  /tmp/ccHv31r6.s 			page 101


 3295              	.LVL383:
 3296              	.L232:
1559:Lib/ssc/src/objdef.c ****                             pData++;
 3297              		.loc 1 1559 29 is_stmt 1 view .LVU1047
1559:Lib/ssc/src/objdef.c ****                             pData++;
 3298              		.loc 1 1559 40 is_stmt 0 view .LVU1048
 3299 02a4 A9F80050 		strh	r5, [r9]	@ movhi
1560:Lib/ssc/src/objdef.c ****                             }
 3300              		.loc 1 1560 29 is_stmt 1 view .LVU1049
1560:Lib/ssc/src/objdef.c ****                             }
 3301              		.loc 1 1560 34 is_stmt 0 view .LVU1050
 3302 02a8 08F10208 		add	r8, r8, #2
 3303              	.LVL384:
1560:Lib/ssc/src/objdef.c ****                             }
 3304              		.loc 1 1560 34 view .LVU1051
 3305              	.LBE52:
1562:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_UNSIGNED32:
 3306              		.loc 1 1562 29 is_stmt 1 view .LVU1052
 3307              	.LBE59:
1658:Lib/ssc/src/objdef.c **** 
 3308              		.loc 1 1658 30 is_stmt 0 view .LVU1053
 3309 02ac 0123     		movs	r3, #1
 3310 02ae 0893     		str	r3, [sp, #32]
 3311              	.LVL385:
 3312              	.LBB60:
1562:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_UNSIGNED32:
 3313              		.loc 1 1562 29 view .LVU1054
 3314 02b0 54E0     		b	.L214
 3315              	.LVL386:
 3316              	.L266:
 3317              	.LBB53:
1544:Lib/ssc/src/objdef.c ****                             {
 3318              		.loc 1 1544 69 discriminator 1 view .LVU1055
 3319 02b2 012C     		cmp	r4, #1
 3320 02b4 F6D1     		bne	.L232
1547:Lib/ssc/src/objdef.c ****                                 {
 3321              		.loc 1 1547 33 is_stmt 1 view .LVU1056
1547:Lib/ssc/src/objdef.c ****                                 {
 3322              		.loc 1 1547 43 is_stmt 0 view .LVU1057
 3323 02b6 B9F80030 		ldrh	r3, [r9]
1547:Lib/ssc/src/objdef.c ****                                 {
 3324              		.loc 1 1547 35 view .LVU1058
 3325 02ba AB42     		cmp	r3, r5
 3326 02bc 07D0     		beq	.L233
1549:Lib/ssc/src/objdef.c **** 
 3327              		.loc 1 1549 37 is_stmt 1 view .LVU1059
1549:Lib/ssc/src/objdef.c **** 
 3328              		.loc 1 1549 46 is_stmt 0 view .LVU1060
 3329 02be 2946     		mov	r1, r5
 3330 02c0 0598     		ldr	r0, [sp, #20]
 3331              	.LVL387:
1549:Lib/ssc/src/objdef.c **** 
 3332              		.loc 1 1549 46 view .LVU1061
 3333 02c2 FFF7FEFF 		bl	CheckSyncTypeValue
 3334              	.LVL388:
1551:Lib/ssc/src/objdef.c ****                                         return result;
 3335              		.loc 1 1551 37 is_stmt 1 view .LVU1062
ARM GAS  /tmp/ccHv31r6.s 			page 102


1551:Lib/ssc/src/objdef.c ****                                         return result;
 3336              		.loc 1 1551 39 is_stmt 0 view .LVU1063
 3337 02c6 0390     		str	r0, [sp, #12]
 3338 02c8 0028     		cmp	r0, #0
 3339 02ca 7FF41AAF 		bne	.L205
 3340              	.LVL389:
 3341              	.L233:
1556:Lib/ssc/src/objdef.c ****                             }
 3342              		.loc 1 1556 33 is_stmt 1 view .LVU1064
1556:Lib/ssc/src/objdef.c ****                             }
 3343              		.loc 1 1556 48 is_stmt 0 view .LVU1065
 3344 02ce 194B     		ldr	r3, .L270+8
 3345 02d0 0122     		movs	r2, #1
 3346 02d2 1A70     		strb	r2, [r3]
 3347 02d4 E6E7     		b	.L232
 3348              	.LVL390:
 3349              	.L223:
1556:Lib/ssc/src/objdef.c ****                             }
 3350              		.loc 1 1556 48 view .LVU1066
 3351              	.LBE53:
1598:Lib/ssc/src/objdef.c ****                             {
 3352              		.loc 1 1598 29 is_stmt 1 view .LVU1067
1598:Lib/ssc/src/objdef.c ****                             {
 3353              		.loc 1 1598 31 is_stmt 0 view .LVU1068
 3354 02d6 10F00F0F 		tst	r0, #15
 3355 02da 40F02981 		bne	.L262
1606:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
 3356              		.loc 1 1606 29 is_stmt 1 view .LVU1069
1606:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
 3357              		.loc 1 1606 47 is_stmt 0 view .LVU1070
 3358 02de B8F80030 		ldrh	r3, [r8]
 3359              	.LVL391:
1606:Lib/ssc/src/objdef.c ****                             pVarPtr[1] = pData[1];
 3360              		.loc 1 1606 40 view .LVU1071
 3361 02e2 A9F80030 		strh	r3, [r9]	@ movhi
1607:Lib/ssc/src/objdef.c ****                             pVarPtr[2] = pData[2];
 3362              		.loc 1 1607 29 is_stmt 1 view .LVU1072
1607:Lib/ssc/src/objdef.c ****                             pVarPtr[2] = pData[2];
 3363              		.loc 1 1607 40 is_stmt 0 view .LVU1073
 3364 02e6 B8F80230 		ldrh	r3, [r8, #2]
 3365 02ea A9F80230 		strh	r3, [r9, #2]	@ movhi
1608:Lib/ssc/src/objdef.c ****                             pVarPtr[3] = pData[3];
 3366              		.loc 1 1608 29 is_stmt 1 view .LVU1074
1608:Lib/ssc/src/objdef.c ****                             pVarPtr[3] = pData[3];
 3367              		.loc 1 1608 40 is_stmt 0 view .LVU1075
 3368 02ee B8F80430 		ldrh	r3, [r8, #4]
 3369 02f2 A9F80430 		strh	r3, [r9, #4]	@ movhi
1609:Lib/ssc/src/objdef.c ****                             pData += 4;
 3370              		.loc 1 1609 29 is_stmt 1 view .LVU1076
1609:Lib/ssc/src/objdef.c ****                             pData += 4;
 3371              		.loc 1 1609 40 is_stmt 0 view .LVU1077
 3372 02f6 B8F80630 		ldrh	r3, [r8, #6]
 3373 02fa A9F80630 		strh	r3, [r9, #6]	@ movhi
1610:Lib/ssc/src/objdef.c ****                             break;
 3374              		.loc 1 1610 29 is_stmt 1 view .LVU1078
1610:Lib/ssc/src/objdef.c ****                             break;
 3375              		.loc 1 1610 35 is_stmt 0 view .LVU1079
ARM GAS  /tmp/ccHv31r6.s 			page 103


 3376 02fe 08F10808 		add	r8, r8, #8
 3377              	.LVL392:
1611:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_VISIBLESTRING:
 3378              		.loc 1 1611 29 is_stmt 1 view .LVU1080
 3379              	.LBE60:
1658:Lib/ssc/src/objdef.c **** 
 3380              		.loc 1 1658 30 is_stmt 0 view .LVU1081
 3381 0302 0123     		movs	r3, #1
 3382 0304 0893     		str	r3, [sp, #32]
 3383              	.LVL393:
 3384              	.LBB61:
1611:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_VISIBLESTRING:
 3385              		.loc 1 1611 29 view .LVU1082
 3386 0306 29E0     		b	.L214
 3387              	.LVL394:
 3388              	.L225:
1614:Lib/ssc/src/objdef.c ****                             {
 3389              		.loc 1 1614 29 is_stmt 1 view .LVU1083
1614:Lib/ssc/src/objdef.c ****                             {
 3390              		.loc 1 1614 31 is_stmt 0 view .LVU1084
 3391 0308 10F00F0F 		tst	r0, #15
 3392 030c 40F01381 		bne	.L263
1621:Lib/ssc/src/objdef.c **** 
 3393              		.loc 1 1621 29 is_stmt 1 view .LVU1085
1621:Lib/ssc/src/objdef.c **** 
 3394              		.loc 1 1621 60 is_stmt 0 view .LVU1086
 3395 0310 6A88     		ldrh	r2, [r5, #2]
 3396 0312 0732     		adds	r2, r2, #7
1621:Lib/ssc/src/objdef.c **** 
 3397              		.loc 1 1621 29 view .LVU1087
 3398 0314 D210     		asrs	r2, r2, #3
 3399 0316 4146     		mov	r1, r8
 3400 0318 4846     		mov	r0, r9
 3401              	.LVL395:
1621:Lib/ssc/src/objdef.c **** 
 3402              		.loc 1 1621 29 view .LVU1088
 3403 031a FFF7FEFF 		bl	memcpy
 3404              	.LVL396:
1624:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
 3405              		.loc 1 1624 29 is_stmt 1 view .LVU1089
1624:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
 3406              		.loc 1 1624 38 is_stmt 0 view .LVU1090
 3407 031e 6B88     		ldrh	r3, [r5, #2]
 3408 0320 1B09     		lsrs	r3, r3, #4
1624:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO2*/
 3409              		.loc 1 1624 35 view .LVU1091
 3410 0322 08EB4308 		add	r8, r8, r3, lsl #1
 3411              	.LVL397:
1626:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_OCTETSTRING:
 3412              		.loc 1 1626 29 is_stmt 1 view .LVU1092
 3413              	.LBE61:
1658:Lib/ssc/src/objdef.c **** 
 3414              		.loc 1 1658 30 is_stmt 0 view .LVU1093
 3415 0326 0123     		movs	r3, #1
 3416 0328 0893     		str	r3, [sp, #32]
 3417              	.LVL398:
 3418              	.LBB62:
ARM GAS  /tmp/ccHv31r6.s 			page 104


1626:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_OCTETSTRING:
 3419              		.loc 1 1626 29 view .LVU1094
 3420 032a 17E0     		b	.L214
 3421              	.L271:
 3422              		.align	2
 3423              	.L270:
 3424 032c 00000000 		.word	nAlStatus
 3425 0330 00000000 		.word	.LANCHOR3
 3426 0334 00000000 		.word	.LANCHOR4
 3427              	.LVL399:
 3428              	.L211:
1626:Lib/ssc/src/objdef.c ****                         case    DEFTYPE_OCTETSTRING:
 3429              		.loc 1 1626 29 view .LVU1095
 3430              	.LBE62:
 3431              	.LBE47:
1664:Lib/ssc/src/objdef.c ****                 {
 3432              		.loc 1 1664 17 is_stmt 1 view .LVU1096
1664:Lib/ssc/src/objdef.c ****                 {
 3433              		.loc 1 1664 19 is_stmt 0 view .LVU1097
 3434 0338 002C     		cmp	r4, #0
 3435 033a 00F0BD80 		beq	.L267
1672:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 3436              		.loc 1 1672 21 is_stmt 1 view .LVU1098
1672:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 3437              		.loc 1 1672 33 is_stmt 0 view .LVU1099
 3438 033e 6B88     		ldrh	r3, [r5, #2]
1672:Lib/ssc/src/objdef.c ****                         && (((bitOffset + pEntry->BitLength) & 0x0F) == 0 ))
 3439              		.loc 1 1672 24 view .LVU1100
 3440 0340 13F00F0F 		tst	r3, #15
 3441 0344 05D0     		beq	.L236
1673:Lib/ssc/src/objdef.c ****                     {
 3442              		.loc 1 1673 62 view .LVU1101
 3443 0346 1844     		add	r0, r0, r3
 3444              	.LVL400:
1673:Lib/ssc/src/objdef.c ****                     {
 3445              		.loc 1 1673 25 view .LVU1102
 3446 0348 10F00F0F 		tst	r0, #15
 3447 034c 01D1     		bne	.L236
1676:Lib/ssc/src/objdef.c ****                     }
 3448              		.loc 1 1676 25 is_stmt 1 view .LVU1103
1676:Lib/ssc/src/objdef.c ****                     }
 3449              		.loc 1 1676 30 is_stmt 0 view .LVU1104
 3450 034e 08F10208 		add	r8, r8, #2
 3451              	.LVL401:
 3452              	.L236:
1681:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
 3453              		.loc 1 1681 21 is_stmt 1 view .LVU1105
1681:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
 3454              		.loc 1 1681 60 is_stmt 0 view .LVU1106
 3455 0352 1B09     		lsrs	r3, r3, #4
1681:Lib/ssc/src/objdef.c **** /*ECATCHANGE_END(V5.11) SDO9*/
 3456              		.loc 1 1681 27 view .LVU1107
 3457 0354 08EB4308 		add	r8, r8, r3, lsl #1
 3458              	.LVL402:
1685:Lib/ssc/src/objdef.c ****             }
 3459              		.loc 1 1685 24 view .LVU1108
 3460 0358 1823     		movs	r3, #24
ARM GAS  /tmp/ccHv31r6.s 			page 105


 3461 035a 0393     		str	r3, [sp, #12]
 3462              	.LVL403:
 3463              	.L214:
1685:Lib/ssc/src/objdef.c ****             }
 3464              		.loc 1 1685 24 view .LVU1109
 3465              	.LBE46:
1369:Lib/ssc/src/objdef.c ****         {
 3466              		.loc 1 1369 47 is_stmt 1 discriminator 2 view .LVU1110
1369:Lib/ssc/src/objdef.c ****         {
 3467              		.loc 1 1369 48 is_stmt 0 discriminator 2 view .LVU1111
 3468 035c 0134     		adds	r4, r4, #1
 3469              	.LVL404:
1369:Lib/ssc/src/objdef.c ****         {
 3470              		.loc 1 1369 48 discriminator 2 view .LVU1112
 3471 035e A4B2     		uxth	r4, r4
 3472              	.LVL405:
 3473              	.L210:
1369:Lib/ssc/src/objdef.c ****         {
 3474              		.loc 1 1369 28 is_stmt 1 discriminator 1 view .LVU1113
1369:Lib/ssc/src/objdef.c ****         {
 3475              		.loc 1 1369 9 is_stmt 0 discriminator 1 view .LVU1114
 3476 0360 5445     		cmp	r4, r10
 3477 0362 00F2B180 		bhi	.L268
 3478              	.LBB69:
1372:Lib/ssc/src/objdef.c ****             UINT16 bitOffset = 0;
 3479              		.loc 1 1372 13 is_stmt 1 view .LVU1115
1372:Lib/ssc/src/objdef.c ****             UINT16 bitOffset = 0;
 3480              		.loc 1 1372 28 is_stmt 0 view .LVU1116
 3481 0366 D6F81890 		ldr	r9, [r6, #24]
 3482              	.LVL406:
1373:Lib/ssc/src/objdef.c **** 
 3483              		.loc 1 1373 13 is_stmt 1 view .LVU1117
1376:Lib/ssc/src/objdef.c **** 
 3484              		.loc 1 1376 13 view .LVU1118
1376:Lib/ssc/src/objdef.c **** 
 3485              		.loc 1 1376 22 is_stmt 0 view .LVU1119
 3486 036a E7B2     		uxtb	r7, r4
 3487 036c 3946     		mov	r1, r7
 3488 036e 3046     		mov	r0, r6
 3489 0370 FFF7FEFF 		bl	OBJ_GetEntryDesc
 3490              	.LVL407:
 3491 0374 0546     		mov	r5, r0
 3492              	.LVL408:
1379:Lib/ssc/src/objdef.c **** 
 3493              		.loc 1 1379 13 is_stmt 1 view .LVU1120
1379:Lib/ssc/src/objdef.c **** 
 3494              		.loc 1 1379 25 is_stmt 0 view .LVU1121
 3495 0376 3146     		mov	r1, r6
 3496 0378 3846     		mov	r0, r7
 3497              	.LVL409:
1379:Lib/ssc/src/objdef.c **** 
 3498              		.loc 1 1379 25 view .LVU1122
 3499 037a FFF7FEFF 		bl	OBJ_GetEntryOffset
 3500              	.LVL410:
1383:Lib/ssc/src/objdef.c ****             {
 3501              		.loc 1 1383 13 is_stmt 1 view .LVU1123
1383:Lib/ssc/src/objdef.c ****             {
ARM GAS  /tmp/ccHv31r6.s 			page 106


 3502              		.loc 1 1383 34 is_stmt 0 view .LVU1124
 3503 037e AB88     		ldrh	r3, [r5, #4]
1383:Lib/ssc/src/objdef.c ****             {
 3504              		.loc 1 1383 62 view .LVU1125
 3505 0380 9B10     		asrs	r3, r3, #2
1383:Lib/ssc/src/objdef.c ****             {
 3506              		.loc 1 1383 19 view .LVU1126
 3507 0382 03F00E03 		and	r3, r3, #14
1383:Lib/ssc/src/objdef.c ****             {
 3508              		.loc 1 1383 83 view .LVU1127
 3509 0386 6F4A     		ldr	r2, .L272
 3510 0388 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3511 038a 02F00F02 		and	r2, r2, #15
1383:Lib/ssc/src/objdef.c ****             {
 3512              		.loc 1 1383 16 view .LVU1128
 3513 038e 9342     		cmp	r3, r2
 3514 0390 D2DB     		blt	.L211
1386:Lib/ssc/src/objdef.c ****                 {
 3515              		.loc 1 1386 17 is_stmt 1 view .LVU1129
1386:Lib/ssc/src/objdef.c ****                 {
 3516              		.loc 1 1386 20 is_stmt 0 view .LVU1130
 3517 0392 1CB1     		cbz	r4, .L212
1389:Lib/ssc/src/objdef.c ****                 }
 3518              		.loc 1 1389 21 is_stmt 1 view .LVU1131
1389:Lib/ssc/src/objdef.c ****                 }
 3519              		.loc 1 1389 43 is_stmt 0 view .LVU1132
 3520 0394 C0F30F13 		ubfx	r3, r0, #4, #16
1389:Lib/ssc/src/objdef.c ****                 }
 3521              		.loc 1 1389 29 view .LVU1133
 3522 0398 09EB4309 		add	r9, r9, r3, lsl #1
 3523              	.LVL411:
 3524              	.L212:
1393:Lib/ssc/src/objdef.c ****                   || (bCompleteAccess && i >= subindex) )       /* complete access and entry should
 3525              		.loc 1 1393 17 is_stmt 1 view .LVU1134
1393:Lib/ssc/src/objdef.c ****                   || (bCompleteAccess && i >= subindex) )       /* complete access and entry should
 3526              		.loc 1 1393 20 is_stmt 0 view .LVU1135
 3527 039c 5C45     		cmp	r4, fp
 3528 039e 04D0     		beq	.L213
1394:Lib/ssc/src/objdef.c ****                 {
 3529              		.loc 1 1394 19 view .LVU1136
 3530 03a0 049B     		ldr	r3, [sp, #16]
 3531 03a2 002B     		cmp	r3, #0
 3532 03a4 DAD0     		beq	.L214
1394:Lib/ssc/src/objdef.c ****                 {
 3533              		.loc 1 1394 39 discriminator 1 view .LVU1137
 3534 03a6 5C45     		cmp	r4, fp
 3535 03a8 D8D3     		bcc	.L214
 3536              	.L213:
 3537              	.LBB66:
1396:Lib/ssc/src/objdef.c **** 
 3538              		.loc 1 1396 21 is_stmt 1 view .LVU1138
1399:Lib/ssc/src/objdef.c ****                     {
 3539              		.loc 1 1399 21 view .LVU1139
1399:Lib/ssc/src/objdef.c ****                     {
 3540              		.loc 1 1399 24 is_stmt 0 view .LVU1140
 3541 03aa 002C     		cmp	r4, #0
 3542 03ac 3FF4BCAE 		beq	.L269
ARM GAS  /tmp/ccHv31r6.s 			page 107


 3543              	.L215:
 3544              	.LBB63:
1418:Lib/ssc/src/objdef.c ****                         if (pEntry->DataType >= 0x700)
 3545              		.loc 1 1418 25 is_stmt 1 view .LVU1141
1418:Lib/ssc/src/objdef.c ****                         if (pEntry->DataType >= 0x700)
 3546              		.loc 1 1418 32 is_stmt 0 view .LVU1142
 3547 03b0 2B88     		ldrh	r3, [r5]
 3548              	.LVL412:
1419:Lib/ssc/src/objdef.c ****                         {
 3549              		.loc 1 1419 25 is_stmt 1 view .LVU1143
1419:Lib/ssc/src/objdef.c ****                         {
 3550              		.loc 1 1419 28 is_stmt 0 view .LVU1144
 3551 03b2 B3F5E06F 		cmp	r3, #1792
 3552 03b6 06D3     		bcc	.L216
1423:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
 3553              		.loc 1 1423 29 is_stmt 1 view .LVU1145
1423:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
 3554              		.loc 1 1423 40 is_stmt 0 view .LVU1146
 3555 03b8 6A88     		ldrh	r2, [r5, #2]
1423:Lib/ssc/src/objdef.c ****                                 dataType = DEFTYPE_BIT1-1+pEntry->BitLength;
 3556              		.loc 1 1423 32 view .LVU1147
 3557 03ba 082A     		cmp	r2, #8
 3558 03bc 3FF6C6AE 		bhi	.L217
1424:Lib/ssc/src/objdef.c ****                             else if ( pEntry->BitLength == 16 )
 3559              		.loc 1 1424 33 is_stmt 1 view .LVU1148
1424:Lib/ssc/src/objdef.c ****                             else if ( pEntry->BitLength == 16 )
 3560              		.loc 1 1424 42 is_stmt 0 view .LVU1149
 3561 03c0 02F12F03 		add	r3, r2, #47
 3562              	.LVL413:
1424:Lib/ssc/src/objdef.c ****                             else if ( pEntry->BitLength == 16 )
 3563              		.loc 1 1424 42 view .LVU1150
 3564 03c4 9BB2     		uxth	r3, r3
 3565              	.LVL414:
 3566              	.L216:
1431:Lib/ssc/src/objdef.c ****                         {
 3567              		.loc 1 1431 25 is_stmt 1 view .LVU1151
 3568 03c6 372B     		cmp	r3, #55
 3569 03c8 3FF6E6AE 		bhi	.L220
1431:Lib/ssc/src/objdef.c ****                         {
 3570              		.loc 1 1431 25 is_stmt 0 view .LVU1152
 3571 03cc 372B     		cmp	r3, #55
 3572 03ce 00F29180 		bhi	.L251
 3573 03d2 01A2     		adr	r2, .L222
 3574 03d4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3575              		.p2align 2
 3576              	.L222:
 3577 03d8 C9010000 		.word	.L226+1
 3578 03dc F3010000 		.word	.L221+1
 3579 03e0 F3010000 		.word	.L221+1
 3580 03e4 51020000 		.word	.L218+1
 3581 03e8 57010000 		.word	.L219+1
 3582 03ec F3010000 		.word	.L221+1
 3583 03f0 51020000 		.word	.L218+1
 3584 03f4 57010000 		.word	.L219+1
 3585 03f8 57010000 		.word	.L219+1
 3586 03fc 09030000 		.word	.L225+1
 3587 0400 A5010000 		.word	.L224+1
ARM GAS  /tmp/ccHv31r6.s 			page 108


 3588 0404 A5010000 		.word	.L224+1
 3589 0408 F5040000 		.word	.L251+1
 3590 040c F5040000 		.word	.L251+1
 3591 0410 F5040000 		.word	.L251+1
 3592 0414 F5040000 		.word	.L251+1
 3593 0418 F5040000 		.word	.L251+1
 3594 041c D7020000 		.word	.L223+1
 3595 0420 F5040000 		.word	.L251+1
 3596 0424 F5040000 		.word	.L251+1
 3597 0428 F5040000 		.word	.L251+1
 3598 042c D7020000 		.word	.L223+1
 3599 0430 F5040000 		.word	.L251+1
 3600 0434 F5040000 		.word	.L251+1
 3601 0438 F5040000 		.word	.L251+1
 3602 043c F5040000 		.word	.L251+1
 3603 0440 F5040000 		.word	.L251+1
 3604 0444 D7020000 		.word	.L223+1
 3605 0448 F5040000 		.word	.L251+1
 3606 044c F5040000 		.word	.L251+1
 3607 0450 F3010000 		.word	.L221+1
 3608 0454 51020000 		.word	.L218+1
 3609 0458 57010000 		.word	.L219+1
 3610 045c F5040000 		.word	.L251+1
 3611 0460 F5040000 		.word	.L251+1
 3612 0464 F5040000 		.word	.L251+1
 3613 0468 F5040000 		.word	.L251+1
 3614 046c F5040000 		.word	.L251+1
 3615 0470 F5040000 		.word	.L251+1
 3616 0474 F5040000 		.word	.L251+1
 3617 0478 F5040000 		.word	.L251+1
 3618 047c F5040000 		.word	.L251+1
 3619 0480 F5040000 		.word	.L251+1
 3620 0484 F5040000 		.word	.L251+1
 3621 0488 F5040000 		.word	.L251+1
 3622 048c F3010000 		.word	.L221+1
 3623 0490 51020000 		.word	.L218+1
 3624 0494 57010000 		.word	.L219+1
 3625 0498 F3010000 		.word	.L221+1
 3626 049c F3010000 		.word	.L221+1
 3627 04a0 F3010000 		.word	.L221+1
 3628 04a4 F3010000 		.word	.L221+1
 3629 04a8 F3010000 		.word	.L221+1
 3630 04ac F3010000 		.word	.L221+1
 3631 04b0 F3010000 		.word	.L221+1
 3632 04b4 F3010000 		.word	.L221+1
 3633              	.LVL415:
 3634              		.p2align 1
 3635              	.L267:
1431:Lib/ssc/src/objdef.c ****                         {
 3636              		.loc 1 1431 25 view .LVU1153
 3637              	.LBE63:
 3638              	.LBE66:
1667:Lib/ssc/src/objdef.c ****                 }
 3639              		.loc 1 1667 21 is_stmt 1 view .LVU1154
1667:Lib/ssc/src/objdef.c ****                 }
 3640              		.loc 1 1667 26 is_stmt 0 view .LVU1155
 3641 04b8 08F10208 		add	r8, r8, #2
ARM GAS  /tmp/ccHv31r6.s 			page 109


 3642              	.LVL416:
1685:Lib/ssc/src/objdef.c ****             }
 3643              		.loc 1 1685 24 view .LVU1156
 3644 04bc 1823     		movs	r3, #24
 3645 04be 0393     		str	r3, [sp, #12]
 3646              	.LVL417:
1685:Lib/ssc/src/objdef.c ****             }
 3647              		.loc 1 1685 24 view .LVU1157
 3648 04c0 4CE7     		b	.L214
 3649              	.LVL418:
 3650              	.L255:
 3651              	.LBB67:
1658:Lib/ssc/src/objdef.c **** 
 3652              		.loc 1 1658 30 view .LVU1158
 3653 04c2 0123     		movs	r3, #1
 3654 04c4 0893     		str	r3, [sp, #32]
 3655              	.LVL419:
1658:Lib/ssc/src/objdef.c **** 
 3656              		.loc 1 1658 30 view .LVU1159
 3657 04c6 49E7     		b	.L214
 3658              	.LVL420:
 3659              	.L268:
1658:Lib/ssc/src/objdef.c **** 
 3660              		.loc 1 1658 30 view .LVU1160
 3661              	.LBE67:
 3662              	.LBE69:
1689:Lib/ssc/src/objdef.c ****             /* we didn't write anything, so we have to return the stored error code */
 3663              		.loc 1 1689 9 is_stmt 1 view .LVU1161
1689:Lib/ssc/src/objdef.c ****             /* we didn't write anything, so we have to return the stored error code */
 3664              		.loc 1 1689 12 is_stmt 0 view .LVU1162
 3665 04c8 089B     		ldr	r3, [sp, #32]
 3666 04ca 002B     		cmp	r3, #0
 3667 04cc 3FF419AE 		beq	.L205
 3668              	.LBE45:
1694:Lib/ssc/src/objdef.c **** }
 3669              		.loc 1 1694 12 view .LVU1163
 3670 04d0 0023     		movs	r3, #0
 3671 04d2 0393     		str	r3, [sp, #12]
 3672              	.LVL421:
1694:Lib/ssc/src/objdef.c **** }
 3673              		.loc 1 1694 12 view .LVU1164
 3674 04d4 15E6     		b	.L205
 3675              	.LVL422:
 3676              	.L242:
1296:Lib/ssc/src/objdef.c **** 
 3677              		.loc 1 1296 20 view .LVU1165
 3678 04d6 0523     		movs	r3, #5
 3679 04d8 0393     		str	r3, [sp, #12]
 3680 04da 12E6     		b	.L205
 3681              	.L243:
1311:Lib/ssc/src/objdef.c ****     }
 3682              		.loc 1 1311 16 view .LVU1166
 3683 04dc 1123     		movs	r3, #17
 3684 04de 0393     		str	r3, [sp, #12]
 3685 04e0 0FE6     		b	.L205
 3686              	.LVL423:
 3687              	.L245:
ARM GAS  /tmp/ccHv31r6.s 			page 110


1334:Lib/ssc/src/objdef.c ****             }
 3688              		.loc 1 1334 24 view .LVU1167
 3689 04e2 1A23     		movs	r3, #26
 3690 04e4 0393     		str	r3, [sp, #12]
 3691 04e6 0CE6     		b	.L205
 3692              	.LVL424:
 3693              	.L249:
 3694              	.LBB71:
1364:Lib/ssc/src/objdef.c ****         }
 3695              		.loc 1 1364 19 view .LVU1168
 3696 04e8 0023     		movs	r3, #0
 3697 04ea 0393     		str	r3, [sp, #12]
 3698 04ec 09E6     		b	.L205
 3699              	.LVL425:
 3700              	.L250:
 3701              	.LBB70:
 3702              	.LBB68:
 3703              	.LBB64:
1405:Lib/ssc/src/objdef.c ****                         }
 3704              		.loc 1 1405 36 view .LVU1169
 3705 04ee 1323     		movs	r3, #19
 3706              	.LVL426:
1405:Lib/ssc/src/objdef.c ****                         }
 3707              		.loc 1 1405 36 view .LVU1170
 3708 04f0 0393     		str	r3, [sp, #12]
 3709              	.LVL427:
1405:Lib/ssc/src/objdef.c ****                         }
 3710              		.loc 1 1405 36 view .LVU1171
 3711 04f2 06E6     		b	.L205
 3712              	.LVL428:
 3713              	.L251:
1405:Lib/ssc/src/objdef.c ****                         }
 3714              		.loc 1 1405 36 view .LVU1172
 3715              	.LBE64:
 3716              	.LBB65:
1431:Lib/ssc/src/objdef.c ****                         {
 3717              		.loc 1 1431 25 view .LVU1173
 3718 04f4 1823     		movs	r3, #24
 3719              	.LVL429:
1431:Lib/ssc/src/objdef.c ****                         {
 3720              		.loc 1 1431 25 view .LVU1174
 3721 04f6 0393     		str	r3, [sp, #12]
 3722              	.LVL430:
1431:Lib/ssc/src/objdef.c ****                         {
 3723              		.loc 1 1431 25 view .LVU1175
 3724 04f8 03E6     		b	.L205
 3725              	.LVL431:
 3726              	.L252:
1431:Lib/ssc/src/objdef.c ****                         {
 3727              		.loc 1 1431 25 view .LVU1176
 3728 04fa 1823     		movs	r3, #24
 3729 04fc 0393     		str	r3, [sp, #12]
 3730              	.LVL432:
1431:Lib/ssc/src/objdef.c ****                         {
 3731              		.loc 1 1431 25 view .LVU1177
 3732 04fe 00E6     		b	.L205
 3733              	.LVL433:
ARM GAS  /tmp/ccHv31r6.s 			page 111


 3734              	.L253:
1449:Lib/ssc/src/objdef.c ****                             }
 3735              		.loc 1 1449 40 view .LVU1178
 3736 0500 1823     		movs	r3, #24
 3737 0502 0393     		str	r3, [sp, #12]
 3738              	.LVL434:
1449:Lib/ssc/src/objdef.c ****                             }
 3739              		.loc 1 1449 40 view .LVU1179
 3740 0504 FDE5     		b	.L205
 3741              	.LVL435:
 3742              	.L254:
 3743              	.LBB54:
1493:Lib/ssc/src/objdef.c ****                                 }
 3744              		.loc 1 1493 44 view .LVU1180
 3745 0506 1223     		movs	r3, #18
 3746 0508 0393     		str	r3, [sp, #12]
 3747              	.LVL436:
1493:Lib/ssc/src/objdef.c ****                                 }
 3748              		.loc 1 1493 44 view .LVU1181
 3749 050a FAE5     		b	.L205
 3750              	.LVL437:
 3751              	.L256:
1493:Lib/ssc/src/objdef.c ****                                 }
 3752              		.loc 1 1493 44 view .LVU1182
 3753              	.LBE54:
1521:Lib/ssc/src/objdef.c ****                             }
 3754              		.loc 1 1521 40 view .LVU1183
 3755 050c 0523     		movs	r3, #5
 3756 050e 0393     		str	r3, [sp, #12]
 3757              	.LVL438:
1521:Lib/ssc/src/objdef.c ****                             }
 3758              		.loc 1 1521 40 view .LVU1184
 3759 0510 F7E5     		b	.L205
 3760              	.LVL439:
 3761              	.L257:
 3762              	.LBB55:
1532:Lib/ssc/src/objdef.c ****                             }
 3763              		.loc 1 1532 40 view .LVU1185
 3764 0512 1C23     		movs	r3, #28
 3765 0514 0393     		str	r3, [sp, #12]
 3766              	.LVL440:
1532:Lib/ssc/src/objdef.c ****                             }
 3767              		.loc 1 1532 40 view .LVU1186
 3768 0516 F4E5     		b	.L205
 3769              	.LVL441:
 3770              	.L258:
1540:Lib/ssc/src/objdef.c ****                                 }
 3771              		.loc 1 1540 44 view .LVU1187
 3772 0518 1223     		movs	r3, #18
 3773 051a 0393     		str	r3, [sp, #12]
 3774              	.LVL442:
1540:Lib/ssc/src/objdef.c ****                                 }
 3775              		.loc 1 1540 44 view .LVU1188
 3776 051c F1E5     		b	.L205
 3777              	.LVL443:
 3778              	.L259:
1540:Lib/ssc/src/objdef.c ****                                 }
ARM GAS  /tmp/ccHv31r6.s 			page 112


 3779              		.loc 1 1540 44 view .LVU1189
 3780              	.LBE55:
1574:Lib/ssc/src/objdef.c ****                             }
 3781              		.loc 1 1574 40 view .LVU1190
 3782 051e 0523     		movs	r3, #5
 3783 0520 0393     		str	r3, [sp, #12]
 3784              	.LVL444:
1574:Lib/ssc/src/objdef.c ****                             }
 3785              		.loc 1 1574 40 view .LVU1191
 3786 0522 EEE5     		b	.L205
 3787              	.LVL445:
 3788              	.L260:
1586:Lib/ssc/src/objdef.c ****                             }
 3789              		.loc 1 1586 40 view .LVU1192
 3790 0524 1C23     		movs	r3, #28
 3791 0526 0393     		str	r3, [sp, #12]
 3792              	.LVL446:
1586:Lib/ssc/src/objdef.c ****                             }
 3793              		.loc 1 1586 40 view .LVU1193
 3794 0528 EBE5     		b	.L205
 3795              	.LVL447:
 3796              	.L261:
1586:Lib/ssc/src/objdef.c ****                             }
 3797              		.loc 1 1586 40 view .LVU1194
 3798 052a 1C23     		movs	r3, #28
 3799 052c 0393     		str	r3, [sp, #12]
 3800              	.LVL448:
1586:Lib/ssc/src/objdef.c ****                             }
 3801              		.loc 1 1586 40 view .LVU1195
 3802 052e E8E5     		b	.L205
 3803              	.LVL449:
 3804              	.L262:
1601:Lib/ssc/src/objdef.c ****                             }
 3805              		.loc 1 1601 40 view .LVU1196
 3806 0530 0523     		movs	r3, #5
 3807              	.LVL450:
1601:Lib/ssc/src/objdef.c ****                             }
 3808              		.loc 1 1601 40 view .LVU1197
 3809 0532 0393     		str	r3, [sp, #12]
 3810              	.LVL451:
1601:Lib/ssc/src/objdef.c ****                             }
 3811              		.loc 1 1601 40 view .LVU1198
 3812 0534 E5E5     		b	.L205
 3813              	.LVL452:
 3814              	.L263:
1617:Lib/ssc/src/objdef.c ****                             }
 3815              		.loc 1 1617 40 view .LVU1199
 3816 0536 0523     		movs	r3, #5
 3817              	.LVL453:
1617:Lib/ssc/src/objdef.c ****                             }
 3818              		.loc 1 1617 40 view .LVU1200
 3819 0538 0393     		str	r3, [sp, #12]
 3820              	.LVL454:
1617:Lib/ssc/src/objdef.c ****                             }
 3821              		.loc 1 1617 40 view .LVU1201
 3822 053a E2E5     		b	.L205
 3823              	.LVL455:
ARM GAS  /tmp/ccHv31r6.s 			page 113


 3824              	.L264:
1639:Lib/ssc/src/objdef.c ****                             }
 3825              		.loc 1 1639 40 view .LVU1202
 3826 053c 0523     		movs	r3, #5
 3827 053e 0393     		str	r3, [sp, #12]
 3828              	.LVL456:
1639:Lib/ssc/src/objdef.c ****                             }
 3829              		.loc 1 1639 40 view .LVU1203
 3830 0540 DFE5     		b	.L205
 3831              	.L273:
 3832 0542 00BF     		.align	2
 3833              	.L272:
 3834 0544 00000000 		.word	nAlStatus
 3835              	.LBE65:
 3836              	.LBE68:
 3837              	.LBE70:
 3838              	.LBE71:
 3839              		.cfi_endproc
 3840              	.LFE145:
 3842              		.global	cBitMask
 3843              		.global	aSubindexDesc
 3844              		.global	sErrorSettings
 3845              		.global	sSyncManInPar
 3846              		.global	sSyncManOutPar
 3847              		.global	sCycleDiag
 3848              		.global	bSyncSetByUser
 3849              		.section	.bss.bSyncSetByUser,"aw",%nobits
 3850              		.set	.LANCHOR4,. + 0
 3853              	bSyncSetByUser:
 3854 0000 00       		.space	1
 3855              		.section	.bss.sCycleDiag,"aw",%nobits
 3856              		.align	2
 3859              	sCycleDiag:
 3860 0000 0000     		.space	2
 3861              		.section	.bss.sSyncManInPar,"aw",%nobits
 3862              		.align	2
 3863              		.set	.LANCHOR2,. + 0
 3866              	sSyncManInPar:
 3867 0000 00000000 		.space	68
 3867      00000000 
 3867      00000000 
 3867      00000000 
 3867      00000000 
 3868              		.section	.bss.sSyncManOutPar,"aw",%nobits
 3869              		.align	2
 3870              		.set	.LANCHOR1,. + 0
 3873              	sSyncManOutPar:
 3874 0000 00000000 		.space	68
 3874      00000000 
 3874      00000000 
 3874      00000000 
 3874      00000000 
 3875              		.section	.data.aSubindexDesc,"aw"
 3876              		.align	2
 3877              		.set	.LANCHOR0,. + 0
 3880              	aSubindexDesc:
 3881 0000 53756249 		.ascii	"SubIndex 000\000"
ARM GAS  /tmp/ccHv31r6.s 			page 114


 3881      6E646578 
 3881      20303030 
 3881      00
 3882              		.section	.data.sErrorSettings,"aw"
 3883              		.align	2
 3886              	sErrorSettings:
 3887 0000 0200     		.short	2
 3888 0002 0000     		.space	2
 3889 0004 01000000 		.word	1
 3890 0008 0400     		.short	4
 3891 000a 0000     		.space	2
 3892              		.section	.rodata.cBitMask,"a"
 3893              		.align	2
 3894              		.set	.LANCHOR3,. + 0
 3897              	cBitMask:
 3898 0000 0000     		.short	0
 3899 0002 0100     		.short	1
 3900 0004 0300     		.short	3
 3901 0006 0700     		.short	7
 3902 0008 0F00     		.short	15
 3903 000a 1F00     		.short	31
 3904 000c 3F00     		.short	63
 3905 000e 7F00     		.short	127
 3906 0010 FF00     		.short	255
 3907 0012 FF01     		.short	511
 3908 0014 FF03     		.short	1023
 3909 0016 FF07     		.short	2047
 3910 0018 FF0F     		.short	4095
 3911 001a FF1F     		.short	8191
 3912 001c FF3F     		.short	16383
 3913 001e FF7F     		.short	32767
 3914              		.text
 3915              	.Letext0:
 3916              		.file 2 "Lib/ssc/include/ecatslv.h"
 3917              		.file 3 "Lib/ssc/include/sdoserv.h"
 3918              		.file 4 "Lib/ssc/include/objdef.h"
 3919              		.file 5 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 3920              		.file 6 "Lib/ssc_app/include/coeappl.h"
 3921              		.file 7 "<built-in>"
ARM GAS  /tmp/ccHv31r6.s 			page 115


DEFINED SYMBOLS
                            *ABS*:0000000000000000 objdef.c
     /tmp/ccHv31r6.s:20     .text.OBJ_GetObjectHandle:0000000000000000 $t
     /tmp/ccHv31r6.s:26     .text.OBJ_GetObjectHandle:0000000000000000 OBJ_GetObjectHandle
     /tmp/ccHv31r6.s:68     .text.OBJ_GetObjectLength:0000000000000000 $t
     /tmp/ccHv31r6.s:74     .text.OBJ_GetObjectLength:0000000000000000 OBJ_GetObjectLength
     /tmp/ccHv31r6.s:270    .text.OBJ_CopyNumberToString:0000000000000000 $t
     /tmp/ccHv31r6.s:276    .text.OBJ_CopyNumberToString:0000000000000000 OBJ_CopyNumberToString
     /tmp/ccHv31r6.s:326    .text.OBJ_CopyNumberToString:0000000000000040 $d
     /tmp/ccHv31r6.s:332    .text.OBJ_GetDesc:0000000000000000 $t
     /tmp/ccHv31r6.s:338    .text.OBJ_GetDesc:0000000000000000 OBJ_GetDesc
     /tmp/ccHv31r6.s:558    .text.OBJ_GetDesc:00000000000000cc $d
     /tmp/ccHv31r6.s:563    .text.OBJ_GetEntryDesc:0000000000000000 $t
     /tmp/ccHv31r6.s:569    .text.OBJ_GetEntryDesc:0000000000000000 OBJ_GetEntryDesc
     /tmp/ccHv31r6.s:627    .text.OBJ_GetNoOfObjects:0000000000000000 $t
     /tmp/ccHv31r6.s:633    .text.OBJ_GetNoOfObjects:0000000000000000 OBJ_GetNoOfObjects
     /tmp/ccHv31r6.s:777    .text.OBJ_GetObjectList:0000000000000000 $t
     /tmp/ccHv31r6.s:783    .text.OBJ_GetObjectList:0000000000000000 OBJ_GetObjectList
     /tmp/ccHv31r6.s:996    .text.OBJ_GetObjectList:00000000000000b8 $d
     /tmp/ccHv31r6.s:1001   .text.OBJ_GetObjDesc:0000000000000000 $t
     /tmp/ccHv31r6.s:1007   .text.OBJ_GetObjDesc:0000000000000000 OBJ_GetObjDesc
     /tmp/ccHv31r6.s:1025   .text.OBJ_GetEntryOffset:0000000000000000 $t
     /tmp/ccHv31r6.s:1031   .text.OBJ_GetEntryOffset:0000000000000000 OBJ_GetEntryOffset
     /tmp/ccHv31r6.s:1190   .text.OBJ_GetEntryOffset:00000000000000a0 $d
     /tmp/ccHv31r6.s:1235   .text.OBJ_GetEntryOffset:0000000000000154 $t
     /tmp/ccHv31r6.s:1291   .text.CheckSyncTypeValue:0000000000000000 $t
     /tmp/ccHv31r6.s:1297   .text.CheckSyncTypeValue:0000000000000000 CheckSyncTypeValue
     /tmp/ccHv31r6.s:1310   .text.CheckSyncTypeValue:0000000000000008 $d
     /tmp/ccHv31r6.s:1592   .text.CheckSyncTypeValue:000000000000011c $d
     /tmp/ccHv31r6.s:1600   .text.OBJ_Read:0000000000000000 $t
     /tmp/ccHv31r6.s:1606   .text.OBJ_Read:0000000000000000 OBJ_Read
     /tmp/ccHv31r6.s:1988   .text.OBJ_Read:000000000000019e $d
     /tmp/ccHv31r6.s:2045   .text.OBJ_Read:000000000000020e $t
     /tmp/ccHv31r6.s:2293   .text.OBJ_Read:0000000000000308 $d
     /tmp/ccHv31r6.s:2299   .text.OBJ_Read:0000000000000310 $t
     /tmp/ccHv31r6.s:2687   .text.OBJ_Write:0000000000000000 $t
     /tmp/ccHv31r6.s:2693   .text.OBJ_Write:0000000000000000 OBJ_Write
     /tmp/ccHv31r6.s:3424   .text.OBJ_Write:000000000000032c $d
     /tmp/ccHv31r6.s:3434   .text.OBJ_Write:0000000000000338 $t
     /tmp/ccHv31r6.s:3577   .text.OBJ_Write:00000000000003d8 $d
     /tmp/ccHv31r6.s:3634   .text.OBJ_Write:00000000000004b8 $t
     /tmp/ccHv31r6.s:3834   .text.OBJ_Write:0000000000000544 $d
     /tmp/ccHv31r6.s:3897   .rodata.cBitMask:0000000000000000 cBitMask
     /tmp/ccHv31r6.s:3880   .data.aSubindexDesc:0000000000000000 aSubindexDesc
     /tmp/ccHv31r6.s:3886   .data.sErrorSettings:0000000000000000 sErrorSettings
     /tmp/ccHv31r6.s:3866   .bss.sSyncManInPar:0000000000000000 sSyncManInPar
     /tmp/ccHv31r6.s:3873   .bss.sSyncManOutPar:0000000000000000 sSyncManOutPar
     /tmp/ccHv31r6.s:3859   .bss.sCycleDiag:0000000000000000 sCycleDiag
     /tmp/ccHv31r6.s:3853   .bss.bSyncSetByUser:0000000000000000 bSyncSetByUser
     /tmp/ccHv31r6.s:3854   .bss.bSyncSetByUser:0000000000000000 $d
     /tmp/ccHv31r6.s:3856   .bss.sCycleDiag:0000000000000000 $d
     /tmp/ccHv31r6.s:3862   .bss.sSyncManInPar:0000000000000000 $d
     /tmp/ccHv31r6.s:3869   .bss.sSyncManOutPar:0000000000000000 $d
     /tmp/ccHv31r6.s:3876   .data.aSubindexDesc:0000000000000000 $d
     /tmp/ccHv31r6.s:3883   .data.sErrorSettings:0000000000000000 $d
     /tmp/ccHv31r6.s:3893   .rodata.cBitMask:0000000000000000 $d
     /tmp/ccHv31r6.s:1345   .text.CheckSyncTypeValue:000000000000002b $d
ARM GAS  /tmp/ccHv31r6.s 			page 116


     /tmp/ccHv31r6.s:1345   .text.CheckSyncTypeValue:000000000000002c $t

UNDEFINED SYMBOLS
COE_GetObjectDictionary
strlen
memcpy
pSdoInfoObjEntry
nPdOutputSize
nPdInputSize
nAlStatus
