ARM GAS  /tmp/ccGbxakc.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB123:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /**
   2:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Core/Src/stm32f4xx_it.c ****   * @file    FSMC/FSMC_SRAM/stm32f4xx_it.c 
   4:Core/Src/stm32f4xx_it.c ****   * @author  MCD Application Team
   5:Core/Src/stm32f4xx_it.c ****   * @version V1.6.1
   6:Core/Src/stm32f4xx_it.c ****   * @date    21-October-2015
   7:Core/Src/stm32f4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:Core/Src/stm32f4xx_it.c ****   *          This file provides template for all exceptions handler and 
   9:Core/Src/stm32f4xx_it.c ****   *          peripherals interrupt service routine.
  10:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  11:Core/Src/stm32f4xx_it.c ****   * @attention
  12:Core/Src/stm32f4xx_it.c ****   *
  13:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
  14:Core/Src/stm32f4xx_it.c ****   *
  15:Core/Src/stm32f4xx_it.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  16:Core/Src/stm32f4xx_it.c ****   * You may not use this file except in compliance with the License.
  17:Core/Src/stm32f4xx_it.c ****   * You may obtain a copy of the License at:
  18:Core/Src/stm32f4xx_it.c ****   *
  19:Core/Src/stm32f4xx_it.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  20:Core/Src/stm32f4xx_it.c ****   *
  21:Core/Src/stm32f4xx_it.c ****   * Unless required by applicable law or agreed to in writing, software 
  22:Core/Src/stm32f4xx_it.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  23:Core/Src/stm32f4xx_it.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  24:Core/Src/stm32f4xx_it.c ****   * See the License for the specific language governing permissions and
  25:Core/Src/stm32f4xx_it.c ****   * limitations under the License.
  26:Core/Src/stm32f4xx_it.c ****   *
  27:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  28:Core/Src/stm32f4xx_it.c ****   */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccGbxakc.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /** @addtogroup STM32F4xx_StdPeriph_Examples
  34:Core/Src/stm32f4xx_it.c ****   * @{
  35:Core/Src/stm32f4xx_it.c ****   */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /** @addtogroup FSMC_SRAM
  38:Core/Src/stm32f4xx_it.c ****   * @{
  39:Core/Src/stm32f4xx_it.c ****   */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  42:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  46:Core/Src/stm32f4xx_it.c **** /* Private functions ---------------------------------------------------------*/
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  49:Core/Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Exceptions Handlers                         */
  50:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /**
  53:Core/Src/stm32f4xx_it.c ****   * @brief   This function handles NMI exception.
  54:Core/Src/stm32f4xx_it.c ****   * @param  None
  55:Core/Src/stm32f4xx_it.c ****   * @retval None
  56:Core/Src/stm32f4xx_it.c ****   */
  57:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  58:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 58 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  59:Core/Src/stm32f4xx_it.c **** }
  34              		.loc 1 59 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE123:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HardFault_Handler:
  47              	.LFB124:
  60:Core/Src/stm32f4xx_it.c **** 
  61:Core/Src/stm32f4xx_it.c **** /**
  62:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  63:Core/Src/stm32f4xx_it.c ****   * @param  None
  64:Core/Src/stm32f4xx_it.c ****   * @retval None
  65:Core/Src/stm32f4xx_it.c ****   */
  66:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:Core/Src/stm32f4xx_it.c **** {
  48              		.loc 1 67 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
ARM GAS  /tmp/ccGbxakc.s 			page 3


  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  68:Core/Src/stm32f4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  69:Core/Src/stm32f4xx_it.c ****   while (1)
  55              		.loc 1 69 3 discriminator 1 view .LVU3
  70:Core/Src/stm32f4xx_it.c ****   {
  71:Core/Src/stm32f4xx_it.c ****   }
  56              		.loc 1 71 3 discriminator 1 view .LVU4
  69:Core/Src/stm32f4xx_it.c ****   {
  57              		.loc 1 69 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE124:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	MemManage_Handler:
  70              	.LFB125:
  72:Core/Src/stm32f4xx_it.c **** }
  73:Core/Src/stm32f4xx_it.c **** 
  74:Core/Src/stm32f4xx_it.c **** /**
  75:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  76:Core/Src/stm32f4xx_it.c ****   * @param  None
  77:Core/Src/stm32f4xx_it.c ****   * @retval None
  78:Core/Src/stm32f4xx_it.c ****   */
  79:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  80:Core/Src/stm32f4xx_it.c **** {
  71              		.loc 1 80 1 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
  81:Core/Src/stm32f4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  82:Core/Src/stm32f4xx_it.c ****   while (1)
  78              		.loc 1 82 3 discriminator 1 view .LVU7
  83:Core/Src/stm32f4xx_it.c ****   {
  84:Core/Src/stm32f4xx_it.c ****   }
  79              		.loc 1 84 3 discriminator 1 view .LVU8
  82:Core/Src/stm32f4xx_it.c ****   {
  80              		.loc 1 82 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE125:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	BusFault_Handler:
ARM GAS  /tmp/ccGbxakc.s 			page 4


  93              	.LFB126:
  85:Core/Src/stm32f4xx_it.c **** }
  86:Core/Src/stm32f4xx_it.c **** 
  87:Core/Src/stm32f4xx_it.c **** /**
  88:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles Bus Fault exception.
  89:Core/Src/stm32f4xx_it.c ****   * @param  None
  90:Core/Src/stm32f4xx_it.c ****   * @retval None
  91:Core/Src/stm32f4xx_it.c ****   */
  92:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  93:Core/Src/stm32f4xx_it.c **** {
  94              		.loc 1 93 1 view -0
  95              		.cfi_startproc
  96              		@ Volatile: function does not return.
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              	.L7:
  94:Core/Src/stm32f4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  95:Core/Src/stm32f4xx_it.c ****   while (1)
 101              		.loc 1 95 3 discriminator 1 view .LVU11
  96:Core/Src/stm32f4xx_it.c ****   {
  97:Core/Src/stm32f4xx_it.c ****   }
 102              		.loc 1 97 3 discriminator 1 view .LVU12
  95:Core/Src/stm32f4xx_it.c ****   {
 103              		.loc 1 95 9 discriminator 1 view .LVU13
 104 0000 FEE7     		b	.L7
 105              		.cfi_endproc
 106              	.LFE126:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	UsageFault_Handler:
 116              	.LFB127:
  98:Core/Src/stm32f4xx_it.c **** }
  99:Core/Src/stm32f4xx_it.c **** 
 100:Core/Src/stm32f4xx_it.c **** /**
 101:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 102:Core/Src/stm32f4xx_it.c ****   * @param  None
 103:Core/Src/stm32f4xx_it.c ****   * @retval None
 104:Core/Src/stm32f4xx_it.c ****   */
 105:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 106:Core/Src/stm32f4xx_it.c **** {
 117              		.loc 1 106 1 view -0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.L9:
 107:Core/Src/stm32f4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 108:Core/Src/stm32f4xx_it.c ****   while (1)
 124              		.loc 1 108 3 discriminator 1 view .LVU15
 109:Core/Src/stm32f4xx_it.c ****   {
 110:Core/Src/stm32f4xx_it.c ****   }
ARM GAS  /tmp/ccGbxakc.s 			page 5


 125              		.loc 1 110 3 discriminator 1 view .LVU16
 108:Core/Src/stm32f4xx_it.c ****   {
 126              		.loc 1 108 9 discriminator 1 view .LVU17
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE127:
 131              		.section	.text.SVC_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	SVC_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	SVC_Handler:
 139              	.LFB128:
 111:Core/Src/stm32f4xx_it.c **** }
 112:Core/Src/stm32f4xx_it.c **** 
 113:Core/Src/stm32f4xx_it.c **** /**
 114:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles SVCall exception.
 115:Core/Src/stm32f4xx_it.c ****   * @param  None
 116:Core/Src/stm32f4xx_it.c ****   * @retval None
 117:Core/Src/stm32f4xx_it.c ****   */
 118:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 119:Core/Src/stm32f4xx_it.c **** {
 140              		.loc 1 119 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 120:Core/Src/stm32f4xx_it.c **** }
 145              		.loc 1 120 1 view .LVU19
 146 0000 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE128:
 150              		.section	.text.DebugMon_Handler,"ax",%progbits
 151              		.align	1
 152              		.global	DebugMon_Handler
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	DebugMon_Handler:
 158              	.LFB129:
 121:Core/Src/stm32f4xx_it.c **** 
 122:Core/Src/stm32f4xx_it.c **** /**
 123:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 124:Core/Src/stm32f4xx_it.c ****   * @param  None
 125:Core/Src/stm32f4xx_it.c ****   * @retval None
 126:Core/Src/stm32f4xx_it.c ****   */
 127:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 128:Core/Src/stm32f4xx_it.c **** {
 159              		.loc 1 128 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 129:Core/Src/stm32f4xx_it.c **** }
 164              		.loc 1 129 1 view .LVU21
 165 0000 7047     		bx	lr
ARM GAS  /tmp/ccGbxakc.s 			page 6


 166              		.cfi_endproc
 167              	.LFE129:
 169              		.section	.text.PendSV_Handler,"ax",%progbits
 170              		.align	1
 171              		.global	PendSV_Handler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 176              	PendSV_Handler:
 177              	.LFB130:
 130:Core/Src/stm32f4xx_it.c **** 
 131:Core/Src/stm32f4xx_it.c **** /**
 132:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles PendSVC exception.
 133:Core/Src/stm32f4xx_it.c ****   * @param  None
 134:Core/Src/stm32f4xx_it.c ****   * @retval None
 135:Core/Src/stm32f4xx_it.c ****   */
 136:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 137:Core/Src/stm32f4xx_it.c **** {
 178              		.loc 1 137 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 138:Core/Src/stm32f4xx_it.c **** }
 183              		.loc 1 138 1 view .LVU23
 184 0000 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE130:
 188              		.section	.text.SysTick_Handler,"ax",%progbits
 189              		.align	1
 190              		.global	SysTick_Handler
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	SysTick_Handler:
 196              	.LFB131:
 139:Core/Src/stm32f4xx_it.c **** 
 140:Core/Src/stm32f4xx_it.c **** /**
 141:Core/Src/stm32f4xx_it.c ****   * @brief  This function handles SysTick Handler.
 142:Core/Src/stm32f4xx_it.c ****   * @param  None
 143:Core/Src/stm32f4xx_it.c ****   * @retval None
 144:Core/Src/stm32f4xx_it.c ****   */
 145:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 146:Core/Src/stm32f4xx_it.c **** {
 197              		.loc 1 146 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 147:Core/Src/stm32f4xx_it.c **** }
 202              		.loc 1 147 1 view .LVU25
 203 0000 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE131:
 207              		.text
 208              	.Letext0:
ARM GAS  /tmp/ccGbxakc.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccGbxakc.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccGbxakc.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccGbxakc.s:63     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:69     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccGbxakc.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:92     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccGbxakc.s:109    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:115    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccGbxakc.s:132    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:138    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccGbxakc.s:151    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:157    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccGbxakc.s:170    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:176    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccGbxakc.s:189    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccGbxakc.s:195    .text.SysTick_Handler:0000000000000000 SysTick_Handler

NO UNDEFINED SYMBOLS
